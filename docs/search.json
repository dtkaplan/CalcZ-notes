[{"path":"index.html","id":"welcome-to-calculus","chapter":"Welcome to calculus","heading":"Welcome to calculus","text":"Calculus set concepts techniques provide main mathematical basis dealing motion, growth, decay, oscillation. phenomena can simple ball arcing air complex airflow wing generates lift. Calculus used biology business, chemistry, physics engineering. basis weather prediction, understanding climate change, algorithms heart rate blood oxygen measurement wristwatches. major part language science, logistics. electron orbitals chemistry, stresses bones beams, business cycle recession rebound understood primarily calculus.Calculus central science beginnings. coincidence scientific method introduced language calculus invented small group people historical period known enlightenment. Learning calculus always badge honor entry ticket professions. Millions students career ambitions enhanced passing calculus course thwarted lack access one.1880s, hit musical featured man “model modern major general.” One claims modernity “’m good integral differential calculus.”1Of course, modern 1880 modern anymore. Yet, amazingly, calculus today every bit central science technology ever , much important logistics, economics myriad fields every .\nlast 20 years, calculus become even important. ’s concrete reason . Science, engineering, society now fully adopted computer almost aspects work, study, life. amount data collected used exploded. Machine learning become way human decision makers interact data.Think means become “computerized.” take everyday example, consider video. span human life moved system involved people going theaters watch shadows recorded cellulose film distribution airwaves low-resolution television, introduction high-def broadcast video, demand streaming huge libraries movies. Just anyone can record, edit, distribute video. range topics (including calculus) can access video tutorial demonstration incredibly vast. recent progress owed computers.“stuff” computers operate , transform transmit always mathematical representations stored bits. creation mathematical representations objects events real world essential every task sort computer performs. Calculus key component inventing using representations.may scratching head. calculus important, many friends took calculus came away wondering ? ’s important “slopes” “areas” come high-school teacher couldn’t tell calculus ?disconnect enthusiasm expressed preceding paragraphs lived experience students real. two major reasons disconnect, tackle head-book.First, teachers mathematics deep respect tradition. respect merits result almost calculus taught using methods appropriate era paper pencil, computer era. see, book express concepts calculus way carries directly uses calculus computers genuine work.Second, uses calculus enabled topics Calc Calc II, courses /II preliminary: linear algebra dynamics. small fraction students start Calc ever reach parts calculus useful.Fortunately, large amount bloat standard textbook topics Calc /II can removed make room genuinely important topics.","code":""},{"path":"index.html","id":"computing-and-apps","chapter":"Welcome to calculus","heading":"Computing and apps","text":"text provides two complementary ways access computing. intuitive designed purely exercise visualize mathematical concepts mouse-driven, graphical apps. illustrate, app ’ll use Block 6. can click snapshot open app browser.fundamentally, carrying computing composing computer commands text computer carry commands. One good way sandbox, kind app provides safe place enter commands. ’ll open sandbox (click image ) browser.Update image link new version sandbox app.’ve entered computer commands, press button commands carried .may prefer install R RStudio software laptop. usually provides faster response lowers load sandbox cloud servers used students.Experienced R users may even prefer skip sandbox entirely use standard resources RStudio edit evaluate computer commands. ’d use exactly R commands regardless whether use cloud server laptop.important technique teaching learning computing present scaffolding computer commands. first, scaffolding may complete, correct commands can cut--paste sandbox calculation carried . times left student fill part ’s left scaffolding. example, introduce drawing graphs functions choice domain, might see scaffold blanks filled :can hardly expected point make sense part command, soon .","code":"slice_plot( exp(-3*t) ~ t, domain( --fill in domain-- ))"},{"path":"index.html","id":"exercises-and-feedback","chapter":"Welcome to calculus","heading":"Exercises and feedback","text":"Learning facilitated rapid, formative feedback. Many exercises book arranged give .Short answer exercises often arranged give immediate feedback goes beyond right--wrong. words, answer incorrect, try tell incorrect provide hint guide correct answer. frivolous example:Q-1: word calculus mean literally?small stone (+) [stones part apparatus numerical calculations, back days pencil invented.]small stone (+) [stones part apparatus numerical calculations, back days pencil invented.]source trouble students. [Calculus sometimes reputation, say, “pain, gain.”. Find better answer.]source trouble students. [Calculus sometimes reputation, say, “pain, gain.”. Find better answer.]element calcium. [, get right answer ’ll realize two related cases.]element calcium. [, get right answer ’ll realize two related cases.]exercises meant drill, provide right--wrong feedback. Still exercises provide feedback . Typically, intended raise stakes graded work, encouraging think carefully choosing answer.","code":""},{"path":"calcz-project-development-plan.html","id":"calcz-project-development-plan","chapter":"CalcZ Project Development Plan","heading":"CalcZ Project Development Plan","text":"document reflects developing text Math141Z/142Z AY 2021-2022 US Air Force Academy. section describes prospective instructors project collaborators planned schedule book links materials developed AY 2020-2021.Note nothing book necessarily reflects official policy US Air Force Academy US government generally.","code":""},{"path":"calcz-project-development-plan.html","id":"development-schedule","chapter":"CalcZ Project Development Plan","heading":"Development schedule","text":"1 June 2021: Complete usable draft Block 1 (Functions)7 June 2021: Deployment CalcZ R sandbox15 June 2021: Complete usable draft Block 2 (Differencing)30 June 2021: Complete usable draft Block 3 (Accumulation)15 July 2021: Re-organization relevant mosaicCalc {CalcZ} R packages.1 August 2021: Deployment Shiny apps Blocks 1-3.10 August 2021: Revisions Blocks 1, 2, 3 deployment student-facing form31 September 2021: Complete usable draft Block 4 (Applications calculus)30 October 2021: Complete usable draft Block 5 (Linear combinations)31 November 2021: Complete usable draft Block 6 (Dynamics)1 December 2021: Student-facing form entire book deployed.","code":""},{"path":"calcz-project-development-plan.html","id":"resources-from-ay-2020-2021","chapter":"CalcZ Project Development Plan","heading":"Resources from AY 2020-2021","text":"","code":""},{"path":"calcz-project-development-plan.html","id":"software","chapter":"CalcZ Project Development Plan","heading":"Software","text":"Note book multiple-choice questions feedback included book, require browser. software needs installed.Computational exercises can handled “sandbox” app , similarly, requires browser.R Command Guide AY 2020-2021 integrated book.Daily Digitals AY 2020-2021 integrated R consoles sufficient computations course.can also use RStudio directly. need install following packages:Collaborators wish compile book need use RStudio interface install several additional packages. volunteer identify packages! Start fresh installation R RStudio work Danny get comprehensive list. (’s hard since packages installed computers use don’t want start brand-new installation make sure ’ve got .)","code":"\ninstall.packages(c(\"mosaic\", \"ggplot2\", \"ggformula\", \"MMAC\"))\nremotes::install.github(\"ProjectMosaic/mosaicCalc\", ref=\"beta\")\nremotes::install.github(\"dtkaplan/math141Z\", ref=\"master\")"},{"path":"calcz-project-development-plan.html","id":"exercises","chapter":"CalcZ Project Development Plan","heading":"Exercises","text":"Daily digitals containing student exercises. contain narrative folded book.[NOTE: quick pass links. broken lead different topic]Functions DD-01, DD-02, DD-03, DD-04, DD-05, DD-06, DD-07, DD-08, DD-09, DD-10, DD-11, DD-12Linear Combinations DD-13, DD-14, DD-15, DD-16, DD-17, DD-18, DD-19, DD-20, DD-21, DD-22, DD-23, DD-24, DD-25Differencing DD-26, DD-27, DD-28, DD-29, DD-30, DD-31, DD-32, DD-33, DD-34, DD-35, DD-36, DD-37, DD-38Accumulation DD-01, DD-02, DD-03, DD-04, DD-05, DD-06, DD-07, DD-08, DD-09, DD-10, DD-11, DD-12Dynamics DD-13, DD-14, DD-15, DD-16, DD-17, DD-18, DD-19, DD-20, DD-21, DD-22, DD-23, DD-24, DD-25Decision-making DD-26, DD-27, DD-28, DD-29, DD-30, DD-31, DD-32, DD-33, DD-34, DD-35, DD-36, DD-37, DD-38","code":""},{"path":"calcz-project-development-plan.html","id":"projects-from-ay-2020-2021","chapter":"CalcZ Project Development Plan","heading":"Projects from AY 2020-2021","text":"Spread ebola (sigmoidal functions)Engines big small (dimensions, linear combinations)Walking gradient (derivatives, optimization, modeling)Gears gradesDriving integrals (accumulation, function composition)Intervening epidemic (dynamics)Security life (decision making)","code":""},{"path":"calcz-project-development-plan.html","id":"apps","chapter":"CalcZ Project Development Plan","heading":"Apps","text":"used part Daily Digital assignments, used. also apps integrated Daily Digitals. provided stand-alone apps.Numerics search optimization, zero finding yet included.Average vs marginalInterpolation explorerEuler DEBalancing functions solve DEEigenflowsMatrix iterationUsing SIR modelSome apps aren’t graphic:Instructor sandbox containing blank sandboxes use outside Daily Digitals. (revised AY 2021-2022.)Instructor sandbox containing blank sandboxes use outside Daily Digitals. (revised AY 2021-2022.)Student sandbox like instructor sandbox. also revised AY 2021. revised version, deployed main computational resource students using RStudio. beefed handle hundreds students simultaneously. AY 2021-2022 using MAA-StatPREP server, open everyone. Thereafter, switch servers. ’re sure set , several arrangement can already used schools students.\nSchools can deploy Shiny/RStudio servers use service like shinyapps.io.\nSmall groups students can handled “free tier” account shinyapps.io.\nStudents can install RStudio laptops run sandbox . Note: tablet version RStudio.\nStudents can set RStudio.cloud account (free) run sandbox .\nStudents instructors can use RStudio console (better) Rmd document run commands needed exercises projects. work either RStudio desktop, institution’s RStudio server, rstudio.cloud\nStudent sandbox like instructor sandbox. also revised AY 2021. revised version, deployed main computational resource students using RStudio. beefed handle hundreds students simultaneously. AY 2021-2022 using MAA-StatPREP server, open everyone. Thereafter, switch servers. ’re sure set , several arrangement can already used schools students.Schools can deploy Shiny/RStudio servers use service like shinyapps.io.Small groups students can handled “free tier” account shinyapps.io.Students can install RStudio laptops run sandbox . Note: tablet version RStudio.Students can set RStudio.cloud account (free) run sandbox .Students instructors can use RStudio console (better) Rmd document run commands needed exercises projects. work either RStudio desktop, institution’s RStudio server, rstudio.cloudThe applies apps, apps consume relatively little way computer resources, try available web setup. Performance won’t optimal, least access easy.\n#. Basic R syntax. just homework assignment fell outside Daily Digital organization.\n#. Swimming records. just single exercise wasn’t integrated Daily Digitals.","code":""},{"path":"outline-of-block-1.html","id":"outline-of-block-1","chapter":"Outline of Block 1","heading":"Outline of Block 1","text":"section development purposes . included released text.outline established May 17-19, 2021 working sessions USAFA. ’s copied directly Teams document. ’ve made modifications noted [[square brackets]] deletions bold face additions..Block 1 Functions Mathematical ModelingIntro course\nTopics\nCourse trajectory\nLinear Function model “change”\n\nReading: Chapter 1\nTopics\nCourse trajectory\nLinear Function model “change”\nCourse trajectoryLinear Function model “change”Reading: Chapter 1Basics modeling functions\nNTI:\nModeling functions\nGraphics\n[[Introduce idea asymptotic behavior using terminology “limits”]] Moved Section @ref{sec:asymptotes_of_functions}\n\nReadings: Section 1.3 Chapter 3\nNTI:\nModeling functions\nGraphics\n[[Introduce idea asymptotic behavior using terminology “limits”]] Moved Section @ref{sec:asymptotes_of_functions}\nModeling functionsGraphics[[Introduce idea asymptotic behavior using terminology “limits”]] Moved Section @ref{sec:asymptotes_of_functions}Readings: Section 1.3 Chapter 3Functions /O Notational Structure functions (R<>Math)\nTopics\nGraphics graphs\n[[Polynomials]] moved linear combinations\nIntroduce Multi-input functions notation\nDistinguish mathematical symbols: \\(=\\), \\(\\equiv\\), $, <- See Secton 4.8\n\nReading: Chapter 4 & 5\n:\nProvide glossary notation across 6-blocks (+alternate forms)\n\nTopics\nGraphics graphs\n[[Polynomials]] moved linear combinations\nIntroduce Multi-input functions notation\nDistinguish mathematical symbols: \\(=\\), \\(\\equiv\\), $, <- See Secton 4.8\nGraphics graphs[[Polynomials]] moved linear combinationsIntroduce Multi-input functions notationDistinguish mathematical symbols: \\(=\\), \\(\\equiv\\), $, <- See Secton 4.8Reading: Chapter 4 & 5To :\nProvide glossary notation across 6-blocks (+alternate forms)\nProvide glossary notation across 6-blocks (+alternate forms)Parameterized functions models (eqn, params, data, applications)\nNTI\nIntroduce idea input meaning, output meaning relative input\nGive students function. change units input different unit (e.g. feet go Meters)\n\nObjectives:\nLinear\nSine\nPower\nExponential\nLogarithmic\n\nReading: Chapter 6\nNTI\nIntroduce idea input meaning, output meaning relative input\nGive students function. change units input different unit (e.g. feet go Meters)\nIntroduce idea input meaning, output meaning relative inputGive students function. change units input different unit (e.g. feet go Meters)Objectives:\nLinear\nSine\nPower\nExponential\nLogarithmic\nLinearSinePowerExponentialLogarithmicReading: Chapter 6Combining 2+ functions\nExamples:\nNTIs:\nTopics:\nLinear Combination (ex: Polynomial)\nComposition scaling function (\\(e^{kt}) 1. Gallons/\\) Liters/Euros\nComposition (affine shift)\n1. Fahrenheit <> Celsius\n\nExamples:NTIs:Topics:\nLinear Combination (ex: Polynomial)\nComposition scaling function (\\(e^{kt}) 1. Gallons/\\) Liters/Euros\nComposition (affine shift)\n1. Fahrenheit <> Celsius\nLinear Combination (ex: Polynomial)Composition scaling function (\\(e^{kt}) 1. Gallons/\\) Liters/EurosComposition (affine shift)\n1. Fahrenheit <> CelsiusSlope function\nNTI:\nbroaden idea describing slope line general function?\n\\(h\\) point\nslope function function \\(s()\\) built function \\(f()\\)\n\nTopics\nAverage rate change. (Example: Quarterly return stocks. HW tree harvesting.) (Example 2: Sine wave difference around 1 period. maybe becomes low-pass filter example accumulation.)\n\\(s(x) \\equiv \\frac{f(x + 0.1) - f(x)}{0.1}\\)\nExcept linear function, slope function depends big \\(h\\) . let’s fix \\(h\\) figure things .\nEvery function slope function.\n’s helpful name functions know come . ’re going use \\(f'()\\) stand slope function \\(f()\\)\n\nReading: Chapter 7\nNTI:\nbroaden idea describing slope line general function?\n\\(h\\) point\nslope function function \\(s()\\) built function \\(f()\\)\nbroaden idea describing slope line general function?\\(h\\) pointThe slope function function \\(s()\\) built function \\(f()\\)Topics\nAverage rate change. (Example: Quarterly return stocks. HW tree harvesting.) (Example 2: Sine wave difference around 1 period. maybe becomes low-pass filter example accumulation.)\n\\(s(x) \\equiv \\frac{f(x + 0.1) - f(x)}{0.1}\\)\nExcept linear function, slope function depends big \\(h\\) . let’s fix \\(h\\) figure things .\nEvery function slope function.\n’s helpful name functions know come . ’re going use \\(f'()\\) stand slope function \\(f()\\)\nAverage rate change. (Example: Quarterly return stocks. HW tree harvesting.) (Example 2: Sine wave difference around 1 period. maybe becomes low-pass filter example accumulation.)\\(s(x) \\equiv \\frac{f(x + 0.1) - f(x)}{0.1}\\)Except linear function, slope function depends big \\(h\\) . let’s fix \\(h\\) figure things .Every function slope function.’s helpful name functions know come . ’re going use \\(f'()\\) stand slope function \\(f()\\)Reading: Chapter 7Composition Generally\nNTI:\ntemperature driving mountain?\nProblem calculating slope sigmoid\n\nTopics:\nFormula Hump (exponential quadratic)\nDriving mountain temperature vs altitude, altitude vs road position, road position vs time\nHump slope function Sigmoid\n\nReading: Chapter 8\nNTI:\ntemperature driving mountain?\nProblem calculating slope sigmoid\ntemperature driving mountain?Problem calculating slope sigmoidTopics:\nFormula Hump (exponential quadratic)\nDriving mountain temperature vs altitude, altitude vs road position, road position vs time\nHump slope function Sigmoid\nFormula Hump (exponential quadratic)Driving mountain temperature vs altitude, altitude vs road position, road position vs timeHump slope function SigmoidReading: Chapter 8Multiplication functions\nNTIs:\nMultiplication Sines, exponential, hump, sigmoid\n\nTopics:\nMultiplying functions inputs gives function inputs.\nMultiplying functions different inputs gives function whose inputs union inputs multiplicands.\n\nable reverse engineer products: sinexp, sinhump, sinsigmoid\nReading: Chapter 8\nNTIs:\nMultiplication Sines, exponential, hump, sigmoid\nMultiplication Sines, exponential, hump, sigmoidTopics:\nMultiplying functions inputs gives function inputs.\nMultiplying functions different inputs gives function whose inputs union inputs multiplicands.\nMultiplying functions inputs gives function inputs.Multiplying functions different inputs gives function whose inputs union inputs multiplicands.able reverse engineer products: sinexp, sinhump, sinsigmoidReading: Chapter 8Multivariate functions\nNTIs:\nAsk students compute slope multi-input function best can imagine (homework?) Build imagined function (slope) plot function\n\nOutcomes:\nable read & construct (R) Contour Plots\nable read & construct (R) Surface Plots\nable read table w/ 2 inputs\n\nReading: Chapter 9\nNTIs:\nAsk students compute slope multi-input function best can imagine (homework?) Build imagined function (slope) plot function\nAsk students compute slope multi-input function best can imagine (homework?) Build imagined function (slope) plot functionOutcomes:\nable read & construct (R) Contour Plots\nable read & construct (R) Surface Plots\nable read table w/ 2 inputs\nable read & construct (R) Contour PlotsBe able read & construct (R) Surface PlotsBe able read table w/ 2 inputsReading: Chapter 9Piecewise functions [jettison needed favor homework]\nTopics\nConstruct evaluate piecewise functions\nDemonstrate implement R\n\nOutcomes:\nable identify break(s) piecewise function\nable evaluate piecewise function given input\nable implement piecewise function R\n\nReading: Chapter 10\nTopics\nConstruct evaluate piecewise functions\nDemonstrate implement R\nConstruct evaluate piecewise functionsDemonstrate implement ROutcomes:\nable identify break(s) piecewise function\nable evaluate piecewise function given input\nable implement piecewise function R\nable identify break(s) piecewise functionBe able evaluate piecewise function given inputBe able implement piecewise function RReading: Chapter 10Iterative Modeling\nNTI:\nExamples:\nTides\nCooling Water\n\nObjectives:\nDescribe differences two models model data\nIdentify disagreements model data\nd: Reading: NEED LINK CHAPTER\n::: {.workedexample}\nReview, GR, Project Days\n:::\n\nNTI:Examples:\nTides\nCooling Water\nTidesCooling WaterObjectives:\nDescribe differences two models model data\nIdentify disagreements model data\nd: Reading: NEED LINK CHAPTER\n::: {.workedexample}\nReview, GR, Project Days\n:::\nDescribe differences two models model dataIdentify disagreements model data\nd: Reading: NEED LINK CHAPTER\n::: {.workedexample}\nReview, GR, Project Days\n:::[[Semi-log Log-log plots]] Magnitude log\nTopics:\nIntroduce idea using logarithms converts number order magnitude\n\nOutcomes:\nReading: Chapter 11\n::: {.workedexample}\nFlexible catchup day\n:::\nTopics:\nIntroduce idea using logarithms converts number order magnitude\nIntroduce idea using logarithms converts number order magnitudeOutcomes:Reading: Chapter 11\n::: {.workedexample}\nFlexible catchup day\n:::Dimensional Analysis\nReading: Chapter 12\n\n1.5 class daysReading: Chapter 12One highlighting formats, called ::: {.takenote} used clear statement basic skills students master. might good tie quizzes vice versa.","code":""},{"path":"change.html","id":"change","chapter":"1 Change","heading":"1 Change","text":"Calculus change, change relationships. changing climate relationship , say, global average temperature time. ’s also changing levels CO_2_ methane, production elimination atmospheric geological processes. ’s burning oil (change configuration atoms hydrocarbons) contributes ocean acidification (process change ocean pH). ’s whole complex intricate network relationships change one component provokes change others.book presents calculus terms two simple central concepts: functions quantities. words everyday meanings , happily, close specific mathematical concepts using . Close … identical. pay careful attention brief descriptions follow.","code":""},{"path":"change.html","id":"quantity-vs-number","chapter":"1 Change","heading":"1.1 Quantity vs number","text":"mathematical quantity amount “stuff.” real-world stuff might mass time length. equally well can velocity volume momentum corn yield per acre. live world stuff, tangible (e.g., corn, mass, force) harder get hands minds around (acceleration, crop yield, fuel economy). important use calculus helping us conceptualize abstract kinds stuff mathematical compositions simpler stuff. example, crop yield incorporates mass length time. (Later, ’ll see us using scientific-sounding term dimension instead “stuff.”)people inclined think “quantity” “number.” understandable misguided. Quantity amount stuff first thing need know quantity kind stuff . “mile” kind stuff: length. meter kind stuff. liter different kind stuff: volume. gallon acre-foot kind stuff.“Stuff,” mean , measure. know, measure units. units appropriate depends kind stuff. Meters, miles, microns appropriate units length, even though actual lengths one unit differ markedly. (mile roughly million microns.)know dimension units number meaning. Saying number part specifying quantity.’s salient difference number quantity comes calculus: sorts arithmetic mathematical operations can performed combine numbers: addition, multiplication, square roots, etc. performing mathematics quantities, multiplication division universally allowed. addition, square roots, , operation makes sense dimensions suitable.mathematics units dimension equivalent technical world common sense everyday world. instance (may make sense point), someone tells taking square root 10 liters, know immediately either just mistaken haven’t told essential elements situation. ’s just someone said, “swam across tennis court.” know either used wrong verb—walk run work—wasn’t tennis court, something important unstated, perhaps, “flood, swam across tennis court.”","code":""},{"path":"change.html","id":"functions","chapter":"1 Change","heading":"1.2 Functions","text":"central concept book functions mathematical computing sense. function something takes one inputs returns output. calculus, ’ll deal mainly functions take one quantities inputs returns another quantity output. sometimes ’ll work functions take functions input return quantity output. even functions take functions inputs return function output.’ve almost certainly seen functions expressed general form \\(f(x)\\). function \\(f()\\), input \\(x\\). Perhaps ’s obvious point \\(x\\) quantity. \\(f(x)\\) operation performed quantity. computing, definite, widely used, notation2 identify output function. Strangely, mathematics . major source confusion students learning calculus professionals using computers work calculus.’s possible present calculus without functions. instance, Isaac Newton, inventor calculus, spoke “flowing quantities.”3It’s practically impossible (generally unwise) computing without functions. basic building block every mainstream modern computer language. Since operations calculus actual practice performed computer, common sense suggests describe calculus terms functions. ’s book., may take bit getting used . reason notation used high-school algebra almost calculus texts notation functions. example, almost students seen mathematical expression form: \\[y = m x + b\\]\nUsing language math classes, can say expression “describes relationship two variables.” experience, know variables \\(x\\) \\(y\\). letters, \\(m\\) \\(b\\), something else. Many students reflexively call “slope” “intercept” “line.”used probably don’t see huge ambiguity involved. instance, kind mathematical thing referred \\(y = m x + b\\)? ’s equation, sure. ’s straight line. straight line thing equation. vice versa. might say, “equation describing straight line.”’ve studied calculus , may seen equation like \\(y' = m\\) perhaps \\(dy/dx = m\\) another way describing straight line.notation equations poor substitute notation functions. instance, input output? ’s explicitly stated left reader wonder. re-arrange \\[y = m x + b \\ \\ \\text{}\\ \\ \\ 0 = m x + b - y\\] using allowed manipulations algebra still function? , function \\(m x + b\\)? \\(x\\) input \\(x\\) \\(y\\) inputs? \\(mx + b - y\\) function, output always zero?engineers mathematicians invented computer languages realized decade explicit identifying input, output, function . ? computers need given unambiguous instructions.4 Sorting difficult process even mathematically talented skilled pioneers notation, can forgiven occasional confusion dealing notation pre-dates computing.book ’ll explicit consistent ways denote functions can always figure inputs translated output. good start learning read function notation see equivalent \\(y=m x + b\\) notation: \\[g(x) \\equiv m x + b\\] Notice ’re using \\(\\equiv\\) (three parallel bars) rather \\(=\\). don’t need \\(y\\). \\(x\\) appears sides \\(\\equiv\\) place state name function, case \\(g()\\), can refer function unambiguously operations .","code":""},{"path":"change.html","id":"naked-intro","chapter":"1 Change","heading":"1.3 The naked modeling functions","text":"Experience allows us make short list mathematical functions provide large majority tools representing real world mathematical object. Think list different actors, skilled portraying archetypical character: hero, outlaw, lover, fool, comic. play brings together different characters, costumes , builds dialog.mathematical modeler kind playwright. combines mathematical character types tell story relationships. handful archetypical mathematical functions, analog character actors drama comedy. calling naked modeling functions. writing mathematical model, clothe actors suit era location assemble together harmony discord.list basic, unadorned functions, naked model function,Exponential \\(e^x\\)Logarithm \\(\\ln(x)\\)Power-law \\(x^p\\)Sinusoid \\(\\sin(x)\\)Straight-line \\(m x + b\\)Hump \\(\\text{dnorm}(x)\\)Sigmoid \\(\\text{pnorm}(x)\\)’ve written traditional notation can see connections math ’ve already studied. ’ve used \\(x\\) stand single input functions just ’s traditional.’s good refer functions word name—exponential, logarithm, power-law, sinusoid, straight-line, etc. helps avoid source common confusion. example, mathematical expressions \\(e^x\\) \\(x^e\\) easily confused, notation utterly different patterns. won’t easily mistake “exponential” “power-law.”One important point make short list. memorize names able easily associate name traditional notation.next several chapters, introduce several features functions. basic modeling functions features, don’t.monotonicity downconcavity downhorizontal asymptotesvertical asymptotesperiodicityNot yet, appropriate point Block 1 able list 7 basic modeling functions say features relevant .also use see computer names functions. names can differ somewhat one computer language another, names language use, R, easily recognized programmers use language.ease reference, ’s tableWe’ve left traditional notation hump sigmoid isn’t standard one. Surprisingly, specific name R straight-line function, ’s easy implement one need .noticed section heading “naked modeling functions.” mean “naked” metaphorical sense, chose metaphor make easy remember. Think list seven functions celebrities world calculus. Unlike human celebrities appear wane years, marry divorce frequently, celebrities us generations maintain intimate connections one another reflect nature mathematics rather fads fancies celebrities. (Mastering calculus largely matter becoming familiar mathematical connections. ’ll see due time.)celebrity functions appear many mathematical settings, just human celebrity strives maintain public image. human celebrity human organism organism naturally naked. public appearance, however, celebrity always clothed one way another. (OK … Rarely appear unclothed true mathematics.) words, order interact world large, celebrities need attire.Similarly, mathematical functions appear real-world applications—opposed math textbooks—always wear clothes, call parameters. clothes help deal units dimension quantities. just standard elements clothing: shirt, skirt, trousers, … standard ways clothing naked modeling function. (called parameterization function, often multiple ways paremeterizing function.)dress naked functions—, parameterize —become superheroes calculus. ’ll call league superheroes basic modeling functions.","code":""},{"path":"the-structure-of-a-function.html","id":"the-structure-of-a-function","chapter":"2 The structure of a function","heading":"2 The structure of a function","text":"[F-10] Objective Original: Understand relationship inputs outputs functions one two input variables, include functions defined piecewise.\nObjective Revised: Recognize functions way representing (storing) know able use properly basic nomenclature functions).’re used mathematical functions stated formulas, expressions composed addition, multiplication, square roots, . expression \\(m x + b\\) uses multiplication addition. \\(\\sqrt{\\strut 1 - x^2}\\) uses exponentiation (\\(x^2\\)), subtraction square root.’s nothing mathematical concept “function” requires formula. computer functions general based formula. (word used describe internals computer function algorithm, generalization “formula” includes many non-arithmetic operations looping branching).using formulas extensively, best can visualize functions generally something ’s necessarily formula. section gives another perspective describe think function. remember, functions take inputs return corresponding output. arrangement accomplishes function, even arithmetic nowhere sight.People many ways organizing know. Often rely intuitive abilities memory, also constructed frameworks make storage accessible reliable. One frameworks table, generally set array rows columns. instance, table range internal combustion engines various sizes:row table reports one, specific engine. column one attribute engine. Using tables can easy. example, asked report fast engine named “Enya 60-4C” spins, go Enya 60-4C row “RPM” column read answer: 11,800 revolutions per minute (RPM).table like can said describe raw numbers general relationships various engine attributes. instance, might want understand relationship () RPM engine mass, relate number diameter (, “bore”) depth (, “stroke”) cylinders power generated engine. single entry table doesn’t tell us general relationships; need consider rows columns whole.examined relationship engine power cylinder number, diameter, depth, find (rule) larger number, diameter, depth, powerful engine. ’s qualitative description relationship. educated people able understand quantitative description. Even don’t know exactly “power” means, rough conception . almost everyone knows diameter, depth, number mean.Often, ’re interested quantitative description relationship one (number, diameter, depth) \\(\\rightarrow\\) power. Remarkably, many educated people uncomfortable idea using quantitative descriptions relationship: sort language description written ; perform calculations use description; translate data (table) quantitative description; translate quantitative description address particular question make decision.course constructing using quantitative descriptions: , mathematical modeling. Skills modeling essential work engineering science, highly valued many fields commerce, management, government. Often, work applying quantitative skills called calculation. name calculus used describe methods widely used undertaking calculations.Functions fundamental way organizing mathematical models calculations. undoubtedly seen previous mathematics education, ’s worth reviewing basics can share vocabulary communicating .function transformation one inputs output.keep things simple now ’ll focus inputs outputs numeric, later ’ll need nuanced view “numeric” takes account different kinds things represented numbers, e.g. length, power, RPM.Functions bureaucracyTo see functions work, imagine long corridor sequence offices, identified room number. input function room number. evaluate function input, knock appropriate door , response, ’ll receive piece paper number take away . number output function.sound first simple true, … mathematical function office gives exactly number every time someone knocks door. Obviously, worker office highly tedious requires special skill. Every time someone knocks worker’s door, writes number piece paper hands person knocking. person number absolutely concern office worker.utility functions depends artistry insight person creates : modeler. important point course teach artistry. Hopefully learn artistry translate insight creation functions useful work. even just use functions created others, knowing functions built helpful using properly.sort function just described, offices along single corridor. functions said one input, , equivalently, functions one variable. operate function, just need one number: address office ’ll collect output.Many functions one input: two, three, four, … tens, hundreds, thousands, millions, …. course, ’ll work mainly functions two inputs, skills develop applicable functions two inputs.function two inputs look like office metaphor? Imagine office building many parallel corridors, numeric ID. evaluate function, need two numeric inputs: number corridor number door along corridor. two numbers hand, locate appropriate door, knock receive output number return.Three inputs? Think building many floors, floor many parallel corridors, corridor many offices sequence. Now need three numbers identify particular office: floor, corridor, door.Four inputs? street many three-input functions along . Five inputs? city many parallel four-input streets. .Applying inputs function order receive output small part calculations. Calculations usually organized algorithms, just say algorithms descriptions calculation. calculation … function!calculation work? Think business. People come business one inputs. take inputs , following carefully designed protocol, hand staff, perhaps duplicating simple arithmetic create new number. Thus equipped relevant numbers, member staff goes evaluate particular function numbers. (, staff member goes appropriate street, building, floor, corridor, door, returning number provided office.) staff re-assembles roadside stand, sorting numbers returned , following strict protocol. Perhaps combine new numbers ones originally given inputs. event, send staff new instructions—person’s instructions consist simply set inputs head evaluate return . point, perhaps many cycles, perhaps just one, able combine numbers ’ve assembled single result: number return person came business first place.calculation might involve just one function evaluation, involve chain sends workers buzzing around city visiting businesses turn activate staff add urban tumult.reader familiar floors corridors office doors may note addresses discrete. , office 321 offices 320 322 neighbors. Calculus continuous functions, need way accept, say, 321.487… input. office.slight modification procedure produce continuous function. works like : input 321.487… messenger goes office 321 322 collects respective outputs. Let’s imagine -14.3 12.5 respectively. ’s needed small calculation, case look like \\[-14.3 \\times (1 - 0.487...)   + 12.5 \\times 0.487...\\] called linear interpolation lets us construct continuous functions discrete data.Blocks 2 5 ’ll discuss widely used ways produce just continuous functions smooth functions. Understanding difference continuous smooth wait introduce couple calculus concepts: derivatives limits.","code":"\nDT::datatable(Engines)"},{"path":"the-structure-of-a-function.html","id":"domain-input-space","chapter":"2 The structure of a function","heading":"2.1 Domain: input space","text":"know, powerful way thinking numbers terms space geometry. instance, single number corresponds point line: -called number line. pair inputs, say, (x, y) corresponds point plane, often called Cartesian coordinate plane. Three numbers corresponds point space, perhaps organized (x, y, z) Cartesian space. higher-dimensional spaces, usually special training needed become comfortable . discomfort, might prefer work office metaphor. Just fun, ’s can think 10-dimensional space: 10 numbers, one telling planet, next specifying continent planet, country, state, city, street, building, floor, corridor, door.set inputs function can evaluated called domain function. Sometimes describe domain space, e.g. number line, plane, . Sometimes domains including restrictions. instance, particular input might meaningfully positive, offices corresponding negative values input. , input might restricted interval 0 1. Sometimes calculus, domain excludes isolated point. instance, may office door marked 0 neighboring doors open working offices.range function set outputs can produced. Since stage ’re working functions return single number output, ’s common describe range part number line. instance, functions positive outputs. functions’ outputs always interval 0 1. (case, instance, function returns probability output.)Weather forecasting numerical processWeather forecasting numerical process highly influential book, 1922, Lewis Fry Richardson. envisioned calculation weather forecast kind function. domain forecast latitude longitude point globe, rather rectilinear organization corridor.One fantastic illustration idea shows building constructed form inside-globe. many points globe, business. (can see clearly foreground, shows several boxes workers.)\nFigure 2.1: artist’s depiction organization calculations weather forecasting Richardson’s system. Source\nbusiness might work way: business person report current air pressure point globe, another person reports temperature, another reporting humidity, . compute predicted weather next day, business staff assigned visit neighboring businesses find pressure, temperature, humidity, etc. Still staffers take collected output neighbors carry arithmetic translate outputs forecast tomorrow. instance, knowing pressure neighboring points enables direction wind calculated, thus humidity temperature air coming region business handles. today’s numerical weather prediction models, globe divided finely latitude, longitude, altitude, software handles storage present conditions calculation future minutes later. Repeating process using forecast enables prediction made minutes , .important concepts calculus relate process collecting outputs neighboring points combining : instance finding difference sum. illustrate, first set equations Richardson’s Weather forecasting …, writen notation calculus:can hardly expected point understand calculations described equations, involve physics air flow, coriolis force, etc. ’s worth pointing notation:equations momentum column air particular latitude (\\(\\phi\\)) longitude.\\(M_E\\) \\(M_N\\) east-west north-south components momentum.\\(\\partial M_E /\\partial t\\) amount east-west momentum change next small interval time (\\(\\partial t\\)).\\(p_G\\) air pressure ground level column air.\\(\\partial p_G / \\partial n\\) difference air pressure column air columns north south.Calculus provides notation describing physics climate means translate physics arithmetic calculation.section linear combinations, sidebar explains -called “straight-line” function really just linear combination fundamental functions \\(\\text{identity}(x) \\equiv x\\) (exactly thing power-law function \\(x^p\\) \\(p=1\\)) \\(\\text{constant}(x) \\equiv 1\\) pretty much power-law function \\(x^0\\).limits section exercise, ask \\(x^0\\)? 1? \\(x=0\\). Zero raised positive power 0. positive number raised 0 1. two ways thinking give different answers.computer handles question ease:computer results don’t always agree mathematical results.case, mathematicians looking question lens limits, agree computer looking function \\(g(x) \\equiv x^0\\). disagree function \\(h(x) \\equiv 0^x\\) \\(f(x) \\equiv x^x\\). three functions comes limits.Remember \\(\\lim_{x\\rightarrow 0}\\) replacing \\(x\\) zero, process examining result non-zero \\(x\\) \\(x\\) approaches zero. “zero raised positive power” ’re talking \\(0^{\\lim_{x\\rightarrow 0}}\\), \\(\\lim_{x\\rightarrow 0} \\left[x^x\\right]\\). Similarly, \\(\\left[\\lim_{x\\rightarrow 0}\\right]^0\\) different ","code":"\n0^0## [1] 1"},{"path":"fun-describing.html","id":"fun-describing","chapter":"3 Describing functions","heading":"3 Describing functions","text":"need communicate functions fellow humans computers. Important modes communication include:Graphs functions show “shape”Tables inputs outputsWord descriptionsComputer function nameMathematical notationIn chapter, ’ll illustrate five different modes using naked modeling functions. ’s important become proficient five.","code":""},{"path":"fun-describing.html","id":"computer-commands","chapter":"3 Describing functions","heading":"3.1 Computer commands","text":"’ll start simple computer commands enable us draw graphs.make graph function one input, use slice_plot() command, like :can simply copy--paste command sandbox create graph. let’s take apart command ’s components see R commands structured.slice_plot( ... ) Commands usually start name operation perform. name always followed pair parentheses. parentheses contain arguments operation, can think specifying details done. slice_plot() operator draws graphs functions single input.exp(x) ~ x given first argument slice_plot() operator. ’ll defer detailed explanation, just pointing specifying computer want plot exponential function going use x name input.domain(x = c(-3,3)) Functions mathematical domains: set valid inputs function. exponential function entire number line domain. draw function graph need specify graphical domain, , part function domain show graph.","code":"\nslice_plot(exp(x) ~ x, domain(x=c(-2,2)))"},{"path":"fun-describing.html","id":"tables-of-inputs-and-outputs","chapter":"3 Describing functions","heading":"3.2 Tables of inputs and outputs","text":"Another way describing function give table inputs outputs. Like graphics, table can show possible inputs.modern computing, tables one primary means describe functions. People working calculus needed reference collection books containing tables functions used.computers, better faster ways get output function input. Still, modelers often use recorded data construct functions. Tables perhaps widely used method storing accessing data, although electronic spreadsheets used today instead printed tables.Even today, table can nice way describe function interested output handful possible inputs.Conceptually, ’s helpful keep mind every naked modeling function just way organizing information stored table.Exercise: give seven tables naked modeling functions. Use sandbox determine table function.","code":""},{"path":"fun-describing.html","id":"word-descriptions","chapter":"3 Describing functions","heading":"3.3 Word descriptions","text":"Knowing correctly using handful phrases goes long way able communicate people functions single input. Often, words make sense everyday speech (“steep”, “growing”, “decaying”, “goes ”, “goes ”, \"flat).Sometimes words used everyday speech casual person isn’t sure exactly mean. instance, often hear phrase “growing exponentially.” graph exponential function illustrates exactly sort growth: flat small \\(x\\) growing steadily steeper steeper \\(x\\) increases.Still words best understood learn calculus. “Concave ,” “concave ”, “approaching 0 asymptotically,” “continuous”, “discontinuous”, “smooth”, “minimum …,” “minimum …”, “approaching \\(\\infty\\) asymptotically,” “vertical asymptote.”Exercise: Show graphs naked modeling functions. Ask phrases apply.Exercise: Show graph ask questions asymptotes. Use phrases “input gets small” (meaning \\(x \\rightarrow -\\infty\\)), “\\(x\\) goes zero” (meaning $x 0)\"","code":""},{"path":"fun-describing.html","id":"computer-function-names","chapter":"3 Describing functions","heading":"3.4 Computer function names","text":"might expect, computer programmers language developers written software implementing several naked modeling functions: exp(), log(), sin(), dnorm(), pnorm(). functions, name tells everying, far computer concerned, needed calculate output given input.Computer notation power-law straight-line functions different. much easier understand seen create name functions. reason difference power-law straight-line functions quite naked. parameters: exponent power-law function slope intercept straight-line function.include power-law straight-line functions list naked modeling functions naked?’re using “naked modeling function” list accomplish two things time:emphasize modeling real-world situations always expect functions parameters.point large fraction modeling situations can handled just function “shapes.”make list shapes (ii) comprehensive, ’ve stretch “naked” metaphor bit.","code":""},{"path":"fun-describing.html","id":"mathematical-notation","chapter":"3 Describing functions","heading":"3.5 Mathematical notation","text":"grown traditional mathematical notation likely familiar notation several naked modeling functions: \\(\\ln x\\), \\(\\sin x\\), \\(e^x\\), \\(x^p\\) (\\(x^2\\) \\(p=2\\) \\(\\sqrt{x}\\) \\(p=1/2\\)).Traditional notation mixes several things computer notation sensibly keeps separate. computer programmer’s point view, traditional notation idiosyncratic rather systematic.interested things, three concepts computing may help appreciate differences:Functional notation computing, notation function name followed parentheses5 inputs inside parentheses called “functional notation.” functional notation part traditional mathematical notation, although often parentheses left .Functional notation computing, notation function name followed parentheses5 inputs inside parentheses called “functional notation.” functional notation part traditional mathematical notation, although often parentheses left .Infix notation functions two inputs, computing languages often support different arrangement function name inputs name comes arguments. ’ve seen parts traditional arithmetic notation, instance, \\(3 + 5\\) \\(8/2\\). Infix notation sometimes used place functional notation 3^2 x^3.Infix notation functions two inputs, computing languages often support different arrangement function name inputs name comes arguments. ’ve seen parts traditional arithmetic notation, instance, \\(3 + 5\\) \\(8/2\\). Infix notation sometimes used place functional notation 3^2 x^3.Markup notation undoubtedly familar word processing , particularly, style word processing called --see----get (WYSIWYG). WYSIWYG, can enter plain text just using keyboard, want make something boldface italics, use mouse select text involved select style menu. Typically, WYSIWYG mathematical content involves similar mouse-based process. contrast, mainstream computer languages, mouse needed . computer commands constructed plain, linear sequences letters characters.\nComputer programmers helpfully observed word-processing process can constructed simple plain text input computer program interprets input well-defined ways carries typesetting. illustrate, consider next couple lines. first shows ordinary looking word-processor formatted sentence. second shows way encoded typesetter can produce formatted content.\n\n\\(e^x\\), \\(\\sqrt{x^2}\\) \\(\\int_0^\\infty \\frac{1}{x^2} dx\\) examples traditional notation.6\n\n\n$e^x$, $\\sqrt{x^2}$ $\\int_0^\\infty \\frac{1}{x^2} dx$ examples *traditional* notation.^[footnote]\nMarkup notation undoubtedly familar word processing , particularly, style word processing called --see----get (WYSIWYG). WYSIWYG, can enter plain text just using keyboard, want make something boldface italics, use mouse select text involved select style menu. Typically, WYSIWYG mathematical content involves similar mouse-based process. contrast, mainstream computer languages, mouse needed . computer commands constructed plain, linear sequences letters characters.Computer programmers helpfully observed word-processing process can constructed simple plain text input computer program interprets input well-defined ways carries typesetting. illustrate, consider next couple lines. first shows ordinary looking word-processor formatted sentence. second shows way encoded typesetter can produce formatted content.\\(e^x\\), \\(\\sqrt{x^2}\\) \\(\\int_0^\\infty \\frac{1}{x^2} dx\\) examples traditional notation.6$e^x$, $\\sqrt{x^2}$ $\\int_0^\\infty \\frac{1}{x^2} dx$ examples *traditional* notation.^[footnote]Traditional mathematical notation includes features superscripts special symbols easily written pencil hand. Often notation beautiful aesthetically cherished mathematicians. computer commands computer languages straight sequences characters using function infix notation.7","code":""},{"path":"fun-describing.html","id":"exercises-1","chapter":"3 Describing functions","heading":"3.6 Exercises","text":"","code":""},{"path":"fun-notation.html","id":"fun-notation","chapter":"4 Notation for functions","heading":"4 Notation for functions","text":"Part difficulty mathematics many people making sense nomenclature notation. taught high school highly idiomatic system can mastered experience. Mathematicians undoubtedly skilled logic, mathematics ancient history littered language synonyms, near synonyms, inconsistencies, diacritical marks, letters unfamiliar alphabets. Oxford mathematician wrote poem become famous nonsense:’Twas brillig, slithy toves\n       gyre gimble wabe:\nmimsy borogoves,\n       mome raths outgrabe.words commonly encountered traditional mathematics notation.equation, formula, function, variable, unknown, rootAnd mathematical sentences.\\(y = x\\)\\(y = \\sqrt{x}\\)\\(y^2 = x\\)\\(x^2 = x\\)\\(x = \\sqrt{x}\\)five sentences equations. ’s easy, equal sign two sides. formulas? functions? ’re used calling \\(x\\) \\(y\\) variables. become unknowns? Sentence (iv) might interpreted describing roots. sentence (v) says thing (iv) related roots.","code":""},{"path":"fun-notation.html","id":"a-notation-for-computing","chapter":"4 Notation for functions","heading":"4.1 A notation for computing","text":"traditional notation practically useless computing. programmer deep understanding notation intended mean given circumstance can construct computer expression carry meaning computer’s work.illustrate, similar-looking sentences. math notation, can mean something. R, one valid others invalid. Read one try guess one valid others .’ve made guesses, open sandbox see got right.Produce MC exercise addresses ’s .student knows make sense math notation find much help writing computer notation. ’s like well educated foreigner trying make sense sentences meaningful others .“Chair meeting,” “seat meeting.”\n“Seat guest,” “chair guest.”\n“Bush ,” “tree .”\n“Tree cat,” “bush cat.”\n“Table motion,” “desk motion.”\n“Bench player,” “couch player.”\n“Couch meaning” “bench meaning.”book, ’re going use mathematical notation corresponds usable computer notation. first step stop using \\(=\\) mean many different things.","code":"\ny = x\ny = sqrt(x)\ny^2 = 3\ny = sqrt(3)\ny - x = 0\n0 = (x+3)(x-2)"},{"path":"fun-notation.html","id":"objects-and-actions","chapter":"4 Notation for functions","heading":"4.2 Objects and actions","text":"[F-30] Identify structure function notation function defined formula.’re going give names mathematical “objects” actions. introduction, ’ll use boldface objects italics actions.function mathematical object gives instructions transform one inputs output. Typically, always, give names functions can refer . can think function like recipe: tells inputs create output. ’re used functions recipe written formula using arithmetic operators. general term recipe function algorithm. (Sectin ?? gives definition “algorithm” shows examples formulas.)function mathematical object gives instructions transform one inputs output. Typically, always, give names functions can refer . can think function like recipe: tells inputs create output. ’re used functions recipe written formula using arithmetic operators. general term recipe function algorithm. (Sectin ?? gives definition “algorithm” shows examples formulas.)argument symbol stands input algorithm.argument symbol stands input algorithm.Applying function inputs means carry steps function’s algorithm, inserting appropriate quantity place symbol. Recipes use symbols like “rice” describe algorithm. cooking, apply recipe incredients. recipe says, “Add rice boiling water” use physical rice physical boiling water, instead symbols. Applying function inputs fundamental computing, ’ll often hear words “apply”: run function evaluate function execute function.Applying function inputs means carry steps function’s algorithm, inserting appropriate quantity place symbol. Recipes use symbols like “rice” describe algorithm. cooking, apply recipe incredients. recipe says, “Add rice boiling water” use physical rice physical boiling water, instead symbols. Applying function inputs fundamental computing, ’ll often hear words “apply”: run function evaluate function execute function.define function mathematical notation write something like : \\[g(x) \\equiv 4 x^2 - 7\\]\\(g()\\) name function.function takes just one argument, written symbol \\(x\\) definition. make double sure human reader sees symbol used argument, putting list symbols parentheses following function name. definition function two inputs looks like \\(h(x, y) \\equiv 3y - 5 x^2 + x\\) functions two inputs follow pattern.algorithm \\(g()\\) presented formula. formula example, \\(4 x^2 - 7\\) says, \"Take input quantity. Multiply 4 input multiply input . Subtract \\(7\\) produce output function.use \\(\\equiv\\) punctuation distinguish function name (argument list) algorithm. algorithm always right \\(\\equiv\\), name function argument list left.command g(3), applies function named \\(g()\\) value 3. replacing \\(x\\) algorithm \\(3\\) carry calculations algorithm. \\(g(3)\\), output 29.R, function defined using similar expression. \\(g()\\) defined , R definition beThe name function, without parentheses, left side assignment operator <-.use name g refer anything, function . , can see g name function looking object right side <-. R/mosaic operator makeFun() constructs functions.text parentheses makeFun also R expression. call sort expression tilde expression. (symbol ~ called “tilde.”) tilde character simply punctuation separate expression left side, 4*x^2 - 7, expression right side. right side tilde expression identifies symbols arguments. (case, x argument.) left side tilde expression describes algorithm function, using argument names specified right side.apply function \\(g()\\) argument, write R expression value argument given parentheses. instance, apply \\(g()\\) value 3, write:","code":"\ng <- makeFun(4*x^2 - 7 ~ x)\ng(3)## [1] 29"},{"path":"fun-notation.html","id":"algorithms","chapter":"4 Notation for functions","heading":"4.3 Formulas and algorithms","text":"function algorithms previous section involves arithmetic. generally, formula involve invocation another function. example: \\(\\sqrt{\\strut m x + b}\\) \\(\\sin(m x) + \\ln(b)\\).idea “algorithm” generalizes formulas. starter definition :algorithm set instructions performing computation.High-school math typically involves presenting algorithms formula. learned, maybe middle school, follow arithmetic steps involved algorithms described formulas. also likely used calculator perform arithmetic evaluate functions \\(\\sin()\\) \\(\\ln()\\) \\(\\sqrt{\\strut}\\) don’t know evaluate using simple arithmetic. calculator implementing algorithm programmed enable calculation \\(\\sin()\\) \\(\\ln()\\) .slightly detailed definition “algorithm” highlights algorithms written terms , simpler algorithms.algorithm set instructions performing computation written terms algorithms already know perform.purposes, “algorithms already know perform” taken arithmetic—addition, subtraction, multiplication, division—well evaluation naked modeling functions. Admittedly, people compute logarithms fluently can add numbers, already R implementations basic modeling functions: exp(), log(), sin(), power-law, dnorm(), cnorm().\nvast majority functions see book (mathematical modeling general) can constructed basic arithmetic application naked modeling functions.","code":""},{"path":"fun-notation.html","id":"algorithms-without-formulas","chapter":"4 Notation for functions","heading":"4.4 Algorithms without formulas","text":"Many functions described algorithms use concepts common computer programming unknown traditional mathematical notation. names like iteration branching many refer stored lists fixed numbers (like office workers street, building, floor, corridor, door image function). ’ll deal things later, now …going use word algorithm name kind expression right \\(\\equiv\\) function definition. formula specific kind algorithm generally written traditional math notation.Algorithms, including ones formulas, written terms set symbols stand inputs. high-fallutin’ way saying something simple: \\(mx + b\\), \\(x\\), \\(m\\), \\(b\\) names give quantities used calculation.notation using function definition lists names two places, others one place. , look \\[g(x) \\equiv m x + b\\]\n\\(x\\) appears algorithm list input name \\((x)\\) left \\(\\equiv\\).\\(m\\) \\(b\\) different; appear algorithm. word quantities mathematics parameter. Eventually, algorithm followed, ’re going put specific numerical values place parameter.parameter values come ? subject mathematical notation silent. figure context experience. potentially confusing, especially human around sort things .","code":""},{"path":"fun-notation.html","id":"computer-notation","chapter":"4 Notation for functions","heading":"4.5 Computer notation","text":"notation used computer programming lets us explicit symbols refer function inputs parameters function.\nDepending computer language things can handled one way another. experienced computer programmers: issue scope can complex right.software used CalcZ (R, mosaic package extensions, ’ll refer R/mosaic), take simple--use approach. works like :modeling functions construct R/mosaic list parameters formally arguments function.wrote traditional notation \\[g(x, m, b) \\equiv m x + b\\]also way give default numerical values parameters can write \\(g(3.5)\\) computer know find parameter values. writing formulas using math notation, ’ll extend traditional notation write, instance, \\(g(x, m=2, b=3) \\equiv m x + b\\).R/mosaic, construct mathematical function like \\(g()\\) using makeFun() function:also writebut notation means give specific numerical values m b inputs whenever evaluate g(). won’t default values “parameters--inputs” m b.[F-31-R] Identify create R versions mathematical functions using makeFun() tilde expressions.[F-33] Master conventions used CalcZ giving names functions referring functions “pronouns.”","code":"\ng <- makeFun(m*x + b ~ x, m=2, b=3)\ng <- makeFun(m*x + b ~ x)"},{"path":"fun-notation.html","id":"calcz-naming-conventions","chapter":"4 Notation for functions","heading":"4.6 CalcZ naming conventions","text":"’re going using lot functions CalcZ. functions proper names, usually written using short sequences letters: instance naked modeling functions \\(\\sin()\\), \\(\\ln()\\), \\(\\exp()\\).functions needed just sentence paragraph section, perhaps used example lay steps algorithm. natural languages English, often use pronouns purposes: , , , , , , …. also use pronouns identifying functions. policy :pronoun function named \\(f()\\) \\(g()\\) \\(h()\\) corresponding upper-case letters \\(F()\\), \\(G()\\), \\(H()\\). particular choice letter f, g, h significance whatsoever. just way give unambiguous handle function going using little .occasion, use subscripts superscripts pronoun letters, instance \\(f_1()\\) \\(g^\\star()\\). way give us many possible pronouns need . Perhaps analogous words like “sister,” “parent,” “husband,” “cousin,” etc. allow us refer, without proper name, specific person.occasions, function relates specific quantity position velocity, use names \\(x()\\), \\(y()\\), \\(z()\\), \\(u()\\), \\(v()\\), \\(w()\\), . letters , course, ones frequently use name inputs functions. know whether letter meant refer input rather function? parentheses provide clue: \\(x()\\) function name, \\(x\\) input name.can become tedious give name every function, even ’s used . Consider sentence example:“functions \\(g(x) \\equiv \\sqrt{\\strut x}\\) \\(h(x) \\equiv x^3\\) examples power-law functions.”Long awkward. ’ll feel free write instead,“\\(\\sqrt{\\strut x}\\) \\(x^3\\) examples power-law functions.”Without formality provided “\\(g(x) \\equiv\\)” can hard know whether \\(\\sqrt{\\strut x}\\) means “square-root function” \"take square root specific number \\(x\\). convention use based name used expression. standard argument names end alphabet used without subscript (e.g. \\(x_0\\)) special symbol subscript (e.g. \\(t^\\star\\)), intend expression function. However, want apply function specific values inputs write following styles:\\[f(x^\\star) \\ \\ \\mbox{}\\ \\ \\sqrt{\\strut x^\\star}\\ \\ \\mbox{}\\ \\ \\sqrt{\\strut x=3}\\ \\ \\mbox{}\\ \\ \\left.\\sqrt{\\strut x}\\right|_{x=3}\\ \\ \\mbox{}\\ \\ \\left.g(x)\\strut \\right|_{x=3}\\]One important techniques calculus take something often think number turn function whose output number. take time get used calculus notation able tell glance whether something function number.’s illustration make sense already studied calculus:\\[\\int_0^3\\!\\! f(x) dx\\ \\ \\text{number, }\\int_0^x\\!\\! f(x) dx \\ \\ \\text{function.}\\ \\ \\]high-school math notation, can hard tell expression intended function number. Careful attention CalcZ conventions make much easier figure whether expression resolves function number. first read mathematical expression, good first question ask , “kind thing ? function? number?”","code":""},{"path":"fun-notation.html","id":"functions-in-r","chapter":"4 Notation for functions","heading":"4.7 Functions in R","text":"name R language can refer sort object. use CalcZ naming conventions use R, ability develop read math notation help reading R vice versa.R/mosaic provides additional clues distinguish numbers functions.Almost time create function using makeFun(). see R expression starting name <- makeFun(tilde expression) know sure name refers function.get deeper calculus, meet additional R operators generate functions. ’ll introduce good time, someone reviewing course, include D(), antiD(), compose() iterate().readers may encountered R previously statistics data science course. readers wondering makeFun(). Experienced programmers know way make functions R using function keyword. instance:’s completely correct legitimate way define function R settings universal practice.developed makeFun() handle situation computers, insistence avoiding ambiguity, something person familiar math notation likely suspect. problem comes something simple asIn traditional math notation, \\(g(x) \\equiv m x + b\\), usually silent parameters like \\(m\\) \\(b\\) coming . , honest, don’t worry try evaluate function.evaluate, say, command \\(g(3)\\), R system knows find right values \\(m\\) \\(b\\). objects appropriate places R system, error message generated. rules computer languages follow tracking symbols aren’t argument list called scoping rules. Scoping advanced programming concept different languages use different rules. ’s recipe trouble confusion newbies. (even experts!)makeFun() arranged impose scoping system, one dead easy essentially every computer language. makeFun() add parameters function algorithm argument list. makeFun() command creates function 3 arguments.point ~ x part tilde expression simply name arguments come first. evaluate function, ’ll provide values m b. operations function—differentiation anti-differentiation, particular—can done without specify parameter values. know differentiation anti-differentiation , example:Sometimes particular numerical values mind parameters. instance, modeling trajectory ball, undoubtedly need make use gravitational acceleration Earth’s surface, \\(9.8 \\text{m}/\\text{s}^2\\). might prefer include specific number 9.8 function definitions can use functions model ball’s trajectory Mars. since balls thrown Earth, maybe ’s worthwhile insist value 9.8 specified every time function used. can ways using g parameter name instruct R set g 9.8 unless otherwise specified. function look like :","code":"\nf <- function(x) { 3 + 2*x }\ng <- function(x) { m*x + b }\nmakeFun(m*x + b ~ x)## function (x, m, b) \n## m * x + b\nD(m*x + b ~ x)## function (x, m, b) \n## m\nantiD(m*x + b ~ x)## function (x, C = 0, m, b) \n## m * 1/2 * x^2 + b * x + C\nball_velocity <- makeFun(g*t + t0 ~ t, g = 9.8, t0 = 0)\n# For Earth: falling 3 seconds from a standstill\nball_velocity(3)## [1] 29.4\n# For Earth when the ball has an initial upward velocity of 10 m/s\nball_velocity(3, t0 = -10)## [1] 19.4\n# For Mars ...\nball_velocity(3, t0 = -10, g = 3.711)## [1] 1.133"},{"path":"fun-notation.html","id":"foursigns","chapter":"4 Notation for functions","heading":"4.8 E unibus plurum: \\(=\\), \\(\\equiv\\), \\(\\rightarrow\\), <-","text":"\\(=\\) sign carries lot weight high-school notation. much weight. used several different meanings. leads confusion error.Meaning 1: “defined …”use \\(\\equiv\\) mathematical notation <- R. notation R bit simpler mathematical notation: way giving something name.“something” function, see left side <-, instance use makeFun() operator qw h <- makeFun(x^2 ~ x). left side simply name.math notation, equivalent written \\(h(x) \\equiv x^2\\). left side isn’t exactly name. ’s name followed parentheses names used algorithm.Keep mind writing functions, generally provide hint name refers function, writing \\(h()\\) h(). parentheses aren’t part name; name \\(h\\). parentheses remind us \\(h\\) function.Meaning 2: “Happens …”acceleration due gravity often given name \\(g\\). Earth’s surface, happens \\(9.8 \\text{m}/\\text{s}^2\\). math notation, use equal sign narrow meaning, \\(g=9.8\\text{m}/\\text{s}^2\\). R use =.Meaning 3: “Gets closer closer …”Calculus relationships: connection two () things. hear phrases like, “\\(x\\) increases, \\(f(x)\\) decreases.” , everyday experience, “gets humid, weather becomes uncomfortable.” , “slower safer,” “spicier better” “heavier blanket, warmer ’ll .” (One important uses derivatives calculus represent statements quantitatively. ’s subject next Block.)calculus, sometimes distinguish “\\(x\\) zero” “\\(x\\) gets closer closer zero.” ’ll need want say, “gets smaller smaller, doesn’t disappear entirely.” symbol “gets closer closer ” \\(\\rightarrow\\), \\(x \\rightarrow 0\\)reading math, take care notice \\(=\\), \\(\\rightarrow\\), \\(\\equiv\\) used. sign something important say intended help make sense read.\n:::According notation style use CalcZ, things function? number?Q-2: kind thing \\(\\sqrt{z}\\)?function (+) []function (+) []number [\\(z\\) one standard names use input function. given function name, instance \\(g(z) \\equiv \\sqrt{z}\\), able tell \\((z)\\) \\(g()\\) function. whenever use standard input name, expression function.]number [\\(z\\) one standard names use input function. given function name, instance \\(g(z) \\equiv \\sqrt{z}\\), able tell \\((z)\\) \\(g()\\) function. whenever use standard input name, expression function.]Q-3: kind thing \\(\\sqrt{y^\\star}\\)?function [According convention, name \\(y^\\star\\) refers particular value opposed name function input.]function [According convention, name \\(y^\\star\\) refers particular value opposed name function input.]number (+) []number (+) []Q-4: kind thing \\(e^{k t}\\)?function (+) []function (+) []number [letter \\(t\\) one standard letters input names. \\(k\\) letter, since end alphabet, hint intended parameter, symbol representing specific numerical quantity.]number [letter \\(t\\) one standard letters input names. \\(k\\) letter, since end alphabet, hint intended parameter, symbol representing specific numerical quantity.]Q-5: kind thing \\(g(k) \\equiv e^k\\)?function [Notwithstanding convention \\(k\\) name used inputs, use full function-definition style, anything parentheses following function name explicitly stated input name.]function [Notwithstanding convention \\(k\\) name used inputs, use full function-definition style, anything parentheses following function name explicitly stated input name.]number (+) []number (+) []","code":"\nname <- something"},{"path":"graphs-and-graphics.html","id":"graphs-and-graphics","chapter":"5 Graphics & function graphs","heading":"5 Graphics & function graphs","text":"[F-20] Understand mathematical graph consists points composite space: input \\(\\times\\) output.Scientific statistical graphics visual depictions information data. displaying function single input, mathematicians favor particular style graphics. favored style called function graph, specific technical meaning mathematics. Notice ’re writing “function graph” rather “function graphic.” function graph particular sort graphic: many types graphics ’ll use display data features functions.","code":""},{"path":"graphs-and-graphics.html","id":"the-graphics-frame","chapter":"5 Graphics & function graphs","heading":"5.1 The graphics frame","text":"Technical graphs usually drawn graphics frame\nseveral components:frame region piece paper computer screen marked horizontal vertical axis.horizontal axis stands one quantity.vertical axis stands another quantity.horizontal vertical axes drawn scale enables translate numerical value position.\nFigure 5.1: empty graphics frame scales horizontal vertical axes.\n","code":""},{"path":"graphs-and-graphics.html","id":"data-graphics-the-point-plot","chapter":"5 Graphics & function graphs","heading":"5.2 Data graphics: the point plot","text":"One common uses graphics frame display visually two columns table containing data. instance, small part table size penguins Palmer Archipelago Antarctica.point plot displays two columns table. row table represented one point graphic. instance:penguin specific mass flipper length. look penguins mass around 4 kg, can see different penguins variety flipper lengths. ’s typical natural variability.function graph can constructed way. Start table reporting output function variety inputs, like :make point plot two columns table:\nFigure 5.2: point plot table.\ngraph shows shape sigmoid function, one naked modeling functions. Except … domain sigmoid entire number line \\(-\\infty\\) \\(\\infty\\).","code":"\nlibrary(palmerpenguins)\nset.seed(101)\nknitr::kable(\n  penguins %>% sample_n(10) %>%\n    select(species, body_mass_g, flipper_length_mm, \n           bill_length_mm) %>%\n    rename(body_mass = \"body_mass_g\", \n           flipper_length = \"flipper_length_mm\",\n           bill_length = \"bill_length_mm\") %>%\n    mutate(body_mass = body_mass/1000,\n           flipper_length=flipper_length/10,\n           bill_length = bill_length/10)\n) %>% \n    kableExtra::kable_styling()"},{"path":"graphs-and-graphics.html","id":"asymptotes-of-functions","chapter":"5 Graphics & function graphs","heading":"5.2.1 Asymptotes of functions","text":"’s need plot entire domain. know “action” happening near zero inputs left function value heads toward zero. Similarly, inputs far right, function value heads toward zero. particular mathematical notation sort “far left” idea. mathematical notation, write situation sigmoid way:\\[\\lim_{x \\rightarrow -\\infty} \\text{dnorm}(x) = 0\\ \\ \\ \\mbox{}\\ \\ \\ \\lim_{x \\rightarrow -\\infty}\\text{dnorm}(x) = 1\\]\ninformation function output called horizontal asymptotes function. ’s expected mathematically literate person know heart asymptotes basic modeling functions, just geographically literate person knows Africa continent Ghana country Africa. ’ll say horizontal asymptotes later. now, note expected knowledge enables us convey shape function plotting just limited, well chosen, part domain.graph drawn data table incomplete. domain sigmoid function entire number line—numbers—graphic shows handful input values.’s perhaps common sense can find function output input isn’t shown point plot interpolating points shown. instance, put straight-line betwen consecutive points:\nFigure 5.3: Interpolating data points\ngaps points filled interpolation, can use graphic read output corresponding every input graphic domain. (vice versa: can find input corresponds given output range function.)Typically function’s graph drawn using many points, closely spaced can’t see gap. Since can’t see gaps, won’t misled sharp angles consecutive line segments connecting points. Like :traditional, mathematical definition function graph set coordinate pairs legitimate input/output pairs function. Placing ink legitimate pairs displays graph.data point plot penguin flipper length vs body mass, generally multiple penguins body mass different flipper lengths. mathematics, part definition term “function” function one output given input. Thus, graph function one input always consist single curve, opposed cloud points often seen data.","code":""},{"path":"graphs-and-graphics.html","id":"graphs-of-the-basic-functions","chapter":"5 Graphics & function graphs","heading":"5.3 Graphs of the basic functions","text":"One helpful way get know naked modeling functions individually graph . People natural talent remember shapes distinguish one another; job associate shape ’s name.\nshape power-law function \\(x^p\\) depends exponent \\(p\\).\\(p\\) integer, \\(p \\neq \\ldots,-2, -1, 0, 1, 2, 3, ...\\) domain \\(0 leq x\\), positive side number line.\npositive \\(p\\), function increasing.\nnegative \\(p\\), function decreasing.\npositive \\(p\\), function increasing.negative \\(p\\), function decreasing.\\(p\\) integer, domain entire number line, \\(-\\infty < x < \\inft\\)\np even, \\(p = 2, 4, 6, ...\\) output positive.\np odd, output negative.\np even, \\(p = 2, 4, 6, ...\\) output positive.p odd, output negative.practice, able sketch roughly naked modeling functions memory. can , ’ll easier time envisioning function might best suit situation.addition shape, facts naked modeling functions let sketch accurately.Exponential\n\\(x=0 \\implies e^x=1\\)\n\\(x=3 \\implies e^x\\approx 20\\)\n\\(x=0 \\implies e^x=1\\)\\(x=3 \\implies e^x\\approx 20\\)Logarithm\n\\(x=1 \\implies log(x)=0\\)\n\\(x=3 \\implies e^x\\approx 20\\)\n\\(x=1 \\implies log(x)=0\\)\\(x=3 \\implies e^x\\approx 20\\)Hump\n\\(x=0 \\implies\\) peak hump: dnorm(0) \\(\\approx 0.4\\)\n\\(x=\\pm 1 \\implies\\) output \\(\\approx 0.25\\)\n\\(x=0 \\implies\\) peak hump: dnorm(0) \\(\\approx 0.4\\)\\(x=\\pm 1 \\implies\\) output \\(\\approx 0.25\\)Sigmoid\n\\(x=0 \\implies\\) mid-way hill: pnorm(0) \\(= 0.5\\)\n\\(x=2 \\implies\\) output \\(\\approx 0.975\\)\n\\(x = -2 \\implies\\) output \\(\\approx 0.025\\)\n\\(x=0 \\implies\\) mid-way hill: pnorm(0) \\(= 0.5\\)\\(x=2 \\implies\\) output \\(\\approx 0.975\\)\\(x = -2 \\implies\\) output \\(\\approx 0.025\\)Sinusoid\nPeaks always 1, valleys \\(-1\\)\n\\(x=0, \\pm \\pi, \\pm 2\\pi, \\pm 3\\pi, \\ldots\\) gives output 0.\nPeaks always 1, valleys \\(-1\\)\\(x=0, \\pm \\pi, \\pm 2\\pi, \\pm 3\\pi, \\ldots\\) gives output 0.","code":""},{"path":"graphs-and-graphics.html","id":"exercises-in-draft","chapter":"5 Graphics & function graphs","heading":"5.4 EXERCISES in draft","text":"Show graphs, ask ones mathematical functions, ones unique inverse, output corresponding given input, input given output, range function, ….","code":""},{"path":"graphs-and-graphics.html","id":"inputs-to-output","chapter":"5 Graphics & function graphs","heading":"5.5 Inputs to output","text":"can easily evaluate function given input graph. know, just put finger horizontal coordinate input. move finger upward reach point curve directly horizontal coordinate. read value function input reference scale vertical axis.’s possible show graph whole function whose domain \\(-\\infty\\) \\(\\infty\\). Consequently, drawing graph choose show part domain expect relevant needs.Sometimes, graphic’s domain includes parts domain function drawn. cases, function’s graph extend invalid part graphic domain, plot function whose domain positive numbers.function range runs \\(-\\infty\\) \\(\\infty\\), limits paper display mean can show part range. experience, ’ll learn read hints graph underlying function might range larger one shown graphic.","code":""},{"path":"graphs-and-graphics.html","id":"outputs-to-inputs","chapter":"5 Graphics & function graphs","heading":"5.6 Outputs to inputs","text":"Graphs relatively modern, coming mainstream use 1700s. Much mathematics developed graphs invented. One consequence function tasks easy using graph might hard previous ways implementing functions. analogous way arithmetic pretty easy Arabic numerals, really hard Roman numerals.function graph makes easy evaluate function inverse. basic modeling functions way calculate numerically output given input (function’s domain).Often, working function goes another way: know output want find corresponding input. ’s easy graph. Pick position vertical axis represents given input. trace horizontally ink . , trace vertically read value input produce given output.Mathematicians careful distinguish functions unique input generates given output, functions can one input generates output. Functions one--one relationship output input called “invertible.”Invertible , common procedure working functions find input corresponding specific, given output. high-school algebra, called “solving \\(x\\).” special case solving finding roots polynomial. name give procedure zero finding, correctly points trying find input.","code":""},{"path":"graphs-and-graphics.html","id":"graphs-of-functions-with-two-inputs","chapter":"5 Graphics & function graphs","heading":"5.7 Graphs of functions with two inputs","text":"can draw graphs functions two inputs. Now points need marked 3-dimensional space: one axis two inputs another axis output. Like :\nFigure 5.4: (Figure Fun-1b-1.2)\nhard read graph function two inputs. Think graph kind tent suspended domain ground. graph surface. show graph display, tricks trade used: color give additional scale output; computer graphics let us rotate surface look various perspectives, added grid lines marks surface help us read numerical value.","code":""},{"path":"graphs-and-graphics.html","id":"contour-plots","chapter":"5 Graphics & function graphs","heading":"5.8 Contour plots","text":"[F-21] Interpret contour plot function two input variables, include estimating function values locations peaks valleys.mathematical graph just one way draw picture function two inputs. ways. One helpful mode picture called contour plot, familiar many non-mathematicians form topgraphical maps showing landscape elevation function latitude longitude. ’s contour plot function shown previous graph:\nFigure 5.5: (Fig-1b-2.1)\ncontour plot topographical map mathematical graph Figure Figure (Fun-1b-1.2)may take practice learn read contour plots fluently skill ’s worthwhile . Note graphics frame Cartesian space two inputs. output presented contour lines. contour line label giving numerical value function output. input value pairs given contour line corresponds output level labeling contour line. find output input pair contour line, interpolate contours either side point.example, input pair (0, 0)—bottom frame, midway left right—falls contours labeled “20” “22.” means output corresponding input (0, 0) somewhere 20 22. point much closer contour labeled “20”, ’s reasonable see output value 20.5. , course, approximation, ’s nature reading numbers graphs.Often, specific numerical value point primary interest. Instead, may interested steep function point, indicated spacing contours. contours closely spaced, hillside steep. contours far apart, hillside steep, perhaps even flat.Another common task interpreting contour plots locate input pair ’s local high point low point: top hill bottom hollow. points called local argmax local argmin respectively. output function local argmax called local maximum; similarly local argmin, output called local minimum. (word “argmax” contraction “argument maximum.” tend use word “input” instead “argument”, means exactly thing say “inputs function” says “arguments function.”)Still common tasks reading contour plots start given input pair figure 1) direction move steeply uphill, 2) direction move keep function output .can helpful look contour map interpret contours representing geographical features: hills, valleys, crests, coves, hollows, ., (Fun-1c) translate contour plot graph function one input. (can think function two inputs, hold one inputs constant, , always . )","code":""},{"path":"graphs-and-graphics.html","id":"slice-plots","chapter":"5 Graphics & function graphs","heading":"5.9 Slice plots","text":"[F-23] Know meant slice function two variables. able determine function increasing, decreasing, constant moving horizontally vertically contour plot.mentioned , mathematical modeling process constructing mathematical representations situations phenomena interest. CalcZ, primarily interested using functions representations.Almost always, mathematically modeling real-world situation phenomenon, try capture every nuance every relationship might exist real world. leave things . simplifications make modeling problems tractable encourage us identify important features important relationships.hand, ’s easy go wrong leave something ’s important. mitigate risk, many modeling projects involve modeling cycle propose candidate model, examine consequence model see corresponds well parts reality important us task, modify model needed produce new better candidate.spirit, ’s useful always assume models leaving something complete model involves function inputs present candidate. present candidate model considered slice complete model. slice leaves one variables complete model.illustrate , suppose “complete model” form function two inputs, shown contour plot .become practiced reading contour plots, might prefer read one hilltop (shaded yellow) side--side hollow bowl (shaded purple), green, almost level flanks left right edges frame.common forms slice involve constructing simpler function one input . example, simpler function might ignore input #2. different ways collapsing function two inputs function one input. especially useful way calculus take two-input function set one inputs constant value.instance, suppose set input #2 constant value 1.5. means can consider value input #1, input #2 replaced 1.5. Figure Fig-1c.2, ’ve marked red points contour plot give output simplified function.point along red line corresponds specific value input #1. contours, can read output corresponding values input #1. relationship, output versus input #1 can drawn mathematical graph (right contour plot). Study graph can see rising falling parts graph correspond contours crossed red line.Slices can taken direction even along curved path! blue line slice constructed letting input #2 vary holding input #1 constant value 0.","code":""},{"path":"graphs-and-graphics.html","id":"creating-graphics","chapter":"5 Graphics & function graphs","heading":"5.10 Creating graphics","text":"[F-32-R] Use slice_plot(), contour_plot(), domain() functions R/mosaic.CONTENT YETWe’ve created function named \\(\\mbox{twins}(x,y)\\) help practice making contour plots. ’ll need open sandbox draw plot.scaffolding command:Q-6: domain plot large enough show mountain next deep hole. domains job?domain(x=c(-5, 5), y=c(-5, 5) (+) []domain(x=c(-5, 5), y=c(-5, 5) (+) []domain(x=c(1, 5), y=c(1, 5) [shows mountain, hole.]domain(x=c(1, 5), y=c(1, 5) [shows mountain, hole.]domain(x=c(1,1), y=c(-1,1))) [hole shown, none mountain.]domain(x=c(1,1), y=c(-1,1))) [hole shown, none mountain.]domain(x=c(5,10), y=c(0,10))) [’s hardly anything going domain. function pretty flat except dip lower left.]domain(x=c(5,10), y=c(0,10))) [’s hardly anything going domain. function pretty flat except dip lower left.]different sandbox (can still see contour plot first sandbox), draw slice function along line \\(y=0\\). Use \\(x\\)-domain correct answer previous question.Q-7: expressions accomplish task?slice_plot(twins(x, y=0) ~ x, domain(x=c(-5,5))) (+) []slice_plot(twins(x, y=0) ~ x, domain(x=c(-5,5))) (+) []slice_plot(twins(x) ~ x, domain(y=c(-5, 5))) [domain \\(x\\), \\(y\\). twins() takes two inputs, even one fixed zero.]slice_plot(twins(x) ~ x, domain(y=c(-5, 5))) [domain \\(x\\), \\(y\\). twins() takes two inputs, even one fixed zero.]slice_plot(twins(x, y=0) ~ x, domain(x=c(-5, 5), y=c(-5, 5))) [slice plot domain includes one input.]slice_plot(twins(x, y=0) ~ x, domain(x=c(-5, 5), y=c(-5, 5))) [slice plot domain includes one input.]slice_plot(twins(x, y=0) ~ x + y, domain(x=c(-5, 5), y=c(-5, 5))) [slice plot one input right side tilde expression.]slice_plot(twins(x, y=0) ~ x + y, domain(x=c(-5, 5), y=c(-5, 5))) [slice plot one input right side tilde expression.]","code":"\ntwins <- mosaic::rfun(~ x + y, seed = 302, n=5)\ncontour_plot(twins(x, y) ~ x + y, domain(x=c(0,1), y=c(-1,1)))twins <- mosaic::rfun(~ x + y, seed = 302, n=5)\nslice_plot(__tilde-expression__, __domain__)"},{"path":"params-intro.html","id":"params-intro","chapter":"6 Parameters for functions","heading":"6 Parameters for functions","text":"naked modeling functions provide modeler collection shapes. yet fully suited represent real-world phenomena. illustrate, consider Figure 6.1 shows number officially confirmed cases March 2020.outbreak widely described “exponential,” alongside data Figure 6.1 shows function \\(e^x\\).\nFigure 6.1: Cumulative confirmed COVID-19 cases month March, 2020. red curve \\(e^x\\)\n’s obvious mismatch data function \\(e^x\\). mean COVID pattern exponential?hint comes formula \\(e^x\\). \\(x\\)? Plotted graph, \\(x\\) calender day March. shouldn’t \\(x\\) given hours minutes weeks?want input \\(\\exp()\\) hours, can multiply \\(x\\) 24. input weeks, multiplier \\(\\frac{1}{7} = 0.1429\\). cases, function \\(e^{kx}\\), \\(k\\) 24 hours 0.1429 weeks. Exploring bit, found \\(0.3 \\leq k < 0.5\\) produce functions graphs match data much better naked \\(e^x\\).\nFigure 6.2: COVID-19 data compared exponential functions \\(e^{kt}\\). variety possible numerical values \\(k\\) shown.\nmultiplier \\(k\\) \\(e^{kx}\\) called parameter function: number can use set scale input. use exponential function model COVID, ’ve stretch red curve Figure 6.2 clothing naked \\(x\\) \\(k x\\). Perhaps ’s matter personal choice size \\(k\\) best suited model data.personal choice \\(k=0.30\\). reasoning? orange curve parallels COVID data. flaw \\(k=0.30\\) curve lags several data several days. can fix pulling \\(k=0.30\\) curve left. Mathematically can accomplished subtracting days \\(x\\) multiplying \\(k\\), , using function \\[f(x) \\equiv e^{k(x-s)}\\] \\(s\\) stands shift.Figure 6.3 shows orange curve pulling 10 days left. ’s now pretty good match data.\nFigure 6.3: COVID-19 data compared exponential functions \\(e^{k(t-s)}\\).\nNote ’ve aligned orange curve horizontally, seems curve much. green curve much better. much gentler curve, \\(k=0.19\\) pulled little month left.parameterizing exponential function \\(e^{k(x-s)}\\) finding suitable values \\(k\\) \\(s\\), get good match March data. models can sometimes tell us . green curve Figure 6.3 value \\(s\\) -32 days. 32 days March 1 late January. even though didn’t January February data base green curve , late January 2020 regarded beginning outbreak.","code":""},{"path":"params-intro.html","id":"parallel-scales","chapter":"6 Parameters for functions","heading":"6.1 Parallel scales","text":"graphical format using display functions one variable places input horizontal axis output vertical axis. way draw function. Consider everyday objects: thermometer ruler.     object presents read-’s measured—temperature length—two different scales. time, objects provide way convert one scale another.function gives output given input. represent input value position number line—call “axis”—output position another output line, almost always drawn perpendicular one another. two number lines can just well parallel one another. evaluate function, find input value input scale read corresponding output. inverse function can evaluated just easily: switch roles input output scales.Taking traditional unit scale input metric scale output, two functions implemented objects :\n\\[\\underbrace{C(F) = \\frac{5}{9}(F-32)}_\\mbox{Fahrenheit Celcius}\\ \\ \\ \\text{}\\ \\ \\ \\ \\underbrace{\\text{cm(inches)} = 2.54 \\times (\\text{inches}-0}_\\mbox{inches cm})\\]\nsimple, straight-line functions, play important role modeling.conversion function can written form \\(h(x) \\equiv m (x - x_0)\\). course, multiply \\(m\\) terms parentheses, get \\(h(x) = m x - m x_0 = mx + b\\) define \\(b\\equiv m x_0\\). conversion function simply straight-line function.\\(m\\) \\(x_0\\) parameters straight-line function. terms graph straight-line function, slope x-intercept respectively.Often, functions can parameterized ways. instance, likely learned parameterization \\(m x + b\\), \\(m\\) (still) slope graph \\(b\\) now y-intercept.can call \\(m(x - x_0)\\) “x-intercept parameterization” \\(m x + b\\) \"y-intercept parameterization. equivalent equally good ways parameterizing straight line. still ways parameterizing, style reflecting format specifying two points make line.turn naked modeling function basic modeling function use \\(h()\\) convert input applying naked function.can see, straight-line function fundamental part modeling.illustrate link basic modeling functions naked progenitors, Figure 6.4 shows model fit COVID-19 data:\nFigure 6.4: graph naked modeling exponential additional scale displayed (red) match COVID-19 data\nfunction drawn simply \\(e^x\\): naked. black horizontal scale shows \\(x\\). match function data, , show basic modeling function, simply add new scale translates \\(x\\) “day March.” ’s red scale. , March 22, 25,000 COVID cases date.naked modeling function give good model COVID case numbers. scale input applying naked function, effectively laying new axis, stretched shifted original, let’s us read number cases.Input scaling empowers naked modeling functions model huge variety phenomena. ’s just one exponential function always looks exactly . huge variety ways scale input. input scaling, naked modeling function puts clothes becomes one basic modeling functions.\n\\[\\underbrace{e^x}_\\mbox{naked modeling function}\\ \\ \\ \\underbrace{e^{k(x-x_0)}}_\\mbox{basic modeling function}\\]\nstraight-line function \\(h()\\) written \\(k(x-x_0)\\) rather \\(m(x-x_0)\\). ’s traditional write basic modeling functions\nmay noticed uses \\(k\\) instead \\(m\\) multiplier straight-line function exponent. course, can use whatever name wish parameter. idiom mathematical notation several conventions. Knowing help read mathematics fluently.table shows . Often, multiple parameterizations.parameterization straight-line function handy finding parameters function graph.Recall Section","code":""},{"path":"params-intro.html","id":"exercises-2","chapter":"6 Parameters for functions","heading":"Exercises","text":"Exercise 1: graphs shows two horizontal scales one basic modeling functions. horizontal scale (black red) corresponds naked modeling function?Exercise 2: Find straight-line function give value red scale point black scale.Exercise 3Pick characteristic inputs curve. E.g. start doubling times: outputs 1 2Each graph shows basic modeling function written style: \\(\\sin(r(t-t_0))\\). job estimate \\(t_0\\) \\(r\\).","code":"\nadd_scale(dnorm(x) ~ x, domain(x=c(-3,3)), 0.25, 10) %>%\n  gf_labs(y=\"output\", x=\"input\", title=\"Graph (A)\")\nadd_scale(pnorm(x, -3, .5) ~ x, domain(x=c(-6,0)), .5, -3) %>%\n  gf_labs(y=\"output\", x=\"input\", title=\"Graph (B)\")\nadd_scale(sin(2*pi*x/3+1) ~ x, domain(x=c(-2,10)), (2*pi)/3, 16/(2*pi)) %>%\n  gf_labs(y=\"output\", x=\"input\", title=\"Graph (C)\")\nadd_scale(exp(x) ~ x, domain(x=c(-2,2)), 3, 0)\nadd_scale(pnorm(x) ~ x, domain(x=c(-3, 3)), -1.5, 0)\nadd_scale(dnorm(x) ~ x, domain(x=c(-3, 3)), 2, -1)\nadd_scale(pnorm(x) ~ x, domain(x=c(-3, 3)), 1.5, 2)"},{"path":"fun-slopes.html","id":"fun-slopes","chapter":"7 Calculus: Functions and change","heading":"7 Calculus: Functions and change","text":"purposes, definition calculus isThe use functions model explore continuous changeWe’ve introduced preliminary way words “function” “continuous” relate calculus. agenda chapter give specific mathematical meanings words “model” “change.”","code":""},{"path":"fun-slopes.html","id":"naked-modeling-functions","chapter":"7 Calculus: Functions and change","heading":"7.1 Naked modeling functions","text":"list functions probably seen many times mathematics studies.\\(x\\), \\(x^2\\), \\(\\sqrt{x}\\), \\(1/\\sqrt{x}\\), .\\(e^x\\) well \\(2^x\\) \\(10^x\\)\\(\\sin(x)\\) \\(\\cos(x)\\)\\(\\ln(x)\\) well \\(\\log_{10}(x)\\) \\(\\log_2(x)\\)see functions—something much like —throughout book. , might appropriate call “core” functions. . Instead, refer naked modeling functions.’s mathematics … ’s real world. term mathematical modeling constructing representations situations phenomena real world terms mathematical objects. advantage able construct models models easy study, explore, take apart, experiments , deduce implications .use computers interact world, whether record-keeping, communications, media displays, . “things” computers work always mathematical representations real world: models. Computers carry operations models. instance, sound real-world phenomenon resides somewhere vibrations air psycho-acoustics brain. simple computer representation sound constructed using mathematical stuff: long series numbers. Suppose want slow sound (say, someone learning foreign language) speed (get slow-paced video) translate text. technologies things almost always implemented arithmetic complicated mathematical procedures mathematical stuff.major theme course make mathematical representations real-world phenomena work representations extract results want. particular, focus representations form mathematical functions. (mathematical representations, functions special importance ubiquitous scientific work computing.)’ll see, need new function purpose, practically always build existing functions. instance, dressing naked modeling functions previous chapter parameters, generate “basic modeling functions” enable us interact world.","code":""},{"path":"fun-slopes.html","id":"change-and-slope","chapter":"7 Calculus: Functions and change","heading":"7.2 Change and slope","text":"solid, intuitive sense “change” means. mathematics, especially mathematics functions, change simple meaning already touched previous math education.word encapsulates “change” high-school math slope. instance, ’ve undoubtedly calculate slope straight line graph. learned “rise” “run” read graph formula. slope ratio: rise run.Slope lovely metaphor change, since everyone intuitive sense slope road hillside. learned apply intuition reading graphs slope line. ’ll exploit intuitive ability read landscape order introduce abstract mathematical ideas --earth setting. ’s effective pedagogical strategy.everything changes “slope.” instance, population country can change, can number new cases epidemic disease, temperature cup coffee, distance Earth spacecraft. major part learning calculus generalizing abstracting mathematical concept “slope” example becoming proficient mathematical procedures working change.","code":""},{"path":"fun-slopes.html","id":"continuous-change","chapter":"7 Calculus: Functions and change","heading":"7.3 Continuous change","text":"people comfortable ideas daily changes temperature monthly changes credit-card debt quarterly changes unemployment rate annual changes height child. things easy record , say, spreadsheet. example, write, weather forecast next several days (southeastern Colorado mid-May) isSuch data said discrete. day listed, time day. high temperature forecast, time high. “description” also discrete, one several words used summarize quality weather, opposed quantity rain.Calculus continuous change. instance, weather bureau provide web interface let enter date time nearest fraction second, giving way track change continuously. Many physical processes intrinsically continuous, instance motion (change position) spacecraft height tide stress tree function wind velocity.Finding language describe continuous change—famously, position moon planets orbit, speed ball rolling ramp—central emergence historians call “Age Enlightenment” “modern scientific method.” first complete presentation language published Isaac Newton based work 1660s. might guess, name language “calculus.”","code":""},{"path":"fun-slopes.html","id":"slopes-and-curves","chapter":"7 Calculus: Functions and change","heading":"7.4 Slopes and curves","text":"Review compute slope line.Point straight-line function slope everywhere. naked modeling functions don’t slope, local property function \\(x\\).much calculus depends able construct manipulate functions. successfully requires careful consideration know something function anatomy functions generally. major way accomplished mathematical notation computer languages via notation, subject next chapter.","code":""},{"path":"fun-assembling.html","id":"fun-assembling","chapter":"8 Assembling functions","heading":"8 Assembling functions","text":"composition, linear combination, multiplication","code":""},{"path":"fun-multiple-inputs.html","id":"fun-multiple-inputs","chapter":"9 Functions with multiple inputs","heading":"9 Functions with multiple inputs","text":"Many printed tables meant used functions; plug input values read output. ’s table published National Oceanic Atmospheric Administration heat index, way summarizing perceived comfort (discomfort) summer-like weather conditions.Q-8: ) inputs heat-index functiontemperature relative humidity (+) []temperature relative humidity (+) []temperature wind speed [inputs wind-chill function, heat index.]temperature wind speed [inputs wind-chill function, heat index.]temperature, latitude, longitude [heat index doesn’t depend location.]temperature, latitude, longitude [heat index doesn’t depend location.]table actually shows three different functions:heat index \\(^\\circ\\) F.heat index \\(^\\circ\\) C.caution warning level.Q-9: B) inputs 70% relative humidity \\(88^{\\circ}\\) F, outputs three functions?\\(100^{\\circ}\\) F, \\(38^\\circ\\) C, “extreme caution”. (+) []\\(100^{\\circ}\\) F, \\(38^\\circ\\) C, “extreme caution”. (+) []\\(100^\\circ\\) F, \\(38^\\circ\\) C, “danger”. [Check !]\\(100^\\circ\\) F, \\(38^\\circ\\) C, “danger”. [Check !]\\(100^\\circ\\) F, \\(33^\\circ\\) C, “extreme caution”. [33C temperature 100F.]\\(100^\\circ\\) F, \\(33^\\circ\\) C, “extreme caution”. [33C temperature 100F.]Q-10: C) Holding relative humidity 70%, much ambient temperature increase (\\(88^\\circ\\) F) change caution-level output “dangerous”?Increase \\(2^\\circ\\) F (+) []Increase \\(2^\\circ\\) F (+) []Increase \\(6^\\circ\\) F [looks like ’re increasing humidity point heat index \\(106^circ\\) F. asked much temperature input change, heat-index output.]Increase \\(6^\\circ\\) F [looks like ’re increasing humidity point heat index \\(106^circ\\) F. asked much temperature input change, heat-index output.]Increase relative humidity 80%. [’s true \\(100^\\circ\\) F 80% humidity, caution-index “dangerous”. problem specified holding humidity constant.]Increase relative humidity 80%. [’s true \\(100^\\circ\\) F 80% humidity, caution-index “dangerous”. problem specified holding humidity constant.]Q-11: D) starting point \\(88^\\circ\\) F 70% humidity, slope increase heat index moving 80% humidity.\\(6^\\circ\\) F per 10 percentage points humidity (+) []\\(6^\\circ\\) F per 10 percentage points humidity (+) []\\(6^\\circ\\) F [slope always “rise run”. ’ve got rise right, run?]\\(6^\\circ\\) F [slope always “rise run”. ’ve got rise right, run?]\\(6^\\circ\\) F per 80% humidity. [slope change output divided change input, .e. “rise run”. 80% humidity endpoint, run change humidity starting point endpoint.]\\(6^\\circ\\) F per 80% humidity. [slope change output divided change input, .e. “rise run”. 80% humidity endpoint, run change humidity starting point endpoint.]Q-12: E) heat-index output inputs 52% relative humidity \\(91^\\circ\\) F? Choose best answer.\\(98.4^\\circ\\) F (+) [course, 4 last digit sketchy, ’s reasonable calculate interpolated output averaging neighboring outputs.]\\(98.4^\\circ\\) F (+) [course, 4 last digit sketchy, ’s reasonable calculate interpolated output averaging neighboring outputs.]\\(101^\\circ\\) F [’s output 55% humidity \\(92^\\circ\\) F.]\\(101^\\circ\\) F [’s output 55% humidity \\(92^\\circ\\) F.]table doesn’t say. [’s true table entry specifically 52% \\(91^\\circ\\) F, can make reasonable guess interpolation, , reading rows columns.]table doesn’t say. [’s true table entry specifically 52% \\(91^\\circ\\) F, can make reasonable guess interpolation, , reading rows columns.]Q-13: True false: caution-level output presented function just one variable, rather needing temperature humidity .TRUE (+) [caution-level output function ambient temperature alone humidity alone. know heat-index, know caution level exactly.]TRUE (+) [caution-level output function ambient temperature alone humidity alone. know heat-index, know caution level exactly.]FALSE [Notice caution-level output given level heat index, regardless ambient temperature humidity separately.]FALSE [Notice caution-level output given level heat index, regardless ambient temperature humidity separately.]US National Weather Service also publishes heat index graphic, one .Source link","code":""},{"path":"fun-piecewise.html","id":"fun-piecewise","chapter":"10 Piecewise functions","heading":"10 Piecewise functions","text":"","code":""},{"path":"magnitudes.html","id":"magnitudes","chapter":"11 Magnitudes","heading":"11 Magnitudes","text":"Undoubtedly comfortable standard way writing numbers, instance 33 512 1051. Elementary school students master comparison numbers one another. greater: 512 33? less, 1051 512? can answer questions glance comparison can accomplished simply counting number digits. 1051 four digits, larger three-digit number 512. two digits 33, smaller 512. two numerals number digits—say, 337 512—can’t answer “greater ” question simple counting. Instead, proceed left write compare number place. , 512 337, compare 5 3 … since 5 greater 3, 512 greater 337. two leading digits , go next digit digits turn.Things always simple. number system uses place Arabic numerals human invention. example earlier number system Roman numerals. , comparison hard. instance, three numbers bigger?\\[\\mbox{MLI CXII XXXIII}\\]\ntypographically shorter number largest, vice versa. Even two Roman numerals length, ’s trivial compare place--place basis. instance, IC fifteen times bigger VI, even though much smaller V.","code":""},{"path":"magnitudes.html","id":"counting-digits","chapter":"11 Magnitudes","heading":"11.1 Counting digits","text":"Digit counting provides easy, fast way perform many calculations, least approximately. \\(\\sqrt{10000}\\)? five digits, square root number “half number digits.” , \\(\\sqrt{10000} = 100\\). \\(10 \\times 34\\)? Easy: 340. Just append one zero 10 end 34. \\(1000 \\times 13\\)? Just easy: 13,000. even punctuate written numbers commas period order facilitate counting digits.Imagine digit counting function called digit(). takes number input produces number output. don’t formula digit(), inputs output can calculated just counting. example:digit(10) \\(\\equiv\\) 1digit(100) \\(\\equiv\\) 2digit(1000) \\(\\equiv\\) 3… …digit(1,000,000) \\(\\equiv\\) 6… .digit() function easily can applied product two numbers. instance:digit(1000 \\(\\times\\) 100) = digit(1000) + digit(100) = 3 + 2 = 5.Similarly, applying digit() ratio gives difference digits numerator denominator, like :digit(1,000,000 \\(\\div\\) 100) = digit(1,000,000) - digit(100) = 6 - 2 = 4","code":""},{"path":"magnitudes.html","id":"using-digit-to-understand-magnitude","chapter":"11 Magnitudes","heading":"11.2 Using digit() to understand magnitude","text":"haven’t shown digit() function anything handful discrete inputs listed . heroic task produce continuous version digit(). method sketched 11.4.practice, digit() useful ’s one basic modeling functions,\n\\[\\text{digit(x)} = 2.302585 ln(x)\\] , R, log10().Human eye ear","code":""},{"path":"magnitudes.html","id":"composing-ln-with-exponential-and-power-law-functions","chapter":"11 Magnitudes","heading":"11.3 Composing \\(\\ln()\\) with exponential and power-law functions","text":"","code":""},{"path":"magnitudes.html","id":"fractional-digits","chapter":"11 Magnitudes","heading":"11.4 Fractional digits (optional)","text":"far, digit() function tabular form:’s point-plot presentation table:\nFigure 11.1: Connecting data points digit function make continuous function.\n’ve imagined digits() continuous function ’ve connected gaps straight line. Now function output input 0.01 1,000,000, instance, 500,000.angles consecutive line segments give function plotted Figure 11.1 unnatural look. Still, continuous function output input even input listed table.Starting around 1600, two (now famous) mathematicians, John Napier (1550-1617) Henry Briggs (1561-1630) idea filling gaps table. saw pattern numbers \\(\\) \\(b\\) input column table\n\\[ \\text{digit}(\\times b) = \\text{digit}() + \\text{digit}(b)\\]\ntrue even \\(=b\\). instance, digit(10)=1 digit(10\\(\\times\\) 10) = 2.Consider question digit(316.2278)? seems odd question unless realize \\(316.2278 \\times 316.2278 = 100,000\\). Since digit(100000) = 5, must digit(316.2278) = 5/2.Another question: digit(17.7828)? seems crazy, notice \\(17.7828^2 = 316.2278\\). digit(17.78279) = 5/4.happens couple thousand years mathematicians known compute square root number high precision. taking square roots dividing two, ’s easy fill rows digit()-function table. get even rows noticing simple patterns like \\[\\text{digit}(/10) = \\text{digit}() -1  \\ \\ \\\\ \\ \\ \\text{digit}(10 ) = \\text{digit}() + 1\\]additional rows tableYou can play game weeks. asked computer play game half second expanded original digit() table 7975 rows.Figure ?? plots expanded digits() function table.Henry Briggs assistants similar calculation hand. work published 1617 table.\nFigure 11.2: Part first page Henry Briggs table logarithms\ntable called Chilias prima, Latin “First group one thousand.” True name, table gives output digits() inputs 1, 2, 3, …, 998, 999, 1000. instance, can see top row right-column, digits(67) = 1.82607480270082.everyday speech, 67 two digits. authors Chilias prima sensibly didn’t use name “digit()” function. chose something abstract: “logarithm()”. Nowadays, function named \\(\\log_{10}()\\). R, function called log10().main use \\(\\log_{10}()\\)/log10() count digits order quickly compare magnitude numbers. difference digits(\\(x\\)) - digits(\\(y\\)) tells many factors 10 separate magnitude \\(x\\) \\(y\\).Another important logarithmic/digit-counting function \\(\\log_2()\\), written log2() R. counts many *binary digits number. us, \\(\\log_2(x)\\) tells many times need double, starting 1, order reach \\(x\\). instance, \\(\\log_2(67) = 6.06609\\), indicates \\(67 = 2\\times 2 \\times 2 \\times 2 \\times 2 \\times 2 \\times 2^{0.06609}\\)\\(\\log_2(x)\\) \\(\\log_{10}(x)\\) proportional one another. One way think count “digits” report results different units, much might report temperature either Celsius Fahrenheit. \\(\\log_2(x)\\) units output bits. \\(\\log_{10}(x)\\) output decades.third version logarithm function called natural logarithm denoted \\(\\ln()\\) math notation simply log() R. ’ll need additional calculus concepts can understand justifies calling \\(\\ln()\\) “natural.”EXERCISE: Compute \\(10^y\\) convert “number digits” number whose digits counted. instance, \\(10^2.5\\) 316.228.EXERCISE: many binary digits 64? 127?EXERCISE: \\(\\log_{10}(x)\\) \\(\\log_2(x)\\) proportional one another. ’s constant proportionality?","code":"## 0.276 sec elapsed\nlog10(67)## [1] 1.826075"},{"path":"dimensions.html","id":"dimensions","chapter":"12 Dimensions","heading":"12 Dimensions","text":"","code":""},{"path":"outline-of-block-2.html","id":"outline-of-block-2","chapter":"Outline of Block 2","heading":"Outline of Block 2","text":"section development purposes . included released text.outline established May 17-19, 2021 working sessions USAFA. ’s copied directly Teams document. ’ve made modifications noted [[square brackets]] deletions bold face additions..Revisiting Calculating slope\nNTI:\nAdmin:\nSizeable quiz interlude\n\nOutcomes:\nCalculate slope given two points\nGiven graph function, identify graph slope function \\(s(x)\\)\nGiven graph slope function, identify features original function\n\nReadings\nNTI:Admin:\nSizeable quiz interlude\nSizeable quiz interludeOutcomes:\nCalculate slope given two points\nGiven graph function, identify graph slope function \\(s(x)\\)\nGiven graph slope function, identify features original function\nCalculate slope given two pointsGiven graph function, identify graph slope function \\(s(x)\\)Given graph slope function, identify features original functionReadingsDerivatives\nNTI:\nExplain limits solution problem arbitrary \\(h\\) slope function\n\nTopics:\nShow different definitions slope function \\(s(x)\\) depend \\(h\\) selected\nDescribe derivative limit \\(h \\rightarrow 0\\)\nDerivatives basic modeling functions\nLinear properties derivatives\n[[Derivative number; differentiation operator]] **need introduce operators earlier.\nFunctions arguments R\nIntroduce notation: \\(f'\\), \\(\\frac{df}{dx}\\), \\(\\partial_x f(x)\\), [[$D_x f]]$\nIntroduce NaN Inf\n\nOutcomes:\nFind derivatives basic modeling functions\nKnow basic properties differentiation\nContinue working graphing derivative\n\nReadings\nNTI:\nExplain limits solution problem arbitrary \\(h\\) slope function\nExplain limits solution problem arbitrary \\(h\\) slope functionTopics:\nShow different definitions slope function \\(s(x)\\) depend \\(h\\) selected\nDescribe derivative limit \\(h \\rightarrow 0\\)\nDerivatives basic modeling functions\nLinear properties derivatives\n[[Derivative number; differentiation operator]] **need introduce operators earlier.\nFunctions arguments R\nIntroduce notation: \\(f'\\), \\(\\frac{df}{dx}\\), \\(\\partial_x f(x)\\), [[$D_x f]]$\nIntroduce NaN Inf\nShow different definitions slope function \\(s(x)\\) depend \\(h\\) selectedDescribe derivative limit \\(h \\rightarrow 0\\)Derivatives basic modeling functionsLinear properties derivatives[[Derivative number; differentiation operator]] **need introduce operators earlier.Functions arguments RIntroduce notation: \\(f'\\), \\(\\frac{df}{dx}\\), \\(\\partial_x f(x)\\), [[$D_x f]]$Introduce NaN InfOutcomes:\nFind derivatives basic modeling functions\nKnow basic properties differentiation\nContinue working graphing derivative\nFind derivatives basic modeling functionsKnow basic properties differentiationContinue working graphing derivativeReadingsRelationships functions derivatives Part \nNTIs:\nSplit students /B pairs. graph derivative. B can’t see graph, can talk . B sketch original function based information , can see B’s sketch. reveal answer.\n\nTopics:\nArgmax/Argmin\nMax/min\nCritical points\n\nOutcomes:\nDetermine function’s critical points graphically algebraically\nDetermine whether critical point max min\n\nReadings\nNTIs:\nSplit students /B pairs. graph derivative. B can’t see graph, can talk . B sketch original function based information , can see B’s sketch. reveal answer.\nSplit students /B pairs. graph derivative. B can’t see graph, can talk . B sketch original function based information , can see B’s sketch. reveal answer.Topics:\nArgmax/Argmin\nMax/min\nCritical points\nArgmax/ArgminMax/minCritical pointsOutcomes:\nDetermine function’s critical points graphically algebraically\nDetermine whether critical point max min\nDetermine function’s critical points graphically algebraicallyDetermine whether critical point max minReadingsRelationships functions derivatives Part II\nNTI:\nCurvature. like cup, like frown\n2nd derivative indicates curvature\n\nTopics:\nSecond derivatives slope slope\nConcavity slope slope\n\nReadings\nNTI:\nCurvature. like cup, like frown\n2nd derivative indicates curvature\nCurvature. like cup, like frown2nd derivative indicates curvatureTopics:\nSecond derivatives slope slope\nConcavity slope slope\nSecond derivatives slope slopeConcavity slope slopeReadingsRelationships functions derivatives Part III\nTopics:\nKnowing \\(f'(x_0) = 0\\) tells min/max/saddle \\(x_0\\)\n2nd derivative distinguish three\nChain derivatives\n\nOutcomes:\nable find max/min, argmax/argmin given functions graphically.\n**Construct derivative function use findZeros() locate argmax evaluate function get corresponding max\n\nReadings\nTopics:\nKnowing \\(f'(x_0) = 0\\) tells min/max/saddle \\(x_0\\)\n2nd derivative distinguish three\nChain derivatives\nKnowing \\(f'(x_0) = 0\\) tells min/max/saddle \\(x_0\\)2nd derivative distinguish threeChain derivativesOutcomes:\nable find max/min, argmax/argmin given functions graphically.\n**Construct derivative function use findZeros() locate argmax evaluate function get corresponding max\nable find max/min, argmax/argmin given functions graphically.**Construct derivative function use findZeros() locate argmax evaluate function get corresponding maxReadingsContinuity, Differentiability, Smoothness, Splines\nTopics:\nSpline piecewise function\nOrder continuity\nDetermine graphically whether function continuous \nDetermine order continuity function\n\nOutcomes\nable determine first derivative function continuous graph function\nable determine second derivative function continuous graph function (taking 1st derivative plotting )\nable demonstrate discontinuities 3rd derivative spline\n\nReadings\nTopics:\nSpline piecewise function\nOrder continuity\nDetermine graphically whether function continuous \nDetermine order continuity function\nSpline piecewise functionOrder continuityDetermine graphically whether function continuous notDetermine order continuity functionOutcomes\nable determine first derivative function continuous graph function\nable determine second derivative function continuous graph function (taking 1st derivative plotting )\nable demonstrate discontinuities 3rd derivative spline\nable determine first derivative function continuous graph functionBe able determine second derivative function continuous graph function (taking 1st derivative plotting )able demonstrate discontinuities 3rd derivative splineReadingsDifferentiation Products Functions\nOutcomes\nIdentify necessary differentiate product rule\nFind derivative using product rule\n\nReadings\nOutcomes\nIdentify necessary differentiate product rule\nFind derivative using product rule\nIdentify necessary differentiate product ruleFind derivative using product ruleReadingsDifferentiation Composite Functions\nTopics\nIdentifying composite function\nChain rule\n\nHomework: Save quotient rule HW\nOutcomes:\nIdentify necessary differentiate chain rule\nFind derivative using chain rule\n\nReadings\nTopics\nIdentifying composite function\nChain rule\nIdentifying composite functionChain ruleHomework: Save quotient rule HWOutcomes:\nIdentify necessary differentiate chain rule\nFind derivative using chain rule\nIdentify necessary differentiate chain ruleFind derivative using chain ruleReadingsLocal Polynomial Approximation\nNTI:\nKiller application Taylor polynomials Brook Taylor figured tools Newton developed\n\nTopics:\nList benefits approximation specifically benefits quadratic approximation opposed linear approximation\n[[Average rate change]] moved Block 1 slope function\nTangent Lines\nQuadratic equations\nFactorials\n\nReadings\nNTI:\nKiller application Taylor polynomials Brook Taylor figured tools Newton developed\nKiller application Taylor polynomials Brook Taylor figured tools Newton developedTopics:\nList benefits approximation specifically benefits quadratic approximation opposed linear approximation\n[[Average rate change]] moved Block 1 slope function\nTangent Lines\nQuadratic equations\nFactorials\nList benefits approximation specifically benefits quadratic approximation opposed linear approximation[[Average rate change]] moved Block 1 slope functionTangent LinesQuadratic equationsFactorialsReadingsApproximation point\nNTI:\nR exercise constructing Taylor polynomial computationally\n\nOutcomes:\nCalculate Taylor polynomial\nUse Taylor polynomials simplify mathematical operations (derivatives, limits, etc.)\n\nNTI:\nR exercise constructing Taylor polynomial computationally\nR exercise constructing Taylor polynomial computationallyOutcomes:\nCalculate Taylor polynomial\nUse Taylor polynomials simplify mathematical operations (derivatives, limits, etc.)\nCalculate Taylor polynomialUse Taylor polynomials simplify mathematical operations (derivatives, limits, etc.)","code":""}]
