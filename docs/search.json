[{"path":"index.html","id":"welcome-to-calculus","chapter":"Welcome to calculus","heading":"Welcome to calculus","text":"Calculus set concepts techniques provide main mathematical basis dealing motion, growth, decay, oscillation. phenomena can simple ball arcing ballistically air complex airflow wing generates lift. Calculus used biology business, chemistry, physics engineering. basis weather prediction, understanding climate change, algorithms heart rate blood oxygen measurement wristwatches. major part language science, logistics. electron orbitals chemistry, stresses bones beams, business cycle recession rebound understood primarily calculus. 10Calculus central science beginnings. coincidence scientific method introduced language calculus invented small group people historical period known Enlightenment. Learning calculus always badge honor entry ticket professions. Millions students career ambitions enhanced passing calculus course thwarted lack access one.1880s, hit musical featured “model modern major general.” One claims modernity: “’m good integral differential calculus.”1What modern 1880 modern anymore. Yet, amazingly, calculus today every bit central science technology ever , much important logistics, economics myriad fields ever .\nlast 20 years, calculus become even important. reason science, engineering, society now fully adopted computer almost aspects work, study, life. amount data collected used exploded. Machine learning become way human decision makers interact data.Think means become “computerized.” take everyday example, consider video. span human life moved system involved people going theaters watch shadows recorded cellulose film distribution airwaves low-resolution television, introduction high-def broadcast video, demand streaming huge libraries movies. Just anyone can record, edit, distribute video. range topics (including calculus) can access video tutorial demonstration incredibly vast. recent progress owed computers. 20The “stuff” computers operate , transform transmit always mathematical representations stored bits. creation mathematical representations objects events real world essential every task sort computer performs. Calculus key component inventing using representations.may scratching head. calculus important, many friends took calculus came away wondering ? ’s important “slopes” “areas” come high-school teacher couldn’t tell calculus ?disconnect enthusiasm expressed preceding paragraphs lived experience students real. two major reasons disconnect, tackle head-book.First, teachers mathematics deep respect tradition. respect merits result almost calculus taught using methods appropriate era paper pencil, computer era. see, book express concepts calculus way carries directly uses calculus computers genuine work. 30Second, uses calculus enabled topics Calc Calc II, courses /II preliminary: linear algebra dynamics. small fraction students start Calc ever reach parts calculus useful.Fortunately, large amount bloat standard textbook topics Calc /II can removed make room genuinely important topics. try book.","code":""},{"path":"index.html","id":"computing-and-apps","chapter":"Welcome to calculus","heading":"Computing and apps","text":"text provides two complementary ways access computing. intuitive designed purely exercise visualize mathematical concepts mouse-driven, graphical apps. illustrate, app ’ll use Block 6. can click snapshot open app browser.fundamentally, carrying computing composing computer commands text computer carry commands. One good way sandbox, kind app provides safe place enter commands. ’ll open sandbox (click image ) browser.’ve entered computer commands, press “Run” button commands carried .40You may prefer install R RStudio software laptop. usually provides faster response lowers load sandbox cloud servers used students.Experienced R users may even prefer skip sandbox entirely use standard resources RStudio edit evaluate computer commands. ’d use exactly R commands regardless whether use cloud server laptop.important technique teaching learning computing present scaffolding computer commands. first, scaffolding may complete, correct commands can cut--paste sandbox calculation carried . times left student fill part ’s left scaffolding. example, introduce drawing graphs functions choice domain, might see scaffold blanks filled :can hardly expected point make sense part command, soon .","code":"slice_plot( exp(-3*t) ~ t, domain( --fill in domain-- ))"},{"path":"index.html","id":"exercises-and-feedback","chapter":"Welcome to calculus","heading":"Exercises and feedback","text":"Learning facilitated rapid, formative feedback. Many exercises book arranged give .50Short answer exercises often arranged give immediate feedback goes beyond right--wrong. words, answer incorrect, try tell incorrect provide hint guide correct answer. frivolous example:Question word calculus mean literally?small stone ✓ stones part apparatus numerical calculations, back days pencil invented. source trouble students. ☹︎ Calculus sometimes reputation, say, “pain, gain.” Find better answer. element calcium. ☹︎ , get right answer ’ll realize two related cases. exercises meant drill, provide right--wrong feedback. Still exercises provide feedback . Typically, intended raise stakes graded work, encouraging think carefully choosing answer.","code":""},{"path":"outline-of-block-1.html","id":"outline-of-block-1","chapter":"Outline of Block 1","heading":"Outline of Block 1","text":"section development purposes . included released text.outline established May 17-19, 2021 working sessions USAFA. ’s copied directly Teams document. ’ve made modifications noted [[square brackets]] deletions bold face additions..Block 1 Functions Mathematical ModelingIntro course\nNTI\ncan make point Linear Function model change drawing pictures discussing certain quantities change two points time\ndiscussion Calc Z “Z different,” “Z new Calculus USAFA transitioning; may see differences course traditional course peers taking.”\nOveall goal day 1 build cadet’s confidence can successful. requires us show systems, resources, philosophy, expectations (e.g., college \\(\\neq\\) high school) behind course.\n\nLecture Topics\nCalculus Z overview trajectory\nCourse resources systems\nCalculus study change\nLinear Function model “change” “slope”\n\nOutcomes\nUnderstand equation relates quantities, function maps inputs outputs\nUnderstand difference \\(\\equiv\\) \\(=\\)\nable identify function’s input\n\nReadings (assigned M1, skim , read )\nChapter 1\n\nAdditional Resources\nNone\n\nAssignments\nHW01\nFeedback01\nDD01\n\nNTI\ncan make point Linear Function model change drawing pictures discussing certain quantities change two points time\ndiscussion Calc Z “Z different,” “Z new Calculus USAFA transitioning; may see differences course traditional course peers taking.”\nOveall goal day 1 build cadet’s confidence can successful. requires us show systems, resources, philosophy, expectations (e.g., college \\(\\neq\\) high school) behind course.\ncan make point Linear Function model change drawing pictures discussing certain quantities change two points timeThe discussion Calc Z “Z different,” “Z new Calculus USAFA transitioning; may see differences course traditional course peers taking.”Oveall goal day 1 build cadet’s confidence can successful. requires us show systems, resources, philosophy, expectations (e.g., college \\(\\neq\\) high school) behind course.Lecture Topics\nCalculus Z overview trajectory\nCourse resources systems\nCalculus study change\nLinear Function model “change” “slope”\nCalculus Z overview trajectoryCourse resources systemsCalculus study changeLinear Function model “change” “slope”Outcomes\nUnderstand equation relates quantities, function maps inputs outputs\nUnderstand difference \\(\\equiv\\) \\(=\\)\nable identify function’s input\nUnderstand equation relates quantities, function maps inputs outputsUnderstand difference \\(\\equiv\\) \\(=\\)able identify function’s inputReadings (assigned M1, skim , read )\nChapter 1\nChapter 1Additional Resources\nNone\nNoneAssignments\nHW01\nFeedback01\nDD01\nHW01Feedback01DD01Basics modeling functions\nNTI\nEmphasize functions map inputs outputs, naked functions () flexible enough circumstances\nShow students graph 5 naked functions, pick . (Use e.g. slice_plot(sin(x) ~ x), domain(x=c(-5,5))))\nPoint truly naked straight-line just \\(x\\), use introduction parameterization\nShow scatter plot \\(f(x)\\equiv -x+2\\) explain \\(f(x)\\equiv x\\) good model motivate basic modeling function. [[[want make data scatter plot? , Mydata <- tibble(x = rnorm(100), y = -2*x + rnorm(100)/10)]]] See book position 295 actual data.\n\nLecture Topics\nNaked modeling functions\nBasic shapes features zero crossings, maxima, slope, curvature, horizontal/vertical asymptote (). (’s vocabulary want know point.)\n[[Basic Modeling functions behaviors based parameters]]-save another day.\n\nOutcomes\nKnow graphs, domains, ranges, horizonal/vertical intercepts & asymptotes () naked modeling functions\nRecognize functions way modeling relationships real-world\n[Given parameters, describe parameters affect shape function]]-save another day\n\nReadings: Chapter 2\nAdditional Resources\nPDF - Exponential Functions Deep Dive\nMath Insight - Logarithm basics\nKhan Academy - Properties Logarithms\nRESOURCE TRIG VALUES (TRIG TABLE)\n\nAssignments\nProblems end chapter (written)\n\nQuiz question: functions horizontal asymptotes? [Give list, ask circle.] Similar vertical asymptote.\nNTI\nEmphasize functions map inputs outputs, naked functions () flexible enough circumstances\nShow students graph 5 naked functions, pick . (Use e.g. slice_plot(sin(x) ~ x), domain(x=c(-5,5))))\nPoint truly naked straight-line just \\(x\\), use introduction parameterization\nShow scatter plot \\(f(x)\\equiv -x+2\\) explain \\(f(x)\\equiv x\\) good model motivate basic modeling function. [[[want make data scatter plot? , Mydata <- tibble(x = rnorm(100), y = -2*x + rnorm(100)/10)]]] See book position 295 actual data.\nEmphasize functions map inputs outputs, naked functions () flexible enough circumstancesShow students graph 5 naked functions, pick . (Use e.g. slice_plot(sin(x) ~ x), domain(x=c(-5,5))))Point truly naked straight-line just \\(x\\), use introduction parameterizationShow scatter plot \\(f(x)\\equiv -x+2\\) explain \\(f(x)\\equiv x\\) good model motivate basic modeling function. [[[want make data scatter plot? , Mydata <- tibble(x = rnorm(100), y = -2*x + rnorm(100)/10)]]] See book position 295 actual data.Lecture Topics\nNaked modeling functions\nBasic shapes features zero crossings, maxima, slope, curvature, horizontal/vertical asymptote (). (’s vocabulary want know point.)\n[[Basic Modeling functions behaviors based parameters]]-save another day.\nNaked modeling functionsBasic shapes features zero crossings, maxima, slope, curvature, horizontal/vertical asymptote (). (’s vocabulary want know point.)[[Basic Modeling functions behaviors based parameters]]-save another day.Outcomes\nKnow graphs, domains, ranges, horizonal/vertical intercepts & asymptotes () naked modeling functions\nRecognize functions way modeling relationships real-world\n[Given parameters, describe parameters affect shape function]]-save another day\nKnow graphs, domains, ranges, horizonal/vertical intercepts & asymptotes () naked modeling functionsRecognize functions way modeling relationships real-world[Given parameters, describe parameters affect shape function]]-save another dayReadings: Chapter 2Additional Resources\nPDF - Exponential Functions Deep Dive\nMath Insight - Logarithm basics\nKhan Academy - Properties Logarithms\nRESOURCE TRIG VALUES (TRIG TABLE)\nPDF - Exponential Functions Deep DiveMath Insight - Logarithm basicsKhan Academy - Properties LogarithmsRESOURCE TRIG VALUES (TRIG TABLE)Assignments\nProblems end chapter (written)\nProblems end chapter (written)Quiz question: functions horizontal asymptotes? [Give list, ask circle.] Similar vertical asymptote.Functions /O Notational Structure functions (R<>Math)\nNTI\nRewrite \\(y=mx+b\\) \\(mx-y+b=0\\) show function notation eliminates ambiguity IO\nBreak student habit using “x-axis” “y-axis”; describe “horizontal” “vertical” axes\nBreak student habit using “x” “y”; instead say “input” “output”\nExplain parameters scale shift inputs/outputs. Ex: \\(C\\) \\(Ce^{kt}\\) scales output \\(k\\) scales input\nExample function without formula: \\(f:Cadet\\RoomNumber\\)\n\nTopics\nFunctions Input Ouptut (IO)\nIntroduce Multi-input functions\nFunction Representations\nNotation Conventions\nDistinguish mathematical symbols: \\(=\\), \\(\\equiv\\), $, <- See Secton 5.8\n\nOutcomes\nUnderstand function maps inputs outputs\nGiven input, able find output function one five standard forms:\nGraphs functions (including contour plots)\nTables inputs outputs\nWord descriptions\nComputer function name\nMathematical notation\n\nable translate traditional math notation R expressions\n\nReading: Chapter 5 & 6\n:\nProvide glossary notation across 6-blocks (+alternate forms)\n\nAssignments\nDD03\n\nNTI\nRewrite \\(y=mx+b\\) \\(mx-y+b=0\\) show function notation eliminates ambiguity IO\nBreak student habit using “x-axis” “y-axis”; describe “horizontal” “vertical” axes\nBreak student habit using “x” “y”; instead say “input” “output”\nExplain parameters scale shift inputs/outputs. Ex: \\(C\\) \\(Ce^{kt}\\) scales output \\(k\\) scales input\nExample function without formula: \\(f:Cadet\\RoomNumber\\)\nRewrite \\(y=mx+b\\) \\(mx-y+b=0\\) show function notation eliminates ambiguity IOBreak student habit using “x-axis” “y-axis”; describe “horizontal” “vertical” axesBreak student habit using “x” “y”; instead say “input” “output”Explain parameters scale shift inputs/outputs. Ex: \\(C\\) \\(Ce^{kt}\\) scales output \\(k\\) scales inputExample function without formula: \\(f:Cadet\\RoomNumber\\)Topics\nFunctions Input Ouptut (IO)\nIntroduce Multi-input functions\nFunction Representations\nNotation Conventions\nDistinguish mathematical symbols: \\(=\\), \\(\\equiv\\), $, <- See Secton 5.8\nFunctions Input Ouptut (IO)Introduce Multi-input functionsFunction RepresentationsNotation ConventionsDistinguish mathematical symbols: \\(=\\), \\(\\equiv\\), $, <- See Secton 5.8Outcomes\nUnderstand function maps inputs outputs\nGiven input, able find output function one five standard forms:\nGraphs functions (including contour plots)\nTables inputs outputs\nWord descriptions\nComputer function name\nMathematical notation\n\nable translate traditional math notation R expressions\nUnderstand function maps inputs outputsGiven input, able find output function one five standard forms:\nGraphs functions (including contour plots)\nTables inputs outputs\nWord descriptions\nComputer function name\nMathematical notation\nGraphs functions (including contour plots)Tables inputs outputsWord descriptionsComputer function nameMathematical notationBe able translate traditional math notation R expressionsReading: Chapter 5 & 6To :\nProvide glossary notation across 6-blocks (+alternate forms)\nProvide glossary notation across 6-blocks (+alternate forms)Assignments\nDD03\nDD03QUIZ: Draw reasonable sketches nine naked modeling functions. addition overall shape function, label one point graph exact output value. (Hint: \\(\\dnorm(x)\\), highest possible output 0.3989423.)Parameterized functions models\nNTI\nIntroduce idea input meaning, output meaning relative input\nGive students function. change units input different unit (e.g. feet go Meters)\nLogarithms necessarily used end model; lever separate power exponential functions\nTODO: Think physical phenomenon appropriately modeled Logarithmic function power \\(p<1\\)\n\nFocus lesson entirely finding parameters Sine, Power, Exponential\n\nLecture Topics:\nModeling phenomenon basic modeling functions\nfind parameters basic modeling functions\nLinear\nSine\nPower\nExponential\nLogarithmic (note)\n\n\nObjectives\nGiven description real-world scenario, able identify appropriate basic modeling function\nGiven data, select parameters basic modeling functions “fit” data\n\nReading: Chapter 7\nQuiz questions: Draw MWLCS\nParameterized functions modelsNTI\nIntroduce idea input meaning, output meaning relative input\nGive students function. change units input different unit (e.g. feet go Meters)\nLogarithms necessarily used end model; lever separate power exponential functions\nTODO: Think physical phenomenon appropriately modeled Logarithmic function power \\(p<1\\)\n\nFocus lesson entirely finding parameters Sine, Power, Exponential\nIntroduce idea input meaning, output meaning relative inputGive students function. change units input different unit (e.g. feet go Meters)Logarithms necessarily used end model; lever separate power exponential functions\nTODO: Think physical phenomenon appropriately modeled Logarithmic function power \\(p<1\\)\nTODO: Think physical phenomenon appropriately modeled Logarithmic function power \\(p<1\\)Focus lesson entirely finding parameters Sine, Power, ExponentialLecture Topics:\nModeling phenomenon basic modeling functions\nfind parameters basic modeling functions\nLinear\nSine\nPower\nExponential\nLogarithmic (note)\n\nModeling phenomenon basic modeling functionsHow find parameters basic modeling functions\nLinear\nSine\nPower\nExponential\nLogarithmic (note)\nLinearSinePowerExponentialLogarithmic (note)Objectives\nGiven description real-world scenario, able identify appropriate basic modeling function\nGiven data, select parameters basic modeling functions “fit” data\nGiven description real-world scenario, able identify appropriate basic modeling functionGiven data, select parameters basic modeling functions “fit” dataReading: Chapter 7Quiz questions: Draw MWLCS[[Combining 2+ functions]] ’ve integrated “Parameterized function” chapter.\nExamples\nNTIs\nTopics\nLinear Combination (ex: Polynomial)\nComposition scaling function (\\(e^{kt}) 1. Gallons/\\) Liters/Euros\nComposition (affine shift)\n1. Fahrenheit <> Celsius\n\n[[Combining 2+ functions]] ’ve integrated “Parameterized function” chapter.ExamplesNTIsTopics\nLinear Combination (ex: Polynomial)\nComposition scaling function (\\(e^{kt}) 1. Gallons/\\) Liters/Euros\nComposition (affine shift)\n1. Fahrenheit <> Celsius\nLinear Combination (ex: Polynomial)Composition scaling function (\\(e^{kt}) 1. Gallons/\\) Liters/EurosComposition (affine shift)\n1. Fahrenheit <> CelsiusThe modeling processThe modeling processSlope function\nNTI:\nbroaden idea describing slope line general function?\n\\(h\\) point\nslope function function \\(s()\\) built function \\(f()\\)\n\nTopics\nAverage rate change. (Example: Quarterly return stocks. HW tree harvesting.) (Example 2: Sine wave difference around 1 period. maybe becomes low-pass filter example accumulation.)\n\\(s(x) \\equiv \\frac{f(x + 0.1) - f(x)}{0.1}\\)\nExcept linear function, slope function depends big \\(h\\) . let’s fix \\(h\\) figure things .\nEvery function slope function.\n’s helpful name functions know come . ’re going use \\(f'()\\) stand slope function \\(f()\\)\n\nReading: Chapter 9\nSlope functionNTI:\nbroaden idea describing slope line general function?\n\\(h\\) point\nslope function function \\(s()\\) built function \\(f()\\)\nbroaden idea describing slope line general function?\\(h\\) pointThe slope function function \\(s()\\) built function \\(f()\\)Topics\nAverage rate change. (Example: Quarterly return stocks. HW tree harvesting.) (Example 2: Sine wave difference around 1 period. maybe becomes low-pass filter example accumulation.)\n\\(s(x) \\equiv \\frac{f(x + 0.1) - f(x)}{0.1}\\)\nExcept linear function, slope function depends big \\(h\\) . let’s fix \\(h\\) figure things .\nEvery function slope function.\n’s helpful name functions know come . ’re going use \\(f'()\\) stand slope function \\(f()\\)\nAverage rate change. (Example: Quarterly return stocks. HW tree harvesting.) (Example 2: Sine wave difference around 1 period. maybe becomes low-pass filter example accumulation.)\\(s(x) \\equiv \\frac{f(x + 0.1) - f(x)}{0.1}\\)Except linear function, slope function depends big \\(h\\) . let’s fix \\(h\\) figure things .Every function slope function.’s helpful name functions know come . ’re going use \\(f'()\\) stand slope function \\(f()\\)Reading: Chapter 9Composition Generally\nNTI:\ntemperature driving mountain?\nProblem calculating slope sigmoid\n\nTopics:\nFormula Hump (exponential quadratic)\nDriving mountain temperature vs altitude, altitude vs road position, road position vs time\nHump slope function Sigmoid\n\nReading: Chapter 11\nComposition GenerallyNTI:\ntemperature driving mountain?\nProblem calculating slope sigmoid\ntemperature driving mountain?Problem calculating slope sigmoidTopics:\nFormula Hump (exponential quadratic)\nDriving mountain temperature vs altitude, altitude vs road position, road position vs time\nHump slope function Sigmoid\nFormula Hump (exponential quadratic)Driving mountain temperature vs altitude, altitude vs road position, road position vs timeHump slope function SigmoidReading: Chapter 11Multiplication functions\nNTIs:\nMultiplication Sines, exponential, hump, sigmoid\n\nTopics:\nMultiplying functions inputs gives function inputs.\nMultiplying functions different inputs gives function whose inputs union inputs multiplicands.\n\nable reverse engineer products: sinexp, sinhump, sinsigmoid\nReading: Chapter 11\nMultiplication functionsNTIs:\nMultiplication Sines, exponential, hump, sigmoid\nMultiplication Sines, exponential, hump, sigmoidTopics:\nMultiplying functions inputs gives function inputs.\nMultiplying functions different inputs gives function whose inputs union inputs multiplicands.\nMultiplying functions inputs gives function inputs.Multiplying functions different inputs gives function whose inputs union inputs multiplicands.able reverse engineer products: sinexp, sinhump, sinsigmoidReading: Chapter 11Multivariate functions\nNTIs:\nAsk students compute slope multi-input function best can imagine (homework?) Build imagined function (slope) plot function\n\nOutcomes:\nable read & construct (R) Contour Plots\nable read & construct (R) Surface Plots\nable read table w/ 2 inputs\n\nReading: Chapter 12\nMultivariate functionsNTIs:\nAsk students compute slope multi-input function best can imagine (homework?) Build imagined function (slope) plot function\nAsk students compute slope multi-input function best can imagine (homework?) Build imagined function (slope) plot functionOutcomes:\nable read & construct (R) Contour Plots\nable read & construct (R) Surface Plots\nable read table w/ 2 inputs\nable read & construct (R) Contour PlotsBe able read & construct (R) Surface PlotsBe able read table w/ 2 inputsReading: Chapter 12Piecewise functions [jettison needed favor homework]\nTopics\nConstruct evaluate piecewise functions\nDemonstrate implement R\n\nOutcomes:\nable identify break(s) piecewise function\nable evaluate piecewise function given input\nable implement piecewise function R\n\nReading: Chapter 13\nPiecewise functions [jettison needed favor homework]Topics\nConstruct evaluate piecewise functions\nDemonstrate implement R\nConstruct evaluate piecewise functionsDemonstrate implement ROutcomes:\nable identify break(s) piecewise function\nable evaluate piecewise function given input\nable implement piecewise function R\nable identify break(s) piecewise functionBe able evaluate piecewise function given inputBe able implement piecewise function RReading: Chapter 13Iterative Modeling\nNTI:\nExamples:\nTides\nCooling Water\n\nObjectives:\nDescribe differences two models model data\nIdentify disagreements model data\nd: Reading: NEED LINK CHAPTER\n\nIterative ModelingNTI:Examples:\nTides\nCooling Water\nTidesCooling WaterObjectives:\nDescribe differences two models model data\nIdentify disagreements model data\nd: Reading: NEED LINK CHAPTER\nDescribe differences two models model dataIdentify disagreements model data\nd: Reading: NEED LINK CHAPTERReview, GR, Project Days[[Semi-log Log-log plots]] Magnitude log\nTopics:\nIntroduce idea using logarithms converts number order magnitude\n\nOutcomes:\nReading: Chapter 15\nTopics:\nIntroduce idea using logarithms converts number order magnitude\nIntroduce idea using logarithms converts number order magnitudeOutcomes:Reading: Chapter 15Flexible catchup dayDimensional Analysis\nReading: Chapter 16\n\n1.5 class daysReading: Chapter 16One highlighting formats, called ::: {.takenote} used clear statement basic skills students master. might good tie quizzes vice versa.","code":""},{"path":"change.html","id":"change","chapter":"1 Change","heading":"1 Change","text":"Calculus change, change relationships. changing climate relationship , say, global average temperature time. ’s also changing levels CO2 methane, production elimination atmospheric geological processes. ’s burning oil (change configuration atoms hydrocarbons) contributes ocean acidification (process change ocean pH). ’s whole complex intricate network relationships change one component provokes change others. 100This book presents calculus terms two simple central concepts: functions quantities. words everyday meanings , happily, close specific mathematical concepts using . Close … identical. pay careful attention brief descriptions follow.","code":""},{"path":"change.html","id":"quantity-vs-number","chapter":"1 Change","heading":"1.1 Quantity vs number","text":"mathematical quantity amount “stuff.” real-world stuff might mass time length. equally well can velocity volume momentum corn yield per acre. live world stuff, tangible (e.g., corn, mass, force) harder get hands minds around (acceleration, crop yield, fuel economy). important use calculus helping us conceptualize abstract kinds stuff mathematical compositions simpler stuff. example, crop yield incorporates mass length time. Later, ’ll see us using scientific-sounding term dimension instead “stuff.” fact, Chapter 16 entirely dedicated topic dimensions, now ’s sufficient understand numbers alone quantities.people inclined think “quantity” “number”; conflate two. understandable misguided. number meaningless. meaning number 5 without context? Quantity, hand, combines number appropriate context describe amount stuff. , first thing need know quantity kind stuff describes. “mile” kind stuff: length. meter kind stuff: length. liter different kind stuff: volume. gallon acre-foot kind stuff: volume.“Stuff,” mean , measure. know, measure units. units appropriate depends kind stuff. Meters, miles, microns appropriate units length, even though actual lengths units differ markedly. (mile roughly million microns.) 110Only know dimension units number meaning. Thus, number part specifying quantity.’s salient difference number quantity comes calculus: sorts arithmetic mathematical operations can performed combine numbers: addition, multiplication, square roots, etc. performing mathematics quantities, multiplication division universally allowed. addition subtraction, square roots, , operation makes sense dimensions suitable.mathematics units dimension equivalent technical world common sense everyday world. instance (may make sense point), someone tells taking square root 10 liters, know immediately either just mistaken haven’t told essential elements situation. ’s just someone said, “swam across tennis court.” know either used wrong verb—walk run work—wasn’t tennis court, something important unstated, perhaps, “flood, swam across tennis court.”","code":""},{"path":"change.html","id":"functions","chapter":"1 Change","heading":"1.2 Functions","text":"central concept book functions mathematical computing sense; primary topic Block 1. function something takes one inputs returns output. calculus, ’ll deal mainly functions take one quantities inputs return another quantity output. sometimes ’ll work functions take functions input return quantity output. even functions take function inputs return function output.’ve almost certainly seen functions expressed general form \\(f(x)\\). function \\(f()\\), input \\(x\\). Perhaps ’s obvious point \\(x\\) quantity. \\(f(x)\\) operation performed quantity. computing, definite, widely used, notations identify output function. Strangely, high-school mathematics . major source confusion students learning calculus professionals using computers work calculus. 120It’s possible present calculus without functions. instance, Isaac Newton, inventor calculus, spoke “flowing quantities.”2It’s practically impossible (generally unwise) computing without functions. basic building block every mainstream modern computer language. Since operations calculus actual practice performed computer, common sense suggests describe calculus terms functions. ’s book., may take bit getting used . reason notation used high-school algebra almost calculus texts notation functions. example, almost students seen mathematical expression form: \\[y = m x + b\\]\nUsing language math classes, can say expression “describes relationship two variables.” experience, know variables \\(x\\) \\(y\\). letters, \\(m\\) \\(b\\), something else. Many students reflexively call “slope” “intercept” “line.”used probably don’t see huge ambiguity involved. instance, variable? Common sense suggest ’s thing varies. know value \\(x\\), still variable? statistics, variable something else entirely: trait. Since statistics mathematics used together, bound bring confusion. 130Or consider famous famous sentence high-school mathematics:\n\\[y = m x + b\\]notation equations poor substitute notation functions. instance, input output? ’s explicitly stated. , using allowed manipulations algebra, re-arrange \\[y = m x + b \\ \\ \\text{}\\ \\ \\ m = \\frac{y-b}{x}\\] still function? , function \\(m x + b\\)? \\(x\\) input \\(x\\) \\(y\\) inputs? \\(b\\)? re-arrangement, problem \\(x\\) zero, problem never encounter original \\(y=mx+b\\).engineers mathematicians invented computer languages realized explicit identifying input, output, function ; computers demand unambiguous instructions.3 Sorting difficult process even mathematically talented skilled pioneers notation. , can forgiven occasional confusion dealing notation pre-dates computing. 140In book ’ll explicit consistent ways denote functions can always figure inputs translated output. good start learning read function notation see equivalent \\(y=m x + b\\) notation: \\[g(x) \\equiv m x + b\\]\nNotice ’re using \\(\\equiv\\) (three parallel bars) rather \\(=\\). ’s \\(y\\). \\(x\\) appears parentheses left side \\(\\equiv\\) say explicitly “\\(x\\) stands input.” notation provides place state name function, case \\(g()\\), can refer function unambiguously operations . Since often ’ll using many functions time, ’s helpful way distinguish name. functional notation makes easy create many different names: just \\(y\\) \\(g_\\star()\\), \\(h_\\text{altitude}()\\), azimuth(), . Try \\(y\\)","code":""},{"path":"change.html","id":"fundamental-model-of-change","chapter":"1 Change","heading":"1.3 Fundamental model of change","text":"start chapter, says, “Calculus change, change relationships.” idea function gives definite perspective change ’s relationships. relationship function’s input function’s output. input might day year (1-365, -called “day number”), cumulative rainfall day. Every day rains, cumulative rainfall increases. input might altitude hike Pikes Peak output air temperature. Typically, gain altitude temperature goes . input might number hours noon, output brightness sunlight. sun goes , light grows dimmer, point. 150The rate change based simple question: input changes \\(x = \\) \\(x = B\\), much output change? course, output function \\(f(x)\\) \\(f(x=)\\) \\(f(x=B)\\) respectively. rate--change relationship ratio \\[\\frac{\\color{red}{f(x=B) - f(x=)}}{\\color{blue}{B-}}\\ \\ \\text{also written}\\ \\ \\frac{\\color{red}{\\text{rise}}}{\\color{blue}{\\text{run}}}\\]focus rate change rather something simpler, example net change \\(\\color{red}{f(x=B) - f(x=)}\\)? reason goes back scientific breakthrough 1600s: writing “Laws physics.” language laws first successfully expressed language rates change. intervening 400 years, laws updated theory relativity quantum mechanics. laws expressed rates change. undertaking study just quantitative field, engineering economics, ’ll find theory expressed using functions rates change.may recognize formula rate change familiar quantity: slope line. Everyone understands line , geometry primary concern . describe relationships using functions us, ’ll use straight-line function familiar high-school. can written several ways, ’ll tend use two predominant forms, alternative formulas straight-line function:\n\\[\\line(x) \\equiv x + b\\ \\ \\ \\text{}\\ \\ \\ \\ \\line(x) \\equiv [x - x_0]\\]\ntwo forms interchangeable, ’ll see upcoming chapters, sometimes ’s convenient use one form . either case, rate change , quantitatively, value parameter \\(\\). 160The simple function \\(\\line(x)\\), whose change relationship understand intuitively, used approximate complicated change relationships. approximation place, can calculations change relationships much easily. Collectively, set mathematical concepts techniques support describing calculating change relationships name Calculus.Since inputs functions quantities, ’s convenient give names remind human reader stand .common name use book input function :\\(\\large x\\) general-purpose name complies practice high-school algebra. Remember, us \\(x\\) “unknown” often algebra; calculus \\(x\\) name input.Perhaps next common input name \\(\\large t\\). name typically used input meant time. creating function represent relationship time (day) outdoor brightness, might use notation: \\(\\text{brightness}(t)\\)input names use book \\(y\\), \\(z\\), \\(u\\), \\(v\\), \\(w\\). won’t shy away descriptive names, like \\(T\\) “temperature” \\(V\\) volume, even \\(\\text{altitude}\\) (describes ).following function definitions, input name?Question Input name \\(g(t) \\equiv 2 t^2 + 8\\)?    t ✓        u ☹︎        v ☹︎        w ☹︎        x ☹︎        y ☹︎        z ☹︎ Question B Input name \\(\\line(z) \\equiv z + b\\)?    t ☹︎        u ☹︎        v ☹︎        w ☹︎        x ☹︎        y ☹︎        z ✓ Question C Input name \\(h(t) \\equiv 2 t^2 + 8 w\\)?    t ✓        u ☹︎        v ☹︎        w ☹︎        x ☹︎        y ☹︎        z ☹︎ Question D Input name $f(u) u + b + u^2?    t ☹︎        u ✓        v ☹︎        w ☹︎        x ☹︎        y ☹︎        z ☹︎ Question E Input name \\(g(w) \\equiv x + 4\\)?Open SANDBOX. (Just click link, although may eventually given ways open sandbox.)see breakout box like , means ’re providing computer code can paste sandbox run. exercise, code isPaste sandbox press “Run code.” Verify get result:[1] 1.285941The sandbox two commands, one line. first command gives value \\(x\\). second command uses value \\(x\\) calculate function output. function \\(g(x)\\equiv \\sin(x) \\times \\sqrt{\\strut x}\\). ’ll see give function name like \\(g()\\) Section 5.2.simplify code sin(2)*sqrt(2)? want make clear reader (computer) whatever \\(x\\) might , used inputs \\(\\sin()\\) \\(\\sqrt{\\strut\\ \\ \\ }\\) functions.Question F Change \\(x\\) 1. ’s output \\(\\sin(x) \\times \\sqrt{\\strut x}\\)    -1.51 ☹︎        0.244 ☹︎        0.84 ✓        0.99 ☹︎        2.14 ☹︎        NaN ☹︎ Question G Change \\(x\\) 3. ’s output \\(\\sin(x) \\times \\sqrt{\\strut x}\\)    -1.51 ☹︎        0.244 ✓        0.84 ☹︎        0.99 ☹︎        2.14 ☹︎        NaN ☹︎ Question H Change \\(x\\) \\(-5\\). ’s output \\(\\sin(x) \\times \\sqrt{\\strut x}\\)    -1.51 ☹︎        0.244 ☹︎        0.84 ☹︎        0.99 ☹︎        2.14 ☹︎        NaN ✓ stands --Number, get calculate square root negative input. sandbox, change function \\(\\sqrt{\\strut\\pnorm(x)}\\).Question \\(x=2\\), ’s output \\(\\sqrt{\\strut\\pnorm(x)}\\)plots shows graph function two inputs, \\(\\) \\(B\\), marked.Question J plot (1), rate change interval \\(\\) \\(B\\)? (Pick closest answer.)    -15/2 ☹︎ Remember take difference: \\(f(B) - f()\\).        15/2 ☹︎ order B significant!        2/15 ☹︎ ’s “rise” “run,” way around.        -2/15 ☹︎ ’s “rise” “run,” way around.        8/2 ☹︎ order B significant!        -8/2 ✓        2/8 ☹︎ order B significant!        -2/8 ☹︎ ’s “rise” “run,” way around.        -15/5 ☹︎ Remember take difference: \\(B - \\) Question K plot (2), rate change interval \\(\\) \\(B\\)? (Pick closest answer.)-17/2 ☹︎ Remember take difference: \\(f(B) - f()\\). 17/2 ☹︎ order B significant! 2/17 ☹︎ ’s “rise” “run,” way around. -2/17 ☹︎ ’s “rise” “run,” way around. -10/2 ☹︎ order B significant! 10/2 ✓ 2/10 ☹︎ order B significant! -2/10 ☹︎ ’s “rise” “run,” way around. -17/-5 ☹︎ Remember take difference: \\(B - \\) Question L haven’t told exactly yet, give try. rate change near point marked \\(C\\)? (Pick closest answer.))","code":"\nx <- 2\nsin(x)*sqrt(x)"},{"path":"naked-intro.html","id":"naked-intro","chapter":"2 Modeling functions","heading":"2 Modeling functions","text":"mathematics used understand analyze predict real world situation, pattern work often three stages: 200Translate real-world situation mathematical form. translation called mathematical modeling. instance, Newton trying make sense motion planets light novel theory gravity universal force attraction masses, rather something special Earth. modeled force quantity can measured, simplified planets mere masses (another measurable quantity), supposed position motion related particular way: velocity rate change respect time position, acceleration rate change velocity respect time. theory motion planets based two fundamental mathematical models: First\n\\[F = ma\\ \\ \\ \\text{(Newton's Second Law)}\\] relates force, mass, acceleration. Second, \\[F = \\frac{G m_1 m_2}{d^2}\\ \\ \\ \\text{(Law Universal Gravitation)}\\]\n(sometimes called inverse square law), relates mass two objects (\\(m_1\\) \\(m_2\\)), distance force gravitation. (’ll get purpose \\(G\\) Chapter 16.)book objective modeling phase almost always choose construct one functions represent relationships involved system studied. ’ll learn several strategies turning know system appropriate functions. ’ll learn standard frameworks organizing ideas help determine functions related, instance Newton’s framework relating position, velocity, acceleration rates change one another. 210Do mathematical work model shape form can directly answer modeler’s question interest. instance, Newton knew previous astronomical observations Kepler’s theorizing planets’ orbits elliptical shape. needed work two models order deduce orbital shapes consistent Second Law Universal Gravitation.book ’ll learn use several key tools mathematical work functions. might well name now: differentiation, anti-differentiation, optimization, zero-finding. Computers make tool easy use. job learn enough ’ll know use tool .Evaluate model figure extent rely answer gives see consequences model consistent happens real world. evaluation often leads re-assessment model return stage 1 improve things. resulting loop called modeling cycle. example, seems likely Newton start knowing gravitation follows inverse square law. Perhaps went several modeling cycles found form consistent Kepler’s elliptical orbits.book ’ll learn techniques comparing models data making predictions models can compared observations. ’ll also see examples evaluation function suggests revisions might improve model.","code":""},{"path":"naked-intro.html","id":"a-list-of-functions","chapter":"2 Modeling functions","heading":"2.1 A list of functions","text":"Experience allows us make short list simple mathematical functions provide large majority tools representing real world mathematical object. Think items list different actors, skilled portraying archetypical character: hero, outlaw, lover, fool, comic. play brings together different characters, costumes , builds dialog.230A mathematical modeler kind playwright. combines mathematical character types tell story relationships. handful archetypal mathematical functions, analog character actors drama comedy. calling naked modeling functions. writing mathematical model, clothe actors suit era location assemble together harmony discord.list basic, unadorned functions, naked model functions, showing traditional notation R formula:’ve written traditional formula notation can see connections math ’ve already studied. ’ve used \\(x\\) stand single input functions just ’s traditional. 240One important point make list naked modeling functions short. memorize names able easily associate name traditional notation.next several chapters, introduce several features functions. basic modeling functions features, don’t. features include:monotonicity downconcavity downhorizontal asymptotesvertical asymptotesperiodicityBy end Block 1, able list nine basic modeling functions say features relevant . 250The constant function might written \\(1\\) 1. use modeling, constant generally multiplied quantity, tradition \\(1\\) disappear. instance, straight-line function \\(3 x + 7\\) three times proportional function plus seven times constant function. \\(1\\) appear explicitly.noticed section heading “naked modeling functions.” mean “naked” metaphorical sense, chose metaphor make easy remember. Think list nine functions celebrities world calculus. Unlike human celebrities appear wane years, marry divorce frequently, celebrities us generations maintain intimate connections one another reflect nature mathematics rather fads fancies celebrities. (Mastering calculus largely matter becoming familiar mathematical connections. ’ll see due time.)(basic) celebrity functions appear many mathematical settings, just human celebrity strives maintain public image. human celebrity human organism organism naturally naked. public appearance, however, celebrity always clothed one way another. (OK … Rarely appear unclothed true mathematics.) words, order interact world large, celebrities need attire. 260Similarly, mathematical functions appear real-world applications—opposed math textbooks—always wear clothes, adorned call parameters. Parameters help deal units dimension quantities. just standard elements clothing: shirt, skirt, trousers, … standard ways clothing naked modeling function. process decorating basic modeling functions called parameterization function, often multiple ways paremeterizing function.dress naked functions—, parameterize —become superheroes calculus. ’ll call league superheroes basic modeling functions.","code":""},{"path":"naked-intro.html","id":"constructing-functions","chapter":"2 Modeling functions","heading":"2.2 Constructing functions","text":"Often, modeling involves building complicated function simple shapes provided naked modeling functions. yet time say much , want show construction looks like traditional style notation style used programming computers. ’ll see later, make complicated functions generally combine simpler functions one three different ways: linear combinations, products, composition. 270For instance, linear combination simple functions called “monomials” can look like traditional notation:\n\\[g(x) \\equiv 2 + 3 x - 7x^2\\]\nlike R/mosaic computer notation using:Functions constructed product simple functions can look like tradition notation:\n\\[h(t) \\equiv \\sin(t) e^{-t}\\]\nlike computer notation:","code":"\ng <- makeFun(2 + 3*x - 7*x^2 ~ x)\nh <- makeFun(sin(t)*exp(-t) ~ t)"},{"path":"naked-intro.html","id":"function-shapes","chapter":"2 Modeling functions","heading":"2.3 Function shapes","text":"going building models selecting appropriate function putting functions together various ways. might remind Lego blocks. know, come different shapes: \\(6\\times 2\\), \\(4\\times 2\\), \\(2\\times 2\\), . Similarly, naked modeling function distinctively shaped graph. Knowing shapes name help need build model. 280The identity function constant function extremely simple shapes. Note graph constant function just line, line zero slope.’s tempting deny constant function function. , output depend input. Still, situation arises frequently modeling: start supposing one quantity depends another turns . Since functions way representing relationships, ’s helpful function situation “relationship.” constant function job.","code":""},{"path":"naked-intro.html","id":"the-power-law-family","chapter":"2 Modeling functions","heading":"2.4 The power-law family","text":"Three naked modeling functions—\\(1/x\\), \\(x\\), \\(x^2\\)—belong infinite family called power-law functions. examples, \\(x^3, x^4, \\ldots\\) well \\(x^{1/2}\\) (also written \\(\\sqrt{x}\\)), \\(x^{1.36}\\), . can written \\(x^p\\), \\(p\\) number. 290Even within power-law family, ’s helpful consider different overlapping groups:monomials: \\(m_0(x) \\equiv x^0\\), \\(m_1(x) \\equiv x^1\\), \\(m_2(x) \\equiv x^2\\), \\(\\ldots\\). course, \\(m_0()\\) exactly constant function, \\(m_1(x)\\) identity function. rest, just two general shapes: arms (even powers); one arm (odd powers.)\nFigure 2.1: Graphs monomial functions order 2 5.\nnegative powers, e.g. \\(f(x) \\equiv x^{-1}\\), \\(g(x) \\equiv x^{-2}\\), \\(h(x) \\equiv x^{-1.5}\\)non-integer powers, e.g. \\(f(x) = \\sqrt{x}\\), \\(g(x) = x^\\pi\\), .\nFigure 2.2: domain power-law functions non-integer power \\(0 \\leq x < \\infty\\).\nAnswer questions naked-modeling functions. can refer graphs Figures 2.1 2.2.Question best describes concavity hump function?’s concave. ☹︎ curves, ’s either concave . ’s concave . ☹︎ places, others. ’s concave center concave flanks. ✓ ’s concave left concave right ☹︎ Look Question B best describes concavity sigmoid function?’s concave. ☹︎ curves, ’s either concave . ’s concave. ☹︎ curves, ’s either concave . ’s concave . ☹︎ places, others. ’s concave . ☹︎ places, others. ’s concave left concave right. ☹︎ Look ’s concave left concave right. ☹︎ Look ’s concave left concave right. ✓ Look \nQuestion C best describes concavity second-order monomial \\(m_2(x) \\equiv x^2\\)?’s concave left concave right. ✓ Look \nQuestion C best describes concavity second-order monomial \\(m_2(x) \\equiv x^2\\)?’s concave. ☹︎ curves, ’s either concave . ’s concave. ☹︎ curves, ’s either concave . ’s concave . ☹︎ smile frown? ’s concave . ☹︎ smile frown? ’s concave left concave right. ☹︎ Look ’s concave left concave right. ☹︎ Look ’s concave everywhere domain. ✓ Look ’s concave everywhere domain. ✓ Look Copy paste R/mosaic commands SANDBOX run commands. (“Run code”)task read interpret graphs basic modeling functions. , looking zero-crossings: neighborhood point function’s domain output function negative inputs one side positive inputs side. zero touched crossed, ’ll call “touched zero.”Make list naked modeling functions. function list, say whether function crosses zero, touches zero doesn’t cross, doesn’t touch part domain shown graphic: \\(-3 \\leq x \\leq 3\\). Also note value function appears reaching horizontal asymptote zero negative \\(x\\), positive \\(x\\), , neither.’ll show answers exponential function. ’ll modify computer command graph naked modeling functions.Copy paste R/mosaic commands SANDBOX run commands. (“Run code”)\nfunction’s graph result. modify command draw another function, replace exp(x) another formula, e.g. 1/x,look graph observe two features: whether graph slope consistently positive negative, whether function graphed concave , concave , neither, concave regions domain others.Make list naked modeling functions. function list, say whether function crosses zero, touches zero doesn’t cross, doesn’t touch part domain shown graphic: \\(-3 \\leq x \\leq 3\\). Also note value function appears reaching horizontal asymptote zero negative \\(x\\), positive \\(x\\), , neither.’ll show answers exponential function. ’ll modify computer command graph naked modeling functions.naked modeling functions, graph crosses either vertical axis (\\(x=0\\)) horizontal axis (, \\(f(x) = 0\\)), . ’s helpful know exact quantitative value input function graph crosses horizontal axis, exact quantitative value output function graph crosses vertical axis.questions ask , naked modeling functions, find specific input/output pair know exact values. (Feel free open SANDBOX try various possibilities.)Question exact output naked exponential function input \\(x=0\\)?    0 ☹︎        0.3989423 ☹︎        1/2 ☹︎        1 ✓ Question B exact output naked sine function input \\(x=0\\)?    0 ✓        0.3989423 ☹︎        1/2 ☹︎        1 ☹︎ \nQuestion C exact input naked logarithm function output 0?    0 ☹︎        0.3989423 ☹︎        1/2 ☹︎        1 ✓ Question D exact output naked sigmoid function input \\(x=0\\)?    0 ☹︎        0.3989423 ☹︎        1/2 ✓        1 ☹︎ Question E output (several digits) naked hump function input \\(x=0\\)?    0 ☹︎        0.3989423 ✓ Right. 0.4 ’re sketching graph.        1/2 ☹︎        1 ☹︎ Question F exact input naked **reciprocal* function output 1? (’s axis crossing.)    0 ☹︎        0.3989423 ☹︎        1/2 ☹︎        1 ✓ Question G exact input naked **proportional* function output 1/2? (’s axis crossing.)    0 ☹︎        0.3989423 ☹︎        1/2 ✓        1 ☹︎ Question H exact output naked constant function?    0 ☹︎        0.3989423 ☹︎        1/2 ☹︎        1 ✓ Question naked square function just touches horizontal axis. ’s input happens?huge coincidence one naked modeling functions match particular relationship, one shown data. ’ll need dress naked functions combine various ways capture real-world relationship. 295A helpful demonstration students can display real-world data, ask naked modeling function seems best lot, ask students shift shrink function correspond better data.start, data relating pressure volume gas constant temperature s collected Robert Boyle (1627-1691) led formulate “Boyle’s Law.” correct naked modeling function data \\(\\recip(x) \\equiv 1/x\\). plotted doesn’t match data. (Try scaling function \\(1/x\\) \\(1000/x\\). home correct value.)illustrate, ’s graph month--month utility data house Minnesota plotted along naked modeling function \\(x\\).Ask students straight-line pattern appropriate modeling data \\(x\\) isn’t, , good model.monthly use natural gas (mainly heating) versus average outdoor temperature month. ’ll plot next exponential function.\nFlipping exponential left right scaling help:","code":"\nslice_plot(exp(x) ~ x, domain(x=c(-3, 3)))\nslice_plot(exp(x) ~ x, domain(x=c(-3, 3)))\ngf_point(pressure ~ volume, data = Boyle) %>%\n  slice_plot(1/volume ~ volume)\ngf_point(kwh ~ elecbill, data = Utilities) %>%\n  slice_plot(x ~ x, domain(x=c(0,140)))\ngf_point(ccf ~ temp, data = Home_utilities) \nslice_plot(exp(temp) ~ temp, domain(temp=c(0,80)))\ngf_point(ccf ~ temp, data = Home_utilities) %>%\nslice_plot(300*exp(-temp/20) ~ temp, domain(temp=c(0,80)))"},{"path":"structure-of-a-function.html","id":"structure-of-a-function","chapter":"3 Structure of a function","heading":"3 Structure of a function","text":"[F-10] Recognize functions way representing (storing) know able use properly basic nomenclature functions).’re used mathematical functions stated formulas, expressions composed addition, multiplication, square roots, . 300The expression \\(m x + b\\) uses multiplication addition.\\(\\sqrt{\\strut 1 - x^2}\\) uses squaring (\\(x^2\\)), subtraction square root.\\(3\\sin\\left(\\frac{2 \\pi}{P} x\\right) + 4\\) uses multiplications, division, sin function, additionThere’s nothing mathematical concept “function” requires formula. computer functions general based algebraic formula. word used describe internals computer function algorithm, generalization “formula” includes many non-arithmetic operations looping branching.press function button like “sin” “ln” “exp” button calculator, likely little idea process set action create result. Indeed, people , even among professionals. problem. can name function ’s appropriate purpose, can apply function input, can something output.chapter functions functions organized: name goes, input goes, determines output.","code":""},{"path":"structure-of-a-function.html","id":"inputs-to-output","chapter":"3 Structure of a function","heading":"3.1 Inputs to output","text":"using formulas extensively, best can visualize functions generally something ’s necessarily formula. section gives another perspective describe think function. remember, functions take inputs return corresponding output. arrangement accomplishes function, even arithmetic nowhere sight.simple useful framework organizing know table, generally set array rows columns. instance, table range internal combustion engines various sizes:row table reports one, specific engine. column one attribute engine. Using tables can easy. example, asked report fast engine named “Enya 60-4C” spins, go Enya 60-4C row “RPM” column read answer: 11,800 revolutions per minute (RPM).table like describes general relationships engine attributes. instance, might want understand relationship () RPM engine mass, relate diameter (, “bore”) depth (, “stroke”) cylinders power generated engine. single entry table doesn’t tell us general relationships; need consider rows columns whole. 310If examined relationship engine power (BHP) bore, stroke, RPM, find (rule) larger bore, stroke, RPM, powerful engine. ’s qualitative description relationship. educated people able understand quantitative description. Even don’t know exactly “power” means, rough conception .Often, ’re interested quantitative description relationship one (bore, stroke, RPM) \\(\\rightarrow\\) power. Remarkably, many otherwise well-educated people uncomfortable idea using quantitative descriptions relationship: sort language description written ; perform calculations use description; translate data (table) quantitative description; translate quantitative description address particular question make decision.course constructing using quantitative descriptions: , mathematical modeling. Skills modeling essential work engineering science, highly valued many fields commerce, management, government. Often, work applying quantitative skills called calculation. name calculus used describe methods widely used undertaking calculations.Functions fundamental way organizing mathematical models calculations. undoubtedly seen previous mathematics education, ’s worth reviewing basics can share vocabulary communicating .function transformation one inputs output.keep things simple now ’ll focus inputs outputs numeric, later ’ll need nuanced view “numeric” takes account different kinds things represented numbers, e.g. length, power, RPM.","code":""},{"path":"structure-of-a-function.html","id":"a-bureaucratic-analogy","chapter":"3 Structure of a function","heading":"3.2 A bureaucratic analogy","text":"’ll many opportunities work functions defined formulas. , want emphasize functions really just way storing correspondence inputs outputs formulas need nothing except one way describing pattern. Instead formula, imagine long corridor sequence offices, identified room number. input function room number. evaluate function input, knock appropriate door , response, ’ll receive piece paper number take away . number output function. 320This sound first simple true, … mathematical function office gives exactly number every time someone knocks door. Obviously, worker office highly tedious requires special skill. Every time someone knocks worker’s door, writes number piece paper hands person knocking. person number absolutely concern office worker.utility functions depends artistry insight person creates : modeler. important point course teach artistry. Hopefully learn artistry translate insight creation functions useful work. even just use functions created others, knowing functions built helpful using properly.sort function just described, offices along single corridor. functions said one input, , equivalently, functions one variable. operate function, just need one number: address office ’ll collect output.Many functions one input: two, three, four, … tens, hundreds, thousands, millions, …. course, ’ll work mainly functions two inputs, skills develop applicable functions two inputs.function two inputs look like office metaphor? Imagine office building many parallel corridors, numeric ID. evaluate function, need two numeric inputs: number corridor number door along corridor. two numbers hand, locate appropriate door, knock receive output number return. 330Three inputs? Think building many floors, floor many parallel corridors, corridor many offices sequence. Now need three numbers identify particular office: floor, corridor, door.Four inputs? street many three-input functions along . Five inputs? city many parallel four-input streets. .Applying inputs function order receive output small part calculations. Calculations usually organized algorithms, just say algorithms descriptions calculation. calculation … function!calculation work? Think business. People come business one inputs. take inputs , following carefully designed protocol, hand staff, perhaps duplicating simple arithmetic create new number. Thus equipped relevant numbers, member staff goes evaluate particular function numbers. (, staff member goes appropriate street, building, floor, corridor, door, returning number provided office.) staff re-assembles roadside stand, sorting numbers returned , following strict protocol. Perhaps combine new numbers ones originally given inputs. event, send staff new instructions—person’s instructions consist simply set inputs head evaluate return . point, perhaps many cycles, perhaps just one, able combine numbers ’ve assembled single result: number return person came business first place.calculation might involve just one function evaluation, involve chain sends workers buzzing around city visiting businesses turn activate staff add urban tumult.reader familiar floors corridors office doors may note addresses discrete. , office 321 offices 320 322 neighbors. Calculus continuous functions, need way accept, say, 321.487… input. office. 340A slight modification procedure produce continuous function. works like : input 321.487… messenger goes office 321 322 collects respective outputs. Let’s imagine -14.3 12.5 respectively. ’s needed small calculation, case look like \\[-14.3 \\times (1 - 0.487...)   + 12.5 \\times 0.487...\\] called linear interpolation lets us construct continuous functions discrete data.Blocks 2 5 ’ll discuss widely used ways produce just continuous functions smooth functions. Understanding difference continuous smooth wait introduce couple calculus concepts: derivatives limits.","code":""},{"path":"structure-of-a-function.html","id":"domain-input-space","chapter":"3 Structure of a function","heading":"3.3 Domain: input space","text":"know, powerful way thinking numbers terms space geometry. instance, single number corresponds point line: -called number line. pair inputs, say, (x, y) corresponds point plane, often called Cartesian coordinate plane. Three numbers corresponds point space, perhaps organized (x, y, z) Cartesian space. higher-dimensional spaces, usually special training needed become comfortable . discomfort, might prefer work office metaphor. Just fun, ’s can think 10-dimensional space: 10 numbers, one telling planet, next specifying continent planet, country, state, city, street, building, floor, corridor, door.set inputs function can evaluated called domain function. Sometimes describe domain space, e.g. number line, plane, . Sometimes domains including restrictions. instance, particular input might meaningfully positive, offices corresponding negative values input. , input might restricted interval 0 1. Sometimes calculus, domain excludes isolated point. instance, may office door marked 0 neighboring doors open working offices. 350","code":""},{"path":"structure-of-a-function.html","id":"range-output-space","chapter":"3 Structure of a function","heading":"3.4 Range: output space","text":"range function set outputs can produced. Since stage ’re working functions return single number output, ’s common describe range part number line. instance, functions positive outputs. functions’ outputs always interval 0 1. (case, instance, function returns probability output.)Consider graph function \\(g(x)\\):Question domain \\(g(x)\\)?\\(-\\infty < x < \\infty\\) ☹︎ \\(-3 \\leq x \\leq 2\\) ✓ \\(-4 \\leq x \\leq 4\\) ☹︎ might called “graphics” domain, yet function graph doesn’t extend whole interval. $-10 g(x)  ☹︎ vertical extent graphics frame. \\(-1 \\leq g(x) \\leq 33\\) ☹︎ domain refers horizontal axis. Question B range \\(g(x)\\)?\\(-\\infty < x < \\infty\\) ☹︎ range refers output function. \\(x\\) input. \\(-3 \\leq x \\leq 2\\) ☹︎ range refers output function. \\(x\\) input. \\(-4 \\leq y \\leq 4\\) ☹︎ ’re used calling function output \\(y\\), ’s bad habit. Break ! $-10 g(x)  ☹︎ vertical extent graphics frame. \\(-1 \\leq g(x) \\leq 33\\) ✓ Weather forecasting numerical processWeather forecasting numerical process highly influential book, 1922, Lewis Fry Richardson. envisioned calculation weather forecast kind function. domain forecast latitude longitude point globe, rather rectilinear organization corridor.One fantastic illustration idea shows building constructed form inside-globe. many points globe, business. (can see clearly foreground, shows several boxes workers.) 360\nFigure 3.1: artist’s depiction organization calculations weather forecasting Richardson’s system. Source\nbusiness might work way: business person report current air pressure point globe, another person reports temperature, another reporting humidity, . compute predicted weather next day, business staff assigned visit neighboring businesses find pressure, temperature, humidity, etc. Still staffers take collected output neighbors carry arithmetic translate outputs forecast tomorrow. instance, knowing pressure neighboring points enables direction wind calculated, thus humidity temperature air coming region business handles. today’s numerical weather prediction models, globe divided finely latitude, longitude, altitude, software handles storage present conditions calculation future minutes later. Repeating process using forecast enables prediction made minutes , .important concepts calculus relate process collecting outputs neighboring points combining : instance finding difference sum. illustrate, first set equations Richardson’s Weather forecasting … written notation calculus: 370You can hardly expected point understand calculations described equations, involve physics air flow, coriolis force, etc. ’s worth pointing notation:equations momentum column air particular latitude (\\(\\phi\\)) longitude.\\(M_E\\) \\(M_N\\) east-west north-south components momentum.\\(\\partial M_E /\\partial t\\) amount east-west momentum change next small interval time (\\(\\partial t\\)).\\(p_G\\) air pressure ground level column air.\\(\\partial p_G / \\partial n\\) difference air pressure column air columns north south.Calculus provides notation describing physics climate means translate physics arithmetic calculation.two naked modeling functions domain runs whole number line: \\(-\\infty < x < \\infty\\).naked modeling function domain excludes zero negative numbers inputs?function’s domain set possible inputs function. functions range set possible outputs. naked modeling functions, specify domain.Question range naked exponential function?positive outputs ✓ negative outputs ☹︎ whole number line ☹︎ closed, finite interval possibilities ☹︎ Question B range naked sine function?positive outputs ☹︎ negative outputs ☹︎ whole number line ☹︎ closed, finite interval possibilities ✓ Yes. output naked sinusoid functions always interval -1 1, inclusive Question C range naked logarithm function?positive outputs ☹︎ negative outputs ☹︎ whole number line ✓ closed, finite interval possibilities ☹︎ Question D range naked square function?positive outputs ✓ negative outputs ☹︎ whole number line ☹︎ closed, finite interval possibilities ☹︎ Question E range naked proportional function?positive outputs ☹︎ negative outputs ☹︎ whole number line ✓ closed, finite interval possibilities ☹︎ Yes. output naked sinusoid functions always interval \\(-1 \\leq \\sin(x) \\leq 1\\). Question F range naked sigmoid function?positive outputs ☹︎ negative outputs ☹︎ whole number line ☹︎ closed, finite interval possibilities ✓ Right. naked sigmoid function output always interval \\(0 < \\pnorm(x) < 1\\). ","code":""},{"path":"fun-describing.html","id":"fun-describing","chapter":"4 Describing functions","heading":"4 Describing functions","text":"need communicate functions fellow humans computers. Important modes communication include: 400Graphs functions show “shape”Tables inputs outputsWord descriptionsComputer function nameMathematical notationIn chapter, ’ll illustrate five different modes using naked modeling functions. ’s important become proficient five.","code":""},{"path":"fun-describing.html","id":"computer-commands","chapter":"4 Describing functions","heading":"4.1 Computer commands","text":"Since ’ve already introduced naked modeling functions, good time show draw graph . short introduction, ’ll discuss graphics generally look graphics functions two inputs.naked modeling functions just single input. can draw graphs single-input functions using slice_plot() R/mosaic operator. need specify two pieces information slice_plot():function graph. R/mosaic, state ’s called tilde expression. couple examples suffice moment.\nfunction name, like exp() log() sin(), tilde expression looks like exp(x) ~ x. ’s squiggle called “tilde” middle: ~. left side tilde put name function want graph followed input name. can choose input name like: using x. right side tilde, place input name . ’ll explain name appears two places later.\nfunction written formula, instance 1/z t^2, put formula left side tilde input name right side, like 1/z ~ z 1/t ~ t.\nfunction name, like exp() log() sin(), tilde expression looks like exp(x) ~ x. ’s squiggle called “tilde” middle: ~. left side tilde put name function want graph followed input name. can choose input name like: using x. right side tilde, place input name . ’ll explain name appears two places later.function written formula, instance 1/z t^2, put formula left side tilde input name right side, like 1/z ~ z 1/t ~ t.graphics domain. know, domain function collection possible legitimate inputs. naked modeling functions, domain \\(-\\infty < x < \\infty\\). might expect, ’s impractical graphical axis infinitely long. choose finite interval function domain use. finite interval called “graphics domain.” specify domain statement like domain(x = c(-5,5)), setting graphics domain \\(-5 \\leq x \\leq 5\\). Note input name used domain() must match input name selected tilde expression.tilde expression graphics domain specifier two arguments slice_plot(). correct commands drawing graph:","code":"\nslice_plot(sin(t) ~ t, domain(t=c(-5,5)))\nslice_plot(exp(x) ~ x, domain(x=c(-3,2)))\nslice_plot(log(z) ~ z, domain(z=c(-0.5, 10)))## Warning in log(z): NaNs produced## Warning: Removed 5 row(s) containing missing values (geom_path).\nslice_plot(t^2 ~ t, domain(t=c(-2, 2)))"},{"path":"fun-describing.html","id":"tables-of-inputs-and-outputs","chapter":"4 Describing functions","heading":"4.2 Tables of inputs and outputs","text":"Another way describing function give table inputs outputs. Like graphics, table can show possible inputs.modern computing, tables one primary means describe functions. People working calculus needed reference collection books containing tables functions used. 420With computers, better faster ways get output function input. Still, modelers often use recorded data construct functions. Tables perhaps widely used method storing accessing data, although electronic spreadsheets used today instead printed tables.Even today, table can nice way describe function interested output handful possible inputs.Conceptually, ’s helpful keep mind every naked modeling function just way organizing information stored table.generate tabular descriptions functions follow book. ’s much convient implement function software output can easily displayed given inputs. hand, book ’ll often use data tabular form create modeling function. ’s little point introducing additional calculus concepts, patient.","code":""},{"path":"fun-describing.html","id":"word-descriptions","chapter":"4 Describing functions","heading":"4.3 Word descriptions","text":"Knowing correctly using handful phrases goes long way able communicate people functions single input. Often, words make sense everyday speech (“steep,” “growing,” “decaying,” “goes ,” “goes ,” \"flat). 430Sometimes words used everyday speech casual person isn’t sure exactly mean. instance, often hear phrase “growing exponentially.” graph exponential function illustrates exactly sort growth: flat small \\(x\\) growing steadily steeper steeper \\(x\\) increases.Still words best understood learn calculus. “Concave ,” “concave ,” “approaching 0 asymptotically,” “continuous,” “discontinuous,” “smooth,” “minimum …,” “minimum …,” “approaching \\(\\infty\\) asymptotically,” “vertical asymptote.”illustrate patterns described phrases, consider three naked modeling functions Figure 4.1:\nFigure 4.1: Three naked modeling functions: () exponential, (b) sinusoid, (c) power-law \\(x^{-1}\\).\nConcave\nexponential concave everywhere domain.\nsinusoid alternates back forth concave concave .\nparticular power law \\(x^{-1}\\) concave \\(x > 0\\) concave \\(x < 0\\).\nexponential concave everywhere domain.sinusoid alternates back forth concave concave .particular power law \\(x^{-1}\\) concave \\(x > 0\\) concave \\(x < 0\\).Continuous\nexponential continuous everywhere domain.\nsinusoid continuous everywhere domain.\npower law \\(x^{-1}\\) discontinuous \\(x = 0\\)\nexponential continuous everywhere domain.sinusoid continuous everywhere domain.power law \\(x^{-1}\\) discontinuous \\(x = 0\\)Periodic. sinusoid periodic, , repeating shape .Asymptote.\nexponential horizontal asymptote zero \\(x \\rightarrow -\\infty\\)\nsinusoid neither vertical horizontal asymptote.\npower law \\(x^{-1}\\) vertical asymptote \\(\\infty\\) \\(x \\rightarrow 0\\) right, \\(-\\infty\\) \\(x \\rightarrow 0\\) left.\nexponential horizontal asymptote zero \\(x \\rightarrow -\\infty\\)sinusoid neither vertical horizontal asymptote.power law \\(x^{-1}\\) vertical asymptote \\(\\infty\\) \\(x \\rightarrow 0\\) right, \\(-\\infty\\) \\(x \\rightarrow 0\\) left.Maximum. sinusoid maximum, , input output larger nearby input. sinusoid similarly minimum.","code":""},{"path":"fun-describing.html","id":"computer-function-names","chapter":"4 Describing functions","heading":"4.4 Computer function names","text":"might expect, computer programmers language developers written software implementing several naked modeling functions: exp(), log(), sin(), dnorm(), pnorm(). functions, name tells everying, far computer concerned, needed calculate output given input. 440Computer notation power-law straight-line functions different. much easier understand seen create name functions. reason difference power-law straight-line functions quite naked. parameters: exponent power-law function slope intercept straight-line function.include power-law straight-line functions list naked modeling functions naked?’re using “naked modeling function” list accomplish two things time:emphasize modeling real-world situations always expect functions parameters.point large fraction modeling situations can handled just function “shapes.”make list shapes (ii) comprehensive, ’ve stretch “naked” metaphor bit.","code":""},{"path":"fun-describing.html","id":"mathematical-notation","chapter":"4 Describing functions","heading":"4.5 Mathematical notation","text":"grown traditional mathematical notation likely familiar notation several naked modeling functions: \\(\\ln x\\), \\(\\sin x\\), \\(e^x\\), \\(x^p\\) (\\(x^2\\) \\(p=2\\) \\(\\sqrt{x}\\) \\(p=1/2\\)). 450Traditional notation mixes several things computer notation sensibly keeps separate. computer programmer’s point view, traditional notation idiosyncratic rather systematic.interested things, three concepts computing may help appreciate differences:Functional notation computing, notation function name followed parentheses4 inputs inside parentheses called “functional notation.” functional notation part traditional mathematical notation, although often parentheses left .Functional notation computing, notation function name followed parentheses4 inputs inside parentheses called “functional notation.” functional notation part traditional mathematical notation, although often parentheses left .Infix notation functions two inputs, computing languages often support different arrangement function name inputs name comes arguments. ’ve seen parts traditional arithmetic notation, instance, \\(3 + 5\\) \\(8/2\\). Infix notation sometimes used place functional notation 3^2 x^3.Infix notation functions two inputs, computing languages often support different arrangement function name inputs name comes arguments. ’ve seen parts traditional arithmetic notation, instance, \\(3 + 5\\) \\(8/2\\). Infix notation sometimes used place functional notation 3^2 x^3.Markup notation undoubtedly familar word processing , particularly, style word processing called --see----get (WYSIWYG). WYSIWYG, can enter plain text just using keyboard, want make something boldface italics, use mouse select text involved select style menu. Typically, WYSIWYG mathematical content involves similar mouse-based process. contrast, mainstream computer languages, mouse needed . computer commands constructed plain, linear sequences letters characters.\nComputer programmers helpfully observed word-processing process can constructed simple plain text input computer program interprets input well-defined ways carries typesetting. illustrate, consider next couple lines. first shows ordinary looking word-processor formatted sentence. second shows way encoded typesetter can produce formatted content. 460\n\n\\(e^x\\), \\(\\sqrt{x^2}\\) \\(\\int_0^\\infty \\frac{1}{x^2} dx\\) examples traditional notation.5\n\n\n$e^x$, $\\sqrt{x^2}$ $\\int_0^\\infty \\frac{1}{x^2} dx$ examples *traditional* notation.^[footnote]\nMarkup notation undoubtedly familar word processing , particularly, style word processing called --see----get (WYSIWYG). WYSIWYG, can enter plain text just using keyboard, want make something boldface italics, use mouse select text involved select style menu. Typically, WYSIWYG mathematical content involves similar mouse-based process. contrast, mainstream computer languages, mouse needed . computer commands constructed plain, linear sequences letters characters.Computer programmers helpfully observed word-processing process can constructed simple plain text input computer program interprets input well-defined ways carries typesetting. illustrate, consider next couple lines. first shows ordinary looking word-processor formatted sentence. second shows way encoded typesetter can produce formatted content. 460\\(e^x\\), \\(\\sqrt{x^2}\\) \\(\\int_0^\\infty \\frac{1}{x^2} dx\\) examples traditional notation.5$e^x$, $\\sqrt{x^2}$ $\\int_0^\\infty \\frac{1}{x^2} dx$ examples *traditional* notation.^[footnote]Traditional mathematical notation includes features superscripts special symbols easily written pencil hand. Often notation beautiful aesthetically cherished mathematicians. computer commands computer languages straight sequences characters using function infix notation.6","code":""},{"path":"fun-notation.html","id":"fun-notation","chapter":"5 Notation for functions","heading":"5 Notation for functions","text":"Part difficulty mathematics many people making sense nomenclature notation. taught high school highly idiomatic system can mastered extensive experience. Mathematicians undoubtedly skilled logic, mathematics ancient history littered language synonyms, near synonyms, inconsistencies, diacritical marks, letters unfamiliar alphabets. 500To illustrate cultural admiration abstraction mathematics, consider famous poem, Jabberwocky, University Oxford mathematician, Charles Lutwidge Dodgson (1832-1898):’Twas brillig, slithy toves\n       gyre gimble wabe:\nmimsy borogoves,\n       mome raths outgrabe.words commonly encountered traditional mathematics notation.equation, formula, function, variable, unknown, rootAnd mathematical sentences.\\(y = x\\)\\(y = \\sqrt{x}\\)\\(y^2 = x\\)\\(x^2 = x\\)\\(x = \\sqrt{x}\\)five sentences equations. ’s easy, equal sign two sides. formulas? functions? ’re used calling \\(x\\) \\(y\\) variables. become unknowns? Sentence (iv) might interpreted describing roots. sentence (v) says thing (iv) related roots.510","code":""},{"path":"fun-notation.html","id":"a-notation-for-computing","chapter":"5 Notation for functions","heading":"5.1 A notation for computing","text":"traditional notation practically useless computing. programmer deep understanding notation intended mean given circumstance can construct computer expression carry meaning computer’s work.illustrate, similar-looking sentences. math notation, can mean something. R, one valid others invalid. Read one try guess one valid others . 520Once ’ve made guesses, open SANDBOX see got right.student knows make sense math notation find much help writing computer notation. ’s like well educated foreigner trying make sense sentences meaningful others .“Chair meeting,” “seat meeting.”\n“Seat guest,” “chair guest.”\n“Bush ,” “tree .”\n“Tree cat,” “bush cat.”\n“Table motion,” “desk motion.”\n“Bench player,” “couch player.”\n“Couch meaning” “bench meaning.”book, ’re going use mathematical notation corresponds usable computer notation. first step stop using \\(=\\) mean many different things. 530","code":"\ny = x\ny = sqrt(x)\ny^2 = 3\ny = sqrt(3)\ny - x = 0\n0 = (x+3)(x-2)"},{"path":"fun-notation.html","id":"objects-and-actions","chapter":"5 Notation for functions","heading":"5.2 Objects and actions","text":"[F-30] Identify structure function notation function defined formula.’re going give names mathematical “objects” actions. introduction, ’ll use boldface objects italics actions.function mathematical object gives instructions transform one inputs output. Typically, always, give names functions can refer . can think function like recipe: tells inputs create output. ’re used functions recipe written formula using arithmetic operators. general term recipe function algorithm. (Section 5.3 gives definition “algorithm” shows examples formulas.) 540A function mathematical object gives instructions transform one inputs output. Typically, always, give names functions can refer . can think function like recipe: tells inputs create output. ’re used functions recipe written formula using arithmetic operators. general term recipe function algorithm. (Section 5.3 gives definition “algorithm” shows examples formulas.) 540An argument symbol stands input algorithm.argument symbol stands input algorithm.Applying function inputs means carry steps function’s algorithm, inserting appropriate quantity place symbol. Recipes use symbols like “rice” describe algorithm. cooking, apply recipe incredients. recipe says, “Add rice boiling water” use physical rice physical boiling water, instead symbols. Applying function inputs fundamental computing, ’ll often hear words “apply”: run function evaluate function execute function.Applying function inputs means carry steps function’s algorithm, inserting appropriate quantity place symbol. Recipes use symbols like “rice” describe algorithm. cooking, apply recipe incredients. recipe says, “Add rice boiling water” use physical rice physical boiling water, instead symbols. Applying function inputs fundamental computing, ’ll often hear words “apply”: run function evaluate function execute function.define function mathematical notation write something like : \\[g(x) \\equiv 4 x^2 - 7\\]\\(g()\\) name function.function takes just one argument, written symbol \\(x\\) definition. make double sure human reader sees symbol used argument, putting list symbols parentheses following function name. definition function two inputs looks like \\(h(x, y) \\equiv 3y - 5 x^2 + x\\) functions two inputs follow pattern.algorithm \\(g()\\) presented formula. formula example, \\(4 x^2 - 7\\) says, \"Take input quantity. Multiply 4 input multiply input . Subtract \\(7\\) produce output function.use \\(\\equiv\\) punctuation distinguish function name (argument list) algorithm. algorithm always right \\(\\equiv\\), name function argument list left.command g(3), applies function named \\(g()\\) value 3. replacing \\(x\\) algorithm \\(3\\) carry calculations algorithm. \\(g(3)\\), output 29.R, function defined using similar expression. \\(g()\\) defined , R definition beThe name function, without parentheses, left side assignment operator <-.use name g refer anything, function . R/mosaic operator makeFun() constructs functions leading command g <- gives output makeFun() name.text parentheses makeFun also R expression. call sort expression tilde expression. (symbol ~ called “tilde.”) tilde character simply punctuation separate expression left side, 4*x^2 - 7, expression right side. right side tilde expression identifies symbols arguments. (case, x argument.) left side tilde expression describes algorithm function, using argument names specified right side. 550To apply function \\(g()\\) argument, write R expression value argument given parentheses. instance, apply \\(g()\\) value 3, write:","code":"\ng <- makeFun(4*x^2 - 7 ~ x)\ng(3)## [1] 29"},{"path":"fun-notation.html","id":"algorithms","chapter":"5 Notation for functions","heading":"5.3 Formulas and algorithms","text":"algorithms example functions previous section involved arithmetic. generally, formula involve invocation another function. example: \\(\\sqrt{\\strut m x + b}\\) \\(\\sin(m x) + \\ln(b)\\).idea “algorithm” generalizes formulas. starter definition :algorithm set instructions performing computation.High-school math typically involves presenting algorithms formula. learned, maybe middle school, follow arithmetic steps involved algorithms described formulas. also likely used calculator perform arithmetic evaluate functions \\(\\sin()\\) \\(\\ln()\\) \\(\\sqrt{\\strut}\\) don’t know evaluate using simple arithmetic. calculator implementing algorithm programmed enable calculation \\(\\sin()\\) \\(\\ln()\\) .slightly detailed definition “algorithm” highlights algorithms written terms , simpler algorithms.algorithm set instructions performing computation written terms algorithms already know perform.purposes, “algorithms already know perform” taken arithmetic—addition, subtraction, multiplication, division—well evaluation naked modeling functions. Admittedly, people compute logarithms fluently can add numbers, already R implementations basic modeling functions: exp(), log(), sin(), power-law, dnorm(), pnorm().\nvast majority functions see book (mathematical modeling general) can constructed basic arithmetic application naked modeling functions. 560","code":""},{"path":"fun-notation.html","id":"algorithms-without-formulas","chapter":"5 Notation for functions","heading":"5.4 Algorithms without formulas","text":"Many functions described algorithms use concepts common computer programming unknown traditional mathematical notation. names like iteration branching many refer stored lists fixed numbers (like office workers street, building, floor, corridor, door image function). ’ll deal things later, now …going use word algorithm name kind expression right \\(\\equiv\\) function definition. formula specific kind algorithm generally written traditional math notation.Algorithms, including ones formulas, written terms set symbols stand inputs. high-fallutin’ way saying something simple: \\(mx + b\\), \\(x\\), \\(m\\), \\(b\\) names give quantities used calculation.notation using function definition lists names two places, others one place. , look \\[g(x) \\equiv m x + b\\]\n\\(x\\) appears algorithm list input name \\((x)\\) left \\(\\equiv\\).\\(m\\) \\(b\\) different; appear algorithm. word quantities mathematics parameter. Eventually, algorithm followed, ’re going put specific numerical values place parameter. 570Where parameter values come ? subject mathematical notation silent. figure context experience. potentially confusing, especially human around sort things .","code":""},{"path":"fun-notation.html","id":"computer-notation","chapter":"5 Notation for functions","heading":"5.5 Computer notation","text":"notation used computer programming lets us explicit symbols refer function inputs parameters function.\nDepending computer language things can handled one way another. (experienced computer programmers: issue scope can complex right.) 580In software used CalcZ (R/mosaic, R language augmented mosaic package extensions), take simple--use approach. works like :modeling functions construct R/mosaic list parameters formally arguments function.wrote traditional notation \\[g(x, m, b) \\equiv m x + b\\]also way give default numerical values parameters can write \\(g(3.5)\\) computer know find parameter values. writing formulas using math notation, ’ll extend traditional notation write, instance, \\(g(x, m=2, b=3) \\equiv m x + b\\).R/mosaic, construct mathematical function like \\(g()\\) using makeFun() function:also writebut notation means give specific numerical values m b inputs whenever evaluate g(). won’t default values “parameters--inputs” m b. 590[F-31-R] Identify create R versions mathematical functions using makeFun() tilde expressions.[F-33] Master conventions used CalcZ giving names functions referring functions “pronouns.”","code":"\ng <- makeFun(m*x + b ~ x, m=2, b=3)\ng <- makeFun(m*x + b ~ x)"},{"path":"fun-notation.html","id":"calcz-naming-conventions","chapter":"5 Notation for functions","heading":"5.6 CalcZ naming conventions","text":"’re going using creating lot functions CalcZ. functions already proper names, usually written using short sequences letters: instance naked modeling functions \\(\\sin()\\), \\(\\ln()\\), \\(\\exp()\\). 600Other functions needed just sentence paragraph section, perhaps used example lay steps algorithm. natural languages English, often use pronouns purposes: , , , , , , …. also use pronouns identifying functions. policy :pronoun function usually named \\(f()\\) \\(g()\\) \\(h()\\) corresponding upper-case letters \\(F()\\), \\(G()\\), \\(H()\\). particular choice letter f, g, h significance whatsoever. just way give unambiguous handle function going using little .occasion, use subscripts superscripts pronoun letters, instance \\(f_1()\\) \\(g^\\star()\\). way give us many possible pronouns need . Perhaps analogous words like “sister,” “parent,” “husband,” “cousin,” etc. allow us refer, without proper name, specific person.occasions, function relates specific quantity position velocity, use names \\(x()\\), \\(y()\\), \\(z()\\), \\(u()\\), \\(v()\\), \\(w()\\), . letters , course, ones frequently use name inputs functions. know whether letter meant refer input rather function? parentheses provide clue: \\(x()\\) function name, \\(x\\) input name. 610It can become tedious give name every function, even ’s used . Consider sentence example:“functions \\(g(x) \\equiv \\sqrt{\\strut x}\\) \\(h(x) \\equiv x^3\\) examples power-law functions.”Long awkward. ’ll feel free write instead,“\\(\\sqrt{\\strut x}\\) \\(x^3\\) examples power-law functions.”Without formality provided “\\(g(x) \\equiv\\)” can hard know whether \\(\\sqrt{\\strut x}\\) means “square-root function” \"take square root specific number \\(x\\). convention use based name used expression. standard argument names end alphabet used without subscript (e.g. \\(x_0\\)) special symbol subscript (e.g. \\(t^\\star\\)), intend expression function. However, want apply function specific values inputs write following styles:\\[f(x^\\star) \\ \\ \\mbox{}\\ \\ \\sqrt{\\strut x^\\star}\\ \\ \\mbox{}\\ \\ \\sqrt{\\strut x=3}\\ \\ \\mbox{}\\ \\ \\left.\\sqrt{\\strut x}\\right|_{x=3}\\ \\ \\mbox{}\\ \\ \\left.g(x)\\strut \\right|_{x=3}\\]One important techniques calculus take something often think number turn function whose output number. take time get used calculus notation able tell glance whether something function number. 620Here’s illustration make sense already studied calculus:\\[\\int_0^3\\!\\! f(x) dx\\ \\ \\text{number, }\\int_0^x\\!\\! f(x) dx \\ \\ \\text{function.}\\ \\ \\]high-school math notation, can hard tell expression intended function number. Careful attention CalcZ conventions make much easier figure whether expression resolves function number. first read mathematical expression, good first question ask , “kind thing ? function? number?”essential can apply conventions reflexively. able say kind thing symbol stands key understanding mathematical expression means.Use CalcZ naming conventions answer questions.Question \\(h()\\)?name function ✓ Right. Typically use \\(f()\\), \\(g()\\), \\(h()\\) something similarly generic stand function ’re going working little . Think pronouns. Just can say, meaningfully, “gave ,” can say \\(h(x) \\equiv f(x) + g(2*x)\\) name input. ☹︎ Sorry, usually letters like \\(x\\), \\(y\\), \\(t\\). specific numerical value ☹︎ Sorry, ’ll use constructions subscript like \\(x_0\\) \\(y_\\star\\) like . Question B come write \\(f()\\) name function rather just \\(f\\) \\(f(x)\\)?good reason ☹︎ certainly intend empty parentheses remind reader name refers function. spot place violate intention, point us. ’s reminder ’re talking function name “\\(f\\).” ✓ parentheses part name. ☹︎ . Names R never contain parentheses. f, fbar, fred valid names R command, f() . use parentheses writing human audience reminder name referring function. computer doesn’t need reminders Question C sort thing denoted \\(x_0\\) \\(y_\\star\\) \\(y_{max}\\)?particular numerical value ✓ Right. instance, might particular value input function produces output zero. might particular location domain function. name input ☹︎ Sorry. won’t typically use subscripts referring input name. Question D symbols might stand entire domain function?    \\(y\\) ✓ Right. Another term use symbol standing domain “name input.”        \\(f()\\) ☹︎ , write name function called “\\(f\\)”        \\(y_0\\) ☹︎ . \\(y_0\\) might used stand single point domain. Question E Suppose come across \\(v(w) \\equiv w + 3\\) book. \\(v\\) \\(w\\) stand ?\\(v()\\) name function \\(w\\) name input function. ✓ Right. Whenever write something like “name(another_name) \\(\\equiv\\),” ’re saying explicitly “name” refers function “another_name” refers input. ’s meaningless. ☹︎ ’ll try write meaningless mathematical expressions. mistake, let us know. ’s thing \\(v = w + 3\\). ☹︎ \\(v = w+3\\) equation. \\(v(w) \\equiv w+3\\) format defining function named \\(v()\\). Question F \\(g(x) \\equiv x^2\\) \\(h(w) \\equiv w^2\\) function?Yes, although function given two different names. ✓ thing ’s significant name input used consistently function algorithm. course ! ☹︎ Sorry. suppose might ask, “mean function?” Remember function relationship inputs output. \\(g(x) \\equiv x^2\\) \\(h(w) \\equiv w^2\\) describe exactly relationship: output square input. Question G R/mosaic notation \\(\\equiv\\)?    <- makeFun() ✓        makeFun() ☹︎ Almost right. makeFun() creates function doesn’t give name.        <- ☹︎ Sorry. R, symbol means “give name ” whatever right side <-. name given left side <-. ","code":""},{"path":"fun-notation.html","id":"functions-in-r","chapter":"5 Notation for functions","heading":"5.7 Functions in R","text":"name R language can refer sort object. use CalcZ naming conventions use R, ability develop read math notation help reading R vice versa. 630R/mosaic provides additional clues distinguish numbers functions.Almost time create function using makeFun(). see R expression starting name <- makeFun(tilde expression) know sure name refers function.get deeper calculus, meet additional R operators generate functions. ’ll introduce good time, someone reviewing course, include D(), antiD(), compose() iterate().readers may encountered R previously statistics data science course. readers wondering makeFun(). Experienced programmers know way make functions R using function keyword. instance:’s completely correct legitimate way define function R settings universal practice.developed makeFun() handle situation computers, insistence avoiding ambiguity, something person familiar math notation likely suspect. problem comes something simple asIn traditional math notation, \\(g(x) \\equiv m x + b\\), usually silent parameters like \\(m\\) \\(b\\) coming . , honest, don’t worry try evaluate function. 630If evaluate, say, command \\(g(3)\\), R system knows find right values \\(m\\) \\(b\\). objects appropriate places R system, error message generated. rules computer languages follow tracking symbols aren’t argument list called scoping rules. Scoping advanced programming concept different languages use different rules. ’s recipe trouble confusion newbies. (even experts!)makeFun() arranged impose scoping system, one dead easy essentially every computer language. makeFun() add parameters function algorithm argument list. makeFun() command creates function 3 arguments.point ~ x part tilde expression simply name arguments come first. evaluate function, ’ll provide values m b. operations function—differentiation anti-differentiation, particular—can done without specify parameter values. know differentiation anti-differentiation , example:Sometimes particular numerical values mind parameters. instance, modeling trajectory ball, undoubtedly need make use gravitational acceleration Earth’s surface, \\(9.8 \\text{m}/\\text{s}^2\\). might prefer include specific number 9.8 function definitions can use functions model ball’s trajectory Mars. since balls thrown Earth, maybe ’s worthwhile insist value 9.8 specified every time function used. can ways using g parameter name instruct R set g 9.8 unless otherwise specified. function look like : 640","code":"\nf <- function(x) { 3 + 2*x }\ng <- function(x) { m*x + b }\nmakeFun(m*x + b ~ x)## function (x, m, b) \n## m * x + b\nD(m*x + b ~ x)## function (x, m, b) \n## m\nantiD(m*x + b ~ x)## function (x, C = 0, m, b) \n## m * 1/2 * x^2 + b * x + C\nball_velocity <- makeFun(g*t + t0 ~ t, g = 9.8, t0 = 0)\n# For Earth: falling 3 seconds from a standstill\nball_velocity(3)## [1] 29.4\n# For Earth when the ball has an initial upward velocity of 10 m/s\nball_velocity(3, t0 = -10)## [1] 19.4\n# For Mars ...\nball_velocity(3, t0 = -10, g = 3.711)## [1] 1.133"},{"path":"fun-notation.html","id":"foursigns","chapter":"5 Notation for functions","heading":"5.8 \\(=\\), \\(\\equiv\\), \\(\\rightarrow\\), <-","text":"\\(=\\) sign carries lot weight high-school notation. much weight. used several meanings distinguished one another. Combining one symbol leads confusion error.Meaning 1: “defined …”use \\(\\equiv\\) mathematical notation <- R. notation R bit simpler mathematical notation: way giving something name.“something” function, see left side <-, instance use makeFun() operator qw h <- makeFun(x^2 ~ x). left side simply name.math notation, equivalent written \\(h(x) \\equiv x^2\\). left side isn’t exactly name. ’s name followed parentheses names used algorithm.Keep mind writing functions, generally provide hint name refers function, writing \\(h()\\) h(). parentheses aren’t part name; name \\(h\\). parentheses remind us \\(h\\) function. 650Meaning 2: “Happens …”acceleration due gravity often given name \\(g\\). Earth’s surface, happens \\(9.8 \\text{m}/\\text{s}^2\\). math notation, use equal sign narrow meaning, \\(g=9.8\\text{m}/\\text{s}^2\\). R use =.Meaning 3: “Gets closer closer …”Calculus relationships: connection two () things. hear phrases like, “\\(x\\) increases, \\(f(x)\\) decreases.” , everyday experience, “gets humid, weather becomes uncomfortable.” , “slower safer,” “spicier better” “heavier blanket, warmer ’ll .” (One important uses derivatives calculus represent statements quantitatively. ’s subject next Block.)calculus, sometimes distinguish “\\(x\\) zero” “\\(x\\) gets closer closer zero.” ’ll need want say, “gets smaller smaller, doesn’t disappear entirely.” symbol “gets closer closer ” \\(\\rightarrow\\), \\(x \\rightarrow 0\\)reading math, take care notice \\(=\\), \\(\\rightarrow\\), \\(\\equiv\\) used. sign something important say intended help make sense read.following traditional-style notation intended define function 2 times naked sinusoid. something wrong.\\[g(t) \\equiv 2 \\sin(x)\\]Question ’s wrong definition?\\(g()\\) isn’t appropriate name ☹︎ can name functions like. formula written \\(2 \\times \\sin(x)\\) ☹︎ welcome write things way want emphasize multiplication, don’t . hand, R absolutely required write multiplication operator: 2 * sin(x). \\(t\\) good choice input name. ☹︎ ’s fine choice, especially input time. input name formula doesn’t match input name left side \\(\\equiv\\). ✓ ’s . choose input name (, \\(t\\)), make sure write formula terms name. ","code":"\nname <- something"},{"path":"graphs-and-graphics.html","id":"graphs-and-graphics","chapter":"6 Graphics & function graphs","heading":"6 Graphics & function graphs","text":"[F-20] Understand mathematical graph consists points composite space: input \\(\\times\\) output.Scientific statistical graphics visual depictions information data. displaying function single input, mathematicians favor particular style graphics. favored style called function graph, specific technical meaning mathematics. Notice ’re writing “function graph” rather “function graphic.” function graph particular sort graphic: many types graphics ’ll use display data features functions. 700","code":""},{"path":"graphs-and-graphics.html","id":"the-graphics-frame","chapter":"6 Graphics & function graphs","heading":"6.1 The graphics frame","text":"Technical graphs usually drawn graphics frame\nseveral components:frame region piece paper computer screen marked horizontal vertical axis.horizontal axis stands one quantity.vertical axis stands another quantity.horizontal vertical axes drawn scale enables translate numerical value position.\nFigure 6.1: empty graphics frame scales horizontal vertical axes.\n","code":""},{"path":"graphs-and-graphics.html","id":"data-graphics-the-point-plot","chapter":"6 Graphics & function graphs","heading":"6.2 Data graphics: the point plot","text":"One common uses graphics frame display visually two columns table containing data. instance, small part table size penguins Palmer Archipelago Antarctica. 710A point plot displays two columns table. row table represented one point graphic. instance:\nFigure 6.2: Data 344 penguins flipper length (cm) body mass (kg).\npenguin specific mass flipper length. look penguins mass around 4 kg, can see different penguins variety flipper lengths. ’s typical natural variability.function graph can constructed way. Start table reporting output function variety inputs, like :make point plot two columns table:\nFigure 6.3: point plot table.\nTypically, drawing graph function plot individual dots, lines connecting dots. ’s much making point plot, use gf_line().Data stored tables called data frames. many ways access data frames many different ways store . important topic data science. CalcZ supply data frames simplest possible way: giving name can use refer data frame.can use gf_point() plot pair columns data frame, know names columns. useful function names(). Similarly, look first rows, use head() function.","code":""},{"path":"graphs-and-graphics.html","id":"graphics-layers","chapter":"6 Graphics & function graphs","heading":"6.3 Graphics layers","text":"often want compare functions, compare function data, something elaborage. can using ordinary graphics functions, e.g. slice_plot() gf_point(). command generates graphics layer. can stack layers top one another connecting commands pipe, written %>% R. pipe token always come end line, never beginning. last command pipeline followed %>%. 720Here ugly plot made three layers, layer displaying one naked modeling functions. slice_plot() first layer, domain() must given explicitly. ’re welcome later layers, don’t original domain() passed pipeline.\nJust show things done, functions drawn different colors, different widths (e.g., size=2) different levels transparency (e.g. alpha=0.2).","code":"\nslice_plot(dnorm(x) ~ x, domain(x=c(-4,4))) %>%\n  slice_plot(pnorm(x) ~ x, color=\"red\", size=2) %>%\n  slice_plot(sin(x) ~ x, color=\"green\", size=4, alpha = 0.2)"},{"path":"graphs-and-graphics.html","id":"data-and-functions","chapter":"6 Graphics & function graphs","heading":"6.4 Data and functions","text":"Figure 6.2, data point plot penguin flipper length vs body mass, generally multiple penguins body mass different flipper lengths. overall impression cloud points.construct function model pattern observed cloud, need respect mathematical definition function, part function one output given input.\nFigure 6.4: penguin data doesn’t directly describe sensible mathematical function. (left) use modeling create function stays close, close, data points. (right)\ncreate model flipper length function body mass, used one set techniques called machine learning. , didn’t specify form exponential hump sigmoid particular shape. simply asked computer figure smooth function stays close data. result, happens, sigmoid. 730","code":""},{"path":"graphs-and-graphics.html","id":"inputs-to-output-1","chapter":"6 Graphics & function graphs","heading":"6.5 Inputs to output","text":"can easily evaluate function given input graph. know, just put finger horizontal coordinate input. move finger upward reach point curve directly horizontal coordinate. read value function input reference scale vertical axis. 740It’s possible show graph whole function whose domain \\(-\\infty\\) \\(\\infty\\). Consequently, drawing graph choose show part domain expect relevant needs.Sometimes, graphic’s domain includes parts domain function drawn. cases, function’s graph extend invalid part graphic domain, plot function whose domain positive numbers.function range runs \\(-\\infty\\) \\(\\infty\\), limits paper display mean can show part range. experience, ’ll learn read hints graph underlying function might range larger one shown graphic.","code":""},{"path":"graphs-and-graphics.html","id":"outputs-to-inputs","chapter":"6 Graphics & function graphs","heading":"6.6 Outputs to inputs","text":"Graphs relatively modern, coming mainstream use 1700s. Much mathematics developed graphs invented. One consequence function tasks easy using graph might hard previous ways implementing functions. analogous way arithmetic pretty easy Arabic numerals, really hard Roman numerals. 750A function graph makes easy evaluate function inverse. basic modeling functions way calculate numerically output given input (function’s domain).Often, working function goes another way: know output want find corresponding input. ’s easy graph. Pick position vertical axis represents given input. trace horizontally ink . , trace vertically read value input produce given output.Mathematicians careful distinguish functions unique input generates given output, functions can one input generates output. Functions one--one relationship output input called “invertible.”Invertible , common procedure working functions find input corresponding specific, given output. high-school algebra, called “solving \\(x\\).” special case solving finding roots polynomial. name give procedure zero finding, correctly points trying find input.","code":""},{"path":"graphs-and-graphics.html","id":"graphs-of-functions-with-two-inputs","chapter":"6 Graphics & function graphs","heading":"6.7 Graphs of functions with two inputs","text":"can draw graphs functions two inputs. Now points need marked 3-dimensional space: one axis two inputs another axis output. Like : 760\n(#fig:fun-1b-1.2)graph function two inputs surface.\nhard read graph function two inputs. Think graph kind tent suspended domain ground. graph surface. show graph display, tricks trade used: color give additional scale output; computer graphics let us rotate surface look various perspectives, added grid lines marks surface help us read numerical value.","code":""},{"path":"graphs-and-graphics.html","id":"contour-plots","chapter":"6 Graphics & function graphs","heading":"6.8 Contour plots","text":"[F-21] Interpret contour plot function two input variables, include estimating function values locations peaks valleys.mathematical graph just one way draw picture function two inputs. ways. One helpful mode picture called contour plot, familiar many non-mathematicians form topgraphical maps showing landscape elevation function latitude longitude. ’s contour plot function shown previous graph: 770\n(#fig:Fig-1b-2.1)contour plot displays surface manner topographical map shows terrain.\ncontour plot topographical map mathematical graph Figure @ref(fig:fun-1b-1.2)may take practice learn read contour plots fluently skill ’s worthwhile . Note graphics frame Cartesian space two inputs. output presented contour lines. contour line label giving numerical value function output. input value pairs given contour line corresponds output level labeling contour line. find output input pair contour line, interpolate contours either side point.example, input pair (0, 0)—bottom frame, midway left right—falls contours labeled “20” “22.” means output corresponding input (0, 0) somewhere 20 22. point much closer contour labeled “20,” ’s reasonable see output value 20.5. , course, approximation, ’s nature reading numbers graphs.Often, specific numerical value point primary interest. Instead, may interested steep function point, indicated spacing contours. contours closely spaced, hillside steep. contours far apart, hillside steep, perhaps even flat.Another common task interpreting contour plots locate input pair ’s local high point low point: top hill bottom hollow. points called local argmax local argmin respectively. output function local argmax called local maximum; similarly local argmin, output called local minimum. (word “argmax” contraction “argument maximum.” tend use word “input” instead “argument,” means exactly thing say “inputs function” says “arguments function.”)Still common tasks reading contour plots start given input pair figure 1) direction move steeply uphill, 2) direction move keep function output . 780It can helpful look contour map interpret contours representing geographical features: hills, valleys, crests, coves, hollows, ., (Fun-1c) translate contour plot graph function one input. (can think function two inputs, hold one inputs constant, , always . )","code":""},{"path":"graphs-and-graphics.html","id":"slice-plots","chapter":"6 Graphics & function graphs","heading":"6.9 Slice plots","text":"[F-23] Know meant slice function two variables. able determine function increasing, decreasing, constant moving horizontally vertically contour plot.mentioned , mathematical modeling process constructing mathematical representations situations phenomena interest. CalcZ, primarily interested using functions representations.Almost always, mathematically modeling real-world situation phenomenon, try capture every nuance every relationship might exist real world. leave things . simplifications make modeling problems tractable encourage us identify important features important relationships.hand, ’s easy go wrong leave something ’s important. mitigate risk, many modeling projects involve modeling cycle propose candidate model, examine consequence model see corresponds well parts reality important us task, modify model needed produce new better candidate. 790In spirit, ’s useful always assume models leaving something complete model involves function inputs present candidate. present candidate model considered slice complete model. slice leaves one variables complete model.illustrate , suppose “complete model” form function two inputs, shown contour plot .become practiced reading contour plots, might prefer read one hilltop (shaded yellow) side--side hollow bowl (shaded purple), green, almost level flanks left right edges frame.common forms slice involve constructing simpler function one input . example, simpler function might ignore input #2. different ways collapsing function two inputs function one input. especially useful way calculus take two-input function set one inputs constant value.instance, suppose set input #2 constant value 1.5. means can consider value input #1, input #2 replaced 1.5. Figure Fig-1c.2, ’ve marked red points contour plot give output simplified function. 795Each point along red line corresponds specific value input #1. contours, can read output corresponding values input #1. relationship, output versus input #1 can drawn mathematical graph (right contour plot). Study graph can see rising falling parts graph correspond contours crossed red line.Slices can taken direction even along curved path! blue line slice constructed letting input #2 vary holding input #1 constant value 0.Austin surface_plot_with_contours() function. Add mosaicCalc.’ve created function named \\(\\mbox{twins}(x,y)\\) help practice making contour plots. ’ll need open sandbox draw plot.scaffolding command:Question domain plot large enough show mountain next deep hole. domains job?domain(x=c(-5, 5), y=c(-5, 5) ✓ domain(x=c(1, 5), y=c(1, 5) ☹︎ shows mountain, hole. domain(x=c(1,1), y=c(-1,1))) ☹︎ hole shown, none mountain. domain(x=c(5,10), y=c(0,10))) ☹︎ ’s hardly anything going domain. function pretty flat except dip lower left. different sandbox (can still see contour plot first sandbox), draw slice function along line \\(y=0\\). Use \\(x\\)-domain correct answer previous question.Question B expressions accomplish task?slice_plot(twins(x, y=0) ~ x, domain(x=c(-5,5))) ✓ slice_plot(twins(x) ~ x, domain(y=c(-5, 5))) ☹︎ domain \\(x\\), \\(y\\). twins() takes two inputs, even one fixed zero. slice_plot(twins(x, y=0) ~ x, domain(x=c(-5, 5), y=c(-5, 5))) ☹︎ slice plot domain includes one input. slice_plot(twins(x, y=0) ~ x + y, domain(x=c(-5, 5), y=c(-5, 5))) ☹︎ slice plot one input right side tilde expression. Consider graph length day different levels latitude different days year. Source.First, orient graph contours mean. Note vertical lines indicating days equinoxes solstices.Question True False: place equator day length exactly 12 hours time year.    TRUE ☹︎ , horizontal (dashed) line denoting equator cross 12-hour contour. doesn’t.        FALSE ✓ Since dashed equator line overlaps 12-hour contour line, time year length day equator exactly 12 hours. Presumably daylight starts somewhat sun rises horizon ends somewhat sun goes horizon. word “equinox” comes Latin “equal night.”Question B True False: judge contour plot, equinox every latitude length day somewhat longer length night.    TRUE ✓        FALSE ☹︎ Note neither lines March September equinoxes cross 12-hour length--day contour. Question C USAFA latitude 38.9983° N. Reading contour plot, roughly length (hours) longest day year?","code":"\ntwins <- mosaic::rfun(~ x + y, seed = 302, n=5)\ncontour_plot(twins(x, y) ~ x + y, domain(x=c(0,1), y=c(-1,1)))twins <- mosaic::rfun(~ x + y, seed = 302, n=5)\nslice_plot(__tilde-expression__, __domain__)"},{"path":"params-intro.html","id":"params-intro","chapter":"7 Parameters for functions","heading":"7 Parameters for functions","text":"naked modeling functions provide modeler collection shapes. yet fully suited represent real-world phenomena. illustrate, consider Figure 7.1 shows number officially confirmed cases March 2020. 800The outbreak widely described “exponential,” alongside data Figure 7.1 shows function \\(e^x\\).\nFigure 7.1: Cumulative confirmed COVID-19 cases month March, 2020. red curve \\(e^x\\)\n’s obvious mismatch data function \\(e^x\\). mean COVID pattern exponential?hint comes formula \\(e^x\\). \\(x\\)? Plotted graph, \\(x\\) calender day March. shouldn’t \\(x\\) given hours minutes weeks?want input \\(\\exp()\\) hours, can multiply \\(x\\) 24. input weeks, multiplier \\(\\frac{1}{7} = 0.1429\\). cases, function \\(e^{kx}\\), \\(k\\) 24 hours 0.1429 weeks. Exploring bit, found \\(0.3 \\leq k < 0.5\\) produce functions graphs match data much better naked \\(e^x\\). 810\nFigure 7.2: COVID-19 data compared exponential functions \\(e^{kt}\\). variety possible numerical values \\(k\\) shown.\nmultiplier \\(k\\) \\(e^{kx}\\) called parameter function: number can use set scale input. use exponential function model COVID, ’ve stretch red curve Figure 7.2 clothing naked \\(x\\) \\(k x\\). Perhaps ’s matter personal choice size \\(k\\) best suited model data.personal choice \\(k=0.30\\). reasoning? orange curve parallels COVID data. flaw \\(k=0.30\\) curve lags several data several days. can fix pulling \\(k=0.30\\) curve left. Mathematically can accomplished subtracting days \\(x\\) multiplying \\(k\\), , using function \\[f(x) \\equiv e^{k(x-s)}\\] \\(s\\) stands shift.Figure 7.3 shows orange curve pulling 10 days left. ’s now pretty good match data.\nFigure 7.3: COVID-19 data compared exponential functions \\(e^{k(t-s)}\\).\nNote ’ve aligned orange curve horizontally, seems curve much. green curve much better. much gentler curve, \\(k=0.19\\) pulled little month left. 820By parameterizing exponential function \\(e^{k(x-s)}\\) finding suitable values \\(k\\) \\(s\\), get good match March data. models can sometimes tell us . green curve Figure 7.3 value \\(s\\) -32 days. 32 days March 1 late January. even though didn’t January February data base green curve , late January 2020 regarded beginning outbreak.","code":""},{"path":"params-intro.html","id":"parallel-scales","chapter":"7 Parameters for functions","heading":"7.1 Parallel scales","text":"graphical format using display functions one variable places input horizontal axis output vertical axis. way draw function. Consider everyday objects: thermometer ruler.     object presents read-’s measured—temperature length—two different scales. time, objects provide way convert one scale another.function gives output given input. represent input value position number line—call “axis”—output position another output line, almost always drawn perpendicular one another. two number lines can just well parallel one another. evaluate function, find input value input scale read corresponding output. inverse function can evaluated just easily: switch roles input output scales. 830Taking traditional unit scale input metric scale output, two functions implemented objects :\n\\[\\underbrace{C(F) = \\frac{5}{9}(F-32)}_\\mbox{Fahrenheit Celcius}\\ \\ \\ \\text{}\\ \\ \\ \\ \\underbrace{\\text{cm(inches)} = 2.54 \\times (\\text{inches}-0}_\\mbox{inches cm})\\]\nsimple, straight-line functions, play important role modeling.conversion function can written form \\(\\line(x) \\equiv m (x - x_0)\\). course, multiply \\(m\\) terms parentheses, get \\(\\line(x) = m x - m x_0\\) can written even simply \\(mx + b\\) setting \\(b\\equiv m x_0\\). conversion function simply straight-line function.\\(m\\) \\(x_0\\) parameters straight-line function. terms graph straight-line function, slope x-intercept respectively.Often, functions can parameterized ways. instance, likely learned parameterization \\(m x + b\\), \\(m\\) (still) slope graph \\(b\\) now y-intercept.can call \\(m(x - x_0)\\) “x-intercept parameterization” \\(m x + b\\) \"y-intercept parameterization. equivalent equally good ways parameterizing straight line. still ways parameterizing, style reflecting format specifying two points make line.","code":""},{"path":"params-intro.html","id":"scaling-the-input","chapter":"7 Parameters for functions","heading":"7.2 Scaling the input","text":"turn naked modeling function basic modeling function use \\(\\line()\\) convert input applying naked function. 840To illustrate link basic modeling functions naked progenitors, Figure 7.4 shows model fit COVID-19 data:\nFigure 7.4: graph naked modeling exponential additional scale displayed (red) match COVID-19 data\nfunction drawn simply \\(e^x\\): naked. black horizontal scale shows \\(x\\). match function data, , show basic modeling function, simply add new scale translates \\(x\\) “day March.” ’s red scale. , March 22, 25,000 COVID cases date.naked modeling function give good model COVID case numbers. scale input applying naked function, effectively laying new axis, stretched shifted original, let’s us read number cases.Input scaling empowers naked modeling functions model huge variety phenomena. ’s just one exponential function always looks exactly . huge variety ways scale input. input scaling, naked modeling function puts clothes becomes one basic modeling functions.\n\\[\\underbrace{e^x}_\\mbox{naked modeling function}\\ \\ \\ \\underbrace{e^{k(x-x_0)}}_\\mbox{basic modeling function}\\]\nstraight-line function \\(\\line()\\) written \\(k(x-x_0)\\) rather \\(m(x-x_0)\\). ’s traditional write basic modeling functions\nmay noticed uses \\(k\\) instead \\(m\\) multiplier straight-line function exponent. course, can use whatever name wish parameter. idiom mathematical notation several conventions. Knowing help read mathematics fluently. 850The table shows . Often, multiple parameterizations.","code":""},{"path":"params-intro.html","id":"scale-the-output","chapter":"7 Parameters for functions","heading":"7.3 Scale the output","text":"Just natural input usually needs scaled reaches naked modeling function, output naked function may need scaled presents result suited interpreting real world.\nFigure 7.5: Natural quantities must scaled pure numbers suited naked modeling functions. output pure number scaled natural quantity interest.\noverall result input output scaling smartly dressed modeling function ready engage real world. 860The parameter \\(C\\) often called baseline offset. Statisticians call “intercept,” plays role \\(b\\) straight-line function.working sinusoids, parameter \\(\\) called amplitude.course, ’re already familiar \\(\\) \\(b\\): slope intercept straight line.\nFigure 7.6: Baseline (blue), amplitude (red), period (green) sinusoid.\n\nFigure 7.7: baseline exponential horizontal asymptote. vertical asymptote.\nRecall basic modeling functions constructed corresponding naked modeling functions scaling input.\\[\\text{naked modeling function}\\ \\ \\underset{x\\rightarrow (x-x_0)}{\\overset{\\text{input scaling}}{\\Large\\Longrightarrow}} \\ \\ \\text{basic modeling function}\\]Recognizing axis crossings (y blue, x red) asymptotes (orange) naked modeling functions can help figure parameters \\(\\) \\(x_0\\) input scaling \\((x-x_0)\\) basic modeling functions. ’s reference:following plots shows basic modeling function whose input scaling form \\(x - x_0\\). job figure graph numerical value \\(x_0\\). (Hint: simplicity, \\(x_0\\) questions always integer.)Question plot (), \\(x_0\\)?    -2 ☹︎        -1 ☹︎        0 ☹︎        1 ☹︎        2 ✓ Right. Look input generates peak output value. Question B plot (B), \\(x_0\\)?    -2 ☹︎        -1 ✓ Good. Look input generates positive going zero crossing.        0 ☹︎        1 ☹︎        2 ☹︎ Question C plot (C), \\(x_0\\)?    -2 ☹︎        -1 ✓ Right. location vertical asymtote clue.        0 ☹︎        1 ☹︎        2 ☹︎ Question D plot (D), \\(x_0\\)?    -2 ☹︎        -1 ☹︎        0 ☹︎        1 ✓ input output half way two horizontal asymptotes        2 ☹︎ Question E plot (E), \\(x_0\\)?    -2 ✓ Right. location vertical asymtote clue.        -1 ☹︎        0 ☹︎        1 ☹︎        2 ☹︎ graphs shows two horizontal scales one basic modeling functions. horizontal scale (black red) corresponds naked modeling function?Question graph (), scale corresponds naked modeling function?    black ✓        red ☹︎        neither ☹︎        ☹︎ can’t . ’s one naked function. scale input, becomes “basic modeling function.” Question B graph (B), scale corresponds naked modeling function?    black ☹︎        red ✓ Right. naked modeling function output 1/2 output zero. ’s red scale shows.        neither ☹︎        ☹︎ can’t . ’s one naked function. scale input, becomes “basic modeling function.” Question C graph (C), scale corresponds naked modeling function?Find straight-line function give value red scale point black scale.","code":"## Warning in log(x - 1): NaNs produced## Warning: Removed 214 row(s) containing missing values (geom_path)."},{"path":"params-intro.html","id":"linear-combinations","chapter":"7 Parameters for functions","heading":"7.4 Linear combinations","text":"’ve discussed shifting baseline exponential sinusoid functions adding constant basic modeling function, like :\\[f(t) \\equiv e^{kt} + C\\\\\n\\ \\\\\ng(t) \\equiv \\sin(\\frac{2\\pi}{P} t) + C\\]’ve called output scaling. ’s example much general powerful way contructing modeling functions called linear combinations.linear combination, start one basic functions. discussion, let’s call \\(f_1(t)\\), \\(f_2(t)\\), \\(f_3(t)\\) . making linear combination, multiply basic functions quantity add results together:\\[\\text{linear combination }\\ f_1(t)\\ \\text{}\\ f_2(t): \\ \\ A_1 f_1(t) + A_2 f_2(t)\\]\nquantities \\(A_1\\) \\(A_2\\) called scalars scale functions. (Chapter ?? see make distinction scalar, single quantity, vector, set scalars.)’s common take linear combinations functions different inputs, example\n\\[h(x, y, t) \\equiv 4 e^{-kt} + 7 y + 2\\pnorm(x-3) - 19\\]fields like statistics economics social sciences, well clinical medical research, great number modeling techniques involve combinations functions various inputs.engineering physics, important class functions involves linear combination many sinusoids different periods, e.g. \\[\\text{signal}(t) \\equiv A_1 \\sin\\left(\\frac{2 \\pi}{P_1}t\\right) + \nA_2 \\sin\\left(\\frac{2 \\pi}{P_2}t\\right) + \nA_3 \\sin\\left(\\frac{2 \\pi}{P_3}t\\right) + \\cdots\\]Linear combination functions provides powerful flexible general-purpose modeling technique part many physical systems seem work way part methods finding scalars—\\(A_1\\), \\(A_2\\), —extremely strong theory fast computer implementations automatically solve problem modeler selected functions wants combine. Block 4, use name target problem refer problem finding scalars match well possible linear combination data.expression like \\(e^{kx} + C\\) combines exponential (obviously!) second function isn’t immediately obvious: constant function \\(\\text{constant}(x) \\equiv 1\\). might overkill re-write expression \\(e^{kx} + C\\, \\text{constant}(x)\\) get habit seeing constant function constant presence linear combinations!Polynomials important example linear combinations. Something like \\(p(x) \\equiv + b t + c t^2\\) linear combination constant function, proportionality function, square function.graph shows function linear combination three x-shifted hump functions\n\\[a_1 \\dnorm(x-3.5) + a_2 \\dnorm(x-0.5) + a_3 \\dnorm(x-(-4))\\]Question Estimate scalars \\(a_1, a_2\\), \\(a_3\\) function drawn Plot (). (sure get order right!)\\(a_1 = 0.3, a_2 = 0.15, a_3=0.2\\) ✓ \\(a_1 = 0.15, a_2 = 0.2, a_3=0.3\\) ☹︎ \\(a_1 = 0.2, a_2 = 0.3, a_3=0.15\\) ☹︎ \\(a_1 = 0.15, a_2 = 0.3, a_3=0.2\\) ☹︎ Plot (B) shows function linear combination four x-shifted sigmoid functions. multiplicative scalars either 1 \\(-1\\). Recall handy fiducial point sigmoid function input output 1/2.Question B fiducial points four sigmoids?\\(-8, -2, 3, 7\\) ✓ \\(-6, -4, 0, 6\\) ☹︎ \\(-9, -8, 1, 5\\) ☹︎ \\(-2, 2, 4, 6\\) ☹︎ Question C scalar multipliers sigmoid, order leftmost rightmost?\\(1, -1, 1, -1\\) ✓ \\(1, -1, -1, 1\\) ☹︎ \\(-1, 1, 1, -1\\) ☹︎ \\(-1, 1, -1, 1\\) ☹︎ According data US National Health Nutrition Evaluation Survey, average height adult females 157 cm vs 167 adult males. standard deviations 17 cm 22 cm respectively. good model person--person variation females dnorm(height, mean = 157, sd = 17) similarly males.see overall distribution adult height, regardless sex, make linear combination distribution females males, giving scalar one-half (since population roughly 50-50 female/male).Open SANDBOX construct linear combination function overall distribution. Use scaffolding plot distributions individual sexes overall distribution.people erroneously think since mean height men larger women 10cm, can readily distinguish sexes based height. However, notice overall distribution (plotted black) show dip sexes: clear separation based height.though experiment, let’s increase separation mean height actual value \\(167-157=10\\) cm something larger. can increase separation 5 cm, example, making men’s mean height 167+5.Question ’s smallest increase separation (cm) produces barely visible dip sexes overall height distribution?    5 ☹︎        10 ☹︎        15 ☹︎        20 ☹︎        25 ☹︎        30 ✓ graph shows linear combination two sinusoids, one period 0.6 period 2. also baseline shift. , graph shows function:\\[a_1 \\sin\\left(\\frac{2\\pi}{2}t\\right) + a_2 \\sin\\left(\\frac{2\\pi}{0.6} (t-.3)\\right) + a_3\\]Question \\(a_3\\)?    -4 ✓        -2 ☹︎        0 ☹︎        2 ☹︎        4 ☹︎ Question B \\(a_1\\)?    0 ☹︎        1 ☹︎        2 ✓        3.5 ☹︎ Question C \\(a_1\\)?","code":"\nfemale <- makeFun(dnorm(height, mean = 157, sd=17) ~ height)\nmale   <- makeFun(dnorm(height, mean = 167, sd=22) ~ height)\noverall <- makeFun(female(height)/2 + male(height)/2 ~ height)\n#overall <- makeFun( __your_linear_combination_here__)\n\nslice_plot(female(height) ~ height, domain(height=c(100,220)), color=\"red\",\n           label_x=.5, label_text=\"F\") %>%\n  slice_plot(male(height) ~ height, color=\"blue\", label_text=\"M\", label_x=.8) %>%\n  slice_plot(overall(height) ~ height, color=\"black\", size=2)\ngf_density(~ Height, data = NHANES::NHANES %>% filter(Age > 18)) %>%\n  gf_labs(title=\"Distribution of height, US Adults\", x=\"Height (cm)\")\ndf_stats(Height ~ Gender, data = NHANES::NHANES, mean, sd)"},{"path":"process-of-modeling.html","id":"process-of-modeling","chapter":"8 Process of modeling","heading":"8 Process of modeling","text":"Seen abstractly, mathematical model, using term, set functions represent relationships inputs outputs. 900At simple level, building model can short process:Develop understanding relationship want model. Often, part “understanding” pattern seen data.Choose function type—e.g. exponential, sinusoidal, sigmoid—think good match relationship.Find parameters scales function able accept real-world inputs generate real-world outputs.’s important distinguish two basic types model:Empirical models rooted observation data.Mechanistic models created applying fundamental laws physics, chemistry, .going put mechanistic models , two reasons. First, “fundamental laws physics, chemistry, ” often expressed concepts methods calculus. heading , point don’t yet know core concepts methods calculus. Second, students don’t make careful study “fundamental laws physics, chemistry, ” studied calculus. examples mechanistic models bit hollow point.’ll start empirical modeling: finding functions good summary data. process constructing model good match data called curve fitting, , generally, fitting model.","code":""},{"path":"process-of-modeling.html","id":"variations-from-scaling","chapter":"8 Process of modeling","heading":"8.1 Variations from scaling","text":"good place start building model pick one basic modeling functions. works surprisingly often. remind , nine naked modeling functions: 910The basic modeling functions , replace plain \\(x\\) naked function straight-line function, instance \\(ax + b\\) , equivalently \\((x - x_0)\\). use, parameter \\(\\) often written letter , often, \\(b\\) \\(-x_0\\) part needed.common forms basic modeling functions encounter:helps making selection ready mind basic shape function families. review, revisit Section 2.3.Remember also , general, scale inputs scale output. means choose model family, don’t worry first numbers axes. (course, numbers critically important later process!) scaling , however, allow us consider variations shapes modeling functions. particular, input scaling lets us flip shape right--left. output scaling lets us flip shape top--bottom.\\(f(t)\\), basic shape\\(f(-t)\\), flipped right--left\\(-f(t)\\), flipped top--bottom\\(-f(-t)\\), flipped top--bottom right--leftFor functions sinusoid, flipping much use, since flipped sinusoid curve still sinusoid, although shifted input. Similarly, right--left flipped hump function shape original. straight-line function, flipping either sort accomplishes thing: changing sign slope.exponential function, two possible types flipping—right--left top--bottom—produce four different curves, exponential, shown Figure 8.1.\nFigure 8.1: Four variations exponential functions.\nthree expressions\\[e^{kt}\\ \\ \\ \\ \\ 10^{t/d} \\  \\ \\ \\ \\  2^{t/h}\\]produce value \\(k\\), \\(d\\) \\(h\\) corresponding numerical values.scaffolding expression plotting \\(2^{t/h}\\) \\(-4 \\leq t \\leq 12\\) \\(h = 4\\). also plots \\(e^{kt}\\) \\(10^{t/d}\\)task modify values d k three curves lie top one another. (Leave h value 4.) can find appropriate values d k accomplish means like, say, using algebra exponents using trial error. (Trial error perfectly valid strategy regardless high-school math teachers might said “guess check.” trick make new guess systematically based previous ones observation previous ones performed.)found values k d suited task …Essay question tmp-1: Enter numerical value best estimate k.","code":"\nfa <- makeFun(2^(t/h) ~ t, h = 4)\nfb <- makeFun(10^(t/d) ~ t, d = 10)\nfc <- makeFun(exp(k*t)  ~ t, k = 0.1)\n\nslice_plot(fa(t) ~ t, domain(t = c(-4, 12))) %>%\n  slice_plot(fb(t) ~ t, color=\"blue\") %>%\n  slice_plot(fc(t) ~ t, color  = \"red\") %>%\n  gf_lims(y = c(0, 8))"},{"path":"process-of-modeling.html","id":"fit-exponential","chapter":"8 Process of modeling","heading":"8.2 Curve fitting an exponential function","text":"exponential function particularly useful quantity want model shows constant proportional increase. Many quantities everyday life way. instance, increase salary typically presented format like “3% increase.” population growth country often presented “percent per year.” Inflation price goods similarly described percent per year. Interest money bank savings account also described percent per year. bad fortune owe money loan shark, proportional increase might described “percent per month” “percent per week.” 920When know “percent increase per time” quantity whose initial value \\(\\), exponential function easy write : \\[f(t) = (1+r)^t\\]\nnumber \\(r\\) often called interest rate discount rate given percent.Regrettably, ’s extremely easy amd common forget rules addition percent. \\(r = 5\\%\\), \\((1+r) = 1.05\\), 6. Always keep mind \\(5\\%\\) means \\(\\frac{5}{100}\\).Another source error stems tradition mathematics using number \\(e=2.718282\\) “natural” base exponential function, whereas \\(f(t) = (1+r)^t\\) base \\(1+r\\).can translate exponential \\(b^t\\) base \\(b\\) “natural” base. just matter calculating appropriate parameter \\(k\\) \\(e^k = b\\). Using logarithms, \\[e^k = b\\ \\ \\implies \\ \\  k=\\ln(b)\\] instance, \n\\(r=5\\%\\) per year, ’ll \\(k = \\ln(1+r) = \\ln(1.05) = 0.488\\) per year.Almost everybody happier arithmetic numbers like 2 10 rather \\(e=2.718282\\). reason, may see formulations exponential function \\(g(t) \\equiv 2^{t}\\) \\(h(t) \\equiv 10^{c t}\\). Remember \\(2^{t}\\) \\(e^{}\\), although exponential functions, quantitatively different. want write \\(2^{}\\) using “natural” base, \\(e^{\\ln(2) \\, t }\\). Similarly, \\(10^{ct} = e^{\\ln(10) c\\, t}\\).Exponential functions also describe decrease decay. Just replace \\(t\\) \\(-t\\). , movie decreasing quantity just movie increasing quantity played backwards time! 930Figure 8.2 shows data collected Prof. Stan Wagon support making detailed mechanistic model everyday phenomenon: cooling mug hot beverage room temperature. mug started room temperature, measured 26 degrees C. time 0 poured boiling water kettle measured temperature water next hours.\nFigure 8.2: Stan’s data\ntask translate data form function takes time input returns temperature output. model useful , say, filling gaps data. instance, might want find temperature water immediately poured kettle mug.Looking data, one sees temperature decreases along curve: cooling fast first slowly. pattern flipped right--left exponential. (Figure 8.1(B)) can imagine exponential, \\(e^{kt} + C\\) suitable model form cooling water.remains find parameters \\(\\), \\(k\\), \\(C\\). general process curve-fitting exponential. Later, ’ll apply process specifically water-cooling situation.General process curve-fitting exponentialStep 0: Check data show exponential pattern one variations, namely smooth increase decrease leveling beyond value \\(t\\). isn’t true, reconsider whether using exponential function first place.Step 1 data show exponential growth exponential decay? ’s exponential growth, flat region Step 0 left \\(k\\) positive. exponential decay, flat region right \\(k\\) negative.Notice question “growth decay” depends sign parameter \\(k\\). can exponentially decaying process ’s increasing. Consider, instance, speed car merges onto highway slow speed entrance ramp. car’s velocity increasing, approach highway speed rate increase gets smaller. ’s exponential decay.Step 2 baseline? ’re going put aside \\(k\\) moment find value output approached asymptotically, , height level zone data. height coefficient \\(\\) linear combination.Step 3 know baseline, ’re set find numerical value parameter \\(k\\).Pick point data far baseline. Call input \\(t_1\\).Scan forward backward time find point data ’s vertically half way original point toward baseline. Call input point \\(t_{1/2}\\). difference , \\(t_1 - t_{1/2}\\) called half-life halving-time ’s negative doubling time ’s positive.parameter \\(k\\) \\(0.693 / (t_1 - t_{1/2})\\). Double check sign \\(k\\) make sure ’s consistent saw Step 1. (Incidently, \\(0.693 = \\ln(2)\\). 2 2 doubling halving.)Step 4 Now numerical values baseline \\(\\) parameter \\(k\\), calculating value \\(B\\) straightforward.\n. Pick \\(t_0\\) ’s reasonably well represented data. Find vertical coordinate represented data near \\(t_0\\). Call \\({\\cal D}\\).\nii. Solve respect \\(B\\) equation \\(+ B e^{k t_0} = {\\cal D}\\). Things particularly easy can use \\(t_0 = 0\\). just straight calculate \\(B = {\\cal D} - \\).Step 5 Plot function \\(+ B e^{k t}\\) using values \\(\\), \\(B\\), \\(t\\) just found. satisfied, tweak parameters bit .Exponential curve fitting applied water-cooling dataLet’s illustrate general process water-cooling data, redrawn Figure 8.3. 950\nFigure 8.3: cooling-water data, repeated convenience.\nStep 0: data indicate smooth curve. \\(t\\) gets large, curve approaches constant. exponential model reasonable.Step 1: flat zone data right. ’ve got exponential decay \\(k < 0\\).Step 2: curve looks like ’s leveling temperature 25 degrees C large \\(t\\). \\(\\approx 25^{\\circ} \\text{C}\\).Step 3:point furthest baseline located \\(t_1 = 15 \\text{sec}\\) value \\({\\cal D} \\approx 80^\\circ\\text{C}\\).\\(55^\\circ\\text{C}\\) baseline. want find value \\(t_1\\) temperature half way 80 baseline. ’s temperature \\(80 - 55/2 = 53.5\\). Scanning right, function can imagine going data crossed \\(53^\\circ\\) \\(t_{1/2} = 40\\). Thus, half-life estimated 25s.parameter \\(k\\) therefore $k\\(0.693 / \\mbox{half-life}) = - 0.63 / 25 = -0.0277\\). Since identified Step 1 exponential decay involved, expect \\(k\\) negative. .Step 4.know \\(\\approx 25\\) \\(k \\approx -0.0277\\). also now \\(t=15\\) function output \\({\\cal D} = 80^\\circ\\).means \\(25^\\circ + B e^{- 0.0277 \\times 15} \\approx 80^\\circ = 25 + 0.66 B\\). Solving \\(B\\) gives \\(B = (80 - 25)/0.66 = 83.3\\)Step 5. Graph function data.\nFigure 8.4: exponential function roughly aligns data.\nBargain Basement store wants sell goods quickly. Consequently, reduce product’s price \\(P\\) 5% per day.Question jacket costs $80 today, much cost \\(t\\) days?\\(P = 80 - 5t\\) ☹︎ Remember, 5 percent exactly 0.05 \\(P = 80 - 4t\\) ☹︎ Remember, 4 percent exactly 0.04 \\(P = 80 - 0.05t\\) ☹︎ decrease price 5 cents every day. \\(P = 80 (0.05)^t\\) ☹︎ day’s price 5% previous day’s price. \\(P = 80 (0.95)^t\\) ✓ ’ll need open sandbox next question.’re ! Remember, raise number power, can use expression like `0.95^7$.Question B decided like $80 jacket, budget $60. long wait coming back Bargain Basement store.?    3 days ☹︎ day 3 price \\(0.95 imes 0.95 imes 0.95 imes 80\\). ’s budget.        4 days ☹︎ day 4 price \\(80 \\times 0.95^4\\)= $65.16. much!        5 days ☹︎ day 5 price \\(80 \\times 0.95^5\\)= $61.90. Close, still higher budget.        6 days ✓ Wikipedia entry “Common Misconceptions” used contain item:cooks believe food items cooked wine liquor non-alcoholic, alcohol’s low boiling point causes evaporate quickly heated. However, study found alcohol remains: 25% 1 hour baking simmering, 10% 2 hours.modeler’s go-function type events like evaporation alcohol exponential: amount alcohol evaporates , constant conditions (e.g. oven’s heat), proportional amount alcohol hasn’t yet evaporated.Question ) Assume 25% alcohol remains 1 hour? process exponential, much remain 2 hours?    10% ☹︎ ’s study reported found, ’s consistent exponential process decays 25% one hour        25% ☹︎ Exponentials decay zero eventually, don’t expect things stay still one hour.        25% 25% ✓ know 75% eliminated 1 hour, leaving 25%. continuing exponential process , next hour eliminate 75% amount start hour. hour 2 ’ll 25% amount hour 1, 25% original amount.        75% ☹︎ ’s much eliminated first hour, much remains 2 hours.        75% 75% ☹︎ exponential process, moment rate decay (e.g. 75% per hour) constant proportion amount still . one hour, 25% alcohol remaining. decay rate 75% per hour. next hour, ’ll lose 75% original 25%, giving us 25% original amount. Question B B) half-life exponential process decays 25% one hour?15 minutes ☹︎ provides time four halvings one hour, leave \\(\\frac{1}{2} \\times \\frac{1}{2} \\times \\frac{1}{2} \\times \\frac{1}{2} = 1/16\\) original 1/4. 30 minutes ✓ gives time two halvings one hour, bringing us 25% observed. 45 minutes ☹︎ Two halvings bring us 25%. rate, take 90 minutes get 25%, 60 minutes observed. none ☹︎ Let’s change pace think “10% 2 hours” observation. First, recall amount left \\(n\\) halvings \n\\(\\mbox{amount_left}(n) \\equiv \\frac{1}{2}^n\\)\nexponential function base 1/2.’re going carry guess--check procedure find zero function \\(\\text{amount_left}(n) - 0.10\\) , ’ll find \\(n\\) generate stated output value (e.g. 10%).\nOpen sandbox copy scaffolding, include definition amount_left() function. “guess” input. Change guess get output 10%.Question C C) Use amount_left() figure many halvings takes bring something 10% original amount.    2.58 ☹︎        3.32 ✓        3.62 ☹︎        3.94 ☹︎        4.12 ☹︎ Another way find input \\(n\\) generates output 10% construct inverse function \\(\\text{amount_left}()\\).computer already provides inverse functions \\(2^n\\) \\(e^n\\) \\(10^n\\). names log2(), log(), log10() repectively. Using log2(), write function named log_half() gives inverse function \\((1/2)^n\\). Remember, input inverse function corresponds 10%; output \\(n\\).Question D answer got part C) number halvings needed reach 10%. number occurs 2 hours (, 120 minutes), half life stated minutes.    30 ☹︎        35 ☹︎        36 ✓        38 ☹︎        42 ☹︎        47 ☹︎ Suppose compromise half-life needed reach 25% one hour half-life needed reach 10% two hours. Use, say, 33 minutes compromise half life. Using sandbox , calculate much left 1 hour compromise half life, much left 2 hours.Question E much left 1 hour 2 hours half life 33 minutes?28% 8% ✓ 31% 4% ☹︎ 30% 9% ☹︎ 27% 9% ☹︎ likely heard phrase “exponential growth” used describe COVID-19 pandemic. Let’s explore idea using actual data.COVID-19 Data Hub collaborative effort universities, government agencies, NGOs provide --date information pandemic. ’re going use data US whole-country level. (’s also data state county levels.)Perhaps simplest display show number cumulative cases (confirmed variable) deaths function time. can see documentation dataset COVID-19 Data HubOpen sandbox make plot.’re going plot confirmed cases blue deaths red.Question mid July, many confirmed cases ? (Note labeled tick marks refer beginning month, point labeled Feb February 1.)300,000 ☹︎ number 1e6 means 1,000,000, , six zeros following one. 350,000 ☹︎ number 1e6 means 1,000,000, , six zeros following one. 400,000 ☹︎ number 1e6 means 1,000,000, , six zeros following one. 3,000,000 ☹︎ Mid July tick mark one labelled Jul. 3,500,000 ✓ 4,000,000 ☹︎ Mid July tick mark one labelled Jul. ’re going something make graph informative. (least, informative understand logarithms exponentials!)’s graphic , taking logarithm number cases (, confirmed) number deaths. Since ’re taking logarithm y-variable, called “semi-log” plot.beginning March US, thought US cases people travelling US hot spots China Italy US, opposed contagion people within US. (contagion called “community spread.”) let’s focus data start March onward.Exponential growth appears straight-line pattern semi-log plot. Obviously, overall pattern curves straight line. explanation exponential growth rate changes time, perhaps due public health measures (like business closing, masks, etc.)first (official) US death Covid-19 recorded recorded Feb. 29, 2020. Five deaths occurred two days later, bringing cumulative number 6.Question B red data points Feb 29/March 1 show zero vertical scale. red data point March 2 around 2 vertical scale. consistent facts stated ?. data contradict facts. ☹︎ Think means 0 vertical scale. Yes. vertical scale log units, 0 corresponds 1 death, since \\(\\ln 1 = 0\\). ✓ . vertical scale doesn’t mean anything. ☹︎ can see plotting command quantity vertical axis : log(confirmed) blue dots log(deaths) red. One purposes making semi-log plot enable compare large numbers small numbers graph. instance, semi-log plot, can easily see first death occurred, fact invisible plot raw counts (first plot exercise).Another feature semi-log plots preserve proportionality. Look plot raw counts note curve number deaths much shallower curve number (confirmed) cases. Yet semi-log plot, two curves practically parallel.semi-log plot, arithmetic difference two curves tells proportion curves. parallel curves mean proportion practically constant.\nCalculate proportion deaths cases month May. ’s mathematical hint: \\(\\ln \\frac{}{b} == \\ln - \\ln b\\). interested \\(\\frac{}{b}\\).Question C proportion deaths cases month May?0.2% ☹︎ Remember, ’s natural logarithm ’s plotted, inverse function exp(). 1% ☹︎ correspond (vertical) difference curves 4.6 log units. really big? 2% ☹︎ correspond (vertical) difference curves 4 log units. really big? 6% ✓ Good. calculated exp(log(deaths) - log(cases)) gives answer around 0.06, 6%. 25% ☹︎ ’m really sure lead answer. ’re making mistake didn’t anticipate. 50% ☹︎ ’s true May log(deaths) 12, log(cases) 14, 12/14 indeed greater 50%. , log scale, proportion relates difference logs, ratio. many applications, people use semi-log plots see whether pattern exponential compare small large numbers. Often, people find easier vertical scale written original units rather log units. accomplish , vertical scale can ruled raw units spaced logarithmically, like :labels vertical axis show raw numbers, position shows logarithm numbers.next question meaning interval grid lines vertical axis. Note horizontal axis, spacing adjacent grid lines half month.Question D numerical spacing (terms raw counts) adjacent grid lines vertical axis?\\(10^1\\) ☹︎ true, moving lowest label (1e+01, , 10) next grid line 20, 30, 40. \\(10^2\\) ☹︎ true, moving lowest label (1e+01) next grid line 110, 210, 310. factor 10. ✓ Right. Every time move one grid line, raw number increases ten-fold, 10, 100, 1000, 10,000, . phrase factor 10 means multiply 10, add 10. factor 100. ☹︎ ’re thinking along right lines, difference every second grid line, adjacent grid lines. ","code":"\namount_left <- makeFun((1/2)^n ~ n)\namount_left(0)## [1] 1log_half <- makeFun( log2(...your stuff here ...) ~ x)\ngf_point(confirmed ~ date, data = Covid_US, color = \"blue\") %>%\n  gf_point(deaths ~ date, color = \"red\")\ngf_point(log(confirmed) ~ date, data = Covid_US, color = \"blue\") %>%\n  gf_point(log(deaths) ~ date, color = \"red\") \ngf_point(confirmed ~ date, data = Covid_US, color = \"blue\") %>%\n  gf_point(deaths ~ date, color = \"red\") %>%\n  gf_refine(scale_y_log10())## Warning: Transformation introduced infinite values in continuous y-axis\n\n## Warning: Transformation introduced infinite values in continuous y-axis"},{"path":"process-of-modeling.html","id":"fit-periodic","chapter":"8 Process of modeling","heading":"8.3 Curve fitting a periodic function","text":"Figure 8.5 shows tide level Providence, Rhode Island, starting midnight April 1, 2020 recorded every minute four half days. (data collected US National Oceanic Atmospheric Administration. Link) 960\nFigure 8.5: four days tide-level data Providence, Rhode Island\n’s hard see ’s going . tide rises falls every 12 hours. difference high tide low tide little one meter. tide gauge calibrated typical reading 1 meter, although don’t know respect . (Certainly sea level, since typical reading around zero.)simple description tells almost everything needed construct /B model tide level using sinusoid, , function form \\[+ B \\sin(2\\pi t/P)\\] procedure straightforward:Step 0: Determine whether sinusoid model appropriate. know, sinusoids oscillate repeatedly steady period. certainly seems case . sinusoids also steady peak trough values cycle. ’s approximately true Providence data. Models inevitably involve approximation. ’ll keep eye whether fixed amplitude feature sinusoidsStep 1: Choose sensible value represent low point repeatedly reached. 0.5 m seems appropriate , obviously exact position trough cycle varies 4.5 day duration data. Similarly, peak near 1.6 m. Parameter \\(\\) mean peak trough values: \\(\\frac{1.6 + 0.5}{2} = 1.05\\) m . Parameter \\(B\\) half difference peak trough values: \\(\\frac{1.6 - 0.5}{2} = 0.55\\). Parameter \\(\\) called baseline sinusoid. Paramter \\(B\\) amplitude. (Note convention, amplitude always half high--low range sinusoid.)Step 2: Estimate period \\(P\\) sinusoid. can done ruler: horizontal duration complete cycle. like use time peaks, time troughs work just well. Another good choice time positive sloping crossings baseline. (careful. time successive baseline crossings, one positive sloping negative, give just half period.)scale plot, ’s hard read time first peak. , zoom becomes obvious.\nFigure 8.6: Zooming start data (left) last part data (right).\nleft panel Figure 8.6 shows 24 hours start record. first peak 7 hours, second 18 hours. indicates period 18 - 7 = 11 hours.Step 3 Plot model data. Replacing symbols \\(\\), \\(B\\), \\(P\\) estimates, model \\[\\require{color}\n{\\color{green}\\mbox{tide}(t) \\equiv 1.05 + 0.55 \\sin(2\\pi t/11)}\\]Figure 8.7 shows model \\(\\color{green}\\mbox{green}\\).\nFigure 8.7: sinusoid fails align timing peaks troughs.\nperson breathes every three seconds. volume \\(V\\) air person’s lungs varies minimum \\(2\\) liters maximum \\(4\\) liters. Assume time \\(t\\) measured seconds.Remember full cycle sine wave \\(\\sin(x)\\) involves \\(x\\) going starting value value plus \\(2 \\pi\\).Question following appropriate models \\(V(t)\\)?\\(V(t) \\equiv 2 + 2 \\sin \\left( \\frac{\\pi}{3} t \\right)\\) ☹︎ varies minimum 0 maximum 2. \\(V(t) \\equiv 3 + \\sin \\left( \\frac{2\\pi}{3} t \\right)\\) ✓ Good. class, generally write sine function like \\(\\sin(2 \\pi t/P)\\) means overall argument sine function go 0 \\(2 \\pi\\) \\(t\\) goes 0 \\(P\\). \\(V(t) \\equiv 2 + 2 \\sin \\left( \\frac{2\\pi}{3} t \\right)\\) ☹︎ varies minimum 0 maximum 2. \\(V(t) \\equiv 3 + \\sin \\left( \\frac{\\pi}{3} t \\right)\\) ☹︎ Right amplitude baseline: minimum 2 liters maximum 4 liters. period wrong. Going \\(t=0\\) \\(t=3\\) produce full cycle sine function. argument go 0 $ 3 = \\(\\pi\\). 3 seconds, half cycle completed. Question B Given respiratory period 3 seconds/breath, respiratory frequency units breaths/minute?20 breaths/minute ✓ Right. breath takes 1/20th minute, 3 seconds, period specified question. 3 breaths/minute ☹︎ true, breath take 20 seconds complete. 1/3 breath per minute ☹︎ breaths completed every three seconds, 1/3 breath completed second. problem asked breaths per minute. 20 seconds per breath ☹︎ period units seconds per breath, frequency units breaths per second. Frequency reciprocal period (vice versa). respiratory cycle can divided two parts: inspiration expiration. Please experiment. Using clock watch, breath total period 3 seconds/breath, , complete one breath every three seconds. practiced can without forcing either phase breathing, make rough estimate fraction cycle inspiration fraction expiration. (“correct/incorrect” answers right people. natural respiration might different.)Question C true?Inspiration lasts longer expiration ✓ Expiration lasts longer inspiration ☹︎ Maybe , people. Try breathing counting 1-2-3 exhaling counting 1-2-3-4-5-6. Likely, ’s natural pattern . Inspiration expiration consume fraction complete cycle. ☹︎ People can consciously counting 1-2-3 inspiration another 1-2-3 expiration. usually feels forced unnatural. graph shows recording “spirometer,” instrument recording respiration. Like many old instruments, trace spirometer made pen end swinging arm paper moving steadily beneath . arm exactly aligned horizontal axis. Nonetheless, able estimate appropriate amplitude period trace. (dm\\(^3\\) cubic-decimeters: tenth meter cubed. liter.)Question appropriate estimates period amplitude respiration trace?\\(\\pm 1\\) liter 3 seconds. ☹︎ true, 120 seconds recording expect see 40 cycles respiration. \\(\\pm 1\\) liter 5 seconds. ✓ \\(\\pm 1\\) liter 7.5 seconds. ☹︎ true, expect see 16 cycles respiration 120 seconds recording. ","code":""},{"path":"process-of-modeling.html","id":"curve-fitting-a-power-law-function","chapter":"8 Process of modeling","heading":"8.4 Curve fitting a power-law function","text":"using power-law functions early math science education. examples: 970The reason power-law functions important role science logic physical quantities length, mass, time, area, volume, force, power, . ’ll discuss length later course principles appear throughout calculus.finding power law \\(f(x) \\equiv x^p\\) provides good match data, ’ll need additional tools introduced Chapter 15.","code":""},{"path":"process-of-modeling.html","id":"hump-and-sigmoid-functions","chapter":"8 Process of modeling","heading":"8.5 Hump and sigmoid functions","text":"last two basic modeling functions express important idea modeling: localness. put concrete terms, imagine creating function depict elevation sea level long road function distance miles, \\(x\\), start road. road level 1200 feet elevation, sensible model \\(\\mbox{elevation}(x) = 1200 \\text{ft}\\). road gently sloping, better model \\(\\mbox{elevation}(x) = 1200 + 3 x\\). 980Now let’s add bump road. bump local feature, often feet wide. , perhaps road crossing mountain range. ’s also local feature, unlike bump road mountain range extends many miles.basic modeling function suited represent bumps road, potholes, mountain ranges called hump function.hump function two parameters: location hump, ’ll call center parameter, sideways extent hump, ’ll call spread. Figure ?? shows hump functions different parameters.’s easy read center parameter graph hump. ’s location top hump. (mentioned mathematical word “location top” argmax; value input function produces maximum output.)spread parameter also pretty straightforward, first become familiar unusual feature hump function. output hump function far center practically zero. exactly zero. can see graphs hump function long flanks approach zero output less manner exponential function. means can’t measure spread hump function distance zeros either side peak. Instead, need convention allow us precise quantifying admittedly vague concept width.simple convention spread “half-width half-height.” Come half-way peak hump. Panel (c) Figure ?? marks elevation thin, red, horizontal line. Along line, measure width hump, marked thick red line Panel (c). spread parameter half width hump measured way. 990If keen eye, ’ll notice red line exactly half-way peak. ’s 39.35% peak. official definition width hump actually half-width half-height, simple formulation us present.Another seeming oddity hump function value maximum. seemed natural define 1, -called “unit height.” way actually works different: maximum height set area hump function 1.business area make sense ’ve learned calculus tools, specifically “differentation” “integration.” now though …Consider another road feature, local change one elevation another might accomplish ramp. basic modeling function corresponding local change one level another sigmoid function. Figure ?? shows three sigmoid functions.\nname “sigmoid” comes vague resemblance graph letter S (“sigma” Greek: ς).parameters sigmoid function hump function: center width. center easy estimate graph. ’s value input produces output 0.5, half-way max min sigmoid. hump function, width measured according convention. width change input needed go output 0.5 output 0.8413. use 0.8413 must seem loony first exposure, reason. ’ll need calculus tools can make sense.Hump functions sigmoid functions center width parameters close relationship. slope sigmoid function corresponding hump function. Figures ?? ?? show corresponding hump sigmoid functions. far left, sigmoid function effectively flat: slope near zero. Moving toward center sigmoid gentle slope: low number. center, sigmoid steepest: higher number. slope sigmoid becomes gentle gradually falling zero. Near zero, low, higher, low , falling zero: ’s also description hump function!R, name sigmoid function pnorm(). hump dnorm(). parameters specify center spread named mean sd. word “mean” accurately conveys idea “center.” nice able say sd comes spread, fact sd short standard deviation, old-fashioned term familiar students statistics. 1000“Standard deviation” -putting many people really replaced something less weird, perhaps typical spread. “standard” can interpreted “widely used convention.” “deviation?” hump function first appeared two-hundred years ago part theory measurement error. context “error,” “deviation” might made sense. theory measurement error long ago became general theory variation. Errors just one source variation.hump function mainly use CalcZ implemented R dnorm(x, mean, sd). input called mean corresponds center hump. input called sd gives width hump.sandbox, make slice plot dnorm(x, mean=0, sd=1). varying value width, figure read value directly graph.plot , one double-headed arrows represents width parameter. others misleading.Question arrow shows correctly width parameter hump function graph arrows?    top ✓        middle ☹︎        bottom ☹︎        none ☹︎ Question B value center graph arrows?Hump functions sigmoidal functions come pairs. every possible sigmoid, corresponding hump gives, value input, slope sigmoid.following graphs shows sigmoid hump function. two might might correspond one another. , output hump might slope sigmoid, hump might correspond sigmoid. Remember, ’re comparing output hump slope sigmoid.graph, say whether hump sigmoid correspond one another. , choose one reasons .Question Graph ()hump sigmoid correspond. ✓ peak hump occur value \\(x\\) sigmoid steepest. ☹︎ \\(x\\) sigmoid steepest? \\(x\\) hump highest? numerical value output hump function , \\(x\\), much larger numerical value slope sigmoid. ☹︎ calculate numerical value slope sigmoid? Question B Graph (B)hump sigmoid correspond. ☹︎ peak hump occur value \\(x\\) sigmoid steepest. ✓ hump peaks \\(x=2\\) steepest part sigmoid \\(x=4\\) numerical value output hump function much larger numerical value slope sigmoid. ☹︎ calculate numerical value slope sigmoid? Question C Graph (C)hump sigmoid correspond. ✓ peak hump occur value \\(x\\) sigmoid steepest. ☹︎ \\(x\\) sigmoid steepest? \\(x\\) hump highest? numerical value output hump function , \\(x\\), much larger numerical value slope sigmoid. ☹︎ calculate numerical value slope sigmoid? graph D, several hump functions shown, one corresponds sigmoid.Question D hump corresponds sigmoid?mind hump function sigmoid function form corresponding pair.Question stories consistent relationship hump corresponding sigmoid?hump amount water bathtub sigmoid time spend bath. ☹︎ hump amount water bathtub sigmoid rate water flows tap. ☹︎ turn tap . ’s sigmoid looks like. hump rate water flows tap sigmoid amount water bathtub. ✓ hump indicates amount drain open sigmoid amount water bathtub. ☹︎ Shouldn’t amount water go drain open? data frame named EbolaSierraLeone10 records cumulative number Ebola cases Sierra Leone May 1, 2014 December 16, 2015.Let’s find well sigmoidal function models data.’s straightforward estimate values parameters data sigmoidal form. walk process, next plot shows simulated data genuine sigmoid function.Sketch S-shaped curve smoothly follows data.Sketch S-shaped curve smoothly follows data.Find top plateau S-curve. indicated red line graph . parameter simply height plateau, case \\(y \\approx 15\\).Find top plateau S-curve. indicated red line graph . parameter simply height plateau, case \\(y \\approx 15\\).Come half way plateau. , ’s 15/2 7.5, indicated horizontal blue line segment. Find inverse S-curve half-way point onto horizontal-axis. , gives \\(t \\approx 5\\). parameter center value.Come half way plateau. , ’s 15/2 7.5, indicated horizontal blue line segment. Find inverse S-curve half-way point onto horizontal-axis. , gives \\(t \\approx 5\\). parameter center value.center S-shaped curve, follow curve upward 2/3 way plateau. diagram, point marked green line \\(t \\approx 7\\). width distance along horizontal axis blue centerline green line. , ’s \\(7 - 5\\) giving 2 width.center S-shaped curve, follow curve upward 2/3 way plateau. diagram, point marked green line \\(t \\approx 7\\). width distance along horizontal axis blue centerline green line. , ’s \\(7 - 5\\) giving 2 width.might also want trace S-curve downward centerline 2/3 way zero. ’s indicated left green line. standard sigmoid, two green lines equally spaced around centerline. course data may shape standard sigmoid, might find two green lines equally spaced center.might also want trace S-curve downward centerline 2/3 way zero. ’s indicated left green line. standard sigmoid, two green lines equally spaced around centerline. course data may shape standard sigmoid, might find two green lines equally spaced center.Put aside moment Ebola data doesn’t look exactly like standard sigmoid function. Follow procedure, nevertheless.Question top plateau?Day 600. ☹︎ Measure height plateau, starts horizontally. 14,000 cases ✓ 20,000 cases ☹︎ Read vertical axis markings carefully. None ☹︎ One answers pretty good. Question B centerline?Near Day 200 ✓ Near Day 300 ☹︎ ’s center vertical scale, day curve reaches half-way eventual plateau. 7000 cases ☹︎ ’s half-way plateau, answer want day curve reaches point. Question C Now find width parameter. curve looks classically sigmoidal left centerline right, follow curve downward Step 4 algorithm find parameters. ’s good estimate width?50 days ✓ 100 days ☹︎ wide! 10 days ☹︎ small 2500 cases ☹︎ width measured along horizontal axis, vertical Open sandbox use following commands plot Ebola data along sigmoid matched data eye. commands also generate plot “refined” estimate found fitModel() starting -eye parameters. (Note: ’ll need fill blanks start scaffolding -eye parameters running code.)can’t predict see graph, since depends starting estimates used , center width.Essay question tmp-3: Write estimates made eye , center width. explain words major systematic deviations ‘refined’ model data.idea fitting sigmoidal curve globally data roughly sigmoidal might forgiven since ’s just textbook exercise. real-world problem, three rookie mistakes approach, despite technical sophistication.model built purpose. ’s statement exercise purpose .data good enough representation historical pattern. ’s need adorn fitted curve.mathematical processes justify expectation sigmoid curve useful based idea underlying mechanism phenomenon unchanging. epidemic, mechanism contagion. saying “mechanism unchanging,” mean person--person transmission Ebola virus happens way beginning epidemic middle end. strong public health interventions introduced control epidemic. ’s change mechanism.Question One curves plot () naked modeling function. one?    black ✓        blue ☹︎        green ☹︎        red ☹︎        none ☹︎ Question B Taking \\(f()\\) naked modeling function plot (), one curves \\(f(-x)\\)?    black ☹︎        blue ☹︎        green ☹︎        red ✓        none ☹︎ Question C One curves plot (B) naked modeling function. one?    black ☹︎        blue ☹︎        green ☹︎        red ✓        none ☹︎ Question D Taking \\(f()\\) naked modeling function plot (B), one curves \\(-f(x)\\)?    black ☹︎        blue ✓        green ☹︎        red ☹︎        none ☹︎ blue curve plot (C), know, sinusoid naked modeling function.Question E functions green curve?\\(\\sin(-x)\\) ☹︎ \\(-\\sin(x)\\) ☹︎ \\(-\\sin(-x)\\) ☹︎ \\(\\sin(-x)\\) \\(-\\sin(-x)\\) ☹︎ \\(\\sin(-x)\\) \\(-\\sin(x)\\) ✓ sine function -called “odd” symmetry around \\(x=0\\). Question F One curves plot (D) naked modeling function. one?    black ☹︎        blue ☹︎        green ✓        red ☹︎        none ☹︎ Question G Taking \\(f()\\) naked modeling function plot (D), one curves \\(-f(-x)\\)?    black ✓        blue ☹︎        green ☹︎        red ☹︎        none ☹︎ curves graph exponential function \\(e^{kt}\\), various values \\(k\\).Question order \\(k\\) smallest (negative) k largest?orange, black, red, green, blue ✓ Exponential functions grow slowly \\(k\\) small absolute value black, orange, blue, green, red ☹︎ Sorry. Notice red curve grows slowly. means smallest \\(|k|\\). red, green, blue, orange, black ☹︎ orange black curves negative \\(k\\), smaller curves positive sign. ","code":"\nslice_plot(dnorm(x, mean=0, sd=1) ~ x,\n           domain(x = c(-4, 4)))\ngf_point(Cases ~ Day, data = MMAC::EbolaSierraLeone)A_estimate <-  _____\ncenter_estimate <- _____\nwidth_estimate <- ______\n\nguessed_fun <- makeFun(A* pnorm(Day, center, width) ~ Day,\n                       A = A_estimate,\n                       center = center_estimate,\n                       width = width_estimate)\n\n\nrefined_fun <- fitModel(Cases ~ A * pnorm(Day, center, width),\n                 data = EbolaSierraLeone,\n                 start = list(A=A_estimate, \n                              center=center_estimate,\n                              width=width_estimate))\n\ngf_point(Cases  ~ Day, data = MMAC::EbolaSierraLeone)  %>%\n  slice_plot(guessed_fun(Day) ~ Day, color=\"red\") %>%\n  slice_plot(refined_fun(Day) ~ Day, color=\"blue\")"},{"path":"fun-slopes.html","id":"fun-slopes","chapter":"9 Slope function","heading":"9 Slope function","text":"purposes, definition calculus 1100The use functions model explore continuous changeThe agenda chapter give specific mathematical meaning word “change.”","code":""},{"path":"fun-slopes.html","id":"change-and-slope","chapter":"9 Slope function","heading":"9.1 Change and slope","text":"solid, intuitive sense “change” means. mathematics, especially mathematics functions, change simple meaning already touched previous math education.word encapsulates “change” high-school math slope. instance, ’ve undoubtedly calculate slope straight line graph. learned “rise” “run” read graph formula. slope ratio: rise run.Slope lovely metaphor change, since everyone intuitive sense slope road hillside. learned apply intuition reading graphs slope line. ’ll exploit intuitive ability read landscape order introduce abstract mathematical ideas --earth setting. ’s effective pedagogical strategy.everything changes “slope.” instance, population country can change, can number new cases epidemic disease, temperature cup coffee, distance Earth spacecraft. major part learning calculus generalizing abstracting mathematical concept “slope” example becoming proficient mathematical procedures working change.","code":""},{"path":"fun-slopes.html","id":"continuous-change","chapter":"9 Slope function","heading":"9.2 Continuous change","text":"people comfortable ideas daily changes temperature monthly changes credit-card debt quarterly changes unemployment rate annual changes height child. things easy record , say, spreadsheet. example, write, weather forecast next several days (southeastern Colorado mid-May) 1110Such data said discrete. day listed, time day. high temperature forecast, time high. “description” also discrete, one several words used summarize quality weather, opposed quantity rain.Calculus continuous change. instance, weather bureau provide web interface let enter date time nearest fraction second, giving way track change continuously. Many physical processes intrinsically continuous, instance motion (change position) spacecraft height tide stress tree function wind velocity.Finding language describe continuous change—famously, position moon planets orbit, speed ball rolling ramp—central emergence historians call “Age Enlightenment” “modern scientific method.” first complete presentation language published Isaac Newton based work 1660s. might guess, name language “calculus.”","code":""},{"path":"fun-slopes.html","id":"slope","chapter":"9 Slope function","heading":"9.3 Slope","text":"already know pretty much everything know straight-line function,Formula: \\(f(x) \\equiv x + b\\). parameters \\(\\) \\(b\\) “slope” “intercept” respectively. (precisely, \\(b\\) “y-intercept.” statistics modeling, ’s just “intercept.”)Formula: \\(f(x) \\equiv x + b\\). parameters \\(\\) \\(b\\) “slope” “intercept” respectively. (precisely, \\(b\\) “y-intercept.” statistics modeling, ’s just “intercept.”)Reading parameters graph: learned several ways equivalent. Maybe easiest read y-intercept graph. ’s \\(b\\). choose non-zero \\(x_1\\) read graph value \\(f(x_1)\\). slope simply \\[\\frac{f(x_1) - b}{x_0}\\]\ny-intercept method special case general method, two-point method, can use even y-intercept isn’t shown graph. Pick two specific values \\(x\\), ’ll call \\(x_0\\) \\(x_1\\). Evalate function input values compute rise run: \\[\\mbox{rise run} \\equiv \\frac{f(x_1) - f(x_0)}{x_1 - x_0}\\]\nrise run slope straight line.\ny-intercept method exactly two-point method \\(x_0 = 0\\).Reading parameters graph: learned several ways equivalent. Maybe easiest read y-intercept graph. ’s \\(b\\). choose non-zero \\(x_1\\) read graph value \\(f(x_1)\\). slope simply \\[\\frac{f(x_1) - b}{x_0}\\]y-intercept method special case general method, two-point method, can use even y-intercept isn’t shown graph. Pick two specific values \\(x\\), ’ll call \\(x_0\\) \\(x_1\\). Evalate function input values compute rise run: \\[\\mbox{rise run} \\equiv \\frac{f(x_1) - f(x_0)}{x_1 - x_0}\\]\nrise run slope straight line.y-intercept method exactly two-point method \\(x_0 = 0\\).Matching straight-line function data: might taught formally, basic process easy imitate. process called line fitting , statistics fields, linear regression. 1120Matching straight-line function data: might taught formally, basic process easy imitate. process called line fitting , statistics fields, linear regression. 1120","code":""},{"path":"fun-slopes.html","id":"the-fitted-line","chapter":"9 Slope function","heading":"9.4 The fitted line","text":"[Fun-4--1] Construct straight-line model fits data.illustrate line fitting, let’s return cooling mug water. Figure 9.1 shows data along dozen candidate straight line functions, one drawn color.\nFigure 9.1: candidate straight-line function models plotted top cooling water data. one(s) pick good matches data?\nstraight-line models much better match data others. blue-shaded functions pretty good fits, least consider limitations matching data curved pattern straight line. green-colored functions maybe OK good blue, purple-shaded functions just horrible.Now know reasonable straight-line model looks like, find pretty easy draw one data graphics even remotely show straight-line pattern.Step 1: Draw reasonable straight-line data points.Step 2: Find parameters correspond line drew.","code":""},{"path":"fun-slopes.html","id":"average-rate-of-change","chapter":"9 Slope function","heading":"9.5 Average rate of change","text":"Since slope standard way representing relationship change, often use way summarizing function. illustrate, consider exponential model constructed match cooling-water data: 1130\nFigure 9.2: exponential function previously matched cooling-water data. slope straight line connecting two points function graph average rate change interval.\ninterval \\([t_0, t_1]\\) rate water cools higher first lower end. average rate change single number summarizes whole interval.except straight-line models, average rate change depends interval chosen.working extensively change output value function input value changes.change output value function \\(f()\\) input changes \\(x = \\) \\(x = b\\) \\[f(x=b) - f(x=)\\] Notice talk change \\(x=\\) \\(x=b\\) subtract \\(f(x=)\\) \\(f(x=b)\\). change sometimes called rise value function. Rise always compares (subtraction) two output values corresponding two specific input values. Remember \\(\\) \\(b\\) stand specific numbers.change output value function \\(f()\\) input changes \\(x = \\) \\(x = b\\) \\[f(x=b) - f(x=)\\] Notice talk change \\(x=\\) \\(x=b\\) subtract \\(f(x=)\\) \\(f(x=b)\\). change sometimes called rise value function. Rise always compares (subtraction) two output values corresponding two specific input values. Remember \\(\\) \\(b\\) stand specific numbers.Corresponding idea change output \\(f(x=b) - f(x=)\\) change input value function \\(b - \\). often called run value input.Corresponding idea change output \\(f(x=b) - f(x=)\\) change input value function \\(b - \\). often called run value input.point graph function Cartesian coordinates \\((, f(x=))\\). example, graph function \\(f()\\) shown Graph includes points \\((1.0, 4.0)\\), \\((3.5, 3.0)\\). second coordinate output value provide first coordinate input value. nature \\(f()\\) function (defined graph) \\(f(x=1) \\equiv 4\\) \\(f(x=3.5) \\equiv 3\\).Question True false: Graph , rise b positive.    TRUE ☹︎ \\(f(x=) > f(x=b)\\), rise \\(f(x=b) - f(x=)\\) negative.        FALSE ✓ Question B True false: Graph , run \\(x=\\) \\(x=b\\) positive.    TRUE ✓        FALSE ☹︎ run relative positions \\(x=\\) \\(x=b\\) x-axis. Since \\(< b\\), run \\(x=\\) \\(x=b\\) positive. Question C True false: Graph II, run b positive.    TRUE ✓        FALSE ☹︎ run relative positions b x-axis. Since left b, run b positive. Question D True false: Graph II, rise b positive.    TRUE ☹︎ Remember, rise \\(x=\\) \\(x=b\\) \\(f(x=b) - f(x=)\\)        FALSE ✓ Question E True false: Graph II, run b c positive.    TRUE ☹︎ run \\(x=b\\) \\(x=c\\) \\(c - b\\). Since \\(b>c\\) b c negative.        FALSE ✓ Question F True false: Graph II, rise b c positive.    TRUE ✓        FALSE ☹︎ rise \\(x=b\\) \\(x=c\\) \\(f(x = c) - f(x = b)\\). Since \\(f(x=c) > f(x=b)\\), rise positive. Question G interval [2, 6] value run? (answer independent particular graph/function.)    4 ✓ run always second number interval minus first number. ’s \\(6 - 2\\) .        -4 ☹︎ got backwards! second number interval, 6, numerically right 2, run positive. Question H run interval [6, 2]? (, answer independent particular graph/function.)    4 ☹︎ Sorry. run \\(x=6\\) \\(x=2\\) \\(2 - 6\\) \\(-4\\).        -4 ✓ run \\(2 - 6\\), second number interval minus first number. graph Figure 9.2, compute average rate change interval \\(10 \\leq t \\leq 200\\). compare average rate change interval \\(10 \\leq t \\leq 125\\)?Open R sandbox. can use function definitions help calculations.Using R, compute average rate change function given interval. Choose closest answer problem.Question \\(f(x) \\equiv 2 e^{x+1}\\) [-2, 2]    -2.99 ☹︎        1.54 ☹︎        2.72 ☹︎        4.68 ☹︎        9.85 ✓        11.32 ☹︎ Question B \\(g(x) \\equiv 3 e^{-x}\\) [-1, 1.5]    -2.99 ✓        1.54 ☹︎        2.72 ☹︎        4.68 ☹︎        9.85 ☹︎        11.32 ☹︎ Question C \\(h(x) \\equiv x e^x\\) [0, 1]    -3 ☹︎        1.54 ☹︎        2.72 ✓        4.68 ☹︎        9.85 ☹︎        11.32 ☹︎ ’s much less work use R function c() define interval, R function diff() calculate differences. next sandbox contains example asking compute average rate change \\(f(x) \\equiv e^x\\) interval [0, 4]. need lines 1, 3, 5. lines show intermediate results help understand diff() .Question D MMAC 4.1.61: True false: average rate change \\(f(x) \\equiv e^{x^2}\\) [0.0, 0.1] 0.1005017    TRUE ✓        FALSE ☹︎ Question E MMAC 4.1.62: True false: average rate change \\(f(x) \\equiv \\log(x)\\) [2, 3] 0.5062353.\n(Hint: Change code interval variable goes 2 3 f becomes function \\(f(x) \\equiv \\log(x)\\))    TRUE ☹︎        FALSE ✓ Question F MMAC 4.1.61: True false: average rate change \\(f(x) \\equiv \\sin(x)\\) [0.0, 0.5] 0.9588511    TRUE ✓        FALSE ☹︎ Consider sinusoid function, graphed .Question average rate change interval \\(0 < x < \\frac{1}{2}\\)? (Choose closest value.)    0 ☹︎ true, function output need two endpoints interval.        0.5 ☹︎ forget divide rise run?        1 ✓ Right. interval run 1/2. rise interval 0 1/2, rise 1/2. Question B average rate change interval \\(0 < x < 6.25\\)? (Choose closest value.)    -0.5 ☹︎        0 ✓ Right. function output zero endpoints interval, rise zero. Hence, run zero.        0.5 ☹︎ Question C average rate change interval \\(0 < x < 10\\)? (Choose closest value.)    -0.05 ✓ Right. rise -0.5 run 10.        -0.5 ☹︎ “rise” interval, ’s average rate change. ’ll need divide rise another quantity get average rate change.        0 ☹︎        0.5 ☹︎ rise \\(f(10) - f(0) pprox -0.5 - 0 = -0.5\\). ’ve got sign wrong. following, compute average rate change function given interval.Question average rate change \\(f(x) \\equiv x + 5\\) [3, 5]     -2 ☹︎ Remember, difference \\(x=3\\) 5 \\(f(5) - f(3)\\), way around. average rate change difference divided length interval.        -1 ☹︎ Remember, difference \\(x=3\\) 5 \\(f(5) - f(3)\\), way around. Similarly, length interval \\(x=3\\) 5 \\(5-3\\), \\(3-5\\).        1 ✓ \\(f(x=5) = 10\\) \\(f(x=3) = 8\\), difference values 2. Since difference occurs interval length 2 (, #x=3$ 5), average rate change 2/2.        2 ☹︎ sure took rate change rather simply change? Question B average rate change \\(f(x) \\equiv 3 - 2 x\\) [-4, -2]     -4 ☹︎ total difference interval, rate change.        -2 ✓ difference \\(x=-4\\) \\(-2\\) \\(f(-2) - f(-4) = (7) - (11) = -4\\). length interval \\((-2) - (-4) = 2\\). rate -4/2, just got.        0 ☹︎        1 ☹︎ \\(x\\) changes two units, \\(f(x)\\) changes 4. rate change 4/2 = -2.        2 ☹︎ Check +/- signs.        4 ☹︎ negative total difference interval, rate change. Also check +/- signs. Question C average rate change \\(f(x) \\equiv -3 x^2\\) [0, 4]     -24 ☹︎ Perhaps looking derivative \\(x=4\\) average rate change \\(x=0\\) 4.        -12 ✓ difference \\(f()\\) interval \\(f(4) - f(2) = (-48) - 0 = -48\\). length interval \\(4-0\\), average rate change interval \\((-48)/4 = -12\\).        0 ☹︎ Perhaps looking derivative \\(x=0\\) average rate change \\(x=0\\) 4.        1 ☹︎        2 ☹︎        12 ☹︎ Check signs arithmetic.        24 ☹︎ Question D average rate change \\(f(x) \\equiv x^3 - 2 x + 1\\) [0, 2]     -2 ☹︎ Either check +/- signs perhaps looking derivative \\(x=0\\) average rate change \\(x=0\\) 2.        1.5 ☹︎        2 ✓ difference \\(f()\\) interval \\(f(2) - f(0) = 5 - 1 = 4\\). length interval \\(2 - 0\\) average rate change \\(4/2 = 2\\).        7 ☹︎        10 ☹︎ think looking derivative \\(x=2\\) rather average rate change 0 2. “Slope” natural metaphor thinking function graph. general way describe concept rate change output respect input. change output one end interval \\(f(x_1) - f(x_0)\\), change input \\(x_1 - x_0\\). input time (hours), output position car (miles), rate change miles-per-hour: car’s velocity.straight-line function—think car driving constant speed highway—doesn’t matter choose \\(x_1\\) \\(x_0\\) (long identical). functions, choice matter.Imagine graph position car along road Figure @ref{fig:stop--go}. course hour, car travelled 25 miles. words, average speed 25 miles/hour: slope red line segment. Given traffic, sometimes car stopped (time C), sometimes crawling (time D) sometimes much faster average (time B).interval B C, car travelling relatively fast. slope brown segment connecting position times B C average rate change times B C. ’s easy see average rate change B C larger overall average \\(t=0\\) \\(t=1\\). Calculating slope matter evaluating position endpoints dividing length interval. 1140What average rate change car’s position interval \\(t_B = 0.40\\) \\(t_C=0.54\\)?length interval \\(t_C - t_B = 0.54-0.40=0.14\\).Evaluating function gives \\(x(t_C) = 18\\) \\(x(t_B) = 12.6\\).Rise \\(x(t_C) - x(t_B) = 18 - 12.6 = 5.4\\).Run \\(t_C - t_B = 0.54-0.40=0.14\\).average rate change interval $5.4/0.14 = 38.6 $ miles/hour.Figure 9.3 shows simplified model amount usable wood can harvested typical tree managed forest Ponderosa Pine. (can see actual forestry research models .) 1145\nFigure 9.3: model, somewhat realistic, amount wood can harvested Ponderosa Pine function years since planting harvest.\nwriting business plan proposed pine forest. Among things, forecast revenue generated salable product.say “time money.” Every year wait harvest another year don’t money. hand, every year wait means wood end. decide harvest?tree continues grow year 50, seems reached equilibrium: perhaps growth goes zero, rot balances growth . ’s point waiting year 50.year 25, tree growing fast ever . ’ll get 600 board-feet lumber. harvest year 25? ! tree growing fast means lot wood year 26, 27, . time harvest growth getting smaller, ’s worth waiting extra year.quantity interest average rate growth seedling harvest. Harvesting year 25 give total change 600 board feet 25 years, giving average rate change \\(600 \\div 25 = 24 \\mbox{board-feet-per-year}\\). wait year 35, ’ll 900 board feet, giving average rate change \\(900 \\div 35 = 25.7 \\mbox{board-feet-per-year}\\).’s easy construct diagram shows whether year 35 best harvest. Recall fundamental model change straight-line function. ’re going model model tree growth straight line function. Like realistic model, straight-line model start zero wood time planting. faithful realistic model, ’ll insist straight-line intersect touch realistic model point future.Figure 9.4 reiterates realistic model tree adds several straight-line models give zero harvestable wood planting time. green lines captures scenario tree harvested indicated time: \\(t_1\\), \\(t_2\\), . perspective representing rate growth per year planting harvest, straight-line green models need replicate actual growth curve. complexities curve relevant growth rate, can simplified straight-line model connecting output planting time output harvest time. contrast, red curves suitable models don’t match situation harvest time; don’t touch curve anywhere planting!\nFigure 9.4: Modeling tree-growth model straight lines connecting planting time various harvest times. slope line average rate growth planting time.\nmaximize average lumber volume per year, choose harvest time produces steepest possible green segment. Figure 9.4 can see ’s possible little better harvesting year 35 (shown \\(t_3\\) diagram).’s often best create function shows explicitly one trying optimize. ’s ave_growth(year) \\(\\equiv\\) volume(year)/year plotted Figure ??.exercise, given series intervals get smaller smaller. job calculate average rate change function \\(f(x) \\equiv x^2\\) intervals. width intervals approach zero, average rates change become better approximations instantaneous rates change. use results calculate make informed estimate instantaneous rate change.. Use three intervals estimate instantaneous rate change \\(\\partial_x f(x=3)\\)\n- [3, 3.1]\n- [3, 3.01]\n- [3, 3.001]B. Use three intervals estimate instantaneous rate change \\(\\partial_x f(x=5)\\)\n- [4.9, 5]\n- [4.99, 5]\n- [4.999, 5]C. Use three intervals estimate instantaneous rate change \\(\\partial_x f(x=-2)\\)\n- [-2, -1.9]\n- [-2, -1.99]\n- [-2, -1.999]","code":"\nwater <- makeFun(60.7*exp(-0.019*t) + 25.93 ~ t)\nf <- makeFun(2*exp(x+1) ~ x)\ng <- makeFun(3*exp(-x) ~ x)\nh <- makeFun(x*exp(x) ~ x)\ninterval <- c(0, 4)  # creates the interval\ndiff(interval)       # calculate the run\nf <- makeFun(exp(x) ~ x)   #  create the function\nf(interval)     # evaluate  function at the endpoints of  the interval\ndiff(f(interval)) / diff(interval)  # complete answer## Warning: geom_abline(): Ignoring `mapping` because `slope` and/or `intercept`\n## were provided.interval <- c(__start__ , __end__ )\nf <- makeFun(x^2 ~ x)\ndiff(f(interval)) / diff(interval)"},{"path":"fun-slopes.html","id":"instantaneous-rate-of-change","chapter":"9 Slope function","heading":"9.6 Instantaneous rate of change","text":"average rate change slope line segment connecting two points graph function, points \\(\\left(\\strut t_0, f(t_0)\\right)\\) \\(\\left(\\strut t_1, f(t_1)\\right)\\). reflects point--point changes value function interval \\(t_0\\) \\(t_1\\) function’s domain.turns helpful consider rate change function individual point \\(t_0\\) domain, rather interval two points. rate change point called instantaneous rate change.\nBlock 2, ’ll see good way define instantaneous rate change \\(t_0\\) average rate change interval \\(t_0 \\leq t \\leq t_0 + h\\) proviso interval length \\(h\\) goes closely can zero. Visually, line ’s tangent function’s graph input value \\(t_0\\) Figure 9.5. 1150\nFigure 9.5: line tangent curve single point. slope line instantaneous rate change.\n’s convenient able find slope tangent line using just definition \\(f(t)\\), rather draw graph eyeball tangent. now, let’s approximate slope tangent line average rate change small run \\(t_0\\) \\(t_0 + 0.1\\):\n\\[\\text{slope }\\ f(t) \\ \\text{}\\ t_0 \\approx\\frac{f(t_0 + 0.1) - f(t_0)}{0.1} = \\frac{\\text{amount rise}}{\\text{length run}}\\]\n\\(\\approx\\) symbol means “approximately.” now, want put question “approximately” means. modeling, whether 0.1 gives good enough approximation depend function \\(f()\\) context slope needed. instance, drawing Figure 9.5 needed find tangent line. Using 0.1 entirely satisfactory setting might settings.notation “slope \\(f(t)\\) \\(t=t_0\\)” long-winded awkward. looking “value \\(f(t)\\) \\(t_0\\) hand much concise notation: \\(f(t_0)\\). doesn’t work write”slope \\(f(t_0)\\)\" \\(f(t_0)\\) quantity function. Instead, let’s make concise notation “slope \\(f(t)\\).” Following tradition, ’ll write \\({\\cal D}f(t)\\). name “slope \\(f(t)\\)” function \\({\\cal D}f()\\): two-letter name. want say, “(approximate) slope tangent line \\(f(t)\\) \\(t_0\\), can write simply: \\[{\\cal D}f(t_0)\\]\nmeaning, evaluate ”slope function f()\" \\(t_0\\).formalize , ’ll define slope function f() \n\\[{\\cal D}f(t) \\equiv \\frac{f(t + 0.1) - f(t)}{0.1}\\]\nLet’s look slope functions correspond naked modeling functions: \\(e^x\\), \\(\\sin(x)\\), \\(x^{-1}\\) \\(\\ln(x)\\). can define easily enough R:\nFigure 9.6: Comparing naked modeling function (blue) ’s slope function (red)\nweb connections naked modeling functions slopes.Question 1. naked modeling function slope function simply input-shifted version ? (small enough \\(h\\).)exponential ☹︎ sinusoid ✓ logarithm ☹︎ power-law \\(x^{-1}\\) ☹︎ Question B 2. naked modeling function slope function identical ? (small enough \\(h\\).)exponential ✓ sinusoid ☹︎ logarithm ☹︎ power-law \\(x^{-1}\\) ☹︎ Question C 3. naked modeling function slope function another naked modeling function? (Hint: function also listed among choices.)exponential ☹︎ sinusoid ☹︎ logarithm ✓ power-law \\(x^{-1}\\) ☹︎ plot function slope function graphics frame? 1160Excellent question! general, illegitimate plot function ’s slope function vertical axis. reason units two functions different. instance, output function position(t) might units “miles,” output slope function position (, \\({\\cal D}\\)position(t) units miles-per-hour.) , general rule, never plot function corresponding slope function scale.exception naked modeling functions. always take number input produce number output. slope function naked modeling function also produces number output.exception good excuse indulging bad practice. Perhaps ’ll forgive point wanted emphasize point demonstrating ., ’m writing slope function \\(f(t)\\) \\({\\cal D}f(t)\\). works chapter, deals functions one variable. general modeling functions one variable, instance \\(g(x, t)\\). work slope functions one variable, need extend notation little. place small subscript \\({\\cal D}\\) indicate variable changing. Thus, two slope functions \\(g(x,t)\\):\n\\[\\require{color}{\\cal D}_{\\color{blue}x} g(x, t) \\equiv \\frac{g({\\color{blue}x + 0.1}, t) - g(x, t)}{0.1}\\\\\n\\text{}\\\\\n{\\cal D}_{\\color{red}t} g(x, t) \\equiv \\frac{g(x, {\\color{red}t + 0.1}) - g(x, t)}{0.1}\\]\ninput referred subscript following \\({\\cal D}\\) called -respect-input.previous section looked optimal time harvest tree average rate growth usable lumber tree’s life maximized. Using model tree growth ponderosa pine found best harvest time 32 years.Let’s return modeling phase wood-harvest problem new perspective. real objective tree farming maximize economic value wood. depends market price wood may changing time. market-savvy modeler want exploit information possibility rising falling prices selecting best harvest time. Companies often hire economists forecast market trends, requires deep knowledge trends supply demand scope can cover book.However, one economic principle can incorporate model without detailed, industry specific expertise. economic principle opportunity cost.Opportunity cost takes account valuing asset possible uses asset. example, lumber companies constantly invest planting new trees future harvest. order , borrow money pay interest borrowed money. need borrow existing assets tied form wood. opportunity cost harvesting tree interest loan company needs take order invest future.year 30 32, hardly change value average-rate--change function. ’s increasing little, really worthwhile wait? One argument year 30 already valuable resource: wood money bank. money bank, invest earn money time get new seedling ground start growth. ’re two things . Efficient!know best year harvest point view, want calculate effective “interest rate” present amount wood earn form new wood. interest rate ratio instantaneous rate growth new wood divided amount existing wood. Figure @ref{fig:tree-interest} shows function.\nFigure 9.7: instantaneous investment return tree instantaneous rate change wood volume divided wood volume . falls age tree harvestable wood volume increases.\nEarly tree’s life, growth high compared volume tree. ’s tree small. years pass, tree gets bigger. Even though rate growth increases year 23, accumulated volume increases even faster, fall rate return.best time harvest annual “interest rate” paid growing tree falls level next best available investment. Suppose investment pay 10% per year. harvest tree function values falls 10%. happens year 24. next best investment paid 5% (blue horizontal line), harvest made year 29. money borrowed 2%, worthwhile harvest tree still later.Calculate slope function naked sigmoidal function. value x=0. functions well.Also, change 0.1 something smaller.Maybe “small?” {intheworld}–>","code":"\nDexp <- makeFun((exp(t+0.1) - exp(t))/0.1 ~ t)\nDsin <- makeFun((sin(t+0.1) - sin(t))/0.1 ~ t)\nDxm1 <- makeFun(((1/(t+0.1)) - (1/t))/0.1 ~ t)\nDlog <- makeFun((log(t+0.1) - log(t))/0.1 ~ t)"},{"path":"function-inverses-and-solving.html","id":"function-inverses-and-solving","chapter":"10 Function inverses and “solving”","heading":"10 Function inverses and “solving”","text":"[Fun-inverse] Understand operation “solving” function able translate “zero-finding.”much spirit naming common tasks, process turning output function corresponding input using computer program called zero finding. often case, computer programming often involves reformatting things fit standard format. , standard format find input corresponds output zero. reality, snowplow problem, might care output zero. (facilities manager charge zero miles road likely job pretty soon!) 1200But output zero just format. can easily re-write function create new one output want turns zero. instance, snowplow problem, instead applying zero-finding function \\(g(x) = 168 x\\), construct another, related function \\(h(x) \\equiv g(x) - 400\\). Finding zero \\(h()\\) gives us directly input \\(g()\\) corresponding output 400.","code":""},{"path":"function-inverses-and-solving.html","id":"function-inverses","chapter":"10 Function inverses and “solving”","heading":"10.1 Function inverses","text":"[Fun-3a2] Determine whether function inverse. Know exponential logarithmic functions inverses inverse power-law function another power-law function.may sound like familiar word problem high-school algebra course:facilities manager small town. town contains\napproximately 400 miles road must plowed following significant snowfall. many plows must used order complete job one day plows can travel approximately 7 miles per hour engaged? — SourceThe task answering question often called solving word problem.don’t need calculus solve problem, insofar format familiar , might help depict addressed modeling task use model created guide mathematical work getting numerical answer problem.Modeling Phase: objective create function represents snow plowing let us answer question much plowing activity needed. ’s function takes input \\(x\\) number plows provides output number miles can serviced day.\n\\[\\mbox{miles_plowed}(x) \\equiv 7 \\times 24 \\times x\\]\nreality, “miles plowed” depends amount snow, safe speed limit plows, number rest breaks needed drivers, far snowplow terminus road system, many cars parked road available number tow trucks, day week time day. (Remember, might traffic road. Plowing rush hour bound small! slow night!) seems textbook “word problems” never mention issues, written world plowing snow exactly simple arithmetic.Likely, ’re going use modeling cycle end genuinely useful model. Still, start somewhere, let’s start \\(7 \\times 24 \\times x\\).can use function solve problem: many plows needed get 400-miles road serviced 1 day? ’s matter choosing suitable method applying function guide us answer. 1210One simple method, sometimes called guess check propose answers see happens. experts snow plowing, know can’t negative fractional plows, guesses \\(x\\) integers. Let’s systematically:really don’t need scratch work crowding table, let’s streamline , keeping essentials:domain miles_plowed() function \\(x = 0, 1, 2, 3, \\ldots\\), table covers bit domain.Miles_plowed() might genius function, using keep mind don’t actually know input. know something form output: 400 miles. mathematical operation solving consists looking know output column table, reading corresponding input answer. Since 400 doesn’t appear output column, ’ll look interval includes 400. course, ’s interval 336 504. answer something bigger \\(x=2\\) doesn’t need larger \\(x=3\\). ’ve facilities management business many years, know choose answer \\(x=3\\).graph function, can easy calculate input given output. Just reverse finger action, looking output vertical axis, tracing horizontally function graph, reading result input axis.Now let’s write problem using math notation rather table. ’re looking value \\(x\\) \\[\\mbox{miles_plowed}(x) = 400\\] equation opposed function definition write \\(\\equiv\\) rather \\(=\\). point writing equations often signal us task “solve \\(x\\).”algebraic solution relies replacing miles_plowed(\\(x\\)) function’s formula re-arranging numbers possibly symbols equation form \\(x = \\ldots\\). , ’s easy:\\[7 \\times 24 \\times x = 400\\ \\ \\implies\\ \\ x = 400/(7\\times 24)\\]arithmetic find \\(x = 2.381\\). Apply common sense translate “three plows.”industrious facilities manager might go . “Today 400 miles road. next year , although don’t yet know exact number. ’m math work, ’ll write memo next year, know much road , can just arithmetic.” good idea, although mathematician might prefer word “function” “memo [guide] arithmetic.” 1220You likely learned set solve memo-writing function. key replace 400 symbol standing number miles road. ’ll use \\(M\\). re-arrangement \\(M\\) place 400.\\[168 x = M\\ \\ \\implies\\ \\ x = M/168\\]remains give informative name place \\(x\\) write proper function: \\(n_{plows}(M) \\equiv M/168\\).process starting function like \\(\\mbox{miles_plowed(x)}\\) transforming function convenient format task hand \\(n_{plows}(M)\\) called inverting function.High-school algebra emphasizes techniques inverting functions moving symbols around. great can done, ’s often impossible real science engineering problems. cases use powerful, general-purpose method, , guess check.Another common strategy inverting functions beyond reach algebraically rely specialist develop inverse function, give name, write formula mathematical notation , sometimes usefully, write computer program implements inverse function’s algorithm. strategy, ’s needed invert function know name formula function’s inverse. ’s table names formulas, likely familiar .can course read table either left right right left. instance, inverse \\(\\ln(x)\\) \\(e^x\\).know, function \\(g(x)\\), set valid values \\(x\\) called domain function. set possible outputs function called range function. inverse function \\(g()\\) domain range \\(g()\\) range domain \\(g()\\).Sometimes notation \\(g^{-1}(x)\\) used \"inverse function \\(g()\\). potentially confusing, since \\(g^{-1}(x)\\) might reasonable interpretted \\(1/g(x)\\) , general, two things equal.Straight-line (non-zero slope), exponential (\\(e^{kt}\\) \\(k\\neq 0\\)), logarithm functions aways inverse functions. power-law sinusoid functions, can several (many) different inverse functions. ’ll get need . 1230There’s easy graphical test whether unique inverse function . Draw graph, see horizontal line touches graph function one place. , unique inverse function.graphs functions inverses related flip around line identity, shown green following graph.black curve graph \\(e^x\\).Question red curve graph function? (Hint: pass vertical line test?)    Yes ✓        ☹︎ red curve vertical asymptote \\(x=0\\), since never reaches asymptote, passes vertical line test. Question B functions graphed red?\\(1/x\\) ☹︎ \\(\\log(x)\\) ✓ \\(\\sqrt{x}\\) ☹︎ \\(e^{-x}\\) ☹︎ Sorry, reflection black curve around vertical line \\(x=0\\) \\(-e^{x}\\) ☹︎ . reflection black curve around horizontal line output \\(f(x)=0\\) years ago, learned calculate slope straight-line function. graph, mark run corresponding rise, compute rise/run. formula definition, e.g. \\(f(x) \\equiv 3 - 4 x\\), simply read slope coefficient function input. , input named \\(x\\) coefficient formula \\(-4\\).question, ask estimate slope graph function. function exponential, straight line.fundamental idea calculus even function curved graph, zoom closely around given point, look like straight line. know calculate slope straight line.graph curved, slope different different points along graph. ’s single slope function. Still, can talk “slope point.”One way specify point function’s graph give horizontal coordinate: input function. ’re going give output function.Estimate slope exponential function \\(g(x) \\equiv e^x\\) several inputs, ’ll call \\(x_1\\), \\(x_2\\), \\(x_3\\) \\(x_4\\). won’t give numerical values \\(x_i\\) points, tell output function inputs. values \\(x\\) :\\(g(x_1) = 1\\)\\(g(x_2) = 5\\)\\(g(x_3) = 10\\)\\(g(x_4) = 0.1\\)code sandbox already contains R command plot mathematical exponential function domain \\(-3 \\leq x \\leq 3\\). ()-(d), modify command zoom domain around around appropriate value \\(x_i\\). calculate slope curve \\(x_i\\).Question Using answers slope points given ()-(d), choose best answer question: pattern slope \\(x\\) varies?slope value \\(x_i\\) \\(e^{x_i}\\). ✓ property exponential function becomes important describing wide range phenomena, nuclear isotope decay population growth. slope value \\(x_i\\) \\(x_i\\). ☹︎ saying slope \\(x_3\\) \\(\\approx 2.30\\). got? slope value \\(x_i\\) \\(x_i^2\\). ☹︎ saying slope \\(x_3\\) \\(\\approx 5.30\\). got? slope value \\(x\\) \\(\\sqrt{x}.\\) ☹︎ saying slope \\(x_i\\) \\(\\approx 1.52\\). got? Now ’ve found answer seen specify domain slice plot, ’s technique can make work bit easier. Add command plots \\(e^x\\) domain \\(-3 \\leq x \\leq 3\\)Make sure %>% line slice_plot() expression . Run amended command hover cursor graph.Reflection: One goal problem introduce way writing functions somewhat different may seen .Instead using letter \\(y\\)—\\(y = mx + b\\), give function name , parentheses name, list inputs function. instance, use \\(f(x)\\) \\(g(x)\\) problem.using equal sign (\\(=\\)) give name function; use \\(\\equiv\\). know, \\(=\\) means “equality.” \\(h(x) \\equiv x^2\\) describes definition: “define \\(h\\) name function \\(x\\) formula \\(x^2\\).” Definitions different equations. Equations important role mathematics, ’s worth confusing definitions.often use letters end alphabet—\\(x\\), \\(y\\), \\(z\\), \\(t\\), \\(u\\), \\(v\\), \\(w\\)—names inputs functions. important us give names inputs often deal functions one input ’ll need keep straight one stands .function kind machine takes inputs produces outputs. Similarly, printer machine takes several inputs—paper, ink, electricity, PDF file—produces familiar kind output. Printers designed different places different inputs, can’t mistake one . mathematical functions, purpose different names inputs.input slot printer often called “paper tray.” never confuse paper tray paper . Inputs function like paper tray. put particular value input slot \\(x\\) function, often call particular value something like \\(x_0\\) \\(x^\\star\\), \\(x_3\\). see something like \\(x_0\\), remember particular piece paper, input tray paper. ’ll even sometimes give output function—exponential function—ask figure particular input corresponds output. like asking, “Find piece paper , ’s printed , ink won’t show side.”","code":"## Scale for 'y' is already present. Adding another scale for 'y', which will\n## replace the existing scale.\nslice_plot(exp(x) ~ x, domain(x = c(-3, 3)))%>% plotly::ggplotly()"},{"path":"fun-assembling.html","id":"fun-assembling","chapter":"11 Assembling functions","heading":"11 Assembling functions","text":"need new function purpose, practically always build existing functions. instance, parameterized function like \\[\\sin\\left(\\frac{2 \\pi}{P}x\\right) + C\\] built assempling together straight-line input scaling, naked \\(\\sin()\\) function, another straight-line function scaling output \\(\\sin()\\). 1300In chapter, ’ll introduce three general frameworks combining functions: linear combination, composition, multiplication.","code":""},{"path":"fun-assembling.html","id":"linear-combination","chapter":"11 Assembling functions","heading":"11.1 Linear combination","text":"One widely used sorts combination called linear combination. mathematics linear combination , happens, core use math applications, whether constructing Google-like search engine analyzing medical data see treatment positive effect.’ve worked many years one kind linear combination: polynomials. doubt ’ve seen functions11 like \\[f(x) \\equiv 3 x^2 + 5 x - 2\\]three modeling functions polynomial. case, polynomials generally, power-law functions: \\(g_0(x) \\equiv 1\\), \\(g_1(x) \\equiv x\\), \\(g_2(x) \\equiv x^2\\). functions defined, can write polynomial \\(f(x)\\) \\[f(x) \\equiv 3 g_2(x) + 5 g_1(x) - 2 g_0(x)\\]\nfunctions scaled quantity—3, 5, -2 example—scaled functions added . ’s linear combination; scale add. (Later, ’ll see scalars generally come units. might well metric polynomial equivalent traditional-unit polynomial. Just wait.)Notice said \\(g_0(x) \\equiv 1\\) power-law function. ? Since \\(x^0=1\\) \\(x\\), might equally well written \\(g_0(x) \\equiv x^0\\) visibly power-law function.’re just trying emphasize polynomial linear combination power-law functions, particular power-law functions whole-number, positive exponents. individual functions, say, \\(x^2\\) \\(x^5\\) called monomials. polynomial combination monomials, just like chemical polymer combination monomers.places seen linear combinations:parameterized sinusoid \\[\\sin\\left(\\frac{2 \\pi}{P}t\\right) + C\\] linear combination functions \\(h_1(t) \\equiv \\sin\\left(\\frac{2 \\pi}{P} t\\right)\\) \\(g_0(t) \\equiv 1\\). scalars \\(\\) \\(C\\).parameterized exponential \\[e^{kt} + C\\] functions combined \\(e^{kt}\\) \\(g_0(t) \\equiv 1\\). scalars , , \\(\\) \\(C\\).straight line function \\(x + b\\). functions combined \\(x\\) \\(1\\), scalars \\(\\) \\(b\\). 1310Note neither parameterized exponential parameterized sinusoid polynomial.reasons us introducing linear combinations .see linear combinations everywhere know look .highly refined mathematical theory linear combinations gives us powerful ways think well computer software can quickly find best scalars use match input-output data.concept linear combination generalizes simple idea calling “scaling output.” now , ’ll use linear-combination terminology avoid narrower idea “scaling output.”Many physical systems described linear combinations. instance, motion vibrating molecule helicopter flight building shaken earthquake described terms simple “modes” linearly combined make entire motion. Earth, timbre musical instrument set scalars linear combination pure tones.Many modeling tasks can put framework choosing appropriate set simple functions combine (letting computer) figure best scalars use combination.Even better, automatic, reliable, fast algorithm finding scalars set functions combined match data closely possible. modeler just select functions used, computer can find coefficients. (’ll explore mathematics methods linear combinations, usually called linear algebra, Block 5.)graph shows two hump functions, hump1(t) hump2(t)linear combination hump functions shown Graph ().Question linear combination hump1(t) hump2(t) shown Graph ()?0.5*hump1(t) + hump2(t) ✓ hump1(t) + 0.25*hump2(t) ☹︎ case, right bump one-quarter big left bump. hump1(t) + 2hump2(t) ☹︎ Since hump2(t) maximum value 20, 2hump2(t) reach value 40. isn’t ’s shown graph. Another linear combination hump functions shown Graph (B).Question B linear combination hump1(t) hump2(t) shown Graph (B)?hump1(t) - 2*hump2(t) ✓ hump1(t) - hump2(t) ☹︎ second (downward) hump bigger first (upward) hump. 0.5*hump1(t) - 0.5*hump2(t) ☹︎ , first hump reach value 10 rather 20 seen Graph (B). -hump1(t) - hump2(t) ☹︎ first hump positive. ","code":""},{"path":"fun-assembling.html","id":"function-composition","chapter":"11 Assembling functions","heading":"11.2 Function composition","text":"compose two functions, \\(f(x)\\) \\(g(x)\\), means apply one functions output . “\\(f()\\) composed \\(g()\\)” means \\(f(g(x))\\). generally different “\\(g()\\) composed \\(f()\\)” means \\(g(f(x))\\).instance, suppose recorded outdoor temperature course day packaged function \\(\\mbox{AirTemp}(t)\\): temperature function time \\(t\\). digital thermometer uses degrees Celsius, want output units degrees Kelvin. conversion function \\[\\mbox{CtoK}(C) \\equiv C + 273.15\\]\nNotice CtoK() takes temperature input. , can write “Kelvin function time” \\[\\mbox{CtoK}\\left(\\mbox{AirTemp}(t)\\right)\\]\n’s important distinguish time \\(\\rightarrow\\) Kelvin function something looks much utterly different: \\(\\mbox{AirTemp}\\left(\\mbox{CtoK}(t)\\right)\\). matter arithmetic, can put time input CtoK(). completely different meaning terms real world. time measured hours, CtoK\\((t)\\) looking temperature eleven half days ago, instead temperature time \\(t\\).used \\(C\\) name input CtoK(). Shouldn’t something like \\(x\\) \\(y\\)?Keep mind names inputs function can anything whatsoever, long used consistently function algorithm. wanted, call first input function \\(x\\), matter \\(y\\) giraffe.point notation \\(\\mbox{CtoK}(C) \\equiv C + 273.15\\) make utterly clear \\(C\\) name ’re using input listing parentheses follow function name CtoK(). , unlike high-school notation, allows us great freedom choice names. 1320We can use freedom make easier communicate people. (remember, one people “future .”) used name \\(C\\) reinforce message CtoK() converts celsius kelvin, vice versa.simple, approximate formula length day (hours) function latitude \\(L\\) declination angle \\(\\delta\\) sun.\\[\\text{day_length}(L, \\delta) \\equiv \\frac{2}{15} \\arccos\\left(-\\tan(L)*\\tan(δ)\\right)\\]\ndeclination angle latitude point earth’s surface pierced imagined line connecting centers earth sun. summer solstice, \\(23.44^\\circ\\), longest day year.computer implement must look different, since \\(L\\) \\(\\delta\\) typically provided degrees tan() trigonometric functions computer languages expect units radians. conversion easy: \\(\\text{deg2rad}(d) \\equiv \\frac{\\pi}{180} d\\). conversion way \\(\\text{rad2deg}(r) \\equiv \\frac{180}{\\pi} r\\).order get day-length formula work computer, compose \\(\\tan()\\) function deg2rad(). output acos() radians, convert back degrees. Like :Question tmp-7: Using R sandbox, calculate length day latitude \\(39^\\circ\\) longest day year, declination sun \\(23.44^\\circ\\). long ?13.9 hours []13.9 hours []14.7 hours (+) []14.7 hours (+) []14.9 hours []14.9 hours []15.1 hours []15.1 hours []Now make plot day length function day year. course, day_length(L, d) take day year account. ’s missing know declination sun function calendar day.’ll represent calendar day number \\(n\\) runs 0 start January 1st 365 end December 31. Given convention, declination sun isComposing day_length() delta_sun() (d argument ) get function day year n:Question tmp-8: long day April Fools (\\(n=90\\)) Latitude 39N? (Use sandbox calculation.)12.38 hours (+) []12.38 hours (+) []12.59 hours []12.59 hours []12.64 hours []12.64 hours []12.74 hours []12.74 hours []Income inequality matter perennial political debate. US, people support Social Security, income re-distribution programming dating back almost century. re-distribution policies controversial. believe essential healthy society, others “cure” worse “disease.” 1330Whatever one’s views, ’s helpful way quantify inequality. many ways might done. mathematically sophisticated one called Gini coefficient.Imagine society divided statistically income groups, poorest richest. income groups consists fraction population , aggregate, fraction national income. Poor people tend many number small fraction income. Wealthy people number, large fraction income. table shows data US households 2009:12The cumulative income shows fraction income people group poorer. Similarly cumulative population.function relates cumulative population cumulative income called “Lorenz” function. data graphed Figure ?? function fitted data.\nFigure 11.1: Data household incomes US 2009.\nLorenz curves necessarily concave , amounts saying curve gets steeper steeper population percentile increases. (? point, poorer people left richer right.) must connect (0,0) (1, 1).Calling income percentile \\(L\\) function population percentile \\(p\\), Lorenz function \\(L(p)\\) satisfies requirements previous paragraph.\nfunctions meet requirements:\\(L_b(p) \\equiv p^b\\) \\(1 \\leq b\\).\\(L_q(p) \\equiv 1 - (1-p)^q\\) \\(0 < q \\leq 1\\)Notice functions just one parameter. seems implausible workings complex society can summarized just one number. can use curve-polishing techniques introduced Section 14 find “best” parameter value match data. can see “best” good enough. 1340\nFigure 11.2: Lorenz curves \\(L_b(p)\\) (blue) \\(L_q(p)\\) (red) fitted household income data.\nNeither form \\(L_b(p)\\) \\(L_q(p)\\) gives compelling description data. .can provide parameters constructing complicated Lorenz functions. two ways build new Lorenz function existing one:product two Lorenz functions, \\(L_1(p) L_2(p)\\) Lorenz function.linear combination two Lorenz functions, \\(L_1(p) + (1-) L_2(p)\\), long scalars add 1, Lorenz function. instance, white curve Figure 11.2 linear combination 0.45 times red curve plus 0.55 times blue curve.Question: composition two Lorenz functions Lorenz function?get started, figure whether \\(L_1(L_2(0)) = 0\\) \\(L_1(L_2(1)) = 1\\). answer yes, need find way compute concavity Lorenz function determine composition always concave . ’ll need additional tools .","code":"\nday_length <- makeFun(\n  (2/15)*rad2deg(\n    acos(\n      -tan(deg2rad(L))*tan(deg2rad(d))\n    )\n  ) ~ L+d)\ndelta_sun <- makeFun(-23.44*cos((2*pi/365)*(n+10) ) ~ n)\nslice_plot(\n  day_length(39, delta_sun(n)) ~ n, \n  domain(n=c(0,365))\n  )\nLb <- fitModel(income ~ pop^b, data = Income, start=list(b=1.5))\nLq <- fitModel(income ~ 1 - (1-pop)^q, data = Income, start=list(q=0.5))"},{"path":"fun-assembling.html","id":"modeling-polynomial-1","chapter":"11 Assembling functions","heading":"11.3 The modeling polynomial","text":"Sometimes, order model simple relationship need build function whose graph simple, curving shape. 1350A simple surprisingly powerful approach use low-order polynomial. order polynomial highest exponent input. example, straight-line function, \\(g_1(x) \\equiv a_0 + a_1 x\\), first-order polynomial. quadratic, \\(g_2(x) \\equiv b_0 + b_1 x + b_2 x^2\\) second-order polynomial.Many modelers tempted extend technique third-, fourth-, fifth-order even higher. rarely worthwhile since second-, fourth-, sixth- higher-even-order monomials basically U-shape, like referee signalling touch-. Similarly, first-, third-, fifth- higher odd-order monomial similar  shapes.ofttimes better approach compose polynomial curved monotonic function, logarithm.Explain now using subscripts names scalars.","code":""},{"path":"fun-assembling.html","id":"tukeys-ladder-optional","chapter":"11 Assembling functions","heading":"11.4 Tukey’s ladder (optional)","text":"[[Tukey’s ladder]] Using simple straight line input composition /output composition. can get variety curve shapes using linear function.“Rule 72”quantitatively literate, systems showing exponential growth decay encountered almost every day usually presented “percent per year” rates. examples:Money. Credit card interest rates, bank interest rates, student loans. credit card might charge 18% per year, bank might pay 0.3% savings account, “subsidized” student loans often around 7%.Population. Statistics often given “growth rates” percent. instance, 2016-17, Colorado’s population grew estimated 1.39% Idaho 2.2%. Illinois’s population shrank 0.26%, Wyoming’s 0.47%.Prices. Inflation rates usually presented percent.Home prices medical costs. largest expenses encountered families typically grow. might hear statistic like, “Regional median home prices increased 10% last year,” “Health insurance rates increasing 7% year.”understanding long-term consequences growth decay, can helpful frame rate growth percentage, doubling time (halving time decay).Happily, formula calculating doubling (halving) time directly percentage growth (decay) rate. \\[n = \\frac{\\ln(2)}{\\ln(1 + r/100)}\\] \\(r\\) percent per year growth rate \\(n\\) number years doubling (halving).calculation head? Perhaps carry around card graph looking answer:Clearly, straight-line calculation going match doubling-time curve well. quadratic approximation? Let’s make one centered \\(r = 5\\). formula, quadratic approximations \\[n(r) \\approx + b (r - r_0) + c (r-r_0)^2/2\\]centering \\(r_0=5\\) value \\(\\) doubling_time(5), value \\(b\\) dr_doubling_time(5), value \\(c\\) drr_doubling_time(5).Question 1) ’s numerical value \\(\\)?    10.2 ☹︎        11 ☹︎        11.9 ☹︎        12.9 ☹︎        14.2 ✓        15.7 ☹︎        17.7 ☹︎ Question B 2) Just looking graph doubling_time(r) figure signs \\(b\\) \\(c\\). ?\\(b\\) positive \\(c\\) positive ☹︎ \\(b\\) negative \\(c\\) positive ✓ \\(b\\) negative \\(c\\) negative ☹︎ \\(b\\) positive \\(c\\) negative ☹︎ Question C 3) ’s numerical value \\(b\\)? (Hint: Use D() operator calculate derivative doubling_time() respect r. evaluate function \\(r=5\\).)    -3.4 ☹︎        -2.8 ✓        -2.3 ☹︎        2.3 ☹︎        2.8 ☹︎        3.4 ☹︎ Question D 4) ’s numerical value \\(c\\)? (Hint: , use D() find 2nd derivative respect r. evaluate function \\(r=5\\).    -1.11 ☹︎        -0.83 ☹︎        -0.64 ☹︎        0.64 ☹︎        0.83 ☹︎        1.11 ✓ Using numerical values \\(\\), \\(b\\) \\(c\\) just calculated, construct quadratic approximation function plot red top \\(n(r)\\) function. (Hint: Connect two slice_plot() commands pipe %>%. can give slice_plot() color = \"red\" argument.)Question E 5) Comparing actual \\(n(r)\\) quadratic approximation, domain \\(r\\) functions match pretty well? Choose best answers.\\(r \\[3,7]\\) ✓ \\(r \\[1,6]\\) ☹︎ \\(r \\[2, 10]\\) ☹︎ \\(r \\[4, 10]\\) ☹︎ ’ve got quadratic approximation constructed derivatives \\(n(r)\\) hardly usable. couldn’t calculations head even , result limited domain relevance.Occasionally, simple functions give good approximation. one interest rates called “Rule 72.” function \\[n(r) \\approx 72 / r\\]. Plot Rule 72 function top actual \\(n(r)\\).Question F 6) Comparing actual \\(n(r)\\) Rule 72 function, domain \\(r\\) functions match pretty well? Choose best answers.\\(r \\[1,25]\\) ✓ \\(r \\[3,9]\\) ☹︎ \\(r \\[4, 15]\\) ☹︎ \\(r \\[8, 30]\\) ☹︎ Question G 6) Compare numerically actual \\(n(r)\\) Rule 72 function interest rate \\(r = 10\\) (per year). many years different two answers.    0.007 years ☹︎        0.07 years ✓        0.7 years ☹︎        7 years ☹︎ exercises?Log transformation used car prices[[Perceived brightness loudness]] log scale.","code":"\ndoubling_time <- makeFun(log(2) / log(1 + r/100) ~ r)\nslice_plot(doubling_time(r) ~ r, domain(r = c(1,30))) "},{"path":"fun-assembling.html","id":"function-multiplication","chapter":"11 Assembling functions","heading":"11.5 Function multiplication","text":"third repertoire methods making new function old plain old multiplication. two functions \\(f(x)\\) \\(g(x)\\), product simply \\(f(x)g(x)\\).’s essential distinguish function multiplication function composition:\\[\\underbrace{f(x) g(x)}_\\mbox{multiplication}\\ \\ \\ \\ \\underbrace{f(g(x)) \\ \\ \\mbox{}\\ \\ \\ g(f(x))}_\\mbox{composition}\\]function composition, one functions—interior function applied overall input, \\(x\\) example. function gets input output partner.multiplication, functions applied input individually. outputs multiplied produce overall output.function composition, order functions matters: \\(f(g(x))\\) \\(g(f(x))\\) general completely different functions.function multiplication, order doesn’t matter multiplication commutative, , \\(\\) \\(b\\) quantities, \\(\\times b = b \\times \\). 1360Transient vibrationA guitar string plucked produce note. note , course, vibrations air created vibrations string.plucking, note fades away. important model sinusoid (correct period correspond frequency note) times exponential.Function multiplication used often modeling ’ll see many modeling situations. ’s one example important physics communication: wave packet. Overall, wave packet localized oscillation Figure @ref{fig:wave-packet}.\nFigure 11.3: wave packet constructed multiplying sinusoid hump function.\nproduct two simple functions: hump times sinusoid.\nFigure 11.4: two components wave packet Figure 11.3\nEXERCISES: Say two kinds functions multiplied .Question tmp-9: two basic modeling functions multiplied?sinusoid another sinusoid faster period. (+) []sinusoid another sinusoid faster period. (+) []hump sinusoid. []hump sinusoid. []sigmoidal function sinusoid. []sigmoidal function sinusoid. [][][]Question tmp-10: period envelope?10 [’s true broad peaks overall function occur every 10 time units. sine wave two excursions zero every cycle, one positive one negative. period envelope 10, see amplitude faster sinusoid near zero every 5 time units.]10 [’s true broad peaks overall function occur every 10 time units. sine wave two excursions zero every cycle, one positive one negative. period envelope 10, see amplitude faster sinusoid near zero every 5 time units.]20 (+) []20 (+) []30 [, dips amplitude faster sign occur every 15 time units.]30 [, dips amplitude faster sign occur every 15 time units.]examples along lines.EXERCISE: Provide sigmoid series humps. Ask student sketch product.","code":""},{"path":"fun-assembling.html","id":"all-together-now","chapter":"11 Assembling functions","heading":"11.6 All together now!","text":"Two three techniques combining functions—linear combinations, function composition, function multiplication—can used function. 1370Consider function length day\n\\[\\text{day_length}(L, \\delta) \\equiv \\frac{2}{15} \\arccos\\left(-\\tan(L)*\\tan(δ)\\right)\\]\n2/15 scaling output \\(\\arccos()\\). \\(\\arcos()\\) composed interior function scaled product two functions.","code":""},{"path":"fun-assembling.html","id":"exercises","chapter":"11 Assembling functions","heading":"11.7 Exercises","text":"’s common communications systems signal sine-wave carrier modulated another function. , carrier multiplied function: waveform(t) = modulator(t) \\(\\times\\) carrier(t).four examples sine period 2 units modulated another function, one modeling functions studied.Question () sort function modulating carrier?    exponential ✓        hump ☹︎        sigmoid ☹︎        sine ☹︎ Question B (B) sort function modulating carrier?    exponential ☹︎        hump ✓        sigmoid ☹︎        sine ☹︎ Question C (C) sort function modulating carrier?    exponential ☹︎        hump ☹︎        sigmoid ✓        sine ☹︎ Question D (D) sort function modulating carrier?    exponential ☹︎        hump ☹︎        sigmoid ☹︎        sine ✓ One common measure quality life “life expectancy birth.” measure availability health care number physicians per 1000 people.question going examine whether life expectancy function availability health care , , kind function .data frame LifeExpectancyPhysicians contains official 2010 figures many countries life expectancy number physicians per 1000 population.Graph LifeExpectancy versus Physicians. Use linear axes, semi-log axes, log-log axes determine reasonable functional form. (Recall giving scale_y_log10() argument gf_refine() set y axis log scale, similarly x axis.)Using fitModel(), instructor found following model life-expectancy (’ll call L, years) function physicians-per-1000 people. (’ll call “doctor-density” short, D.)instructor’s model :\\[L(D) \\equiv 70.9 \\times D^{0.0683}\\]\nDefine function R graph data. Confirm reasonable match data. (, ’ve copied parameters wrong.)Question kind function instructor’s proposed model?    linear ☹︎ straight line linear axes?        exponential ☹︎ straight line semi-log axes?        power-law ✓ C consonant, Chub        sigmoidal ☹︎ S-shaped Question B According instructor’s model, ’s life expectancy physicians ?0 years ✓ believable, since (living) people physicians. power-law functional form always forces zero input zero output. maybe taken seriously. 35 years ☹︎ 50 years ☹︎ 70 years ☹︎ 100 years ☹︎ 115 years ☹︎ Question C According instructor’s model, life expectancy every person world physician? (Hint: Translate physicians/1000-people.)0 years ☹︎ 35 years ☹︎ 50 years ☹︎ 70 years ☹︎ 100 years ☹︎ 110 years+ ✓ probably starve death everybody physician! also unreasonable extrapolation. argued doctor-density function life expectancy rather way around. (seniors consume lot medical care.)Question D models agrees reasonably well data? (Hint: can plot model data.)\\(D(L) \\equiv 7.24\\times 10^{-19} \\times L^9.8\\) ✓ \\(D(L) \\equiv 3.19 \\times L^{3.1}\\) ☹︎ \\(D(L) \\equiv 8.64 \\times L^{6.3}\\) ☹︎ \\(D(L) \\equiv 5.50 \\times L^{2.4}\\) ☹︎ question now whether function \\(D(L)\\) (previous question) good match data, equivalent function \\(L(D)\\) instructor first proposed.order compare , make functions input. Let’s say take \\(D(L)\\) algebraically find inverse ’ll call \\(D^{inv}(D)\\). inverse function takes input form D produces output form L.Using algebra, confirm \\[D^{inv}(D) \\equiv  70.9 \\times D^{1/9.8}\\]\nsandbox, plot instructor’s proposed model \\(L(D)\\) model \\(D^{inv}(D)\\) axes, along data. (’ll decide variable put horizontal axis, notation \\(L(D)\\) \\(D^{inv}(D)\\) give good clue.)Question E model, \\(L(D)\\) \\(D^{inv}(D)\\) better match data \\(D < 1\\)?\\(L(D)\\) ✓ \\(D^{inv}(D)\\) ☹︎ function. ☹︎ Complex social phenomena, like life expectancy, … well, complex. Life expectancy depends many factors health care: nutrition, war, automobile safety, etc.Notice data countries highest life expectancies \\(D \\approx 3\\). yet, many countries \\(D \\approx 3\\) relatively low life expectancy. One reason inequality. many countries, urbanites live high standard people countryside little access health care reliably good nutrition, civil order, .EXERCISE: algebra composition hump function \\(e^{-\\frac{x^2}{2}}\\). Parabola nice starting point. want go zero asymptotically, \\(-\\infty\\). might seem tall order, exponential function .Use mosaicData::Births_CDC data find segment linear secular trend, yearly trend, (always) weekly trend. maybe first just short segment couple months showing weekly trend secular trend (part yearly trend). Ask decomposition. back data show yearly trend repeating.","code":"\ngf_point(LifeExpectancy ~ Physicians,\n         data = LifeExpectancyPhysicians) %>%\n  gf_refine()"},{"path":"fun-multiple-inputs.html","id":"fun-multiple-inputs","chapter":"12 Functions with multiple inputs","heading":"12 Functions with multiple inputs","text":"can use linear combination function multiplication build custom functions basic modeling functions. Similarly, linear combination function multiplication provide ways construct functions multiple inputs. 1400","code":""},{"path":"fun-multiple-inputs.html","id":"fx-times-gt","chapter":"12 Functions with multiple inputs","heading":"12.1 f(x) times g(t)","text":"example, soon guitar string plucked conforms sinusoid pattern displacement straight-line connecting two fixed ends string: one set finger pressure fret bridge.string length \\(L\\), string displacement function position \\(x\\) along string linear combination functions \\[g_k(x) \\equiv \\sin(k \\pi x /L)\\] \\(k\\) integer. functions graphed Figure 12.1.\nFigure 12.1: Vibrational modes guitar string.\nShapes sort Figure 12.1 stop-motion flash snapshot string. string’s shape also changes time, string’s displacement function \\(x\\) \\(t\\). displacement sinusoid whose time period depends length tension string well number cycles spatial sine:\n\\[g_k(x, t) \\equiv \\sin(\\frac{k \\pi}{L} x) \\ \\sin(\\frac{k \\pi}{P}t)\\] Figure 12.2 shows snapshots 1.5 cycle string different moments time, motion linear combination.1410\nFigure 12.2: String position changes time.\n","code":""},{"path":"fun-multiple-inputs.html","id":"two-variable-modeling-polynomial","chapter":"12 Functions with multiple inputs","heading":"12.2 Two-variable modeling polynomial","text":"Section 11.3 introduced low-order polynomial, either \\(g_1(x) \\equiv a_0 + a_1 x\\) \\(g_1(x) \\equiv b_0 + b_1 x + b_2 x^2\\) general-purpose way generating function smoothly curved shape. applies constructing simple functions two variables.Almost always, use least first-order polynomial, :\n\\[h_1(x, y) \\equiv a_0 + a_x x + a_y y\\]\nimportant extension , using ’s called bilinear term , evocatively statistics, interaction term. \n\\[h_2(x, y) \\equiv \\underbrace{b_0}_\\mbox{intercept} + \\underbrace{b_x\\, x + b_y\\, y}_\\mbox{linear terms} + \\underbrace{b_{xy}\\,x\\, y}_\\mbox{bilinear term}\\]bilinear term arises models phenemona spread epidemics, population dynamics predator prey animals, rates chemical reactions. situations one thing interacting another: predator killing prey animal, infective individual meeting person susceptible disease, one chemical compound reacting another. 1420Under certain circumstances, modelers include one quadratic terms, \n\\[h_3(x, y) \\equiv c_0 + c_x\\, x + c_y\\, y + c_{xy}\\,x\\, y + \\underbrace{c_{yy}\\, y^2}_\\mbox{quadratic y}\\]\nskilled modeler can often deduce terms include basic facts system modeled. ’ll need additional calculus concepts can explain straightforward way.Explain using letter subscripts scalars linear combination.","code":""},{"path":"fun-multiple-inputs.html","id":"function-composition-not","chapter":"12 Functions with multiple inputs","heading":"12.3 Function composition (not!)","text":"left function composition list ways build multivariable functions simpler functions single input.instance, consider two functions \\(f(x)\\) \\(g(t)\\). composition \\(f(g(t))\\) one input: \\(t\\). Similarly, \\(g(f(x))\\) one input: \\(x\\).EXERCISE:Section 11.2 saw function giving declination sun function day year, length--day function latitude sun’s declination. Putting together let’s us assemble day-length function latitude day year.Give function. DRAW CONTOUR PLOT, take slices. Day length seen migrating bird. [Plug simple sinusoid latitude reduce function day-length versus day--year.]Many printed tables meant used functions; plug input values read output. ’s table published National Oceanic Atmospheric Administration heat index, way summarizing perceived comfort (discomfort) summer-like weather conditions.Question ) inputs heat-index functiontemperature relative humidity ✓ temperature wind speed ☹︎ inputs wind-chill function, heat index. temperature, latitude, longitude ☹︎ heat index doesn’t depend location. table actually shows three different functions:heat index \\(^\\circ\\) F.heat index \\(^\\circ\\) C.caution warning level.Question B B) inputs 70% relative humidity \\(88^{\\circ}\\) F, outputs three functions?\\(100^{\\circ}\\) F, \\(38^\\circ\\) C, “extreme caution.” ✓ \\(100^\\circ\\) F, \\(38^\\circ\\) C, “danger.” ☹︎ Check ! \\(100^\\circ\\) F, \\(33^\\circ\\) C, “extreme caution.” ☹︎ 33C temperature 100F. Question C C) Holding relative humidity 70%, much ambient temperature increase (\\(88^\\circ\\) F) change caution-level output “dangerous?”Increase \\(2^\\circ\\) F ✓ Increase \\(6^\\circ\\) F ☹︎ looks like ’re increasing humidity point heat index \\(106^circ\\) F. asked much temperature input change, heat-index output. Increase relative humidity 80%. ☹︎ ’s true \\(100^\\circ\\) F 80% humidity, caution-index “dangerous.” problem specified holding humidity constant. Question D D) starting point \\(88^\\circ\\) F 70% humidity, slope increase heat index moving 80% humidity.\\(6^\\circ\\) F per 10 percentage points humidity ✓ \\(6^\\circ\\) F ☹︎ slope always “rise run.” ’ve got rise right, run? \\(6^\\circ\\) F per 80% humidity. ☹︎ slope change output divided change input, .e. “rise run.” 80% humidity endpoint, run change humidity starting point endpoint. Question E E) heat-index output inputs 52% relative humidity \\(91^\\circ\\) F? Choose best answer.\\(98.4^\\circ\\) F ✓ course, 4 last digit sketchy, ’s reasonable calculate interpolated output averaging neighboring outputs. \\(101^\\circ\\) F ☹︎ ’s output 55% humidity \\(92^\\circ\\) F. table doesn’t say. ☹︎ ’s true table entry specifically 52% \\(91^\\circ\\) F, can make reasonable guess interpolation, , reading rows columns. Question F True false: caution-level output presented function just one variable, rather needing temperature humidity .    TRUE ✓ caution-level output function ambient temperature alone humidity alone. know heat-index, know caution level exactly.        FALSE ☹︎ Notice caution-level output given level heat index, regardless ambient temperature humidity separately. US National Weather Service also publishes heat index graphic, one .Recall Pythagorean theorem: \\(C^2 = ^2 + B^2\\). Let’s write function takes inputs lengths two legs produces output length hypotenuse.\\[\\mbox{hypotenuse}(, b) \\equiv \\sqrt{\\strut ^2 + b^2}\\]can seen composition function \\(f()\\) onto linear combination power-law functions \\(g()\\) different inputs.Question function \\(f()\\)?\\(f(x) \\equiv ^2\\) ☹︎ wouldn’t make sense. output \\(f()\\) doesn’t depend input. \\(f(x) \\equiv \\sqrt{x}\\) ✓ \\(f(x) \\equiv x^2\\) ☹︎ part interior function, outer function. \\(f(x) \\equiv +\\) ☹︎ Sorry, output hypothenuse() function needs quantity, \\(+\\) quantity. Question B function \\(g()\\)?\\(g(x) \\equiv ^2\\) ☹︎ wouldn’t make sense. output \\(f()\\) doesn’t depend input. \\(g() \\equiv x^2\\) ☹︎ wouldn’t make sense. output \\(f()\\) doesn’t depend input. \\(g(x) \\equiv x^2\\) ✓ Right, power-law function. doesn’t matter call input, long ’s used consistently definition. \\(g(x) \\equiv ^2 + b^2\\) ☹︎ Sorry, input name \\(x\\) formula right side tilde expression \\(\\) \\(b\\) . Question C two functions linear combination. ?\\(g()\\) \\(g(b)\\) ✓ \\(f(x)\\) \\(g(x)\\) ☹︎ \\(f(b)\\) \\(g(b)\\) ☹︎ Question D scalars linear combination?\\(1\\) \\(1\\) ✓ \\(1\\) \\(-1\\) ☹︎ scalars. ☹︎ think know ’re getting . tradition mathematics scalar \\(1\\), don’t write . still, scalar \\(1\\). used \\(\\) \\(b\\) names inputs hypotenuse(). Aren’t \\(\\) \\(b\\) meant parameters, input names?can use whatever want input names, long used consistently left right sides \\(\\\\equiv\\). Names like \\(x\\), \\(t\\), \\(y\\) scream recognized input names, use time. Pythagorean theorem usually written using , B, C. ’m honoring convention human reader gets cultural hint inputs stand . ’m unapologetic , since got fair warning left side \\(\\\\equiv\\) argument names .function bigger() defined piecewise terms two extremely simple functions.","code":"\nbigger <- makeFun(ifelse(y > x, y, x) ~ x + y)\ncontour_plot(bigger(x,y) ~ x+y, domain(x=c(-2,2), y=c(-2,2)))"},{"path":"fun-piecewise.html","id":"fun-piecewise","chapter":"13 Piecewise functions","heading":"13 Piecewise functions","text":"[Fun-4-b-4a] Identify graphs piecewise linear function.[Fun-1C-d] Construct hock-stick function piecewise combination constant function straight-line function non-zero slope.[Fun-4-b-4b] Recognize traditional curly-brace notation piecewise functions.[Fun-4-b-4c] able create piecewise function R.[Fun-4-b-4d] Distinguish continuous discontinuous functionsEach basic modeling functions, two exceptions, domain entire number line \\(-\\infty < x < \\infty\\). matter big small value input, function output. functions particularly nice work , since never worry input going bounds. 1500The two exceptions :logarithm function, defined \\(0 < x\\).power-law functions: \\(x^p\\).\n\\(p\\) negative, output function undefined \\(x=0\\). can see simple example: \\(g(x) \\equiv x^{-2}\\). students drilled “division zero illegal,” \\(g(0) = \\frac{1}{0} \\frac{1}{0}\\), double law breaker.\n\\(p\\) integer, \\(p \\neq 1, 2, 3, \\cdots\\) domain power-law function include negative inputs. see , consider function \\(h(x) \\equiv x^{1/3}\\).\n\\(p\\) negative, output function undefined \\(x=0\\). can see simple example: \\(g(x) \\equiv x^{-2}\\). students drilled “division zero illegal,” \\(g(0) = \\frac{1}{0} \\frac{1}{0}\\), double law breaker.\\(p\\) integer, \\(p \\neq 1, 2, 3, \\cdots\\) domain power-law function include negative inputs. see , consider function \\(h(x) \\equiv x^{1/3}\\).can tedious make sure right side law dealing functions whose domain whole number line. designers hardware computer arithmetic, several decades work, found clever system make easier. ’s standard part hardware whenever ta function handed input part function’s domain, one two special “numbers” returned. illustrate:NaN stands “number.” Just calculation involving NaN generate NaN result, even involving multiplication zero cancellation subtraction division.13 instance:Division zero produces Inf, whose name reminiscent “infinity.” Inf infiltrates calculation takes part: 1510To see benefits NaN / Inf system let’s plot logarithm function graphics domain \\(-5 \\leq x \\leq 5\\). course, part graphics domain, \\(-5 \\leq x \\leq 0\\) domain logarithm function computer entitled give us slap wrists. NaN provides room politeness.Open sandbox see happens make plot.purely mathematical sense, problem functions undefined extended part domain handled cunning imagination. solution—invention complex numbers—concern . Instead, ’re going embrace functions domain smaller whole number line see can .illustrate, let’s use computer notation create function whose domain \\(x < 1\\). , need way write “,” , “\\(x\\) 1 greater, return NaN.” ’ll use function R let’s ask TRUE/FALSE question , depending answer, one another calculation. question-answering R function ifelse() whose name remarkably descriptive. ifelse() function takes three arguments. first question asked, second value return answer “yes,” third value return “” answer.\ntakes getting used expression x < 1 question statement fact. ’s standard traditional mathematical notation questions, although people use question mark \\(x \\stackrel{?}{<} 1\\).table shows computer notation common sorts questions. 1520","code":"\nsqrt(-3)## [1] NaN\n(-2)^0.9999## [1] NaN\n1/0## [1] Inf\n0 * NaN## [1] NaN\nNaN - NaN## [1] NaN\nNaN / NaN## [1] NaN\n3 * Inf## [1] Inf\nsqrt(Inf)## [1] Inf\n0 * Inf## [1] NaN\nInf + Inf## [1] Inf\nInf - Inf## [1] NaN\n1/Inf## [1] 0\nslice_plot(log(x) ~ x, domain(x=c(-5,5)))\ng <- makeFun( ifelse(x < 1, x, NaN) ~ x)\nslice_plot(g(x) ~ x, domain(x = c(-2, 2)))"},{"path":"fun-piecewise.html","id":"piecewise-functions","chapter":"13 Piecewise functions","heading":"13.1 Piecewise functions","text":"ability split domain function provide different formula pieces allows us \nconstruct piecewise functions. illustrate, function \\(h(x) \\equiv |x|\\). ’ll recognize “absolute value” function. intuitive algorithm “strip negative sign, ” input. ability divide domain pieces, gain access less mysterious sort arithmetic operation can re-write \\[h(x) \\equiv \\left\\{ \n\\begin{array}{cl} x & \\text{}\\ 0 \\leq x\\\\-x & \\mbox{otherwise}\\end{array}\n\\right.\\]\n, computer notationNote absolute value function built-R form abs() function.Less familiar Heaviside function important uses physics engineering:\\[\\mbox{Heaviside}(x) \\equiv \\left\\{ \n\\begin{array}{cl} 0 & \\text{}\\ x < 0\\\\1 & \\mbox{otherwise}\\end{array}\n\\right.\\]\ncomputer notation, \nvertical gap two pieces called discontinuity. Intuitively, draw discontinuous function without lifting pencil paper. Heaviside function discontinuity \\(x=0\\).Similarly, ramp function kind one-sided absolute value:\n\\[\\mbox{ramp}(x) \\equiv \\left\\{ \n\\begin{array}{cl} x & \\text{}\\ 0 \\leq x\\\\0 & \\mbox{otherwise}\\end{array}\n\\right.\\]\n, computer notation:linear combination two input-shifted ramp functions gives piecewise version sigmoid.Figure ?? graph monthly natural gas use author’s household versus average temperature month. (Natural gas measured cubic feet, appreviated ccf.) 1530\ngraph looks somewhat like hockey stick. sloping straight-line dependence ccf temperature temperatures \\(60^\\circ\\)F constant higher temperatures. shape originates dual uses natural gas. Gas used cooking domestic hot water, demand less independent outdoor temperature 15 ccf per month. Gas also used heating house, ’s needed temperature less \\(60^\\circ\\)F.can accomplish hockey-stick shape linear combination ramp() function constant. ramp function represents gas used heating, constant uses gas (modeled depending temperature. Overall, model \\[\\text{gas_ccf}(x) \\equiv 4.3\\,  \\mbox{ramp}(62-x)  + 15\\]\nEven simpler model uses natural gas:\n\\[\\text{other_ccf}(x) \\equiv 15\\].heating degree days integration.Similarly power wind turbinesOur last example concerns bit familiar technology: music synthesis. Generating pure tone electronically easy done using sinusoid. Generating note rich instrumental timbre can accomplished linear combination sinusoids. course, note localized time. accomplished multiplying sinusoids hump function envelope. 1540It turns standard hump function, dnorm(), generate realistic sound. Instead, complicated envelope used, ADSR function shown Figure 13.1. function six (!) parameters: time key pressed, duration “attack” phase sound amplitude increasing response impulse imposed key, decay duration D output level S lasts key released, decay zero duration R. ’s reasonable think D S phases piecewise linear approximation exponential decay.\nFigure 13.1: ADSR envelope function used music synthesis consists 6 pieces including zero output key pressed pulse ends. Source\n","code":"\nh <- makeFun(ifelse(x >= 0, x, -x) ~ x)\nHeaviside <- makeFun(ifelse(x < 0, 0, 1) ~ x)\nramp <- makeFun(ifelse(0 < x, x, 0) ~ x)\nslice_plot(ramp(x) ~ x, domain(x=c(-3, 3)))\nsig <- makeFun(ramp(x+0.5) - ramp(x-0.5) ~ x)\nslice_plot(sig(x) ~ x, domain(x=c(-3, 3)))"},{"path":"modeling-cycle.html","id":"modeling-cycle","chapter":"14 Modeling cycle","heading":"14 Modeling cycle","text":"Effective modelers treat models skepticism. look ways models failure capture salient features real world. eye deviations models show believe know system modeled. consider ways models might serve purpose developed. 1560When modelers spot failure deviation lack proper utility, might discard model often make series small adjustments, tuning model successfully serves purposes intended.Thus, modeling cyclic process creating model, assessing model, revising model. process comes sort preliminary end model serves purposes. even , models often revised check whether results sensitive factor included check whether component deemed essential really .","code":""},{"path":"modeling-cycle.html","id":"example-cooling-water","chapter":"14 Modeling cycle","heading":"14.1 Example: Cooling water","text":"Looking back exponential fitted cooling water data Section 8.2, looks like original estimate half-life bit small; data doesn’t seem decay rate implied \\(k = -0.0277\\). Perhaps try somewhat slower decay, say \\(k = -0.2\\) see improves things.cooling water example, ’re using subset data collected Prof. Wagon. next commands re-create subset can work . also plot data exponential model. 1565See \\(k=-0.02\\) provides better fit model. (can add another slice_plot() able compare original \\(k=-0.02\\) models.)Later CalcZ, ’ll study optimization. optimization techniques directing computer refine parameters best match data. Just illustrate, ’s get:\nFigure 14.1: Polishing fit using rough model starting point.\nrefined parameters give much better fit data original rough estimates eye.two rounds modeling cycle. First, choice /B expontential model rough estimate parameters , B, \\(k\\). Second, refinement parameters using computer.Looking results second round, experienced modeler can see disturbing discrepancies. First, estimated baseline appears high. Related, initial decay model function doesn’t seem fast enough decay model function large \\(t\\) appears slow. Prof. Stan Wagon noticed . used additional data fill gaps small \\(t\\) refined model changing basis functions linear combination. hypothesized least two different cooling processes. First, newly poured water raises temperature mug . Since water mug direct contact, fast process. , complete water/mug unit comes slowly equilibrium room temperature. 1567The newly refined model even better match data. nothing’s perfect Prof. Wagon saw opportunity additional refinement based idea third physical mechanism cooling: evaporation surface hot water. Prof. Wagon’s additional circuits modeling cycle appropriate purpose, develop detailed understanding process cooling. purposes, demonstrating appropriateness exponential process interpolating data points, earlier cycles might sufficed.’s graph model Prof. Wagon constructed match data.\nFigure 14.2: model combines three exponentials provides excellent fit.\nexcellent match data. … matching data isn’t always goal modeling. Prof. Wagon wanted make sure model physically plausible. looking refined parameters, include two exponential processes parameters \\(k_1\\) \\(k_2\\), saw something wrong:can make \\(k_1\\), whose [positive value] violates laws thermodynamics suggesting water gets hotter virtue presence cool air? likely problem simple model (proportionality assumption) adequate near boiling point. many complicated factors affect heat transportation, air movement, boundary layer dissipation, diffusion, use single linear relationship appears inadequate. next section [paper] suggest experiments, also hope experiments might inspire readers come better mathematical model.modeling cycle can go round round!","code":"\n# reconstruct the sample\nset.seed(101)\nStans_data <- CoolingWater %>% sample_n(20)\n# Plot the sample and overlay a model\ngf_point(temp ~ time, data=Stans_data) %>%\n  gf_lims(y = c(20, NA)) %>%\n  slice_plot(25 + 83.3*exp(-.0277*time) ~ time, color=\"blue\")\nrefined_params <-\n  fitModel(temp ~ A + B*exp(k*time), data = Stans_data,\n           start = list(A = 25, B = 83.3, k = -0.0277))\ncoef(refined_params)##           A           B           k \n## 25.92628463 60.69255269 -0.01892572\nnew_f <- makeFun(refined_params)\ngf_point(temp ~ time, data = Stans_data) %>%\n  slice_plot(new_f(time) ~ time, color=\"blue\")"},{"path":"modeling-cycle.html","id":"example-the-tides","chapter":"14 Modeling cycle","heading":"14.2 Example: The tides","text":"Step 4: Evaluate refine. green model make poor predictions. model says “high tide” data say otherwise. ’s missing phase sinusoid. model incorporates phase 1040\\[{\\color{blue}{\\mbox{tide}(t)} \\equiv 1.05 + 0.55 \\sin(2\\pi (t - t_0)/11)}\\]new parameter, \\(t_0\\), set time positive-going crossing baseline. ’s crossing time = 17. Happily, changing phase necessitate re-estimating parameters: baseline, amplitude, period. model, incorporating phase, graphed \\(\\color{blue}\\mbox{blue}\\).\nFigure 14.3: Shifting phase sinusoid gives flexibility needed align peaks troughs model data. Performing alignment one peak makes clear period wrong.\nmodeling purposes, prediction future tides, phase information impossible. others, say, description amplitude tides, . getting phase roughly right can help point problems. instance, blue sinusoid comparison makes clear estimated period 11 hours short. Maybe 13 hours better. Better still, since \\(t=t_0 = 17\\) model close match data, let’s use estimate start cycle. , let’s move much along data find another baseline crossing. judge right panel, baseline crossing \\(t=103\\). difference two times \\(103 - 17 = 86\\) hours. course, period 86 hours. Looking back whole set data can see 7 complete cycles \\(t=17\\) \\(t=103\\). new estimate period \\(86/7 = 12.3\\) hours.refinement model \n\\[{\\color{green}{\\mbox{tide}(t)} \\equiv 1.05 + 0.55 \\sin(2\\pi (t - 17)/12.3)}\\]\nFigure 14.4: phase right, better estimate can made period: 12.3 hours.\n’s pretty good match data! might call quits . First, let’s polish parameter estimates, letting computer tedious work trying little tweaks see can improve fit.\nFigure 14.5: Polishing parameters sinusoid\nlast model seems capable making reasonable predictions, collected --date data might able fit new model predict tide level pretty accurately days ahead time. Also, excellent alignment model peaks data tell us cyclic tide period constant, least far well can tell. 1576With period estimate \\(P=12.56\\) hours, can go looking phenomena might account tides. period day-night cycle , course 24 hours. tides Providence come twice day. exactly. Something else must going .Isaac Newton first propose tides caused gravitational attraction Moon. complete cycle Moon—moon rise moon rise—takes 50 minutes longer full day: Earth revolves every 24 hours, time Moon moved bit orbit Earth. Moon’s period, seen fixed place Earth 24.8 hours. Half , 12.4 hours, awfully close estimate tidal period: 12.56 hours. difference periods, 8 minutes day, might hard observe 4 days. Maybe data ’d get better match tides moon.modeling cycle work: Propose model form (/B model sinusoid), adjust parameters match know (Providence tide record), compare model data, observe discrepancies, propose refined model. can stop model giving need. period 12.56 hour model seems good enough make prediction tide level days ahead, certainly better “two tides day” model. model yet able implicate precisely Moon’s orbit tidal oscillations.Discrepancies model data play two roles: help us decide model fit purpose mind can point way improved models. tidal data deviates steady amplitude model can clue look next. ’s always obvious lead.Historically, careful analysis tides led highly detailed, highly accurate model: linear combination sinusoids diurnal periods 12.42, 12.00, 12.66, 11.97 hours well components period 23.93, 25.82, 24.07, 26.87, 24.00 hours. tide-prediction model constructed finding coefficients linear combination; differ locale locale. 1577The data frame SunsetLA records number minutes 4 pm sun sets Los Angeles, CA 4-year interval January 2010 (month 1) December 2013 (month 48).Open sandbox make plot sunset time versus month.’re using gf_point() gf_line(). data oscillates , connecting data points lines makes easier see pattern.Question range number minutes sunset whole 4-year period?40 190 minutes ✓ 120 minutes ☹︎ range interval spanned two numbers. 40 180 minutes ☹︎ largest values half tick mark 180. Tick marks spaced 20 minutes. 0 48 months ☹︎ ’s domain. range along vertical axis. Question B data fall nicely sine-shaped curve. period sine?    6 months ☹︎ Look number months one peak another.        11 months ☹︎ Look carefully. remember change length day annual phenomenon.        12 months ✓        12 minutes ☹︎ Period refers interval domain function, range. function \\[\\mbox{sunset}(\\mbox{Month}) \\equiv  \\sin(2 \\pi\\, \\mbox{Month} / 12) + C\\] linear combination two functions:constant function one(Month)sine function sin(2*pi*Month/12)two functions scaled \\(C\\) \\(\\), respectively.can estimate \\(C\\) mid-point range (minutes) data. can estimate \\(\\) half length range (, half max minus min.)Make rough reasonable numeric estimates \\(C\\) \\(\\) data. , sandbox, define sunset() function using numerical estimates linear combination. Plot function layer top data. (Pipe gf_point() layer slice_plot().)domain slice_plot() inherited implied SunsetLA data. Notice input name slice_plot() corresponds established gf_point().Question C sunset() function pretty good match data except one thing. thing?sunset() function completely different range data. ☹︎ won’t case estimated \\(C\\) \\(\\) correctly. period sunset() function doesn’t match data. ☹︎ use sin(2*pi*Month/12)? , period right. horizontal time shift sunset() data. ✓ ’re going fix problem sunset() defining time offset use reference. sine function, suitable time offset value along horizontal axis phenomenon modeled crosses \\(C\\) positive slope. 4 points along horizontal axis readily identifiable data. (may integer value Month.)Question D suitable value time offset?    0 months ☹︎ ’s time data suggest \\(C\\) crossed.        19 months ☹︎ ’s maximum, crossing \\(C\\).        21.5 months ☹︎ ’s crossing \\(C\\), one positive slope.        15.5 months ✓ good rough value. Since period 12 months, equally well said offset 3.5 months. original scaffolding, value offset zero. Change match answer previous question.Plot modified sunset() function confirm much better match data original (, one without time offset). can “tune” function tweaking numerical values \\(\\), \\(C\\), \\(offset\\) parameters get solid match.Alternatively, can use fitModel() tuning . Plug estimates (.k.. “guesses”) parameters place ___ following. run code. ’ll see estimate function compared result computer refine estimate. Chances , computer better job stringing function data.Perhaps expecting tuned sine function match data exactly. . One reason Earth’s orbit around Sun exactly circular. sine function model phenomenon, good purposes others. complete explanation, see article Wikipedia.","code":"\ntide_mod <-\n  fitModel(level ~ A + B*sin(2*pi*(hour-hzero)/P),\n  data = RI_tide,\n  start=list(A=1.05, B=0.55, hzero=17, P=12.3))\ncoef(tide_mod)##          A          B      hzero          P \n##  1.0220540  0.4998367 15.3899905 12.5593556\ngf_point(Minutes ~ Month, data = SunsetLA) %>%\n  gf_line()sunset <- makeFun(A + C*sin(2*pi*(Month - offset)/12), \n                  A = __your estimate__, \n                  C = __your estimate__,\n                  offset=0)\ngf_point(Minutes ~ Month, data = SunsetLA) %>%\n  gf_line() %>%\n  slice_plot(sunset(Month) ~ Month)## rough estimates from graph\nrough_A <- __estimated_A__\nrough_C <- __estimated_C__\nrough_offset <- __estimated_offset___\nguessed_fun <-\n  makeFun(A*sin(2*pi*(Month - offset)/12) + C ~ Month,\n          A  = rough_A, C = rough_D,\n          offset = rough_offset)\n\ntuned_fun <-\n  fitModel(Minutes ~ A*sin(2*pi*(Month - offset)/12) + C,\n         data  = SunsetLA,\n         start = list(A = rough_A,\n                      C = rough_C,\n                      offset = rough_offset) )\n\ngf_point(Minutes ~ Month, data = SunsetLA) %>%\n  gf_line(color  = \"blue\") %>%\n  slice_plot(tuned_fun(Month) ~ Month) %>%\n  slice_plot(guessed_fun(Month) ~ Month,  color = \"red\")"},{"path":"magnitudes.html","id":"magnitudes","chapter":"15 Magnitudes","heading":"15 Magnitudes","text":"Undoubtedly comfortable standard way writing numbers, instance 33 512 1051. Elementary school students master comparison numbers. greater: 512 33? less, 1051 512? can answer questions glance; comparison can accomplished simply counting number digits. 1051 four digits, larger three-digit number 512. two digits 33, smaller 512. two numerals number digits—say, 337 512—can’t answer “greater ” question simple counting. Instead, proceed left write compare number place. , 512 337, compare 5 3 … since 5 greater 3, 512 greater 337. two leading digits , go next digit digits turn. 1600Things always simple. number system uses place Arabic numerals human invention. example earlier number system Roman numerals. , comparison hard. instance, three numbers bigger?\\[\\mbox{MLI CXII XXXIII}\\]\ntypographically shorter number largest, vice versa. Even two Roman numerals length, ’s trivial compare place--place basis. instance, IC fifteen times bigger VI, even though much smaller V.","code":""},{"path":"magnitudes.html","id":"counting-digits","chapter":"15 Magnitudes","heading":"15.1 Counting digits","text":"Digit counting provides easy, fast way perform many calculations, least approximately. \\(\\sqrt{10000}\\)? five digits, square root number “half number digits.” , \\(\\sqrt{10000} = 100\\). \\(10 \\times 34\\)? Easy: 340. Just append one zero 10 end 34. \\(1000 \\times 13\\)? Just easy: 13,000. even punctuate written numbers commas period order facilitate counting digits.Imagine digit counting function called digit(). takes number input produces number output. don’t formula digit(), inputs output can calculated just counting. example:digit(10) \\(\\equiv\\) 1digit(100) \\(\\equiv\\) 2digit(1000) \\(\\equiv\\) 3… …digit(1,000,000) \\(\\equiv\\) 6… .digit() function easily can applied product two numbers. instance:digit(1000 \\(\\times\\) 100) = digit(1000) + digit(100) = 3 + 2 = 5.Similarly, applying digit() ratio gives difference digits numerator denominator, like :digit(1,000,000 \\(\\div\\) 100) = digit(1,000,000) - digit(100) = 6 - 2 = 4","code":""},{"path":"magnitudes.html","id":"using-digit-to-understand-magnitude","chapter":"15 Magnitudes","heading":"15.2 Using digit() to understand magnitude","text":"haven’t shown digit() function anything handful discrete inputs listed . heroic task produce continuous version digit(). method sketched 15.7.practice, digit() useful well one basic modeling functions:\n\\[\\text{digit(x)} = 2.302585 \\ln(x)\\] , R, log10(). elected \\(\\ln()\\) rather digit() reasons seen study differentiation.","code":""},{"path":"magnitudes.html","id":"quantity-and-magnitude","chapter":"15 Magnitudes","heading":"15.3 Quantity and magnitude","text":"familiar quantity 60 miles-per-hour written number (60 ) followed units. quantity neither number units: combination two. instance, 100 obviously 60. miles-per-hour kilometers-per-hour. Yet, 60 miles-per-hour almost exactly quantity 100 kilometers-per hour.15 16106, 60, 600, 6000 miles-per-hour quantities differ size orders magnitude. differences often point substantial change context. jog 6 mph, car highway goes 60 mpg, cruising commercial jet goes 600 mph, rocket passes 6000 mph way orbital velocity.everyday speech, difference 60 6 54; just subtract. Modelers scientists routinely mean something else: difference 60 6 “one order magnitude.” Similarly, 60 6000 different “two orders magnitude,” 6 6000 three orders magnitude.everyday English, phrases like “completely different situation” “different kind” “qualitatively different” (note l) indicate substantial differences. “Different orders magnitude” expresses kind idea specific reference quantity.use factors 10 counting orders magnitude arbitrary. person walking person jogging edge qualitatively different, although speeds differ factor 2. Aircraft cruise 600 mph 1200 mph qualitatively different design, although speeds factor 2 apart. professional basketball player (height 2 meters ) qualitatively different third grader (height 1 meter).Modelers develop intuitive sense think difference terms subtractive difference (e.g. 60 - 6 = 54) look orders magnitude (e.g. 60--6 one order magnitude). seems skill based experience judgment, opposed mechanical process.One clue thinking terms orders magnitude appropriate working set objects whose range sizes spans one many factors 2. Comparing baseball basketball players? Probably need orders magnitudes. Comparing infants, children, adults terms height weight? Orders magnitude may useful. Comparing bicycles? Mostly fit within range 2 terms size, weight, speed (expense!). Comparing cars, SUVs, trucks? Differences factor 2 routine, thinking terms order magnitude likely appropriate.Another clue whether “zero” means “nothing.” Daily temperatures winter often near “zero” Fahrenheit Celcius scales, way means complete absence heat. scales arbitrary. Another way think clue whether negative values meaningful. , thinking terms orders magnitude likely useful.may guessed digits() handy computing differences terms orders magnitude. ’s : 1620Make sure quantities expressed units.Calculate difference digits() numerical part quantity.order--magnitude difference velocity snail walking human. snail slides 1 mm/sec, human walks 5 km per hour. Putting human speed units snail speed:\n\\[5 \\frac{km}{hr} = \\left[\\frac{1}{3600} \\frac{hr}{sec}\\right] 5 \\frac{km}{hr} = \\left[10^6 \\frac{mm}{km}\\right] \\left[\\frac{1}{3600} \\frac{hr}{sec}\\right] 5 \\frac{km}{hr} = 1390 \\frac{mm}{sec} \\]\nCalculating difference digits() 1 1390:, 3 orders magnitude difference speed. snail, walking humans must seem like rockets way orbit!Animals, including humans, go world varying states illumination, bright sunlight high noon dim shadows half moon. able see diverse conditions, eye needs respond light intensity across many orders magnitude.lux unit illuminance Système international. table16 shows illumination range familiar outdoor settings:creature active night day, eye needs sensitive 7 orders magnitude illumination. accomplish , eyes use several mechanisms: contraction dilation pupil accounts 1 order magnitude, photopic (color, cones) versus scotopic (black--white, rods, nighttime) covers 3 orders magnitude, adaptation minutes (1 order), squinting (1 order).","code":"\nlog10(1390) - log10(1)## [1] 3.143015"},{"path":"magnitudes.html","id":"composing-ln","chapter":"15 Magnitudes","heading":"15.4 Composing \\(\\ln()\\)","text":"logarithm inverse exponential function. words, \\[\\ln(e^x) = x\\ \\ \\text{}\\ \\ e^{\\ln(x)} = x\\]Think terms kinds quantities input output function. 1630Logarithm: input quantity, output magnitude quantity.Exponential: input magnitude, output quantity magnitude.Question ) True false: \\(2^x\\) power-law function.    TRUE ☹︎ power-law function, input base. \\(2^x\\), input exponent. ’s exponential function.        FALSE ✓ Question B B) True false: \\(3/x^2\\) power-law function.    TRUE ✓        FALSE ☹︎ \\(3 x^{-2}\\). can see \\(x\\) base, power-law function. Question C C) True false: \\(5\\sqrt{x}\\) power-law function.    TRUE ✓        FALSE ☹︎ \\(5 x^{1/2}\\). input \\(x\\) base, power-law function. Question D D) gravitational force, F, two bodies inversely proportional square distance \\(d\\) . …Inversely proportional square \\(d^{-2}\\) ☹︎ \\(F = kd^{-2}\\) ✓ square-root relationship. ☹︎ inversely proportional square root. ☹︎ Robert Boyle (1627-1691) founder modern chemistry scientific method general. chemistry student already knows, Boyle sought understand properties gasses. results summarized Boyle’s Law.going examine data Boyle’s lab notebooks. (preserved Royal Society London. data copied source.) data available data frame Boyle. units pressure mmHg units volume cubic inches.Open sandbox carry calculations Boyle’s data. see data frame organized, use head(Boyle) names(Boyle) commands.scaffolding contains command plotting Boyle’s data. also includes command, gf_lm() add graph best straight-line model plotted points. Recall # symbol turns follows line comment, ignored R. removing # selectively can turn display log axes.Question () sandbox, plot pressure versus volume using linear, semi-log, log-log axes. Based plot, straight-line function drawn, good model relationship pressure volume?    linear ☹︎ look like straight line linear axes.        exponential ☹︎ look like straight line semi-log axes.        power-law ✓ want find slope intercept straight-line model. can hard read graph log scales, use special purpose function find formula straight-line function fits data. ’s example use .Notice use log(pressure) formula scaffolding. appropriate think data fall straight-line semi-log axes. use log-log axes, want use log(volume) right side tilde expression. , ’re using linear axes, leave logs altogether.Question B (B) slope produced fitModel() fitting correct model type part (1)?Roughly -1 ☹︎ must precise person! Almost exactly -1 ✓ -1.5 ☹︎ ’m sure arrived answer. Slope \\(> 0\\) ☹︎ able see graph made part (1) slope negative. According appropriate model found () (B), interpret function found relating pressure volume.Question C (C) volume becomes large, happens pressure?Pressure becomes small. ✓ Pressure stays constant ☹︎ can see graph part () pressure change volume. Pressure also becomes large. ☹︎ can see graph part () pressure goes volume goes . None ☹︎ Return use fitModel() find slope straight-line fit appropriately log-transformed model. carried log transformation, used -called “natural logarithm” expressions like log(pressure). Alternatively, used log base-10 log base-2, expressions like log(pressure, base = 10) log(volume, base = 2). Whichever use, use base logarithmic transformations finding straight-line parameters.Question D (D) slope straight line found fitModel() depend base used?    ✓        Yes ☹︎ use base logarithms fitModel() expression?        ’s way tell. ☹︎ Yes, . Try using fitModel() different bases log. Question E (E) intercept straight line found fitModel() depend base used?    Yes ✓ Good. come wash calculate parameter \\(C\\) \\(C x^b\\), since \\(C\\) either \\(2^\\mbox{intercept}\\) \\(10^\\mbox{intercept}\\) \\(e^\\mbox{intercept}\\) depending base log use.        ☹︎ sure tried different bases? ","code":"\ngf_point(pressure ~ volume, data = Boyle) %>%\n  gf_refine(\n     # scale_x_log10(),\n     # scale_y_log10()\n  ) %>%\n  gf_lm()\nfitModel(log(pressure) ~ a + b*volume, data = Boyle) %>%\n  coefficients()"},{"path":"magnitudes.html","id":"magnitude-graphics","chapter":"15 Magnitudes","heading":"15.5 Magnitude graphics","text":"Based log-log plot horsepower (BHP) versus engine displacement, answer questions.Question many engines displacement 1 liter less?    none ☹︎ Perhaps recognized left-tick mark corresponds value 1, data points 1 smaller. one liter corresponds 1000 cc.        7 ☹︎ number engines displacement 10 cc smaller. one liter corresponds 1000 cc.        14 ✓ Right. ’s \\(10^3\\) tick marks 1 liter, since 1 liter 1000 cc.        25 ☹︎ true cut-10 liters. ’s .        randomAnswerOrder ☹︎ FALSE Question B Using log-log plot, many decades BHP spanned data?    4 ☹︎ bad answer, best one either. Notice smallest engine half decade 1 BPM, largest half decade 10,000 BPH        5 ✓        100 ☹︎ number \\(10^{100}\\) called googol roughly many particles (including photons, neutrinos, etc.) universe. Imagine, quite contrary fact, 1 BHP generated burning one molecule fuel per second. many fuel molecules particles universe burned second power engine high end span 100 decades. Derive straight-line form power-law functionSuppose \\(f(x) = x^p\\). \\(\\ln(f(x)) = p \\ln(x) + \\ln()\\).plot power output (BHP) versus displacement (cc) 39 internal combustion engines.Question study partner claims smallest engine data displacement 2000 cc (, 2.0 liters) 100 horsepower. Based graph, claim plausible?Yes, 2000 cc 100 hp look like (0, 0) scale graph. ✓ Yes, size engine typical small car. ☹︎ may , certainly ’ve encountered lawn mower engines much smaller. , smallest engine close 0 cc. ☹︎ able distinguish visually engine 1 cc engine 1000cc graph? values lie horizontal pixel graph. , study partner always wrong. ☹︎ may, ’re looking principled answer, ad hominem one. Semi-log scalesThe next command make graph engine data , log scale horizontal axis. vertical axis still linear.Question B Using just graph, answer question: engines range many decades displacement? (Remember, decade factor 10.)7 decades ✓ Can’t tell ☹︎ Yes, can. Figure one decade corresponds terms distance log axes. \\(10^7\\) decades ☹︎ estimated volume entire universe \\(4 \\times 10^{86}\\) cc. volume neutron \\(6 \\times 10^{-81}\\) cc. range neutron universe therefore \\(86 - -81 = 167\\) decades. think likely internal combustion engine smaller neutron larger universe? 3.5 decades ☹︎ Perhaps ’re treating distance axis labels one decade. Look carefully see ’s actually factor 100, , two decades. Log-log scalesIn order make graph log-log scales, refine graph scale_y_log10() scale_x_log10(), following …Based log-log plot, answer questions.Question C many engines displacement 1 liter less?    none ☹︎ Perhaps recognized left-tick mark corresponds value 1, data points 1 smaller. one liter corresponds 1000 cc.        7 ☹︎ number engines displacement 10 cc smaller. one liter corresponds 1000 cc.        14 ✓ Right. ’s \\(10^3\\) tick marks 1 liter, since 1 liter 1000 cc.        25 ☹︎ true cut-10 liters. ’s .        randomAnswerOrder ☹︎ FALSE Question D Using log-log plot, many decades BHP spanned data?    4 ☹︎ bad answer, best one either. Notice smallest engine half decade 1 BPM, largest half decade 10,000 BPH        5 ✓        100 ☹︎ number \\(10^{100}\\) called googol roughly many particles (including photons, neutrinos, etc.) universe. Imagine, quite contrary fact, 1 BHP generated burning one molecule fuel per second. many fuel molecules particles universe burned second power engine high end span 100 decades. ","code":"\ngf_point(BHP ~ displacement, data = Engines) %>%\n  gf_refine(scale_x_log10(), scale_y_log10())\nf <- makeFun(A  * x^p ~ x, A=1, p=2.5)\nPts <- tibble::tibble(\n  x = seq(1, 50, length=10),\n  y = f(x),\n  color = rainbow(length(x))\n)\n\nP <- slice_plot(f(x) ~ x, domain(x=c(0,50))) %>%\n  gf_point(y ~ x, color=~color, data = Pts) %>%\n  gf_refine(scale_color_identity())\nP\nP %>%\n  gf_refine(scale_y_log10(), scale_x_log10())## Warning: Transformation introduced infinite values in continuous y-axis## Warning: Transformation introduced infinite values in continuous x-axis\ngf_point(BHP ~ displacement, data = Engines) %>%\n  gf_lims(y  = c(0, 30000))\ngf_point(BHP ~ displacement, data = Engines) %>%\n  gf_refine(scale_x_log10())\ngf_point(BHP ~ displacement, data = Engines) %>%\n  gf_refine(scale_x_log10(), scale_y_log10())"},{"path":"magnitudes.html","id":"magnitude-scales","chapter":"15 Magnitudes","heading":"15.6 Magnitude scales","text":"Plotting logarithm quantity gives visual display magnitude quantity labels axis magnitude. useful graphical technique label axis original quantity, letting position axis show magnitude. 1640To illustrate, Figure ??(left) log-log graph horsepower versus displacement internal combustion engines reported Engines data frame. points admirably evenly spaced, hard translate scales physical quantity. right panel Figure ?? shows exactly data points, now scales labeled using original quantity.tick marks vertical axis left pane labeled 0, 2.5, 5.0, 7.5, 10. doesn’t refer horsepower , logarithm horsepower. right pane tick labels horsepower positions marked 1, 10, 100, 1000, 10000.even splits 0-100 scale appropriate logarithmic scales. One reason 0 logarithmic scale first place since \\(\\log(0) = -\\infty\\).Another reason 1, 3, 10 pretty close even split logarithmic scale running 1 10. ’s something like :’s nice labels show round numbers. ’s also nice evenly spaced along axis. 1-2-3-5-10 convention good compromise; almost evenly separated space yet showing simple round numbers.Question Consider axis scales shown . kind scale horizontal axis?linear ✓ can see given length along axis corresponds arithmetic difference regardless axis. distance 0 50 exactly difference 50 100, distance 150 200. logarithmic ☹︎ clue axis logarithmic zero marked. log zero \\(-\\infty\\), can’t appear actual graph. Another key whether scale shows doubling behavior. distance 50 100 represents one doubling: 100 twice 50. scale logarithmic, moving forward distance 100 bring 200. ’s happens . semi-logarithmic ☹︎ “Semi-logarithmic” single axis two axes: horizontal vertical. means one axis linear logarithmic. log-log ☹︎ “Log-log” single axis two axes. means horizontal vertical axes logarithmic. Question B kind scale vertical axis?linear ☹︎ Measure distance 30 50. scale linear, moving distance 50 bring 70, moving distance bring 90. can see instead reaching 90, ’d reach something greater 100 scale. scale linear. logarithmic ✓ semi-logarithmic ☹︎ “Semi-logarithmic” single axis two axes: horizontal vertical. means one axis linear logarithmic. log-log ☹︎ “Log-log” single axis two axes. means horizontal vertical axes logarithmic. Question C Given answers previous two questions, kind plot made frame displayed top question?    semi-log ✓        log-log ☹︎ log-log plot log scales axes. horizontal axis linear.        linear-linear ☹︎ , vertical axis logarithmic. data frame SSA_2007 comes [US Social Security Administration(https://www.ssa.gov/oact/STATS/table4c6.html) contains mortality US function age sex. (“Mortality” refers probability dying next year.)Open sandbox copy following scaffolding see organization data.understand data organization, delete old scaffolding insert :\n::: {scaffolding}slight mistake way command written,\nerror message generated. figure ’s wrong, read error message, check variable names, successfully make plot.\n:::Question ) mistake plotting command code box?Variable names didn’t match ones data. ✓ tilde argument color = ~ sex ☹︎ color = argument right. value used, ~ sex, one-sided formula used things like color, shape, transparency, …. data frame name spelled wrong. ☹︎ . function gf_point(). ☹︎ . gf_point() one commonly used plotting functions Essay question tmp-11: B) ’s obvious (simple) message plot?Now going use semi-log log-log scales look mortality data . , use gf_refine() function.Fill __and_so_on__ details correctly run command sandbox.written, vertical horizontal axes log scales. may want end.Arrange plotting command make semi-log plot mortality versus age. Interpret plot answer following questions. Note labels along vertical axis often called “decade labels.”Question B level mortality year 0 life much greater year 1 ?twice large. ☹︎ C) Hint: much change successive labels y axis? five times large ☹︎ C) Hint: much change successive labels y axis? 10 times large ✓ 100 times large ☹︎ C) Hint: much change successive labels y axis? Question C D) Near age 20, mortality males much compared females?Less twice large. ☹︎ Hint: Due nature logs, difference half decade corresponds change \\(\\sqrt{10}\\). bit three times large ✓ 8 times large ☹︎ Hint: Due nature logs, difference half decade corresponds change \\(\\sqrt{10}\\). 12 times large ☹︎ Hint: Due nature logs, difference half decade corresponds change \\(\\sqrt{10}\\). Question D E) ages 40 80, mortality change age?stays . ☹︎ curve sloping , isn’t ? increases straight line. ☹︎ fair say logarithm mortality. straight line log mortality means mortality increasing exponentially. increases exponentially. ✓ increases, decreases, increases . ☹︎ Interesting say function clearly monotonically increasing age 30. Remake plot mortality vs age , time put log-log axes. sign power-law relationship shows straight line log-log axes.Question E F) ages 40 80 increase mortality better modeled exponential power-law process?Power-law ☹︎ ’s hard find straight line log-log plot. Exponential ✓ Right. graph much closer straight line semi-log scales log-log scales. reason prefer one . ☹︎ One much closer straight line . ","code":"\ngf_point(log(BHP) ~ log(displacement), data = Engines)\ngf_point(BHP ~ displacement, data = Engines) %>%\n  gf_refine(scale_y_log10(), scale_x_log10()) 1              2            3          5            10     x\n|----------------------------------------------------|\n0               1/3         1/2        7/10          1     log(x)\ndata(SSA_2007)\nSSA_2007\ndata(SSA_2007)\ngf_point(mortality ~ age, color = ~ sex, data = SSA_2007)gf_point( __and_so_on__) %>%\n  gf_refine(\n    scale_y_log10(),\n    scale_x_log10()\n  )"},{"path":"magnitudes.html","id":"fractional-digits","chapter":"15 Magnitudes","heading":"15.7 Fractional digits (optional)","text":"far, digit() function tabular form: 1650Here’s point-plot presentation table:\nFigure 15.1: Connecting data points digit function make continuous function.\n’ve imagined digits() continuous function ’ve connected gaps straight line. Now function output input 0.01 1,000,000, instance, 500,000.angles consecutive line segments give function plotted Figure 15.1 unnatural look. Still, continuous function output input even input listed table.Starting around 1600, two (now famous) mathematicians, John Napier (1550-1617) Henry Briggs (1561-1630) idea filling gaps table. saw pattern numbers \\(\\) \\(b\\) input column table\n\\[ \\text{digit}(\\times b) = \\text{digit}() + \\text{digit}(b)\\]\ntrue even \\(=b\\). instance, digit(10)=1 digit(10\\(\\times\\) 10) = 2.Consider question digit(316.2278)? seems odd question unless realize \\(316.2278 \\times 316.2278 = 100,000\\). Since digit(100000) = 5, must digit(316.2278) = 5/2.Another question: digit(17.7828)? seems crazy, notice \\(17.7828^2 = 316.2278\\). digit(17.78279) = 5/4.happens couple thousand years mathematicians known compute square root number high precision. taking square roots dividing two, ’s easy fill rows digit()-function table. get even rows noticing simple patterns like \\[\\text{digit}(/10) = \\text{digit}() -1  \\ \\ \\\\ \\ \\ \\text{digit}(10 ) = \\text{digit}() + 1\\]additional rows tableYou can play game weeks. asked computer play game half second expanded original digit() table 7975 rows.Figure ?? plots expanded digits() function table.Henry Briggs assistants similar calculation hand. work published 1617 table.\nFigure 15.2: Part first page Henry Briggs table logarithms\ntable called Chilias prima, Latin “First group one thousand.” True name, table gives output digits() inputs 1, 2, 3, …, 998, 999, 1000. instance, can see top row right-column, digits(67) = 1.82607480270082.everyday speech, 67 two digits. authors Chilias prima sensibly didn’t use name “digit()” function. chose something abstract: “logarithm().” Nowadays, function named \\(\\log_{10}()\\). R, function called log10(). 1660Our main use \\(\\log_{10}()\\)/log10() count digits order quickly compare magnitude numbers. difference digits(\\(x\\)) - digits(\\(y\\)) tells many factors 10 separate magnitude \\(x\\) \\(y\\).Another important logarithmic/digit-counting function \\(\\log_2()\\), written log2() R. counts many *binary digits number. us, \\(\\log_2(x)\\) tells many times need double, starting 1, order reach \\(x\\). instance, \\(\\log_2(67) = 6.06609\\), indicates \\(67 = 2\\times 2 \\times 2 \\times 2 \\times 2 \\times 2 \\times 2^{0.06609}\\)\\(\\log_2(x)\\) \\(\\log_{10}(x)\\) proportional one another. One way think count “digits” report results different units, much might report temperature either Celsius Fahrenheit. \\(\\log_2(x)\\) units output bits. \\(\\log_{10}(x)\\) output decades.third version logarithm function called natural logarithm denoted \\(\\ln()\\) math notation simply log() R. ’ll need additional calculus concepts can understand justifies calling \\(\\ln()\\) “natural.”EXERCISE: Compute \\(10^y\\) convert “number digits” number whose digits counted. instance, \\(10^2.5\\) 316.228.EXERCISE: many binary digits 64? 127?","code":"\nlog10(67)## [1] 1.826075"},{"path":"dimensions.html","id":"dimensions","chapter":"16 Dimensions","heading":"16 Dimensions","text":"Next time ’re family gathering 10-year old cousin, give following math quiz. 1700What’s 3 + 2?’s 7 - 3?’s 3 miles + 2 miles?’s 3 miles + 2 kilometers?’s 3 miles + 2 kilograms?don’t know cousin, suspect easy time answering (1) (2) correctly. (3), might give correct answer, “5 miles,” just say “5.” , ’ll follow “5 ?” point ’ll definitely say “miles.”bit harder. might need prompt information 1 kilometer 0.6 miles. , ’s pretty smart, ’ll answer “4.2 miles.”10-year olds pretty creative, ’m sure ’ll answer (5). ask Ph.D. aunt, ’ll answer along lines “silly question,” “’s thing.” ’s true.Consider everyday quantities:60 miles per hour: typical speed driving highway2106 square feet: -bounds area court used singles tennis.375 cubic centimeters: volume canned beverage (US).2.5 gallons per minute: US mandated maximum flow rate water shower head.35 miles per gallon: typical fuel economy small car US.body mass index: measure mass divide square height.Consider measure things:ordinarily use speedometer measure instantaneous car speed police use radar gun. fundamentally, measure distance traveled time used divide distance time.people rely internet information, check local court measuring width (27 feet standard) length course (78). Multiply two.Pour beverage measuring cup read volume. fundamentally, measure circumference can (\\(2 \\pi r\\)), square (\\(4 \\pi^2 r^2\\)) divide \\(4 \\pi\\) get cross section area can. multiply height can.don’t usually monitor water use shower. need , get 5-gallon pail (standard volume plastic pails used many purposes construction), put shower head, measure time takes fill pail. Divide volume time.Record mileage car’s odometer fill car gas. Drive. next get gas, measure new odometer reading volume gas purchased. Divide change odometer reading gas volume. (Europe, divide gas volume change odometer reading.)Weigh . scale usually graduated pounds kilograms: take choice. Measure height; ruler---doorway method works well. divide weight square height.Evidently, makes sense multiply divide different types quantities: feet, gallons, kilometers, kilograms, pounds, hours, …. won’t ever see quantity constructed adding subtracting miles hours gallons square feet. can square feet cube centimeters, can take square root gallon? make sense raise 2 power 3 yards? 1710This section mathematical structure combining quantities; kinds mathematical operations legitimate .","code":""},{"path":"dimensions.html","id":"mathematics-of-quantity","chapter":"16 Dimensions","heading":"16.1 Mathematics of quantity","text":"[Fun-10a] Know definition fundamental dimension notation common ones (definition page 241-242)[Fun-10b] Understand derived dimensions formed fundamental dimensions (definition page 241-242)[Fun-10c] Know units ways measuring dimensions derived dimensions.first step understanding mathematics quantity make absolute distinction two concepts , everyday life, used interchangeably: dimension unit.Length dimension. Meters unit length. also measure length microns, mm, cm, inches, feet, yards, kilometers, miles, say nothing furlongs, fathoms, astronomical units (AU), parsecs.Time dimension. Seconds unit time. also measure time micro-seconds, milli-seconds, minutes, hours, days, weeks, months, years, decades, centuries, millenia.Mass dimension. Kilograms unit mass.Length, time, mass called fundamental dimensions. length important area volume. ’s can construct area volume multiplying lengths together. evident consider units area like square-inches cubic centimeters, obscured names units like acre, liter, gallon.’ll use notation L, T, M refer fundamental dimensions. (Electrical charge Q also fundamental dimension, won’t much use examples.)","code":""},{"path":"dimensions.html","id":"compound-dimensions","chapter":"16 Dimensions","heading":"16.2 Compound dimensions","text":"dimensions: volume, force, pressure, energy, torque, velocity, acceleration, . called compound dimensions represent combinations fundamental dimensions, L, T, M. notation combinations involves multiplication division. instance:Volume L \\(\\times\\) L \\(\\times\\) L \\(=\\) L\\(^3\\), “cubic centimeters”Velocity L/T, “miles per hour”Force M L/T\\(^2\\), obscure unless remember Newton’s Second Law \\(\\text{F} = \\text{m}\\,\\text{}\\): “force equals mass times acceleration.” terms dimension, mass M, acceleration L/T\\(^2\\). Multiply two together get dimension “force.”Multiplication division used construct compound dimension fundamental dimensions L, T, M.Addition subtraction never used form compound dimension.Much work understanding dimensions involves overcoming looseness everyday speech. Remember weight scale graduated pounds kilograms. unit kilograms way measuring M, unit pounds way measuring force: M L/T\\(^2\\).Weight mass. makes sense people doesn’t really matter everyday life. ’s venture surface Earth difference shows . person orbit “weightless” person continues mass. weight woman Mars different weight Earth martian mass exactly earthly mass. 1720Another source confusion carried everyday life sometimes measure quantity using different dimensions. can measure volume weighing water; gallon water weighs 8 pounds, liter water mass 1 kg. Serious bakers measure flour weight; casual baker uses measuring cup. can measure water volume length water (--less) constant mass density. 8 pounds gasoline considerably gallon. turns density flour varies substantially depending ’s packed, humidity, etc. matters whether weigh flour baking measure volume. can measure time swing pendulum. measure time successfully different pendula need length, mass.unit conventional amount quantity given dimension. lengths dimensionally, can measured different conventions: inches, hards, meters, … Units dimension can converted unambiguously one . meter exactly quantity length 39.3701 inches, mile length 1609.34 meters. Liters gallons units volume (L\\(^3\\)): gallon 3.78541 liters.hear said kilogram 2.2 pounds. ’s strictly true. kilogram dimension M pound dimension ML/T\\(^2\\). Quantities different dimensions “equal” even legitimately compared one another. Unless bring something else game physically changes situation, instance gravity (dimension acceleration due gravity (dimension \\(\\text{L}/\\text{T}^2\\)). weight kilogram surface Earth 2.2 pounds gravitational acceleration (almost) everywhere surface Earth.’s also potentially confusing sometimes different dimensions used get idea. instance, car gets 35 miles / gallon US (dimension \\(\\text{L}/\\text{L}^3 = 1/\\text{L}^2\\)) use 6.7 liters per 100 kilometers (\\(\\text{L}^3 / L = \\text{L}^2\\)) Europe. car. fuel. Different conventions using different dimensions. 1730[Fun-10d] Understand bracket notation works dimensional arithmetic.Keeping track various compound dimensions can tricky. many people, ’s easier keep track physical relationships involved use knowledge put together dimensions appropriately. Often, relationship can described using specific calculus operations, knowing dimensions units helps use calculus successfully.’ll use specific bracket notation translate words concept dimension. instance, [length] = L, [mass] = M, [time] = T, [inches] = L, …Easy compound dimensions likely already know:[Area] \\(= \\text{L}^2\\). corresponding units remind : “square feet,” “square miles,” “square centimeters.”[Volume] \\(= \\text{L}^3\\). Units remind : “cubic centimeters,” “cubic feet,” “cubic yards.” (landscapers informally call “yard,” instance “10 yards topsoil” properly called “10 cubic-yards topsoil.”)[Velocity] \\(= \\text{L}/\\text{T}\\). Units: “miles per hour,” “inches per second.”[Momentum] \\(= \\text{M}\\text{L}/\\text{T}\\). Units: “kilogram meters per second.”Anticipating return section reference, ’ve also added dimensions can understood relevant calculus operations.acceleration: [Calculus: derivative velocity respect time, 2nd derivative position respect time]force: [Calculus: Derivative momentum respect time]energy: [Calculus: Integral force respect length]power: [Calculus: Derivative energy respect time]Density sounds like specific concept, many different kinds densities. common ratio physical amount geometric extent: 1740a physical amount: might mass, charge, people, etc.geometric extent: might length, area, volume.examples:“paper weight” mass per area, typically grams-per-square-meter“charge density” amount electrical charge, usually per area volume“lineal density red blood cells” number cells capillary divided length capillary. (Capillaries narrow. Red blood cells go one .)“population density” people per area ground.theory dimensions units developed physical sciences. Consequently fundamental dimensions physics: length, mass, time, electrical current, luminous intensity.Since proper use units important even outside physical sciences, ’s helpful recognize several kinds quantity dimensions.“people”/“passengers”/“customers”/“patients”/“children”/“students”/“professors” — different dimensions really units: fixed translation units.\n“money”: Units dollars (many varieties: US, Canadian, Australian, New Zealand), euros, yuan (synonym: renminbi), yen, pounds (many varieties: UK, Egypt, Syria, Lebanon, Sudan South Sudan), pesos (many varieties), dinar, franc (Swiss, CFA), rand, riyal, rupee, won, many others. Conversion rates depend situation national policy.Examples: Passenger-miles standard unit transport. Passenger-miles-per-dollar appropriate unit economic efficiency transport. Passenger-deaths per million passenger-mile one way describe risk transport.","code":""},{"path":"dimensions.html","id":"arithmetic-with-dimensions","chapter":"16 Dimensions","heading":"16.3 Arithmetic with dimensions","text":"Recall rules arithmetic dimensioned quantities. restate briefly square-bracket notation “dimension .” instance, “dimension \\(b\\)” written \\([b]\\). also write \\([1]\\) stand dimension pure number, , quantity without dimension.","code":""},{"path":"dimensions.html","id":"example-dimensional-analysis","chapter":"16 Dimensions","heading":"16.4 Example: Dimensional analysis","text":"want relate period (T) pendulum ’s length mass. Gravity also plays role. simplicity, ’ll assume pendulum cable rod massless. 1750The analysis strategy combine four quantities think play role one total quantity dimensionless. Since dimensionless, can constant regardless mass, length, period, gravity individual situation.\\[\\mbox{[Period]}^\\cdot \\mbox{[Mass]}^b \\cdot \\mbox{[Length]}^c \\cdot \\mbox{[Gravity]}^d = T^\\cdot M^b \\cdot L^c \\cdot L^d \\cdot T^{-2d}\\]\ndimensionless …\\(c = -d\\), cancel L\\(= -2d\\), cancel T\\(b=0\\), ’s mass term, need cancel MLet \\(d=1\\) see happens.\\[ \\frac{\\mbox{Gravity}}{\\mbox{Length}\\cdot \\mbox{Period}^2} \\equiv c\\]\nConsequently\\[\\text{Period} = \\sqrt{\\frac{\\mbox{Gravity}}{\\mbox{Length}} }\\]\n::: {.forinstructors}\nTest via experimentString knotted 4 equal segments (1 foot ) bolt endo-------o-------o-------o-------BoltHang string first knot: length L=4\nTime 10 oscillations record result\nTime 10 oscillations record resultHang string second knot: length L=3\nTime 10 oscillations record result\n… \nTime 10 oscillations record result\n… onCalculate dimensionless quantity \\(c\\) case. approximately .\n:::activity apply concepts techniques ’re learning answer following question:fast satellite move along orbit?can imagine, answer already known look . point reconstructing already known see totality modeling project, even simple one.textbooks -class demonstrations, students often shown complete, flawless models. reality, model construction matter trial error. Whoops! ’re supposed say “modeling cycle.” phrase doesn’t suggest anything “error.” reality, modelers make mistakes, operate misconceptions, collect erroneous data, misunderstand purpose building model, make sorts mistakes. cope unhappy situation, good modelers constantly checking testing models inconsistencies.start, haveA good idea eventual answer . Often, idea comes somewhat vague imprecise knowledge. example, may heard takes satellite low orbit 90 minutes complete one circuit Earth. may also know length equator roughly 40,000 kilometers. (actually original definition meter.) velocity distance traveled time, satellite low orbit velocity roughly \\(40000 / 90\\) km/minute, comes 7400 meters/second.good idea eventual answer . Often, idea comes somewhat vague imprecise knowledge. example, may heard takes satellite low orbit 90 minutes complete one circuit Earth. may also know length equator roughly 40,000 kilometers. (actually original definition meter.) velocity distance traveled time, satellite low orbit velocity roughly \\(40000 / 90\\) km/minute, comes 7400 meters/second.theory relates want know already know. purposes, theory comes directly Isaac Newton 1680s: laws motion theory universal gravitation.theory relates want know already know. purposes, theory comes directly Isaac Newton 1680s: laws motion theory universal gravitation.theoryWe won’t assume anything vague understanding Newton’s laws theory gravitation. diagram shows situation schematically.satellite traveling clockwise along curved trajectory encircling Earth. position satellite shown several times numbered blue dots. Let’s focus satellite time 1.satellite object motion. Newton’s First Law (“Lex ”) stated 1687 book, Philosophiae Naturis Principia Mathematica (Mathematical principles natural philosophy) p.12Translating English, isLaw : Every body persists state rest uniform motion straight line, unless compelled change motion forces impressed upon .dashed line connecting points labeled 1 2’ shows path satellite follow forces impressed upon .Yet force impressed satellite: gravitational attraction Earth satellite. force accelerates satellite perpendicular orbit (toward center Earth) causing satellite follow curved path rather straight path deep space. acceleration satellite traveling constant speed orbit depends velocity \\(v\\) satellite radius \\(r\\) orbit.Task #1: Let \\(A_1\\) acceleration needed keep satellite circular orbit. Find plausible relationship \\(A_1\\), \\(r\\), \\(v\\). One possibility relationship general product form \\[A_1 = v^n\\ r^m .\\] Use dimensional analysis find \\(n\\) \\(m\\). Recall acceleration dimension L/T\\(^{2}\\), velocity dimension \\(L/T\\) radius dimension L.determine \\(n\\) \\(m\\), write relationship \\(A_1\\) function \\(r\\) \\(v\\).know, gravity pulls objects toward center Earth. acceleration \\(A_2\\) due gravity object distance \\(r\\) enter Earth proportional mass Earth known \\[A_2  = G\\ M_e/r^2\\]\n\\(G\\) constant proportionality \\(M_e\\) mass Earth.order satellite stay orbit, two accelerations \\(A_1\\) (’s needed stay orbit) \\(A_2\\) (Earth’s gravity provides) must equal.Task #2: Set expression \\(A_1\\) equal expression \\(A_2\\) solve velocity \\(v\\) satellite (original objective exercise). answer involve \\(G\\), \\(M_e\\), \\(r\\).Use known numerical values \\(G\\) \\(M_e\\) given next section check answer makes sense.dataThe data come scientific observations made centuries give us numerical values (units) \\(M_e\\) \\(G\\) theory.\\(G\\) universal constant (according Newton’s theory gravitation). quantity given several sources \\[G = 6.67 \\times 10^{−11} m^3 /(s^2 kg).\\]Similarly, mass Earth given \\[M_e  = 5.972 × 10^{24} kg\\]reported facts seem plausible, ’s good practice check. Toward end, checkThe dimension units \\(A_2(v, r)\\) consistent.value \\(A_2\\) Earth’s surface consistent famous value 9.8 m/s\\(^2\\).Task #3: Finishing .Use formula derived \\(v\\) function \\(r\\), \\(G\\), \\(M_e\\) find \\(v\\) satellite low orbit around Earth. (’ll decide “low” means.)always, want calculation way helps spot possible errors. two good practices:already confirmed () formula \\(v\\) function \\(r\\), \\(G\\), \\(M_e\\) dimensionally consistent. plug numerical values \\(r\\), \\(G\\), \\(M_e\\), make sure keep track units explicitly result get proper units velocity.Compare result rough estimate \\(v\\) satellites low orbit made beginning activity. discrepancy, review initial rough estimate well gravity-based derivation \\(v\\) figure inconsistency comes . fix .","code":""},{"path":"dimensions.html","id":"conversion-flavors-of-1","chapter":"16 Dimensions","heading":"16.5 Conversion: Flavors of 1","text":"Numbers dimensionless necessarily unitless. Failure accept distinction one prime reasons people trouble figuring convert one unit another. 17601 favorite elementary school students multiplication division tables completely simple. Anything times one, anything divided one, simply thing. Addition subtraction pretty simple, , ’s concern .comes quantities, ’s just one one many. often look nothing like numeral 1. examples 1 quantity:\\(\\frac{180}{\\pi} \\frac{\\text{degrees}}{\\text{radians}}\\)\\(\\frac{180}{\\pi} \\frac{\\text{degrees}}{\\text{radians}}\\)\\(0.621371 \\frac{\\text{mile}}{\\text{kilometer}}\\)\\(0.621371 \\frac{\\text{mile}}{\\text{kilometer}}\\)\\(3.78541 \\frac{\\text{liter}}{\\text{gallon}}\\)\\(3.78541 \\frac{\\text{liter}}{\\text{gallon}}\\)\\(\\frac{9}{5} \\frac{^\\circ F}{^\\circ C}\\)\\(\\frac{9}{5} \\frac{^\\circ F}{^\\circ C}\\)\\(\\frac{1}{12} \\frac{\\text{dozen}}{\\text{item}}\\)\\(\\frac{1}{12} \\frac{\\text{dozen}}{\\text{item}}\\)like call others different flavors one.every example, dimension numerator matches dimension denominator. [feet / meter] L/L = 1. [cups / pint] L3/L3 = 1. [miles/hour / ft per sec] = L/T / L/T = 1. quantities units dimension.’s helpful think conversion units matter multiplying appropriate flavor 1. conversion change dimension quantity render new units.Example: Convert 100 feet-per-second miles-per-hour. First, write quantity converted fraction along side , write desired units conversion. case \\[100 \\frac{\\text{feet}}{\\text{second}} \\ \\ \\ \\text{} \\ \\ \\ \\frac{\\text{miles}}{\\text{hour}}\\]First, ’ll change feet miles. can accomplished multiplying flavor one units miles-per-foot. number give flavor one? One mile 5280 feet, \\[\\frac{1}{5280} \\frac{\\text{miles}}{\\text{foot}}\\] flavor one.Next, need flavor one turn \\(\\frac{1}{\\text{second}}\\) \\(\\frac{\\text{1}}{\\text{hour}}\\). form \\(\\frac{\\text{second}}{\\text{hour}}\\). number give flavor one units. One hour 3600 seconds, \\[3600 \\frac{\\text{second}}{\\text{hour}}\\] flavor one.Multiplying carefully selected flavors one initial quantity, get \\[\n\\frac{1}{5280} \\frac{\\text{miles}}{\\text{foot}} \\times 3600 \\frac{\\text{second}}{\\text{hour}}\\times 100 \\frac{\\text{feet}}{\\text{second}} = 100 \\frac{3600}{5280} \\frac{\\text{miles}}{\\text{hour}} = 68.18 \\frac{\\text{miles}}{\\text{hour}}\\]","code":""},{"path":"dimensions.html","id":"dimensions-and-linear-combinations","chapter":"16 Dimensions","heading":"16.6 Dimensions and linear combinations","text":"Low-order polynomials useful way constructing model functions. polynomial linear combination monomials. instance, suppose want model yield corn field per inch rain growing season, call corn(rain). output units bushels (corn). input units inches (rain). second-order polynomial appropriate reasons discussed Chapter ??. 1770\\[\\text{corn(rain)} \\equiv a_0 + a_1\\, \\text{rain} + \\frac{1}{2} a_2\\, \\text{rain}^2\\]\ncourse, addition linear combination make sense three terms \\(a_0\\), \\(a_1\\,\\text{rain}\\), \\(a_2\\, \\text{rain}^2/2\\) dimension. clearly \\([\\text{rain}] \\neq [\\text{rain}^2]\\). order things work , scalars must dimension. know output function dimension \\([\\text{volume}] = \\text{L}^3\\). Thus, \\([a_0] = \\text{L}^3\\).\\([a_1]\\) must different, cancel \\([\\text{rain}] = \\text{L}\\) produce \\(\\text{L}^3\\). Thus, \\([a_1] = \\text{L}^2\\).Finally, \\([a_2] = \\text{L}\\). Multiplying \\([\\text{rain}]^2\\) give required \\(\\text{L}^3\\)everyday communication well domains construction, geography, navigation, astronomy measure angles degrees. 90 degrees right angle. mathematics, unit angle radians right angle 1.5708 radians. (1.5708 decimal version \\(\\pi/2\\).) conversion function, ’ll call raddeg(), \\[\\mbox{raddeg}(r) \\equiv \\frac{180}{\\pi} r\\] function converts degrees radians, ’ll call degrad() similar: \\[\\mbox{degrad}(d) \\equiv \\frac{\\pi}{180} d\\]\n(Incidentally, \\(\\frac{180}{\\pi} = 57.296\\) \\(\\frac{\\pi}{180} = 0.017453\\).)traditional notation, trigonometric functions \\(\\sin()\\) \\(\\tan()\\) can written argument either degrees radians. instance, \\(\\sin(90^\\circ) = \\sin\\left(\\frac{\\pi}{2}\\right)\\). Similarly, inverse functions like \\(\\arccos()\\) units output specified. works always human intervene written expression eventual computation. computer, valid expression like sin(90 deg) (although good !). angles always given radians. consistency admirable, people always consistent. common source computer bugs angles degrees handed functions like \\(\\sin()\\) output \\(\\acos()\\) (wrongly) interpreted degrees rather radians. 1780Function composition rescue!Consider function given [Wikipedia article position sun] (seen Earth)17.\n\\[\\delta_\\odot(n) \\equiv - 23.44^\\circ \\cdot \\cos \\left [ \\frac{360^\\circ}{365} \\cdot \\left ( n + 10 \\right ) \\right ]\\]\n\\(n\\) zero midnight marking New Years increases 1 per day. (\\(n+10\\) translates New Years back 10 days, day winter solstice.) \\(\\delta_\\odot()\\) gives declination sun: latitude pieced imagined line connecting centers earth sun.Wikipedia formula well written uses familiar numbers help reader see formula comes . 365 recognizably length year days. \\(360^\\circ\\) angle traversed making full cycle around circle. \\(23.44^\\circ\\) less familiar, student geography might recognize latitude Tropic Cancer, latitude farthest north sun directly overhead noon (day summer solstice).’s world trouble programmer implements formula :::NEED INSERT FORMULAS MMACFor mathematical operation, identify operation valid invalid according rules dimensional arithmetic.Question tmp-12: Formula 25 MMAC p. 259, choose rule () violated.Addition Subtraction rule [numerator denominator valid subtractions, dimension L T respectively.]Addition Subtraction rule [numerator denominator valid subtractions, dimension L T respectively.]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Exponential [’s exponent .]Exponential [’s exponent .]’s valid. rules violated. (+) []’s valid. rules violated. (+) []Question tmp-13: Formula 26 MMAC p. 259, choose rule () violated.Addition Subtraction rule [addition subtraction .]Addition Subtraction rule [addition subtraction .]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Exponential [’s exponent .]Exponential [’s exponent .]’s valid. rules violated. (+) []’s valid. rules violated. (+) []Question tmp-14: Formula 27 MMAC p. 259, choose rule () violated.Addition Subtraction rule [addition formula.]Addition Subtraction rule [addition formula.]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Exponential (+) [exponent 4 ft / 3 g, dimension L / M. Exponents must always dimension [1].]Exponential (+) [exponent 4 ft / 3 g, dimension L / M. Exponents must always dimension [1].]’s valid. rules violated. []’s valid. rules violated. []Question tmp-15: Formula 28 MMAC p. 259, choose rule () violated.Addition Subtraction rule [addition subtraction formula.]Addition Subtraction rule [addition subtraction formula.]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Exponential [exponent 4hr/3min, dimension T/T = [1]. rule satisfied.]Exponential [exponent 4hr/3min, dimension T/T = [1]. rule satisfied.]’s valid. rules violated. (+) []’s valid. rules violated. (+) []Question tmp-16: Formula 29 MMAC p. 259, choose rule () violated.Addition Subtraction rule (+) [can’t subtract M M\\(^2\\). (Strictly speaking, lbs dimension force, \\(M L^2 / T^2\\), can’t subtract force M\\(^2\\) either.]Addition Subtraction rule (+) [can’t subtract M M\\(^2\\). (Strictly speaking, lbs dimension force, \\(M L^2 / T^2\\), can’t subtract force M\\(^2\\) either.]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Exponential [’s exponent .]Exponential [’s exponent .]’s valid. rules violated. []’s valid. rules violated. []Question tmp-17: Formula 30 MMAC p. 259, choose rule () violated.Addition Subtraction rule (+) [can’t add L\\(^3\\) L\\(^2\\).]Addition Subtraction rule (+) [can’t add L\\(^3\\) L\\(^2\\).]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Exponential [Maybe ’re thinking cube-root rule violated, since quantity cube root invalid, root doesn’t anything additionally wrong.]Exponential [Maybe ’re thinking cube-root rule violated, since quantity cube root invalid, root doesn’t anything additionally wrong.]’s valid. rules violated. []’s valid. rules violated. []Question tmp-18: ) dimension \\(t\\) T, , \\([t] = T\\). must dimension \\(k\\) arithmetic operation make sense?[1] [$[kt] = $T, violate exponential rule.][1] [$[kt] = $T, violate exponential rule.]T\\(^{ -1}\\) (+) [Right, [k] needs cancel [t] exponention valid.]T\\(^{ -1}\\) (+) [Right, [k] needs cancel [t] exponention valid.]T [$[kt] = \\(T\\)^2$, violate exponential rule.]T [$[kt] = \\(T\\)^2$, violate exponential rule.]None []None []Question tmp-19: B) must dimension \\(c\\) arithmetic operation \\(1 + c \\cdot 2^{kt}\\) make sense?[1] (+) [Right. ’re going add \\(c \\cdot 2^{kt}\\) 1. Since \\([kt] = [1]\\), \\(c\\) also needs dimensionless.][1] (+) [Right. ’re going add \\(c \\cdot 2^{kt}\\) 1. Since \\([kt] = [1]\\), \\(c\\) also needs dimensionless.]T\\(^{-1}\\) []T\\(^{-1}\\) []T [$[kt] = \\(T^2\\), violate exponential rule.]T [$[kt] = \\(T^2\\), violate exponential rule.]Depends dimension \\(2^{kt}\\) [already determined \\([kt] = [1]\\), \\([2^{kt}] = [1]\\).]Depends dimension \\(2^{kt}\\) [already determined \\([kt] = [1]\\), \\([2^{kt}] = [1]\\).]surface area \\(S\\) mammal reasonably well approximated function \\[S(M) \\equiv k M ^{2/3}\\] \\(M\\) body mass (kg) constant \\(k\\) depends particular species consideration.Note \\(M^{2/3}\\) allowed arithmetic operation. \\([M] = \\mbox{mass}\\), mass raised non-integer power. properly, expression written \\[\\left(\\frac{M}{1\\  kg}\\right)^{2/3}\\] division “1 kg” renders dimensionless quantity parentheses: \\[\\left[\\frac{M}{1\\  kg}\\right] = 1\\]\norder render quantity dimensionless unitless, \\(M\\) specified kg. usual practice skip “1 kg” business simply say, “\\(M\\) kg.” see notation frequently career take care use indicated units.’ll need open computing sandbox calculations.Question tmp-20: ) Consider baby adult. adult’s mass \\(8\\) times greater baby’s. adult’s surface area …?baby’s []baby’s []1.5 times baby’s []1.5 times baby’s []4 times baby’s (+) []4 times baby’s (+) []8 times baby’s []8 times baby’s []Question tmp-21: B) Consider human body mass 70 kg skin surface area 18,600 cm2. following units constant proportionality \\(k\\) correct?cm\\(^2\\) kg\\(^{-2/3}\\) (+) []cm\\(^2\\) kg\\(^{-2/3}\\) (+) []cm\\(^2\\) [units mass? takes care ?]cm\\(^2\\) [units mass? takes care ?]cm\\(^2\\) kg\\(^{2/3}\\) [multiply 70 kg \\(k\\), need get result \\(cm^2\\).]cm\\(^2\\) kg\\(^{2/3}\\) [multiply 70 kg \\(k\\), need get result \\(cm^2\\).]kg\\(^{-1}\\) [cancel units mass produce \\(cm^2\\) result?]kg\\(^{-1}\\) [cancel units mass produce \\(cm^2\\) result?]Question tmp-22: C) units part (B), value \\(k\\) closest ?1 []1 []10 []10 []100 []100 []1000 (+) []1000 (+) []numerical value constant \\(k\\) changes depending units want express . value found part (C) works masses stated kg skin areas cm\\(^2\\). Suppose want present \\(k\\) units make sense people used talking skin area square inches mass pounds. 1 inch \\(\\approx\\) 2.6 cm. rough--ready way everyday people express , 1 kg \\(\\approx\\) 2.2 lbs. (course, pounds measure force, mass. people use mass. mass 70 kg corresponds 4.8 slugs. Earth’s gravity, 4.8 slugs produces force 154 pounds.)Question tmp-23: Optional challenge) rough numerical value conversion factor produce constant proportionality suitable converting body mass pounds skin area square-inches?0.03 []0.03 []0.3 (+) [\\(k\\) 1000 cm\\(^2\\) kg\\(^{-2/3}\\). convert cm inches, need multiply (1 /2.6 cm)\\(^2\\). convert kg pounds, need multiply (2.2 pounds/ 1 kg)\\(^{-2/3}\\).]0.3 (+) [\\(k\\) 1000 cm\\(^2\\) kg\\(^{-2/3}\\). convert cm inches, need multiply (1 /2.6 cm)\\(^2\\). convert kg pounds, need multiply (2.2 pounds/ 1 kg)\\(^{-2/3}\\).]3 []3 []30 []30 []300 []300 []exercises include …Exercises/Dimension/Boyd-1.htmlExercises/Dimension/Boyd-1.htmlDimension units G Newton’s Law Universal Gravitation.Dimension units G Newton’s Law Universal Gravitation.","code":"\ndec_sun <- makeFun(-23.44 * cos((360/365)*(n-10)) ~ n)"},{"path":"outline-of-block-2.html","id":"outline-of-block-2","chapter":"Outline of Block 2","heading":"Outline of Block 2","text":"section development purposes . included released text.outline established May 17-19, 2021 working sessions USAFA. ’s copied directly Teams document. ’ve made modifications noted [[square brackets]] deletions bold face additions..Revisiting Calculating slope\nNTI:\nAdmin:\nSizeable quiz interlude\n\nOutcomes:\nCalculate slope given two points\nGiven graph function, identify graph slope function \\(s(x)\\)\nGiven graph slope function, identify features original function\n\nReadings: Chapter @ref{difference--change}\nRevisiting Calculating slopeNTI:Admin:\nSizeable quiz interlude\nSizeable quiz interludeOutcomes:\nCalculate slope given two points\nGiven graph function, identify graph slope function \\(s(x)\\)\nGiven graph slope function, identify features original function\nCalculate slope given two pointsGiven graph function, identify graph slope function \\(s(x)\\)Given graph slope function, identify features original functionReadings: Chapter @ref{difference--change}Derivatives\nNTI:\nExplain limits solution problem arbitrary \\(h\\) slope function\n\nTopics:\nShow different definitions slope function \\(s(x)\\) depend \\(h\\) selected\nDescribe derivative limit \\(h \\rightarrow 0\\)\nDerivatives basic modeling functions\nLinear properties derivatives\n[[Derivative number; differentiation operator]] **need introduce operators earlier.\nFunctions arguments R\nIntroduce notation: \\(f'\\), \\(\\frac{df}{dx}\\), \\(\\partial_x f(x)\\), [[$D_x f]]$\nIntroduce NaN Inf\n\nOutcomes:\nFind derivatives basic modeling functions\nKnow basic properties differentiation\nContinue working graphing derivative\n\nReadings: Chapter ??\nDerivativesNTI:\nExplain limits solution problem arbitrary \\(h\\) slope function\nExplain limits solution problem arbitrary \\(h\\) slope functionTopics:\nShow different definitions slope function \\(s(x)\\) depend \\(h\\) selected\nDescribe derivative limit \\(h \\rightarrow 0\\)\nDerivatives basic modeling functions\nLinear properties derivatives\n[[Derivative number; differentiation operator]] **need introduce operators earlier.\nFunctions arguments R\nIntroduce notation: \\(f'\\), \\(\\frac{df}{dx}\\), \\(\\partial_x f(x)\\), [[$D_x f]]$\nIntroduce NaN Inf\nShow different definitions slope function \\(s(x)\\) depend \\(h\\) selectedDescribe derivative limit \\(h \\rightarrow 0\\)Derivatives basic modeling functionsLinear properties derivatives[[Derivative number; differentiation operator]] **need introduce operators earlier.Functions arguments RIntroduce notation: \\(f'\\), \\(\\frac{df}{dx}\\), \\(\\partial_x f(x)\\), [[$D_x f]]$Introduce NaN InfOutcomes:\nFind derivatives basic modeling functions\nKnow basic properties differentiation\nContinue working graphing derivative\nFind derivatives basic modeling functionsKnow basic properties differentiationContinue working graphing derivativeReadings: Chapter ??Relationships functions derivatives Part \nNTIs:\nSplit students /B pairs. graph derivative. B can’t see graph, can talk . B sketch original function based information , can see B’s sketch. reveal answer.\n\nTopics:\nArgmax/Argmin\nMax/min\nCritical points\n\nOutcomes:\nDetermine function’s critical points graphically algebraically\nDetermine whether critical point max min\n\nReadings: 23. doesn’t take much introduce max min graphs, argmax argmin, critical points. reading can quite small.\nRelationships functions derivatives Part INTIs:\nSplit students /B pairs. graph derivative. B can’t see graph, can talk . B sketch original function based information , can see B’s sketch. reveal answer.\nSplit students /B pairs. graph derivative. B can’t see graph, can talk . B sketch original function based information , can see B’s sketch. reveal answer.Topics:\nArgmax/Argmin\nMax/min\nCritical points\nArgmax/ArgminMax/minCritical pointsOutcomes:\nDetermine function’s critical points graphically algebraically\nDetermine whether critical point max min\nDetermine function’s critical points graphically algebraicallyDetermine whether critical point max minReadings: 23. doesn’t take much introduce max min graphs, argmax argmin, critical points. reading can quite small.Relationships functions derivatives Part II\nNTI:\nCurvature. like cup, like frown\n2nd derivative indicates curvature\n\nTopics:\nSecond derivatives slope slope\nConcavity slope slope\n\nReadings: Chapter 23 previous days reading. Maybe add section chains derivatives, especially polynomials, showing eventually go zero.\nRelationships functions derivatives Part IINTI:\nCurvature. like cup, like frown\n2nd derivative indicates curvature\nCurvature. like cup, like frown2nd derivative indicates curvatureTopics:\nSecond derivatives slope slope\nConcavity slope slope\nSecond derivatives slope slopeConcavity slope slopeReadings: Chapter 23 previous days reading. Maybe add section chains derivatives, especially polynomials, showing eventually go zero.Relationships functions derivatives Part III\nTopics:\nKnowing \\(f'(x_0) = 0\\) tells min/max/saddle \\(x_0\\)\n2nd derivative distinguish three\nChain derivatives\n\nOutcomes:\nable find max/min, argmax/argmin given functions graphically.\n**Construct derivative function use findZeros() locate argmax evaluate function get corresponding max\n\nReadings Chapter 23 Still previous two days.\nRelationships functions derivatives Part IIITopics:\nKnowing \\(f'(x_0) = 0\\) tells min/max/saddle \\(x_0\\)\n2nd derivative distinguish three\nChain derivatives\nKnowing \\(f'(x_0) = 0\\) tells min/max/saddle \\(x_0\\)2nd derivative distinguish threeChain derivativesOutcomes:\nable find max/min, argmax/argmin given functions graphically.\n**Construct derivative function use findZeros() locate argmax evaluate function get corresponding max\nable find max/min, argmax/argmin given functions graphically.**Construct derivative function use findZeros() locate argmax evaluate function get corresponding maxReadings Chapter 23 Still previous two days.Continuity, Differentiability, Smoothness, Splines\nTopics:\nSpline piecewise function\nOrder continuity\nDetermine graphically whether function continuous \nDetermine order continuity function\n\nOutcomes\nable determine first derivative function continuous graph function\nable determine second derivative function continuous graph function (taking 1st derivative plotting )\nable demonstrate discontinuities 3rd derivative spline\n\nReadings: Chapter 20\nContinuity, Differentiability, Smoothness, SplinesTopics:\nSpline piecewise function\nOrder continuity\nDetermine graphically whether function continuous \nDetermine order continuity function\nSpline piecewise functionOrder continuityDetermine graphically whether function continuous notDetermine order continuity functionOutcomes\nable determine first derivative function continuous graph function\nable determine second derivative function continuous graph function (taking 1st derivative plotting )\nable demonstrate discontinuities 3rd derivative spline\nable determine first derivative function continuous graph functionBe able determine second derivative function continuous graph function (taking 1st derivative plotting )able demonstrate discontinuities 3rd derivative splineReadings: Chapter 20Differentiation Products composition Functions\nTopics\nIdentifying composite function\nChain rule\nIdentifying product functions\nproduct rule\n\nOutcomes\nIdentify necessary differentiate chain rule\nFind derivative using chain rule\nIdentify necessary differentiate product rule\nFind derivative using product rule\n\nHomework: Save quotient rule HW\nReadings: Chapter 22\nDifferentiation Products composition FunctionsTopics\nIdentifying composite function\nChain rule\nIdentifying product functions\nproduct rule\nIdentifying composite functionChain ruleIdentifying product functionsproduct ruleOutcomes\nIdentify necessary differentiate chain rule\nFind derivative using chain rule\nIdentify necessary differentiate product rule\nFind derivative using product rule\nIdentify necessary differentiate chain ruleFind derivative using chain ruleIdentify necessary differentiate product ruleFind derivative using product ruleHomework: Save quotient rule HWReadings: Chapter 22Partial derivativesPartial derivativesLocal Polynomial Approximation\nNTI:\nKiller application Taylor polynomials Brook Taylor figured tools Newton developed\n\nTopics:\nList benefits approximation specifically benefits quadratic approximation opposed linear approximation\n[Average rate change] moved Block 1 slope function\nTangent Lines\nQuadratic equations\nFactorials\n\nReadings\nLocal Polynomial ApproximationNTI:\nKiller application Taylor polynomials Brook Taylor figured tools Newton developed\nKiller application Taylor polynomials Brook Taylor figured tools Newton developedTopics:\nList benefits approximation specifically benefits quadratic approximation opposed linear approximation\n[Average rate change] moved Block 1 slope function\nTangent Lines\nQuadratic equations\nFactorials\nList benefits approximation specifically benefits quadratic approximation opposed linear approximation[Average rate change] moved Block 1 slope functionTangent LinesQuadratic equationsFactorialsReadingsApproximation point\nNTI:\nR exercise constructing Taylor polynomial computationally\n\nOutcomes:\nCalculate Taylor polynomial\nUse Taylor polynomials simplify mathematical operations (derivatives, limits, etc.)\n\nApproximation pointNTI:\nR exercise constructing Taylor polynomial computationally\nR exercise constructing Taylor polynomial computationallyOutcomes:\nCalculate Taylor polynomial\nUse Taylor polynomials simplify mathematical operations (derivatives, limits, etc.)\nCalculate Taylor polynomialUse Taylor polynomials simplify mathematical operations (derivatives, limits, etc.)Note: don’t touch gradient . Provisionally, ’m moving gradients Block linear algebra.","code":""},{"path":"change-relationships.html","id":"change-relationships","chapter":"17 Change relationships","heading":"17 Change relationships","text":"questions started motion. words describe speed: fast slow. words describe force: strong weak, heavy light. words describe location distance: far near, long short, . relationships among things? time fit , intangible quantity aspects location (long short) speed (quick slow)?Galileo (1564-1642) started ball rolling. son musician music theorist, sense musical time, steady beat intervals. student medicine Pisa, noted swinging pendulums kept reliable time, regardless amplitude swing. accidentally attending lecture geometry, turned mathematics natural philosophy. Inventing telescope, observations put collision course accepted classical truth nature planets. Seeking understand gravity, built apparatus enabled measure accurately position time ball rolling straight ramp. belled gates set mark ball’s passage spaced arithmetically musical time: 1, 2, 3, 4, …. distance gates geometric: 1, 4, 9, 16, …. Thus established mathematical relationship increments time increments position. Time advanced 1, 1, 1, 1, … position 1, 3, 5, 7, …. observed second increments position, increments increments 1, 3, 5, 7, …, evenly spaced: 2, 2, 2, ….Putting observations tabular form, adding columns thefirst increment \\(y(t) \\equiv x(t+1) - x(t)\\) thesecond increment \\(y(t+1) - y(t)\\)Galileo neither mathematics equipment measure motion continuously time. might obvious us now, position function time \\(x(t)\\), little practical significance . discover first increments \\(x\\) something much like slope function Chapter ??.\\[{\\cal D}_t\\, x(t) \\equiv \\frac{x(t + 1) - x(t)}{1}\\]\ndata, observed \\({\\cal D}_t\\, x(t)\\) increases linearly \\(t\\): \\[{\\cal D}_t x(t) = 2 t + 1\\]Calculating second increments \\(x\\) done “slope function slope function,” can call \\({\\cal D}_{tt}\\):\n\\[{\\cal D}_{tt} x \\equiv {\\cal D}_t \\left[{\\cal D}_t x(t)\\right] = 2(t+1) + 1 - (2 t + 1) = 2\\]\n## Continuous timeNewton considered problem continuous time rather Galileo’s discrete time. reframed slope function big increments slope operator \\({\\cal D}_t\\) imagined vanishingly small increments operator shall denote \\(\\partial_t\\) call differentiation.kind question Newton wanted able calculate answer , “find function \\(x(t)\\) whose second increment, \\(\\partial_{tt} x(t) = 2\\)?” approach, called “method fluxions,” became important name became, simply, “Calculus.”next three centuries, calculus evolved set techniques describing motion general-purpose mathematics change. Applying calculus real world involves understanding change relationships quantities. give examples:Electrical power change respect time electrical energy.Birth rate one component change respect time population.Interest, bank interest credit card interest, change repect time assets.Inflation change respect time prices.Disease incidence one component change respect time disease prevalence.Force change respect position energy.question involves pair quantities function time might might quantity/rate--change pair. , say quantity . Feel free look dictionary definition words uncertain .Question Deficit debtDeficit rate change debt respect time. ✓ Debt rate change deficit respect time. ☹︎ rate change pair. ☹︎ Question B water contained flowFlow rate change water contained respect time. ✓ Water contained rate change flow respect time. ☹︎ rate change pair. ☹︎ Question C Interest rate debt owed credit cardInterest rate rate change credit card debut respect time. ✓ Credit card debut rate change interest rate respect time. ☹︎ rate change pair. ☹︎ Question D Rain intensity total rainfallRain intensity rate change total rainfall respect time. ✓ Total rainfall rate change rain intensity respect time. ☹︎ rate change pair. ☹︎ Question E Force accelerationForce rate change acceleration respect time. ☹︎ Acceleration rate change force respect time. ☹︎ rate change pair. ✓ dimension force \\(ML/T^2\\). dimension acceleration \\(L/T^2\\). rate change respect time extra T denominator dimensions. Question F Position accelerationPosition rate change acceleration repect time. ☹︎ Acceleration rate change position respect time. ☹︎ rate change pair. ✓ dimension position \\(L\\). dimension acceleration \\(L/T^2\\). rate change position dimension \\(L/T\\). ’s called ‘velocity.’ Question G Velocity air resistenceVelocity rate change air resistence repect time. ☹︎ Air resistence rate change velocity respect time. ☹︎ rate change pair. ✓ Air resistence force, dimension \\(M L/T^2\\). Velocity dimension \\(L/T\\). rate change velocity respect time acceleration, dimension \\(L/T^2\\). ","code":""},{"path":"change-relationships.html","id":"slopes-and-motion","chapter":"17 Change relationships","heading":"17.1 Slopes and motion","text":"Chapter 9.6 introduced idea slope function: function \\(g(t)\\) whose value instant gives instantaneous rate change partner function \\(f(t)\\). keep easier track relationship function ’s slope function, use \\({\\cal D}\\) notation:\n\\[{\\cal}D_t f(t)\\] slope function \\(f(t)\\) respect \\(t\\).illustrate, imagine graph position car along road Figure 17.1. course hour, car traveled 25 miles. words, average speed 25 miles/hour: slope red line segment. Given traffic, sometimes car stopped (time C), sometimes crawling (time D) sometimes much faster average (time B).\nFigure 17.1: position imagined car hour time. (black) red line shows position car travelled steadily average speed hour.\ncourse, ’re driving aware car’s speed instant. need look speedometer read value (miles per hour). Speedometers don’t show average speed entire trip. average speed slope red line Figure @ref(fig:stop--go2}, 25 miles one hour, usually stated 25 miles-per-hour.terms Figure @ref(fig:stop--go2}, speedometer reading slope \\(f(t)\\) given instant. can see Figure instant speed close average speed entire trip. instant B car going faster; slope much steeper. hand, instant C car standstill; position doesn’t change .car’s speedometer shows speed moment—instant—trip. can see Figure @ref{fig:stop--go}, speed varies sometimes less average speed, sometimes greater, occasionally equal average speed trip.Although can easily judge whether instantaneous speed faster slower average speed, quantifying speed requires work: calculating slope tangent line.Far easier job done us. means compute slope function \\(f()\\), , \\({\\cal D}_tf()\\). Figure 17.2 shows \\({\\cal D}_tf()\\) directly.can read speed graph instant simply reference vertical axis.\nFigure 17.2: instantaneous velocity car whose position vs time shown Figure 17.1.\ntwo graphs Figures ?? 17.2 show exactly car trip. presentation data different graphs makes easy see things hard see others. instance, figuring car stand-still harder position-vs-time graph speed-vs-time graph.worked theory slope functions, Newton ready express laws motion continuous time. denoting position \\(x(t)\\). familiar concepts velocity force defined terms slope functions position “quantity matter,” call “mass.”Velocity slope function position: \\(v(t) \\equiv {\\cal D}_t x(t)\\).Net force slope function velocity times mass: \\(F(t) \\equiv m {\\cal D}_t v(t)\\)take mass formulation, give name specifically slope function velocity; call acceleration.Acceleration slope function velocity: \\((t) \\equiv {\\cal D}_t v(t)\\).acceleration concept, can define net force mass times acceleration. better known Newton’s Second Law Motion.used net force quantity related mass slope function velocity. different sources forces add can cancel . Famously, Newton formulated law universal gravitation ascribed force masses proportional product two masses inversely proportional square distance . mass table net force , since table pushes back (push = force) mass cancel force due gravity. “Net force” takes cancellation account.","code":""},{"path":"change-relationships.html","id":"differentiation","chapter":"17 Change relationships","heading":"17.2 Differentiation","text":"Two central operations calculus :Given function \\(f(t)\\), find function \\(\\partial_t\\,f(t)\\) giving instantaneous rate change \\(f()\\). process deriving \\(\\partial_t\\, (t)\\) \\(f(t)\\) called differentiation.Given function \\(\\partial_t\\,(t)\\), find \\(f(t)\\) \\(\\partial_t\\,f(t)\\) instantaneous rate change. process finding \\(f()\\) given \\(\\partial_t\\,f()\\) called anti-differentiation.Notice (1) (2) didn’t use \\({\\cal D}_t\\) notation. ’s time switch away . prompts change nuisance constant 0.1 definition slope function:\n\\[{\\cal D}_t f(t) \\equiv \\frac{f(t+0.1) - f(t)}{0.1}\\]Whereas slope function \\({\\cal D}_t f(t)\\) gives approximation instantaneous rate change, \\(\\partial_t f(t)\\) refers instantaneous rate change exactly.’ll come back relationship \\({\\cal D}_t\\) \\(\\partial_t\\) Chapter 21. ’s subject particular interest mathematicians, hence central part traditional calculus texts (mostly written mathematicians). modeling applications calculus, something side issue.intermediate step path \\({\\cal D}_t\\) \\(\\partial_t\\), let’s redefine slope function eliminate 0.1 replace parameter \\(h\\): \\[{\\cal D}_x f(x) \\equiv \\frac{f(x+h) - f(x)}{h}\\]\nway writing slope function enable us consider slope function changes \\(h\\) gets smaller smaller.","code":""},{"path":"change-relationships.html","id":"notations-for-differentiation","chapter":"17 Change relationships","heading":"17.3 Notations for differentiation","text":"several traditional notations differentiation function named \\(f()\\). instance:Leibnitz: \\(\\frac{df}{dx}\\)Partial: \\(\\frac{\\partial f}{\\partial x}\\)Euler: \\(D_x f\\)One-line: \\(\\partial_x f\\) (hybrid partial Euler notation.)Newton (“dot”): \\(\\dot{f}\\)Lagrange (“prime”): \\(f'\\)book, mainly use one-line notation, \\(\\partial_x f\\), means exactly Leibnitz Partial notations, much widely used textbooks.’ve studied calculus , likely seen \\(f'\\) notation. admirably concise viable narrow circumstance: functions take single input. \\(f'\\) leaves means specify crucial aspect differentiation, -respect-variable. general situation differentiation involves functions one variables, example, \\(g(x, y, z)\\). functions, need specify -respect-variable. instance, can differentiate \\(g()\\) three different ways, way incrementing one another three inputs:\\[\\partial_z g(x, y, z) \\equiv \\frac{g(x, y, z+h) - g(x, y, z)}{h}\\\\ \n\\ \\\\\n\\partial_x g(x, y, z) \\equiv \\frac{g(x+h, y, z) - g(x, y, z)}{h}\\\\ \n\\ \\\\\n\\partial_y g(x, y, z) \\equiv \\frac{g(x, y+h, z) - g(x, y, z)}{h}\\]point studies, haven’t seen might choose differentiate function respect one variable another. come time. want set notation won’t narrow options.Leibnitz Partial notations explicit identifying function -respect--variable. example, using Partial differentiation notation, three ways differentiating example function \\(g(x, y, z)\\) labeled :\\[\\frac{\\partial f}{\\partial x},\\ \\ \\ \\frac{\\partial f}{\\partial y},\\ \\ \\text{}\\ \\ \\frac{\\partial f}{\\partial z}\\]R/mosaic computer differentiation longer explicit:names used arbitrary; can use names like. ’s nice dx_g others mimics math notation \\(\\partial_x g()\\).Notice R/mosaic operator differentiation named D() function. follows pattern makeFun() slice_plot() contour_plot(): first argument tilde expression, instance g(x, y, z) ~ x, identifies mathematical function work (g()) name -respect-input function. R/mosaic notation makes clear differentiation operation function. D() operator takes function input produces output another function. ’ve seen similar behavior , say, slice_plot(), takes function input produces graphics output. D() slice_plot() need know identity -respect-variable well function work . ’s pieces input packaged tilde expression.’re calling D() operator rather function. reason purely communication people. many “functions” calculus course thought helpful distinguish kinds functions take quantities input produce quantity output, functions take function input produce function output. sorts called “functions” R terminology. sentence like, “Differentiation function takes function input produces function output,” true though , dizzying.fact mathematical scientific life variety notations used differentiation. extent, reflects historical precedence , honest, nationalistic European politics 18th century. make sense mathematical writing many areas calculus used, recognize . skill enhanced also memorize names different styles. ’s different pattern English multiple words sort object, instance: car, automobile, junker, ride, wheels, crate, jalopy, limo, motor car, horseless carriage.days carriages pulled horses, phrase “horseless carriage” made useful distinction. Today, horses rarely seen road, make sense trim notation essentials: horseless cariage. Think \\(\\partial_x\\) sort minificat\nion older notations.18Recall function monotonically increasing given domain function’s slope positive everywhere domain. monotonically decreasing function, similarly, negative slope everywhere domain. slope zero, positive places negative others, function neither monotonically increasing decreasing.following graphs shows derivative function \\(f(x)\\). (Note: graph doesn’t show \\(f()\\) rather function \\(\\partial_x f()\\) derivative \\(f()\\).) graph, say whether function \\(f()\\) monotonically increasing, monotonically decreasing, neither. (Note horizontal scale every graph, vertical scale can different one scale another.)Question Function …monotonically increasing ✓ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) constant ☹︎ constant function derivative everywhere 0. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. Can’t tell info provided ☹︎ case tell derivative positive negative. Question B Function B …monotonically increasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically increasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ✓ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ✓ monotonically increasing function function everywhere \\(> 0\\) constant ☹︎ constant function derivative everywhere 0. constant ☹︎ constant function derivative everywhere 0. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. Can’t tell info provided ☹︎ case tell derivative positive negative. \nQuestion C Function C …Can’t tell info provided ☹︎ case tell derivative positive negative. \nQuestion C Function C …monotonically increasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically increasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) constant ☹︎ constant function derivative everywhere 0. constant ☹︎ constant function derivative everywhere 0. non-monotonic ✓ non-monotonic function goes , hence derivative positive places negative others. non-monotonic ✓ non-monotonic function goes , hence derivative positive places negative others. Can’t tell info provided ☹︎ case tell derivative positive negative. \nQuestion D Function D …Can’t tell info provided ☹︎ case tell derivative positive negative. \nQuestion D Function D …monotonically increasing ✓ monotonically increasing function function everywhere \\(> 0\\) monotonically increasing ✓ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) constant ☹︎ constant function derivative everywhere 0. constant ☹︎ constant function derivative everywhere 0. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. Can’t tell info provided ☹︎ case tell derivative positive negative. \nQuestion E Function E …Can’t tell info provided ☹︎ case tell derivative positive negative. \nQuestion E Function E …monotonically increasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically increasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) constant ☹︎ constant function derivative everywhere 0. constant ☹︎ constant function derivative everywhere 0. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. Can’t tell info provided ✓ case tell derivative positive negative. \nQuestion F Function F …Can’t tell info provided ✓ case tell derivative positive negative. \nQuestion F Function F …monotonically increasing ✓ monotonically increasing function function everywhere \\(> 0\\) monotonically increasing ✓ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) constant ☹︎ constant function derivative everywhere 0. constant ☹︎ constant function derivative everywhere 0. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. Can’t tell info provided ☹︎ case tell derivative positive negative. \nCan’t tell info provided ☹︎ case tell derivative positive negative. graphs various functions. right column shows functions named \\(f_1()\\), \\(f_2()\\), . left column shows functions \\(()\\), \\(B()\\), \\(C()\\), . functions right derivative function left, functions left corresponding derivative right. task: Match function left ’s derivative right.Question derivative Function () following:    f1() ☹︎        f2() ✓        f3() ☹︎        f4() ☹︎        shown ☹︎ Question B derivative Function B() following:    f1() ✓        f2() ☹︎        f3() ☹︎        f4() ☹︎        shown ☹︎ Question C derivative Function C() following:    f1() ☹︎        f2() ☹︎        f3() ☹︎        f4() ✓        shown ☹︎ Question D derivative Function D() following:    f1() ☹︎        f2() ☹︎        f3() ☹︎        f4() ☹︎        shown ✓ left column graphs shows functions (), B(), C(), D(). right column shows functions dd1(), dd2(), . Find function () right column corresponds 2nd derivative function left column.Remember concepts “concave ” (smile!) “concave ” (frown). values \\(x\\) 2nd derivative given function positive, given function concave . 2nd derivative negative, given function concave .Question second derivative Function () following:    dd1() ☹︎        dd2() ☹︎        dd3() ☹︎        dd4() ✓        shown ☹︎ Question B second derivative Function B() following:    dd1() ☹︎        dd2() ✓        dd3() ☹︎        dd4() ☹︎        shown ☹︎ Question C second derivative Function C() following:    dd1() ☹︎        dd2() ☹︎        dd3() ☹︎        dd4() ☹︎        shown ✓ Question D second derivative Function D() following:    dd1() ✓        dd2() ☹︎        dd3() ☹︎        dd4() ☹︎        shown ☹︎ ","code":"\ndx_g <- D(g(x, y, z) ~ x)\ndy_g <- D(g(x, y, z) ~ y)\ndz_g <- D(g(x, y, z) ~ z)"},{"path":"change-relationships.html","id":"dimension-of-derivatives","chapter":"17 Change relationships","heading":"17.4 Dimension of derivatives","text":"Recall differencing operator takes input function returns output another function takes kind input, produces different kind output.instance, suppose function pressure() takes altitude input (km) returns output pressure (kPa, “kiloPascal”19).derivative function, let’s call d_pressure(), also takes input km, produces output kPA per km: rate.can see examining differencing operator :\\[{\\cal D}_x f(x) \\equiv \\frac{f(x+h) - f(x)}{h}\\]Remember notation dimensions. quantity \\(x\\) dimensions denoted \\([x]\\). (nothing saying, “Pronounce ‘\\([x]\\)’ ‘dimensions \\(x\\).’”)\ninput \\(f()\\) dimension \\([x]\\). output \\(f()\\) dimension \\([f(x)]\\).dimension \\(h\\)? (write question simply, \"\\([h]\\)?) Since operator adds \\(x + h\\), must \\([h] = [x]\\). Otherwise, addition wouldn’t viable operation combine two quantities.dimension \\(f(x + h) - f(x)\\)? (, ask simply, “\\([f(x+h) - f(x)]\\)?”) Since ’re subtracting two quantities, two quantities must dimension result also dimension. \\([f(x+h) - f(x)] = [f(x)]\\).output function \\(df(x)\\) produced \\(\\mbox{Diff}(f)\\) therefore dimension \\([f(x)] / [x]\\).. given function \\(N(y)\\), population Netherlands year \\(y\\).Dimension input \\(N(y)\\)?Dimension output \\(N(y)\\)?Dimension input \\(\\partial_y N(y)\\)?Dimension output \\(\\partial_y N(y)\\)?B. given function \\(p(u)\\), net profit manufactured good function number units manufactured.Dimension input \\(p(u)\\)?Dimension output \\(p(u)\\)?Dimension input \\(\\partial_u p(u)\\)?Dimension output \\(\\partial_u p(u)\\)?C. given function \\(w(t)\\), amount water leaky bucket time bucket filled.Dimension input \\(w(t)\\)?Dimension output \\(w(t)\\)?Dimension input \\(\\partial_t w(t)\\)?Dimension output \\(\\partial_t w(t)\\)?Question Tanks bulk storage natural gas typically large cylinders cap can . volume tank function position cap. dimension derivative cylinder volume respect cap position?    \\(L^2\\) ✓        \\(L\\) ☹︎        \\(L^3\\) ☹︎        \\(L^3/T\\) ☹︎        \\(T/L^3\\) ☹︎ standard model epidemics used public health planning called SIR model. (SIR stands “Susceptible (S), Infective (), Recovered (R),” sequence person starts , moves , ends (hopefully!) epidemic.)One equations SIR model \n\\[\\frac{dS}{dt} = -S \\]notation \\(dS/dt\\) means “rate change number susceptibles, S, respect time.” dimension “people/T.” dimensions \\([S]\\) \\([]\\) simply “people.”Question \\([]\\)?T ☹︎ T\\(^{-1}\\) ☹︎ people/T ☹︎ \\([S ]\\) people\\(^3\\)/T, ’s \\([dS/dt]\\). people\\(^{-1}\\) T\\(^{-1}\\) ✓ correctly gives \\([S ]\\) people/T, \\([dS/dt]\\). people \\(\\times\\) T ☹︎ None . ☹︎ Exercise 57 refers second equation SIR model\\[\\frac{dI}{dt}  = - S - b \\]\n\\([\\frac{dI}{dt}] =\\) people/T.Question B \\([b]\\)?T ☹︎ T\\(^{-1}\\) ✓ people/T ☹︎ \\([S ]\\) people\\(^3\\)/T, ’s \\([dS/dt]\\). people\\(^{-1}\\) T\\(^{-1}\\) ☹︎ true, \\([bI]\\) T\\(^{-1}\\). \\([bI]\\) \\([dI/dt]\\), people \\(T^{-1}\\). people \\(\\times\\) T ☹︎ None . ☹︎ \n","code":""},{"path":"change-relationships.html","id":"slope-fun-visualization","chapter":"17 Change relationships","heading":"17.5 Visualizing the slope function","text":"function produced differencing operation\n\\[{\\cal D}_x f(x) \\equiv \\frac{f(x+h) - f(x)}{h}\\] every way ordinary function takes input produces output.Ordinarily, visualize functions one variable drawing graph. technique every bit applicable functions produced \\(\\diff{x}\\) function.input slope function \\(\\diff{x} f(x)\\) exactly input mother function \\(f(x)\\). graph slope function horizontal axis graph mother function. However, output \\(\\diff{x} f(x)\\) different kind thing output \\(f(x)\\).Suppose, instance, mother function \\(T(x)\\) giving atmospheric temperature location Earth function altitude \\(x\\). output \\(T(x)\\) , expect, dimension temperature units , say, degrees C. output \\(\\diff{x} T(x)\\) different dimension: temperature divided altitude units , say, degrees C per km.different dimensions output function output slope fun means vertical axis graphing \\(\\diff{x} f(x)\\) must different vertical axis used graphing \\(f(x)\\). Thus, general, \\(\\diff{x} f(x)\\) \\(f(x)\\) graphed frame.requirement use different graphics frames \\(f(x)\\) \\(\\diff{x}f(x)\\) makes somewhat difficult visualize relationship \\(f(x)\\) \\(\\diff{x}f(x)\\).Let’s explore non-standard way visualize \\(\\diff{x}f(x)\\) can shown graphics frame graph \\(f(x)\\). Perhaps non-standard visualization give better way understand slope functions. , good. ultimate benefit way show \\(\\diff{x} f(x)\\) \\(f(x)\\) frame come introduce operation anti-differentiation.Recall basic model change Calculus straight-line function \\(\\line(x) \\equiv x + b\\). slope \\(\\) \\(\\line(x)\\) tells output changes unit change input. differentiation, weapproximate mother function \\(f(x)\\) series local line segments.extract slope line segment value slope function input \\(x\\).Figure 17.3 shows segment segment approximation around several input values (marked green). slope function visualization constructed throwing away vertical offset line segments plotting horizontally adjacent one another.\nFigure 17.3: function \\(f(x)\\) shown along tangent line segment touching \\(f()\\) green points. slope function visualization, tangent line segments moved horizontal axis.\nFigure 17.4 shows several examples slope function visualization.\nFigure 17.4: Slope-function visualizations several naked modeling functions.\n","code":""},{"path":"computing-derivs.html","id":"computing-derivs","chapter":"18 Computing derivatives","heading":"18 Computing derivatives","text":"differentiate function \\(g(x)\\) means simply produce corresponding function \\(\\partial_t g(x)\\). often called “finding derivative,” language resonates high-school algebra task “finding \\(x\\).” Rather conjuring image search high low missing function, ’s realistic say, “compute derivative.”chapter ’ll introduce two ways computing derivative. simplicity write \\(x\\) -respect--variable, although practice might using \\(t\\) \\(z\\) something else.Symbolic differentiation, uses set re-writing rulesFinite-differencing, based directly differencing operator \\({\\cal D_x}\\)days functions always presented using formulas, symbolic differentiation usually method taught. Nowadays, functions just likely described using data algorithm, finite-differencing provides practical approach.","code":""},{"path":"computing-derivs.html","id":"a-function-from-a-function","chapter":"18 Computing derivatives","heading":"18.1 A function from a function","text":"Recall goal differentiation make function already known function. ’ll call already known function \\(g(x)\\). Chapter (change-relationships) ’ve outlined properties new function gave nice naming convention, \\(\\partial_x g(x)\\) shows new function comes . section ’ll put aside focus question means “make function.”mathematics done paper pencil, “making function” matter writing formula, \\(x^2 \\sin(x) + 3\\) sometimes giving name formula, e.g. \\(h(x) \\equiv x^2 \\sin(x) + 3\\). essentially writing something make sense viewed another person trained conventions mathematical notation.computer, hand, function definite kind thing. “make function” creating kind thing , usually, giving name. use (“evaluate”) function using definite syntax, R involves use parentheses, instance name(input).computer language provides specific means define new function. R/mosaic, first construct tilde expression naming function inputs (right side tilde) specifying algorithm function (left side tilde), formula:, f_description used like function constructed something else: tilde expression. Trying use f_description way one uses function produces error.tilde expression final result—function—software translates tilde-expressions functions:new creation, f() can now used like function, e.g.deep inside, makeFun() uses basic function-creation syntax looks like thisYou can see information tilde description, just arranged differently.Almost every computer language provides something like function. workings advanced technology essentially impossible describe much way workings transistor COVID vaccine known specialists.spirit makeFun(), translates tilde-expression corresponding function, R/mosaic D() takes tilde expression translates derivative function described. example:common programming pattern R/mosaic calculus commands :Operator(tilde_expression, [optional details])operators: slice_plot(), contour_plot, make_Fun(), D(), antiD(), findZeros()R/mosaic expressions, determine kind thing created. Feel free run expressions SANDBOX.Question AmakeFun(*x - b ~ x)function x ☹︎ Fair enough. function also arguments b function x, , b ✓ tilde expression ☹︎ tilde expression input operator. operator translates tilde expression something else. plot ☹︎ data frame ☹︎ error ☹︎ Question BD(*x - b ~ x)function ☹︎ function x, , b ✓ tilde expression ☹︎ plot ☹︎ data frame ☹︎ error ☹︎ Question CantiD(*x - b ~ x)function ☹︎ function x, , b ✓ tilde expression ☹︎ plot ☹︎ data frame ☹︎ error ☹︎ Question Dslice_plot(*x - b ~ x, domain(x=c(0,5)))function x ☹︎ function x, , b ☹︎ tilde expression ☹︎ plot ☹︎ expression intended make plot, doesn’t work. Specific numerical values need provided b. data frame ☹︎ error ✓ Question Ef <- makeFun(*x + b ~ x, =2, b=-4)slice_plot(f(x) ~ x, domain(x=c(0,5)))function x ☹︎ function x, , b ☹︎ tilde expression ☹︎ plot ✓ works specific values provided b parameters. data frame ☹︎ error ☹︎ Question FfindZeros(*x - b ~ x, domain(x=c(0,5)))function x ☹︎ function x, , b ☹︎ tilde expression ☹︎ plot ☹︎ expression intended make data frame, doesn’t work. Specific numerical values need provided b. data frame ☹︎ error ✓ Question Ga*x - b ~ xa function x ☹︎ function x, , b ☹︎ tilde expression ✓ plot ☹︎ expression intended make plot, doesn’t work. Specific numerical values need provided b. data frame ☹︎ error ☹︎ Question Hf <- makeFun(*x + b ~ x, =2, b=-4)findZeros(f(x) ~ x)function x ☹︎ function x, , b ☹︎ tilde expression ☹︎ plot ☹︎ data frame ✓ error ☹︎ Question Suppose create function usual way, e.g. f <- makeFun(*x + b ~ x, =2, b=-4). following plot straight-line function slope 5.slice_plot(f(x) ~ x, domain(x=c(-5, 5))) ☹︎ default value 2, line slope 2. slice_plot(f(x, b=2), domain(x=c(-5, 5)) ☹︎ ’s slope parameter. slice_plot(f(x, =2), domain(x=c(-5, 5)) ✓ ","code":"\nf_description <- x^2 * sin(x) + 3 ~ x\nf_description(2)## Error in f_description(2): could not find function \"f_description\"\nf <- makeFun(f_description)\nf(2)## [1] 6.63719\nfunction(x) {x^2 * sin(x) + 3}## function(x) {x^2 * sin(x) + 3}\nD(f_description)## function (x) \n## 2 * x * sin(x) + x^2 * cos(x)"},{"path":"computing-derivs.html","id":"finite-differencing","chapter":"18 Computing derivatives","heading":"18.2 Finite differencing","text":"can use definition slope function \\[{\\cal D}_x f(x) = \\frac{f(x+0.1) - f(x)}{0.1}\\]\ncreate approximation derivative function. Like :Whenever calculate derivative function, check mistakes sources error. instance, whenever derivative zero, original function instantaneous slope zero. Figure 18.1 shows suitable plot supporting sort check.\nFigure 18.1: check zero-crossings (blue) derivative function (red) correspond inputs original function flat (black).\nLook closely Figure 18.1, particularly places blue vertical markers cross function \\(g(x)\\) (black). cross exactly flat zone, little shifted left. ’s sense finite-difference approach gives approximation. left-shift stems use 0.1 definition zero function. Use smaller value, say 0.01 0.001, won’t able see shift .modeling work, ’s nothing wrong approximation long good enough purposes. picked value 0.1 definition slope function works well naked modeling functions. , “well” means can’t easily see graph deviation compared exact derivative.calculation can done exactly (without outrageous effort) certainly makes sense use exact method. However:’s useful easy, approximate method always hand. lets check results methods possibility blunder mis-conception. slope function approach differentiation certainly easy, think approximation isn’t good enough, instead 0.1 use something smaller. (Chapter 21 discusses small small.)computer makes practical employ slope function useful approximation derivative. many mathematical methods computer made feasible, instance methods machine learning. methods create functions sometimes handled traditional (“exact”) methods differentiation.Exercise 18.2  (check-h)  Put Chapter 21.","code":"\ng <- makeFun(sin(2*x)*(pnorm(x/3)-0.5) ~ x)\ndg <- makeFun((g(x+0.1) - g(x))/0.1 ~ x)\nzeros_of_dg <- findZeros(dg(x) ~ x, xlim=c(-5,5))\nslice_plot(g(x) ~ x, domain(x=c(-5,5)), npts=500) %>%\n  slice_plot(dg(x) ~ x, color=\"red\", npts=500) %>%\n  gf_hline(yintercept = ~ 0, color = \"orange\", size=2, alpha=0.2) %>%\n  gf_vline(xintercept = ~ x, data=zeros_of_dg, color=\"blue\")"},{"path":"computing-derivs.html","id":"the-slope-function-operator","chapter":"18 Computing derivatives","heading":"18.3 The slope-function operator","text":"Take look statement used construct slope function g():’s almost nothing statement anything specifics defined g(); used \\(g()\\). “almost” previous sentence choice 0.1, isn’t guaranteed small enough.convenient operator automates process constructing slope function. programming task sense beyond scope course. Still, ’s good idea get habit reading programming code. goes … creating slopeFun() operator:Remember function(){} syntax creating operator. (speaking experienced programmers, said “function” instead “operator.” )’re going use tilde expression input slopeFun(). R/mosaic operators work. easier user also give us access operators need writing slopeFun().object returned slopeFun() operator , course, function. ’ve using makeFun() make mathematical functions, expect see code slopeFun().’s nuisance using 0.1 whether small enough. let’s use h argument can change needed.Figure 18.2 shows results quick check whether function works whether h=0.1 small enough.\nFigure 18.2: Checking whether homemade slopeFun() operator works.\n::: {.scaffolding}\ncan decide whether red black curves Figure 18.2 similar enough purposes. Even better, exploring SANDBOX. ’ll copy paste sandbox code defining slopeFun() graphics statements. Start replacing dx_sin(x, h=0.1) dx_sin(x, h=0.0001)computer (using data), can set \\(h\\) small slope function. become obvious graph \\(h\\) small. Start adding zeros sin(x, h=0.0001) see problem.Question values h smallest can go problems -small h start showing ?h=0.00001 ☹︎ h=0.00000001 ☹︎ h=0.00000000001 ✓ h=0.00000000000001 ☹︎ bad choice, look closely ’ll see little wobbles curve. h=0.000000000000000001 ☹︎ \npractice, won’t need use slopeFun(). ’ll use D() instead, gives “exact” results whenever can.","code":"\ndg <- makeFun((g(x+0.1) - g(x))/0.1 ~ x)\nslopeFun <- function(tilde, h=0.1) { #two arguments, one with a default value\n   g <- makeFun(tilde)  # Turn the tilde expression into a function\n   \n   makeFun((g(x + h) - g(x))/h ~ x, h=h) # just like before, with h instead of 0.1\n}\ndx_sin <- slopeFun(sin(x) ~ x)\nslice_plot(dx_sin(x, h = 0.00000000001) ~ x, domain(x=c(-5,5)), size=2) %>%\n  slice_plot(dx_sin(x, h=0.001) ~ x, color=\"red\")"},{"path":"computing-derivs.html","id":"symbolic-differentiation","chapter":"18 Computing derivatives","heading":"18.4 Symbolic differentiation","text":"Symbolic differentiation process taking formula translating new formula according certain patterns rules. rule ultimately derived definition slope function differencing operator.recall, differencing operator \\(\\diff{x}\\) turns function slope function\n\\[\\diff{x} f(x) \\equiv \\frac{f(x+h) - f(x)}{h}\\]Let’s look one already know result: straight line function \\(\\line(x) \\equiv x + b\\) slope function constant: \\(\\diff{x}\\line(x) = \\)\\[\\diff{x}\\line(x) = \\frac{(x+h) + b - (x + b)}{h} = \\frac{ah}{h} = \\]\nderivative slope function \\(h\\) made small possible. ’s tempting think \\(h = 0\\), imply dividing zero differencing operator. cautious , write differentiation differencing \\(h \\rightarrow 0\\), \\[\\partial_x \\line(x) \\equiv \\lim_{h\\rightarrow 0} \\frac{\\line(x+h) - \n\\line(x)}{h} = \\lim_{h\\rightarrow 0$ \\frac{h}{h} = \\]\nderivation unarguably correct non-zero \\(h\\).short derivation gives us basic differentiation rule can divide 3 special cases.Line rule: \\(\\partial_x ax + b = \\)\n\\(\\partial_x ax = \\)\n\\(\\partial_x b = 0\\)\n\\(\\partial_x x = 1\\)\n\\(\\partial_x ax = \\)\\(\\partial_x b = 0\\)\\(\\partial_x x = 1\\)Remember \\(\\partial_x f(x)\\) \\(f(x)\\) always function. functions associated line rule constant functions, meaning output doesn’t depend input.\\(\\line()\\) function three special cases derivative constant function. \\(\\line()\\) function \\(h\\) differencing operator disappears . instance, consider \\(g(x) \\equiv x^2\\):\\[\\partial_x [x^2] = \\lim_{h\\rightarrow 0}\\frac{(x+h)^2 - x^2}{h} = \\lim_{h\\rightarrow 0}\\frac{(x^2 + 2 x h + h^2) - x^2}{h} = \\lim_{h\\rightarrow 0}\\frac{2 x h + h^2}{h} = \\lim_{h\\rightarrow 0} [2x + h]\\]\n’s accepted limit sum sum limits. Also, limit something involving \\(h\\) just thing: instance \\(\\lim_{h\\rightarrow 0}2x = 2x\\).\\[\\partial_x [x^2] = 2x + \\lim_{h\\rightarrow 0}h = 2x\\]’ll write another differentiation rule.Quadratic rule: \\(\\partial_x [x^2] = 2x\\)[introducing product rule …] point \\(\\partial_x x^2 \\neq (\\partial_x x)(\\partial_x x) = 1\\)Let’s take \\(h(x) \\equiv e^x\\):\\[\\partial_x e^x = \\lim_{h\\rightarrow 0}\\frac{e^{x+h} - e^x}{h} = e^x \\lim_{h\\rightarrow 0}\\left[\\frac{e^h - 1}{h}\\right]\\]\nglance, can hard know make \\(\\lim_{h\\rightarrow 0} (e^h-1)/h\\). Setting \\(h=0\\) denominator perfectly legitimate gives \\(e^0 - 1 = 0\\). still leaves \\(h\\) numerator. Still, non-zero \\(h\\), division legitimate, let’s see happens \\(h \\longarrow 0\\):Setting \\(h\\) exactly zero, however, won’t work: produces NaN.Since \\(\\lim_{h\\rightarrow 0} (e^h-1)/h = 1\\), haveExponentiation rule: \\(\\partial_x e^x = e^x\\)[taylor series, show \\(\\frac{e^h - 1}{h} \\rightarrow 0\\).]Still another example: reciprocal function, written equivalently \\(1/x\\) \\(x^{-1}\\)\\[\\partial x^{-1} = \\lim_{h\\rightarrow 0}\\frac{1/(x+h) - 1/x}{h} = \\lim_{h\\rightarrow 0}\\frac{x - x+h}{x(x+h)h} = -\\lim_{h\\rightarrow 0}\\frac{h}{x(x+h)h} = -\\lim_{h\\rightarrow 0}\\frac{1}{x^2 + hx}\\]\nlong \\(x \\neq 0\\), divide--zero problem, let’s see computer thinks:Setting \\(h\\) zero last expression gives another differentiation rule:Reciprocal rule: \\(\\partial_x \\frac{1}{x} = -\\frac{1}{x^2}\\)’ll save later derivation derivatives naked modeling functions, note hump function defined derivative sigmoidal function.basic modeling functions, show derivative cosine -sin. Use \\(\\partial_x sin(x) = sin(x + \\pi/2)\\) apply scaling rule .Also, derive \\(\\partial_x x^p = \\partial_x e^{p\\ln(x)} = e^{p\\ln(x)} \\times \\frac{p}{x} = \\frac{p}{x} x^p = p\\, x^{p-1}\\)R command defines new operator named Diff() implements differencing operator \\(\\cal D_x\\) functions one input.Open R sandbox copy definition Diff() .example use Diff(), R code defines function f() finds \\({\\cal D}_x f()\\), calling D_f(). slice plot f() D_f().following functions, write brief comparison function ’s differenced version. can combine phrases “shape,” “different shape. larger amplitude,” “smaller amplitude,” “period,” “shorter period,” “longer period,” whatever seems appropriate. instance, original example sandbox, reasonable comparison might , “f() concave Diff(f) concave .”Essay question tmp-24: . function \\(f(x) \\equiv 3 x\\), compare \\(f()\\) \\(\\cal D_x f\\).Essay question tmp-25: B. function \\(f(x) \\equiv x^2\\), compare \\(f()\\) \\(\\cal D_x f\\).Essay question tmp-26: C. function \\(f(x) \\equiv \\exp(x)\\), compare \\(f()\\) \\(\\cal D_x f\\).Essay question tmp-27: D. function \\(f(x) \\equiv \\exp(-0.3 x)\\), compare \\(f()\\) \\(\\cal D_x f\\).Essay question tmp-28: E. function \\(f(x) \\equiv \\sin(x)\\), compare \\(f()\\) \\(\\cal D_x f\\).Essay question tmp-29: F. function \\(f(x) \\equiv \\sin(2 \\pi x)\\), compare \\(f()\\) \\(\\cal D_x f\\)).Essay question tmp-30: G. function \\(f(x) \\equiv \\sin(\\frac{2 \\pi}{20} x)\\), compare \\(f()\\) \\(\\cal D_x f\\)).","code":"\nf <- makeFun((exp(h) - 1)/h ~ h)\nf(0.1)## [1] 1.051709\nf(0.01)## [1] 1.005017\nf(0.001)## [1] 1.0005\nf(0.0001)## [1] 1.00005\nf(0.0000001)## [1] 1\nf(0.0000000001)## [1] 1\nf(0)## [1] NaN\ng <- makeFun(-1/(x^2 + h*x) ~ h, x=10)\ng(0.1)## [1] -0.00990099\ng(0.01)## [1] -0.00999001\ng(0.001)## [1] -0.009999\ng(0.0001)## [1] -0.0099999\ng(0.0000001)## [1] -0.01\ng(0.0000000001)## [1] -0.01\ng(0)## [1] -0.01\nDiff <- function(f, h=0.001) {\n  function(x) {\n    (f(x + h) - f(x)) / h\n  }\n}\nf   <- makeFun(sqrt(exp(x)) - x^2 ~ x)\nD_f <- Diff(f)\nslice_plot(f(x) ~ x, domain(x=c(0, 5))) %>%\n  slice_plot(D_f(x) ~ x, color = \"red\")"},{"path":"convexity-and-curvature.html","id":"convexity-and-curvature","chapter":"19 Convexity and curvature","heading":"19 Convexity and curvature","text":"Looking locally graph function eyes immediately register slope. glance shows whether slope positive negative. Comparing slopes two locales also automatic visual task: people little difficulty saying slope steeper. One consequence ability perform task visually:Tangent line: can recognize whether line touches graph point tangent graph.Question Glance graph. boxes slope negative?Question B Consider slope function domains marked boxes. order boxes least steep steepest?Question C line segments tangent curve point marked dot?    ☹︎        B ☹︎        C ☹︎        ✓        none ☹︎ Question D line segments tangent curve point marked dot?    ✓        B ☹︎ shallow        C ☹︎ steep        ☹︎        none ☹︎ Finding numerical value slope automatic process. need arithmetic, computing rise run. , language calculus, can calculate slope evaluating derivative function.aspects functions also readily discerned glance function graph.Concavity: can tell within locale whether function concave , concave , concave.Curvature: Generalizing tangent line capability bit, can pretty good job eyeballing tangent circle recognizing whether circle much large much small radius..Smoothness: can distinguish smooth functions non-smooth ones. , see, kinds smoothness can discern others apparent eye.chapter quantify properties. turns naturally done calculating derivatives. (case smoothness, continuity derivative function. continuity smoothness.)following exercises simply meant test visual acuity spotting concavity, tangency, smoothness.Question E boxes function concave ?    E ✓        B D ☹︎        C D ☹︎ Question F boxes function smooth?B ☹︎ B C ☹︎ C ✓ none ☹︎ ☹︎ Question G boxes function smooth?B ☹︎ B C ☹︎ C ☹︎ none ☹︎ ✓ Question H boxes function smooth?","code":""},{"path":"convexity-and-curvature.html","id":"concavity","chapter":"19 Convexity and curvature","heading":"19.1 Concavity","text":"Change slope","code":""},{"path":"convexity-and-curvature.html","id":"curvature","chapter":"19 Convexity and curvature","heading":"19.2 Curvature","text":"Orthogonal tangentTangent circle function.Graphics frame.’re also pretty good eyeballing radius curvature. can calculated first second derivatives. radius curvature operator \\[{\\cal K} f(x) \\equiv \\frac{\\left|\\partial_{xx} f(x)\\right|}{\\left|1 + \\left(\\strut\\partial_x f(x)\\right)^2\\right|^{3/2}}\\]","code":""},{"path":"cont-and-smooth.html","id":"cont-and-smooth","chapter":"20 Continuity and smoothness","heading":"20 Continuity and smoothness","text":"’ve seen various properties functions—whether monotonic, slopes, whether concave (), curvature, etc.—can related first second derivatives function.’s time introduce two new ways describing functions can useful determining whether given function fit purpose intended . continuity smoothness.","code":""},{"path":"cont-and-smooth.html","id":"continuity","chapter":"20 Continuity and smoothness","heading":"20.1 Continuity","text":"intuition behind continuity simple: can draw graph function without lifting pencil paper, graph continuous.Continuity can important attribute modeling function. Often, modeling phenomena small change input expected produce small change output. instance, income changes one penny, expect lifestyle change much. temperature oven changes 1 degree, don’t expect quality cake baking change noticeable way.basic modeling functions continuous entire input domain (one exception). illustrate discontinuity ’ll consider piecewise functions, introduced Chapter 13. Heaviside function, graphed Figure ?? discontinuous.Drawing graph Heaviside function \\(H(x)\\) involves lifting pencil \\(x=0\\).contrast, piecewise ramp function (Figure ?? continuous, don’t need lift pencil paper order draw ramp function.Imagine using Heaviside function, say \\(H(W-20)\\), model plant growth function amount water (cc) provided day. model implies provide 20.001 cc water, plant thrive. stingy, provide 19.999 cc water, plant die. words, small change input can lead large change output.Common sense suggests change 0.002 cc amount water—’s small fraction drop, 2 cubic millimeters volume, going lead qualitative change output. might prefer use sigmoidal function model rather Heaviside function.hand, sometimes small change input lead large change output. instance, model hardness water function temperature sensibly include discontinuity \\(32^\\circ\\)F, temperature water turns ice.One author Charles Dicken’s famous characters, Mr. Macawber, described relationship income, expenditure, happiness way:\"Annual income 20 pounds, annual expenditure 19 [pounds] 19 [shillings] six [pence], result happiness. Annual income 20 pounds, annual expenditure 20 pounds six, result misery.\"Macawber referring common situation pre-20th century England putting debtors prison, regardless size debt. Macawber statement suggests model happiness Heaviside function \\(H(\\text{income}- \\text{expenditure})\\).Whenever output function yes--value, can anticipate model involve discontinuous function.","code":""},{"path":"cont-and-smooth.html","id":"smoothness","chapter":"20 Continuity and smoothness","heading":"20.2 Smoothness","text":"Smoothness different concept continuity, although two related. simply, discontinuous function smooth input discontinuity occurs. even continuous ramp function smooth start ramp. Intuitively, imagine sliding hand along ramp function. feel crease \\(x=0\\).function smooth derivative function discontinuous. instance, derivative ramp function Heaviside function, ramp smooth \\(x=0\\).basic modeling functions (one exception!) smooth everywhere domain. particular, derivatives basic modeling functions continuous, second derivative, third derivative, line. functions called C-infinity, written \\(C^\\infty\\). superscript \\(\\infty\\) means every order derivative continuous.piecewise functions, can useful consider orders smoothness. example \\(C^0\\) means function continuous derivative , ramp function. Figure 20.1 shows \\(C^1\\) function, continuous first derivative discontinuous second derivative.\nFigure 20.1: function whose derivative ramp function (hence continous) whose second derivative Heaviside function (discontinous). Since first derivative continuous, function \\(C^1\\) smoothness.\ntell plot second derivative discontinuous. plane flying along trajectory, feel jerk crossed \\(x=0\\).","code":""},{"path":"cont-and-smooth.html","id":"doesnt-exist","chapter":"20 Continuity and smoothness","heading":"20.3 Doesn’t exist?","text":"Recall logical path led us idea derivative function. started differencing operator, takes input function “small” value \\(h\\):\n\\[{\\cal D}_x f(x) \\equiv \\frac{f(x+h) - f(x)}{h}\\]\n, algebraic manipulation numerical experiments found , \\(h\\) small enough, graph \\({\\cal D}_x f(x)\\) depend \\(h\\). defined function \\(\\partial_x f(x)\\) \\(h\\) doesn’t play role, writing \\(\\lim_{h\\rightarrow 0}\\) remember ancestors, now departed scene:\n\\[\\partial_x f(x) \\equiv \\lim_{h\\rightarrow 0} \\frac{f(x+h) - f(x)}{h}\\]\nConveniently, found derivatives naked modeling functions can written terms naked modeling functions without making reference \\(h\\).discontinuous functions, luck. ’s happens compute \\({\\cal D}_x H(x)\\), derivative Heaviside function, smaller smaller \\(h\\).\nDifferencing Heaviside function produces different functions depending value \\(h\\). Since convergence \\(h\\) gets smaller, ’s fair say Heaviside function derivative. Perhaps useful way think “derivative” Heaviside function \\(x=0\\) unaccountably large \\(h\\rightarrow 0\\).know function large derivative, small difference input make large difference output. brings us back definition discontinuous start chapter. like think “derivative” Heaviside function discontinuous.strictly logical thinker rebel conflict previous two paragraphs: first saying Heaviside function derivative, second saying derivative discontinuous. resolution point away \\(x=0\\), Heaviside function perfectly sensible derivative: \\(\\partial_x H(x) = 0\\) \\(x\\neq 0\\). derivative \\(x=0\\).[Deriv-3a] Understand physical analogs continuity smoothness.[Deriv-3b] Determine function continuous thinking “pencil stays paper” technique[Deriv-3c] Understand smooth degree 1 “Function continuous, derivative continuous[Deriv-3d] Understand smooth degree “Smooth degree derivative continuous”[Fun-4-b-4e] Identify “division zero” source interruption domain function. [[??? Redefine function avoid disruption.]]Now concept derivative function, can discuss terms used describe functions general.","code":"\nH <- makeFun(ifelse(x >=0, 1, 0) ~ x)\nDH01   <- makeFun((H(x + 0.01) - H(x))/0.01 ~ x)\nDH001  <- makeFun((H(x + 0.001) - H(x))/0.001 ~ x)\nDH0001 <- makeFun((H(x + 0.0001) - H(x))/0.0001 ~ x)\nslice_plot(DH01(x) ~ x, domain(x=c(-0.02, 0.02)), npts=500,\n           color=\"red\") %>%\n  slice_plot(DH001(x) ~ x,\n           color=\"green\", npts=500, alpha=0.5) %>%\n  slice_plot(DH0001(x) ~ x,\n           color=\"blue\", npts=500, alpha=0.5) "},{"path":"cont-and-smooth.html","id":"piecewise-functions-1","chapter":"20 Continuity and smoothness","heading":"20.4 Piecewise functions","text":"foil showing smoothness continuity.See section Fun-modeling.Rmd connect .","code":""},{"path":"cont-and-smooth.html","id":"continuity-1","chapter":"20 Continuity and smoothness","heading":"20.5 Continuity","text":"Lift pen.","code":""},{"path":"cont-and-smooth.html","id":"differentiability","chapter":"20 Continuity and smoothness","heading":"20.6 Differentiability","text":"want derivative exist matter details define derivative.\\(\\partial_x f(x) \\equiv \\lim_{h\\rightarrow 0} \\frac{f(x+h) - f(x)}{h}\\)\\(\\partial_x f(x) \\equiv \\lim_{h\\rightarrow 0} \\frac{f(x) - f(x-h)}{h}\\)\\(\\partial_x f(x) \\equiv \\lim_{h\\rightarrow 0} \\frac{f(x+h) - f(x-h)}{2 h}\\)Draw graph function imagination domain \\(x \\[-5, 5]\\). function continuous everywhere *except \\(x = -2, 1, 3\\).Draw graph function imagination domain \\(x \\[-5, 5]\\). function continuous everywhere *except \\(x = -2, 1, 3\\).Draw graph function imagination domain \\(x \\[-5,5]\\). function continuous everywhere \\([-5,5]\\). also derivative everywhere except \\(x = -2, 1, 3\\).Draw graph function imagination domain \\(x \\[-5,5]\\). function continuous everywhere \\([-5,5]\\). also derivative everywhere except \\(x = -2, 1, 3\\).sketched functions , decide level smoothness best describes function. (tricks drawings. function looks like ’s broken–, function locally V-shape \\(\\Lambda\\)-shape–take face value.Question ’s smoothness level function (x)? (Hint: quadratic function first derivative changes x second derivative constant x.)    discontinuous ☹︎        \\(C^0\\) ☹︎        \\(C^1\\) ✓        \\(C^2\\) higher ☹︎ Question B ’s smoothness level function B(x)?    discontinuous ✓        \\(C^0\\) ☹︎        \\(C^1\\) ☹︎        \\(C^2\\) higher ☹︎ Question C ’s smoothness level function C(x)?    discontinuous ☹︎        \\(C^0\\) ✓        \\(C^1\\) ☹︎        \\(C^2\\) higher ☹︎ Question D ’s smoothness level function D(x)?    discontinuous ☹︎        \\(C^0\\) ☹︎        \\(C^1\\) ☹︎        \\(C^2\\) higher ✓ ","code":""},{"path":"evanescent-h.html","id":"evanescent-h","chapter":"21 Evanescent h","heading":"21 Evanescent h","text":"goal chapter motivate differentiation rules presented Chapter 18 naked modeling functions. Recall slope-function operator can written ratio rise--run:\n\\[{\\cal D}_t f(t) \\equiv \\frac{f(t+h) - f(t)}{h}\\] \\(h\\) length “run.” idea instantaneous slope function make \\(h\\) small possible.early days calculus, vanishing \\(h\\) described “evanescent.” (Dictionary definition: “tending vanish like vapor.”20) Another good image \\(h\\) becoming small possible comes University Oxford mathematician whose poem Jabberwocky considered earlier. Alice Wonderland, Dodgson introduced character Cheshire Cat.\nFigure 21.1: Vanishing \\(h\\) form Chesire Cat Alice Wonderland.\n“right,” said Cat; time vanished quite slowly, beginning end tail, ending grin, remained time rest gone.“Well! ’ve often seen cat without grin,” thought Alice; “grin without cat! ’s curious thing ever saw life!”Start story two basic modeling functions , like characters Alice Wonderland, considerable “personality”: sinusoid (sin()) sigmoid (pnorm()).\nFigure 21.2: naked sinusoid sigmoidal functions. vertical blue line added mark input \\(t=0\\)\ncomputer can easily construct slope functions sinusoid sigmoid, ’ll call Dsin() Dsigma() respectively.tilde expression handed makeFun(), ’ve identified t name input given “small” default value h parameter. R recognizes Dsin() Dsigma() functions two variables, t h, can see parenthesized argument list functions.nuisance, since using slope functions need always think h, number ’d like describe simply “small,” always need provide numerical value. surprisingly important question development calculus , “can avoid nuisance?” find , let’s look Dsin() Dsigma() range values h, Figure 21.3.\nFigure 21.3: slope functions sinusoid sigmoid. curve shows slope function particular numerical choice h. panels show \\(h=2, 1, 0.5, 0.1, 0.01, 0.001, 0.0001, 0.00001, 0.000001\\).\nobservations numerical experiment:\\(h\\) gets small, slope function doesn’t depend exact value \\(h\\).\nprovide way us, eventually, discard \\(h\\) slope function need \\(h\\) argument.\\(h\\) gets small, slope function doesn’t depend exact value \\(h\\).provide way us, eventually, discard \\(h\\) slope function need \\(h\\) argument.small \\(h\\), \\({\\cal D}_t \\sin(t) = \\sin(t + \\pi/2) = \\cos(t)\\). , taking slope function sinusoid gives another sinusoid, shifted left \\(\\pi/2\\) original. , plain words, small \\(h\\)H cosine slope function sine.small \\(h\\), \\({\\cal D}_t \\sin(t) = \\sin(t + \\pi/2) = \\cos(t)\\). , taking slope function sinusoid gives another sinusoid, shifted left \\(\\pi/2\\) original. , plain words, small \\(h\\)H cosine slope function sine.small \\(h\\), \\({\\cal D}_t \\text{pnorm}(t) = \\text{dnorm(t)}\\). , small \\(h\\) hump function slope function sigmoid function.small \\(h\\), \\({\\cal D}_t \\text{pnorm}(t) = \\text{dnorm(t)}\\). , small \\(h\\) hump function slope function sigmoid function.can confirm last two statements comparison original functions, especially alignment peaks slope functions respect peak sinusoid half-way point sigmoid.use \\(t\\) name input \\(\\partial_t\\) notation differentiation. Previously block used \\(x\\) input name \\(\\partial_x\\) differentiation. ?Mathematically, name input makes difference whatsoever. call \\(x\\) \\(t\\) \\(y\\) Josephina. ’s important name used consistently left right sides \\(\\equiv\\), derivative symbol \\(\\partial\\) subscript identifies -respect-input. statement mathematically:\\[\\partial_x\\, x = 1\\ \\ \\ \\ \\partial_t\\, t = 1\\ \\ \\ \\ \\partial_y\\, y = 1\\ \\ \\ \\ \\partial_\\text{Josephina} \\text{Josephina} = 1\\]\nAdmittedly, last one hard read.look derivatives functions multiple variables need thoughtful choice -respect-input. want get used seeing different input names used differentiation.Now consider slope functions logarithm exponential functions.\nFigure 21.4: slope functions logarithm exponential.\nnumerical experiments logarithm exponential functions evidence , \\(h\\) gets small, slope function doesn’t depend \\(h\\). , find :small \\(h\\), slope function logarithm power-law function: \\({\\cal D}_t \\ln(t) = \\frac{1}{t}\\).small \\(h\\), slope function exponential exponential : \\({\\cal D}_t e^x = e^x\\).can confirm evaluating slope function exponential \\(t=0\\) \\(t=1\\), slope function logarithm \\(t= 2, 1, 1/2, 1/4, 1/8.\\)numerical experiments naked modeling functions reveal patterns presented Chapter 18","code":"\nDsin   <- makeFun((  sin(t+h) -   sin(t))/h ~ t, h=0.1)\nDsigma <- makeFun((pnorm(t+h) - pnorm(t))/h ~ t, h=0.1)\nDsin## function (t, h = 0.1) \n## (sin(t + h) - sin(t))/h\nDsigma## function (t, h = 0.1) \n## (pnorm(t + h) - pnorm(t))/h"},{"path":"evanescent-h.html","id":"role-of-h","chapter":"21 Evanescent h","heading":"21.1 Role of h","text":"motivating differentiation naked modeling functions, introduced quantity \\(h\\) ignored , saying doesn’t really matter long “small.” reasonable person might wonder “small” really means, needed introduce \\(h\\) first place eventually going ignore .One reason “small” “zero,” although related, different. example, refering slope functions Dsin() Dsigma() created early example chapter, see setting \\(h\\) zero get us need :NaN, can hear echo fourth-grade teacher reminding illegal divide zero.Think evanescent \\(h\\) vapor definition “evanescent”: “tending vanish like vapor.” vapor solvent paint. don’t want solvent paint wall; wet paint nuisance. getting paint can wall absolutely needs solvent.used solvent \\(h\\) earlier chapter numerical experiments led us derivatives naked modeling functions, instance \\(\\partial_x e^x = e^x\\) \\(\\partial_x \\sin(x) = \\cos(x)\\). Eventually, ’ll construct \\(h\\)-free theory differentiation, reducing process set algebraic rules \\(h\\) never appears. goal, let’s continue using \\(h\\) find additional useful facts derivatives.","code":"\nDsin(t=1, h=0)\nDsigma(t=0, h=0)"},{"path":"evanescent-h.html","id":"derivatives-of-linear-combinations","chapter":"21 Evanescent h","heading":"21.2 Derivatives of linear combinations","text":"Linear combination one ways make new functions existing functions. recall, linear combination involves scaling function adding scaled functions. can easily use \\(h\\) show result differentiating linear combination functions. ’ll use \\(f(x)\\) \\(g(x)\\) names stand function whatsoever. ’ll let \\(b\\) name scalar. First, let’s figure \\(\\partial_x\\, b f(x)\\), Going back writing \\(\\partial_x\\) terms slope function:\n\\[\\partial_x\\, b\\,f(x) = \\frac{b\\, f(x + h) - b\\,f(x)}{h}\\\\\n\\ \\\\\n= b \\frac{f(x+h) - f(x)}{h} = b\\, \\partial_x f(x)\\]\nwords, know derivative \\(\\partial_x\\, f(x)\\), can easily find derivative scaled version \\(f()\\).Now consider derivative sum two functions, \\(f(x)\\) \\(g(x)\\):\n\\[\\partial_x\\, \\left[f(x) + g(x)\\right] =\\\\\n\\ \\\\\n=\\frac{\\left[f(x + h) + g(x + h)\\right] - \\left[f(x) + g(x)\\right]}{h} = \\\\\n\\ \\\\\n= \\frac{\\left[f(x+h) -f(x)\\right] + \\left[g(x+h) - g(x)\\right]}{h}\\\\\n\\ \\\\\n= \\frac{\\left[f(x+h) -f(x)\\right]}{h} + \\frac{\\left[g(x+h) - g(x)\\right]}{h}\\\\\n\\ \\\\\n= \\partial_x\\, f(x) + \\partial_x\\, g(x)\\]Using two rules together, can differentiate linear combination functions terms differentiated functions :\\[\\partial_x\\ \\left[\\strut a_1 g_1(x) + a_2 g_2(x) + a_3 g_3(x) + \\cdots\\right] =\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\\n\\ \\\\\n\\ \\ \\ \\ \\ \\ \\ \\ \\ a_1 \\partial_x\\, g_1(x) + a_2 \\partial_x\\, g_2(x) + a_3 \\partial_x\\, g_3(x) + \\cdots\\]way \\(\\partial_x\\) can “passed ” linear combination, mathematicians say differentiation linear operator. Consider new fact differentiation payment eventually become complete theory telling us differentiate product two functions composition two functions.1734, famous philosopher George Berkeley (1685-1753) published long-titled book: Analyst: Discourse Addressed Infidel Mathematician: Wherein Examined Whether Object, Principles, Inferences Modern Analysis Distinctly Conceived, Evidently Deduced, Religious Mysteries Points Faith. Analyst, Berkeley took issue arguments time legitimate divide \\(h\\) , ultimately, \\(h\\) replaced zero. Calling \\(h\\) “evanescent increment,” asked,“evanescent Increments? neither finite Quantities Quantities infinitely small, yet nothing. May call ghosts departed quantities?”Interesting, Berkeley believed ghost \\(h\\) yielded correct results. objection framers calculus made two, canceling errors.“[B]y virtue two fold mistake arrive, though science, yet truth.”Berkeley saying calculus yet put solid logical foundation. century Berkeley’s death work accomplished. accomplished, results claimed true along confirmed.","code":""},{"path":"evanescent-h.html","id":"derivatives-of-the-basic-modeling-functions","chapter":"21 Evanescent h","heading":"21.3 Derivatives of the basic modeling functions","text":"basic modeling functions naked modeling functions, bare \\(x\\) replaced \\(\\line(x)\\). convention, different ways writing \\(\\line(x)\\) different naked functions, instance:$$       \\\n \\2 (x-x_0)/P)\\\n(x)      (k x)\\\nx^2       (mx + b)^2\\\n1/x       1/(mx + b)\\\n(x)       (x + b)\\\n$$general rule derivatives basic modeling functions \\[\\partial f(\\line(x)) = \\partial_x \\line(x) \\times [\\partial_x f]\\left(\\strut\\line(x)\\right)\\]illustrate:\\(\\partial_x e^{kx} = k\\, e^{kx}\\)\\(\\partial_x \\sin(2\\pi (x-x_0)/P) = \\frac{2\\pi}{P} \\sin(2\\pi (x-x_0)/P)\\)\\(\\partial_x (mx + b)^2 = m\\, 2 (m x + b) = 2 m^2 x + m^2 b\\)\\(\\partial_x \\frac{1}{mx + b} = - \\frac{m}{(mx + b)^2}\\)\\(\\partial_x \\ln(x + b) = /(ax+b)\\)\\(\\partial_x \\text(dnorm)(x, mn, sd) = - \\frac{x}{sd} \\text(dnorm)(x, mn, sd)\\)notation basic hump sigmoidal functions two equivalent formulations:hump: \\(\\dnorm\\left(\\frac{x-mn}{sd}\\right)\\) \\(\\dnorm(x, mn, sd)\\)sigmoid: \\(\\pnorm\\left(\\frac{x-mn}{sd}\\right)\\) \\(\\pnorm(x, mn, sd)\\)derivative sigmoid can written either two equivalent ways:\\(\\partial_x \\pnorm\\left(\\frac{x-mn}{sd}\\right) = \\frac{1}{sd}\\, \\pnorm\\left(\\frac{x-mn}{sd}\\right)\\)\\(\\partial_x \\pnorm(x, mn, sd) = \\dnorm(x, mn, sd)\\)’s easy get confused .","code":""},{"path":"prod-comp-rules.html","id":"prod-comp-rules","chapter":"22 Differentiation of assembled functions","heading":"22 Differentiation of assembled functions","text":"Chapter 11 introduced three major methods putting two basic modeling functions together order make new function.Linear combinations: e.g. \\(f(x) + b g(x)\\)Products: e.g. \\(f(x) g(x)\\)Composition:, e.g. \\(f(g(x))\\) (usually different function \\(g(f(x))\\).)already looked differentiation linear combinations. chapter, ’ll examine products functions compositions functions.","code":""},{"path":"prod-comp-rules.html","id":"step-1-identify-f-and-g","chapter":"22 Differentiation of assembled functions","heading":"22.1 Step 1: Identify f() and g()","text":"write rules terms two function names, \\(f()\\) \\(g()\\), can stand functions whatsoever. ’s rare see product composition written explicitly \\(f(x)g(x)\\) \\(f(g(x))\\). Instead, given something like \\(e^x \\ln(x)\\). first step differentiating product composition identify \\(f()\\) \\(g()\\) individually.general, \\(f()\\) \\(g()\\) might complicated functions, involving linear combinations, products, composition. get started, ’ll practice cases simple, naked modeling functions.following, say whether function composition \\(f(g(x))\\) product \\(f(x) g(x)\\), neither. identify \\(f()\\). product, take \\(f()\\) function left.\\(h_1(x) \\equiv \\ln(x) e^x\\)Question \\(h_1(x)\\)?    product ✓        composition ☹︎        neither ☹︎ \nQuestion B \\(h_1()\\), \\(f(x)\\)?\\(\\sin()\\) ☹︎ \\(\\cos()\\) ☹︎ \\(\\exp()\\) ☹︎ \\(\\ln()\\) ✓ \\(\\recip()\\) ☹︎ \\(\\pnorm()\\) ☹︎ \\(\\dnorm()\\) ☹︎ \\(h_2(x) \\equiv \\sin(x) \\cos(x)\\)Question C \\(h_2(x)\\)?    product ✓        composition ☹︎        neither ☹︎ \nQuestion D \\(h_2()\\), \\(f(x)\\)?\\(\\sin()\\) ✓ \\(\\cos()\\) ☹︎ \\(\\exp()\\) ☹︎ \\(\\ln()\\) ☹︎ \\(\\recip()\\) ☹︎ \\(\\pnorm()\\) ☹︎ \\(\\dnorm()\\) ☹︎ \\(h_3(x) \\equiv \\sin(\\cos(x))\\)Question E \\(h_3(x)\\)?    product ☹︎        composition ✓        neither ☹︎ \nQuestion F \\(h_3()\\), \\(f(x)\\)?\\(\\sin()\\) ✓ \\(\\cos()\\) ☹︎ \\(\\exp()\\) ☹︎ \\(\\ln()\\) ☹︎ \\(\\recip()\\) ☹︎ \\(\\pnorm()\\) ☹︎ \\(\\dnorm()\\) ☹︎ \\(h_4(x) \\equiv e^{\\ln(x)}\\)Question G \\(h_4(x)\\)?    product ☹︎        composition ✓        neither ☹︎ \nQuestion H \\(h_4()\\), \\(f(x)\\)?\\(\\sin()\\) ☹︎ \\(\\cos()\\) ☹︎ \\(\\exp()\\) ✓ \\(\\ln()\\) ☹︎ \\(\\recip()\\) ☹︎ \\(\\pnorm()\\) ☹︎ \\(\\dnorm()\\) ☹︎ \\(h_5(x) \\equiv \\sin(x) - \\cos(x)\\)Question \\(h_5(x)\\)?    product ☹︎        composition ☹︎        neither ✓ \nQuestion J \\(h_5()\\), \\(f(x)\\)?\\(\\sin()\\) ✓ \\(\\cos()\\) ☹︎ \\(\\exp()\\) ☹︎ \\(\\ln()\\) ☹︎ \\(\\recip()\\) ☹︎ \\(\\pnorm()\\) ☹︎ \\(\\dnorm()\\) ☹︎ \\(h_6(x) \\equiv e^{x^2}\\)Question K \\(h_2(x)\\)?    product ☹︎        composition ✓        neither ☹︎ \nQuestion L \\(h_6()\\), \\(f(x)\\)?\\(\\sin()\\) ☹︎ \\(\\cos()\\) ☹︎ \\(\\exp()\\) ✓ \\(\\ln()\\) ☹︎ \\(\\recip()\\) ☹︎ \\(\\pnorm()\\) ☹︎ \\(\\dnorm()\\) ☹︎ \\(h_7(x) \\equiv \\pnorm(x^2)\\)Question M \\(h_7(x)\\)?    product ☹︎        composition ✓        neither ☹︎ \nQuestion N \\(h_7()\\), \\(f(x)\\)?\\(\\sin()\\) ☹︎ \\(\\cos()\\) ☹︎ \\(\\exp()\\) ☹︎ \\(\\ln()\\) ☹︎ \\(\\recip()\\) ☹︎ \\(\\pnorm()\\) ✓ \\(\\dnorm()\\) ☹︎ \\(h_8(x) \\equiv \\pnorm(x) \\dnorm(x)\\)Question O \\(h_8(x)\\)?    product ✓        composition ☹︎        neither ☹︎ \nQuestion P \\(h_8()\\), \\(f(x)\\)?\\(\\sin()\\) ☹︎ \\(\\cos()\\) ☹︎ \\(\\exp()\\) ☹︎ \\(\\ln()\\) ☹︎ \\(\\recip()\\) ☹︎ \\(\\pnorm()\\) ✓ \\(\\dnorm()\\) ☹︎ \\(h_9(x) \\equiv 1/\\sin(x)\\)Question Q \\(h_9(x)\\)?    product ☹︎        composition ✓        neither ☹︎ \nQuestion R \\(h_9()\\), \\(f(x)\\)?\\(\\sin()\\) ☹︎ \\(\\cos()\\) ☹︎ \\(\\exp()\\) ☹︎ \\(\\ln()\\) ☹︎ \\(\\recip()\\) ✓ \\(\\pnorm()\\) ☹︎ \\(\\dnorm()\\) ☹︎ ","code":""},{"path":"prod-comp-rules.html","id":"step-2-find-f-and-g","chapter":"22 Differentiation of assembled functions","heading":"22.2 Step 2: Find f’() and g’()","text":"differentiating either products compositions, need identify \\(f()\\) \\(g()\\) (first step) compute derivatives \\(\\partial_x f()\\) \\(\\partial_x g()\\). , ’ll write four functions.\\(h_i()\\) previous section, fill row following table. (row \\(h_1()\\) already entered.)","code":""},{"path":"prod-comp-rules.html","id":"product-rule","chapter":"22 Differentiation of assembled functions","heading":"22.3 Product rule","text":"Written terms pronoun functions \\(f()\\) \\(g()\\), product rule isDecide colorizing formulas, following, helpful worthwhile.\\[\\partial_x \\left[\\strut \\color{blue}{f(x)}\\times \\color{green}{g(x)}\\right] = \\color{blue}{[\\partial_x f(x)]} \\times \\color{green}{g(x)}\\ \\  {\\mathbf +}\n\\ \\ \\color{green}{[\\partial_x g(x)]} \\times \\color{blue}{f(x)}\\]\npeople find easier read rule Lagrange shorthand, f g stand \\(f(x)\\) \\(g(x)\\) respectivly, f’ (“f-prime”) g’ (“g-prime”) stand \\(\\partial f()\\) \\(\\partial g()\\).\\[\\text{Lagrange shorthand:}\\ \\   \\partial[f \\times g] = [f \\times g]' = f'g + g'f\\]\nLet’s start simple examples already know answer:\\(\\partial [x \\times x^2] = [\\partial x] \\times x^2 \\ +\\  [\\partial x^2] \\times x =1\\times x^2 + 2x \\times x = 3 x^2\\)\nSince \\([x \\times x^2] = x^3\\), figured directly derivative \\(3 x^2\\)\\(\\partial [x \\times x^2] = [\\partial x] \\times x^2 \\ +\\  [\\partial x^2] \\times x =1\\times x^2 + 2x \\times x = 3 x^2\\)Since \\([x \\times x^2] = x^3\\), figured directly derivative \\(3 x^2\\)\\(partial_x [e^x \\times e^x] = [\\partial_x e^x] \\times e^x \\ + \\ [\\partial_x e^x] \\times e^x = 2 e^x e^x = 2 e^{2x}\\)\nSince \\([e^x \\times e^x] = e^{2x}\\), one basic modeling functions, figured directly derivative \\(2 e^{2x}\\).\\(partial_x [e^x \\times e^x] = [\\partial_x e^x] \\times e^x \\ + \\ [\\partial_x e^x] \\times e^x = 2 e^x e^x = 2 e^{2x}\\)Since \\([e^x \\times e^x] = e^{2x}\\), one basic modeling functions, figured directly derivative \\(2 e^{2x}\\).","code":""},{"path":"prod-comp-rules.html","id":"composition-chain-rule","chapter":"22 Differentiation of assembled functions","heading":"22.4 Composition (“chain”) rule","text":"Written terms functions \\(f()\\) \\(g()\\), rule composition \\(f(g(x))\\) \\[\\partial_x \\left[\\strut \\color{blue}{f\\left(\\right.}\\strut \\color{green}{g(x)}\\color{blue}{\\left.\\right)}\\right] = [\\color{blue}{\\partial_x f}](\\color{green}{g(x)}) \\times [\\color{green}{\\partial_xg(x)}]\\]\n, using Lagrange prime notation\n\\[\\text{Lagrange shorthand:}\\ \\   \\partial[f(g)] = f' (g) \\times g'\\]almost universally called chain rule, presumably result involves chain derivatives., ’ll practice simple examples already know result:\\(\\partial [\\exp\\left(\\ln(x)\\right)] = [\\partial \\exp](\\ln(x)) \\times \\partial_x \\ln(x) = \\exp\\left(\\ln(x)\\right) \\times 1/x\\)\nSince \\(\\exp\\left(\\ln(x)\\right) = x\\) can simplify \\[\\partial [\\exp\\left(\\ln(x)\\right)] = \\exp\\left(\\ln(x)\\right) \\times 1/x = x/x = 1\\] consistent know \\(\\partial_x x\\).\\(\\partial [\\exp\\left(\\ln(x)\\right)] = [\\partial \\exp](\\ln(x)) \\times \\partial_x \\ln(x) = \\exp\\left(\\ln(x)\\right) \\times 1/x\\)Since \\(\\exp\\left(\\ln(x)\\right) = x\\) can simplify \\[\\partial [\\exp\\left(\\ln(x)\\right)] = \\exp\\left(\\ln(x)\\right) \\times 1/x = x/x = 1\\] consistent know \\(\\partial_x x\\).\\(\\partial[ \\recip(x^2)] = [\\partial \\recip](x^2) \\times \\partial_x x^2 = [\\partial\\, \\recip](x^2) \\times 2 x\\)\nSince \\(\\partial_x \\recip(x) = \\partial_x [1/x] = \\partial_x x^{-1} = -x^{-2} = - \\frac{1}{x^2}\\), can simplify \n\\(\\partial[ \\recip(x^2)] = [\\partial_x \\recip](x^2) \\times \\partial_x x^2 = - \\frac{1}{(x^2)^2} \\times 2 x = -2 \\frac{x}{x^4} = -2 x^{-3}\\)\\(\\partial[ \\recip(x^2)] = [\\partial \\recip](x^2) \\times \\partial_x x^2 = [\\partial\\, \\recip](x^2) \\times 2 x\\)Since \\(\\partial_x \\recip(x) = \\partial_x [1/x] = \\partial_x x^{-1} = -x^{-2} = - \\frac{1}{x^2}\\), can simplify \n\\(\\partial[ \\recip(x^2)] = [\\partial_x \\recip](x^2) \\times \\partial_x x^2 = - \\frac{1}{(x^2)^2} \\times 2 x = -2 \\frac{x}{x^4} = -2 x^{-3}\\)derivatives basic modeling functions can shown using chain rule. Remember, basic modeling functions composition naked modeling function \\(\\line(x) \\equiv ax + b\\).\\(\\partial_x [\\sin(x + b)] = [\\partial \\sin](x + b) \\times \\partial_x [ax + b = \\cos(ax + b) \\times \\).","code":""},{"path":"prod-comp-rules.html","id":"step-3-apply-the-relevant-rule","chapter":"22 Differentiation of assembled functions","heading":"22.5 Step 3: Apply the relevant rule","text":"See 141 DD 31 drill problems","code":""},{"path":"prod-comp-rules.html","id":"exponentials-and-logarithms-optional","chapter":"22 Differentiation of assembled functions","heading":"22.6 Exponentials and logarithms (optional)","text":"natural logarithm function, \\(\\ln(x)\\), one basic modeling functions. digit() function, introduced Chapter 15 different, logarithm-base-10, written \\(\\log_{10}(x)\\) log10(x). Ten integer, nice round number boot. practice, ’s “natural” use \\(\\log_10()\\). “natural” “natural logarithm” means something different.base natural logarithm number called Euler’s constant written \\(e\\). celebrity number, \\(e\\) right \\(\\pi\\) \\(-1\\). Just \\(\\pi\\) decimal expansion infinitely long, familiar \\(\\pi = 3.14159265358979...\\), Euler’s constant infinitely long decimal representation: \\(e = 2.71828182845905...\\)’s obvious first glance \\(e = 2.71828182845905...\\) called “natural” mathematicians. reason number , butthe derivative \\(\\partial_x \\ln(x)\\) particularly simple form, namely, \\(1/x\\).\\(\\ln(x)\\) inverse \\(e^x\\), nicest derivatives \\(\\partial_x e^x = e^x\\).Let’s look log-base-10 ’s computer-savvy cousin log-base-2. definition logarithms means 10 2 can written \\[10 = e^{\\ln(10)}\\ \\ \\ \\text{}\\ \\ \\ 2 = e^{\\ln(2)}\\]\nimplies base-10 base-2 exponential functions can written\\[10^x = [e^{\\ln(10)}]^x = e^{\\ln(10)x} \\ \\ \\ \\text{}\\ \\ \\ 2^x = [e^{\\ln(2)}]^x = e^{\\ln(2) x}\\]\nCalculating \\(\\partial_x 10^x\\) \\(\\partial_x 2^x\\) matter applying chain rule:\\[\\partial_x [10^x] = \\partial_x [e^{\\ln(10)x}] = e^{\\ln(10)x} \\times \\ln(10) = 2.30258509299405... \\times 10^x\\\\ \n\\ \\text{}\\\\\n\\partial_x [2^x] = \\partial_x [e^{\\ln(2)x}] = e^{\\ln(2)x} \\times \\ln(2) = 0.693147180559945...\\times 2^x\\]\nLike \\(e^x\\), derivatives \\(10^x\\) \\(2^x\\) proportional . \\(e^x\\) constant proportality 1, natural number indeed.","code":""},{"path":"prod-comp-rules.html","id":"checking-your-work","chapter":"22 Differentiation of assembled functions","heading":"22.7 Checking your work","text":"get result derivative, plot along finite-difference approximation. close, ’re good.get result derivative, plot along finite-difference approximation. close, ’re good.Apply antiD() operator derivative graphically confirm constant difference output antiD() original function.Apply antiD() operator derivative graphically confirm constant difference output antiD() original function.","code":""},{"path":"optim-and-shape.html","id":"optim-and-shape","chapter":"23 Optimization","heading":"23 Optimization","text":"“optimize” means make something good possible available resources. Optimization problems common science, logistics, industry, area one seeks best solution problem. everyday examples:much salt add stew. Stews can salty, can salty enough. Somewhere middle optimum.harvest trees grown lumber. Harvest soon might losing prime growing years. Wait long trees settled slow growth, .Walking steep slope tiring slows ; ’s hiking trails switchbacks. switchbacks shallow, takes long time cover distance. ’s efficient angle enable hikers get hill shortest time.","code":""},{"path":"optim-and-shape.html","id":"structure-of-the-problem","chapter":"23 Optimization","heading":"23.1 Structure of the problem","text":"optimization problem, one input quantity whose value choose. amount salt; years wait planting harvesting tree; angle trail respect slope. ’ll call decision quantity.Similarly, one output quantity value want make good possible. taste stew; income produced selling lumber; time takes walk hill. output quantity called objective.model relates inputs objective output called objective function. Solving optimization problem—modeling phase complete—amounts finding value decision quantity (input objective function) produces best level objective (output objective function).Sometimes objective something want minimize, make small possible. hiking trail problem, seek minimize amount time takes walk trail. Sometimes want maximize objective, wood-harvest problem objective harvest wood per year.Mathematically, maximization minimization thing. Every minimization problem can turned maximization problem putting negative sign front objective function. simplify discussion, talking finding solution optimization problem ’ll imagine goal maximize. keep mind many circumstances real world, “best” can mean minimization.solution seek maximization problem called argmax. contraction two words: argument (, input) produces maximum output. (minimization, solution ***argmin.)found argmax can plug value objective function find value output. value maximum.People often talk “finding maximum.” misleading. setup optimization problem :Construct (, model) objective function.Now know objective function, find input function—, argmax—produces maximum output.illustrate setup optimization problem, imagine situation contest see can shoot tennis ball farthest field slingshot. contest, adjust vertical angle launch, place ball slingshot’s cradle, pull back far possible, let go. win contest, need optimize launch ball.objective distance travelled ball. simplicity, ’ll imagine velocity ball release fixed \\(v_0\\). ’ll win lose based angle launch choose.head field experiment, let’s bit preparation. ’ll model far ball travel (horizontally) function angle launch \\(\\theta\\) initial velocity \\(v_0\\).mathematics problems involves area called differential equations, important part calculus ’ll come later course. Since don’t tools yet, ’ll just state simple model long ball stays air.\n\\[\\text{duration}(v_0, \\theta) = 2 v_0 \\sin(\\theta)/g\\] \\(g\\) acceleration due gravity, \\(9.8 \\text{m}\\text{s}^{-2}\\), assuming contest held Earth.horizontal distance travelled tennis ball \\[\\text{hdist}(v_0, \\theta) = \\cos(\\theta) v_0\\, \\text{duration}(v_0, \\theta) = 2 v_0^2 \\cos(\\theta)\\sin(\\theta) / g\\]\nobjective function hdist(), seek find argmax. input \\(v_0\\) (assumed) fixed, decision quantity angle \\(\\theta\\).best choice \\(\\theta\\) make quantity \\(\\cos(\\theta)\\sin(\\theta)\\) large possible. finding argmax, don’t need concerned \\(v_0\\) \\(g\\).Finding argmax can accomplished simply plotting function \\(\\cos(\\theta)\\sin(\\theta)\\). ’ll implement function input units degrees.\nFigure 23.1: distance travelled ball launched angle \\(\\theta\\)$, according simple model duration flight distance travelled.\ngraph, especially zoomed-version, can read argmax \\(\\theta = 45^\\circ\\).Finding argmax solves problem. may also want present solution saying value output hdist() argmax given input. can read graph maximum \\(\\cos(\\theta)\\sin(\\theta)\\) 0.5 \\(\\theta = 45^\\circ\\), overall distance \\(v_0^2 / g\\)Review Exercise: dimension \\(v_0^2 / g\\)?","code":"\nf <- makeFun(cos(pi*theta/180)*sin(pi*theta/180) ~ theta)\nslice_plot(f(theta) ~ theta, domain(theta=c(0,90)))\nslice_plot(f(theta) ~ theta, domain(theta = c(40, 50)))"},{"path":"optim-and-shape.html","id":"interpreting-the-argmax","chapter":"23 Optimization","heading":"23.2 Interpreting the argmax","text":"graphical solution given slingshot problem entirely satisfactory. Whether solution win contest depends course whether model built objective function correct. potentially important things left , air resistence.Solving optimization problem prepared us go field test result. Perhaps ’ll find real-world optimum angle somewhat steeper shallower \\(\\theta = 45^\\circ\\).Besides argmax, another important quantity read graph Figure 23.1 precision argmax. strict mathematical terms, argmax exactly 45 degrees. practical terms, may matter much outcome little away \\(45^\\circ\\). example, according model, angle range \\(40^\\circ < \\theta < 50^\\circ\\) produce output within 1% distance reached argmax.Contests won lost margins less 1%, casually deviate argmax. hand, \\(45^\\circ\\) argmax model. Reality may deviate model. instance, suppose air resistance wind might might effect 1% distance. can expect factors might change optimal angle much \\(\\pm 5^\\circ\\).","code":""},{"path":"optim-and-shape.html","id":"derivatives-and-optimization","chapter":"23 Optimization","heading":"23.3 Derivatives and optimization","text":"’re now going reframe search argmax ’s interpretation terms derivatives objective function respect decision quantity (\\(\\theta\\) slingshot problem). function one variable, improvement look---graph technique find argmax. genuine reason use derivatives set us future solve problems one variable, hard draw interpret graph. Also, describing functions language derivatives can help us think clearly aspects problem, precision argmax.graph Figure 23.1, ’s easy find argmax; common sense carries day. won’t obvious first going take following approach:Let’s denote argmax objective function \\(f(x)\\) \\(x^\\star\\).\nLet’s look derivative \\(\\partial_x f(x)\\) neighborhood \\(x^\\star\\). Referring Figure 23.1, \\(x^\\star = 45^\\circ\\), may able see \\(\\partial_x f(x^\\star)\\) zero; line tangent function’s graph \\(x^\\star\\) flat.Seen another way, slope \\(f(x)\\) left \\(x^\\star\\) positive; moving tiny bit right (, increasing \\(x\\) small amount, leads increase output \\(f(x)\\). Intuitively, approach peak hill, walking uphill.) Just right \\(x^\\star\\), slope \\(f(x)\\) negative; reach top hill continue , going downhill. derivative function positive one side \\(x^\\star\\) negative , suggesting crosses zero argmax.Inputs \\(x^\\star\\) \\(\\partial_x f(x^\\star) = 0\\) called critical points. call simply argmaxes? slope also zero argmin. ’s even possible slope zero point ’s neither argmin argmax.Question tmp-31: Consider function \\(f(x) \\equiv x^3\\). Confirm value derivative \\(\\partial_x f(x = 0)\\) \\(x^\\star = 0\\) critical point. sort critical point \\(x^\\star=0\\)? (Hint: Draw graph \\(f(x)\\) near \\(x=0\\) see ’s going .)argmax [\\(f(0) < f(x > 0)\\), \\(x^\\star=0\\) can’t argmax.]argmax [\\(f(0) < f(x > 0)\\), \\(x^\\star=0\\) can’t argmax.]argmin [\\(f(x < 0) < f(0)\\), \\(x^\\star=0\\) can’t argmin.]argmin [\\(f(x < 0) < f(0)\\), \\(x^\\star=0\\) can’t argmin.]Neither (+) []Neither (+) []point, know values \\(x^\\star\\) give \\(\\partial_x f(x^\\star) = 0\\) “critical points,” haven’t said figure whether given critical point argmax, argmin, neither. behavior \\(\\partial_x f(x)\\) near x=x^$ important. \\(x^\\star\\) argmax, \\(\\partial_x f(x)\\) positive left \\(x^\\star\\) negative right \\(x^\\star\\); walk hill get \\(x^\\star\\), top hill flat, just past top hill negative slope.argmin, changing \\(x\\) less \\(x^\\star\\) greater \\(x\\star\\); walking valley, level bottom \\(x=x^\\star\\), back side valley pass \\(x=x^\\star\\). Figure 23.2 shows situation.\nFigure 23.2: Top row: objective function near argmax (left) argmin (right). Bottom row: derivative objective function\nbottom row graphs Figure 23.2 shows derivative objective function \\(f(x)\\), , \\(\\partial_x f(x)\\). can see argmax \\(f(x)\\), derivative \\(\\partial_x f(x)\\) positive left negative right. Similarly, near argmin \\(f(x)\\), derivative \\(\\partial_x f(x)\\) negative left positive right.Stated another way, derivative \\(\\partial_x f(x)\\) positive slope near argmin negative slope near argmax.Just differentiate \\(f(x)\\) find ’s slope, find slope function \\(\\partial_x f(x)\\) can differentiate . result called second derivative. write \\(\\partial_x \\left[\\partial_x f(x)\\right]\\), brevity write \\(\\partial_{xx} f(x)\\).second derivative objective function \\(f(x)\\) critical point \\(x^\\star\\) tells us whether critical point argmax, argmin, neither.\nCritical point \\(x^\\star\\) | \\(\\partial_x f(x^\\star)\\) | \\(\\partial_{xx} f(x^\\star)\\)\n———————–|———————|——————-\nargmax | 0 | negative\nargmin | 0 | positive\nneither| 0 | 0Question tmp-32: Returning function \\(f(x) \\equiv x^3\\), find value second-derivative \\(\\partial_{xx} f(x^\\star)\\) evaluated critical point \\(x = x^\\star = 0\\). \\(\\partial_{xx} f( x=0\\)?Negative [established previous exercise critical point \\(x^\\star=0\\) neither argmin wan argmax.]Negative [established previous exercise critical point \\(x^\\star=0\\) neither argmin wan argmax.]Positive [established previous exercise critical point \\(x^\\star=0\\) neither argmin wan argmax.]Positive [established previous exercise critical point \\(x^\\star=0\\) neither argmin wan argmax.]Zero (+) []Zero (+) []differentiate function \\(f(x)\\), produce new function can call anything like. help readers follow thread story, ’s nice name new function \\(\\partial_x f(x)\\). signals clearly reader origins new function respect original function \\(f(x)\\).words, \\(\\partial_x f(x)\\) often called derivative \\(f(x)\\) (respect x). “derive” general term mean just way creating something new something old. calculus, “derivative” always means “created differentiation.” Perhaps better history led us call \\(\\partial_x f(x)\\) name “differentiated \\(f(x)\\)” “differential function \\(f(x)\\).”Graphically, can read second derivative \\(\\partial_{xx} f(x)\\) slope first derivative \\(\\partial_x f(x)\\) concavity function \\(f(x)\\) . \\(\\partial_{xx} f(x) < 0\\), \\(f(x)\\) concave (frown). Likewise, \\(\\partial_{xx} f(x) >0\\) \\(f(x)\\) concave (smile). \\(\\partial_{xx} f(x) = 0\\), \\(f(x)\\) curvature.point, ’ve translated features functions evident graph language derivatives:slope function \\(f(x)\\) input \\(x\\) value derivative function \\(\\partial_x f(x)\\) \\(x\\).concavity function \\(f(x)\\) input slope derivative function, , \\(\\partial_x f(x)\\).Putting () (ii) together, get concavity function \\(f(x)\\) input \\(x\\) value second derivative function, , \\(\\partial_{xx} f(x)\\).argmax \\(x^\\star\\) \\(f(x)\\), value derivative function \\(\\partial_x f(x^\\star)\\) zero value second derivative function \\(\\partial_{xx} f(x^\\star)\\) negative. (situation argmin similar, derivative objective function zero second derivative positive.)graph shows three different functions labeled (), (B), (C).Question Function ()     concave ✓        non-concave ☹︎        concave ☹︎ Question B Function (B)     concave ☹︎        non-concave ☹︎        concave ✓ Question C Function (C)     concave ☹︎        non-concave ✓        concave ☹︎ Question D negative function ()     concave ☹︎        non-concave ☹︎        concave ✓ graph shows function \\(\\mbox{wave}(t) \\equiv \\sin(2 \\pi t/4)\\) labels four input values \\(t\\).Question E values input \\(t\\) function concave ?\\(t = \\) \\(t=D\\) ☹︎ \\(t = \\) \\(t=C\\) ☹︎ \\(t = C\\) \\(t = D\\) ✓ none ☹︎ Question F values input \\(t\\) function non-concave?    \\(t = \\) ✓        \\(t=B\\) ☹︎        \\(t=C\\) ☹︎        none ☹︎ Question G function steepest?smooth function marked points. task , point, estimate value derivative, sign second derivative, radius circle nicely match function small region around point. (Remember, ’re asking radius circle, half diameter.)simplify things, table giving seven different combinations quantities estimate. correctly match one labeled points, . need choose correct set quantities labeled point.Question row table best matches function point ?    ☹︎        ii ☹︎        iii ☹︎        iv ☹︎        v ☹︎        vi ☹︎        vii ✓ Question B row table best matches function point B?    ☹︎        ii ✓        iii ☹︎        iv ☹︎        v ☹︎        vi ☹︎        vii ☹︎ Question C row table best matches function point C?    ☹︎        ii ☹︎        iii ☹︎        iv ✓        v ☹︎        vi ☹︎        vii ☹︎ Question D row table best matches function point D?    ✓        ii ☹︎        iii ☹︎        iv ☹︎        v ☹︎        vi ☹︎        vii ☹︎ Question E row table best matches function point E?Pick Lorenz curve {.intheworld} block 1. Compute concavity lorenz function, showing ’s everywhere positive. examine concavity composition lorenz functions determine necessarily everywhere positive.’s critical point?’re familiar quadratic polynomial: \\[g(x) = a_0 + a_1 x + a_2 x^2\\]\ngraph quadratic polynomial parabola, might concave concave . know, parabola one critical point, might argmin argmax.Let’s find critical point. know critical point \\(x^\\star\\) \\(\\partial_x g(x_0) = 0\\). Since know differentiate power law, can see \n\\[\\partial_x g(x) = a_1 + 2 a_2 x\\] , specifically, critical point \\(x^\\star\\) derivative \n\\[a_1 + 2 a_2 x^\\star = 0\\]\nequation, definition. says whatever \\(x^\\star\\) happens , quantity \\(a_1 + 2 a_2 x^\\star\\) must zero. Using plain old algebra, can find location critical point \\[x^\\star = -\\frac{a_1}{2 a_2}\\]’re proud pet dog, Swimmer. often go beach walk along water’s edge. throw ball beach, angle lands water. Swimmer goes work. runs beach (fast) plunges water, heading toward ball. can run fast beach: 400 m/minute. swims rather slower: 50 m/min.Suppose threw ball point 50 meters beach 10 meters water. overall distance ball therefore \\(\\sqrt{50^2 + 10^2} = 51\\) meters. Swimmer entered water immediately, take minute reach ball (51 m / 50 m/min). Swimmer can get ball faster running beach big turning water. Swimmer ran 50 meters beach turned swim 10 meters, take (50/400 + 10/50) minutes, one-third minute.Can Swimmer better? can set calculation like . Imagine \\(x\\) distance beach Swimmer runs. time run distance \\(x/400\\). distance remaining ball can found pythagorean theorem. One leg triangle length \\((50-x)\\), length 10 m. \\(x\\) 45, distance swim water \\(\\sqrt{(50-45)^2 + 10^2}\\). Divide distance 50 m/min get time spent water.Time_to_ball() takes one argument, distance \\(x\\) Swimmer runs beach turning water. Use SANDBOX find distance calculus-savvy Swimmer runs beach turning water, Swimmer’s goal get ball fast possible.Question ’s optimal running distance Swimmer?    47.25 ☹︎        47.5 ☹︎        48.25 ☹︎        48.75 ✓        49.25 ☹︎        49.75 ☹︎ ’re skeptical dog might calculus problem running fetch ball, consider path taken photon. “Fermat’s Principle” light takes path least time. illustrate, consider problem photon travelling point point B, diagram. shortest path two points straight line. Along straight-line path, time taken photon distance divided speed light.diagram shows another path consisting two segments, one length \\(l_1\\) \\(l_2\\). Obviously, two-segment path longer straight-line path. Fermat’s principle lead light “prefer” longer path time taken traverse shorter.reason indirect path might shorter speed light differs different physical media. Light traveling vacuum famously speed 300,000 km per second. air, speed smaller factor 1/1.003. water, speed smaller still: factor 1/1.3.Imagine blue zone diagram water clear zone air. time photon travel point B proportional \\(1.003\\ l_1 + 1.3\\ l_2\\).see path actually taken light, let’s imagine point \\((x=0, y=10)\\) point B \\((x=20, y=-10)\\), boundary water air \\(y=0\\). ’ll place point P \\((x, 0)\\). total time taken light traverse path 1.003 dist(P) + 1.3 dist(P B).Question formulas gives total time takes light traverse path P relative speed 1/1.003 path P B relative speed 1/1.3? located \\((0, 10)\\), B located \\((20,-10)\\), P located \\((x, 0)\\)\\(1.003 \\sqrt{(x-0)^2 +(0-10)^2}+ 1.3\\sqrt{(20-x)^2 + (-10 - 0)^2}\\) ✓ \\(\\sqrt{(x-0)^2 +(0-10)^2}/1.003+ \\sqrt{(20-x)^2 + (-10 - 0)^2}/1.3\\) ☹︎ ’s true divide distance speed get time, relative speeds \\(1/1.003\\) \\(1/1.3\\). \\(1.003 \\sqrt{(x-10)^2 +(0-0)^2}+ 1.3\\sqrt{(-10 -x)^2 + (50 - 0)^2}\\) ☹︎ mixes x y coordinates. distance P \\(\\sqrt{(x_P - x_A)^2 + (y_P - y_A)^2}\\). problem, point P \\((50-x, 0)\\). Implement calculation total_time() R, use graph find argmin.Question B ) value \\(x\\) (, argmin) minimizes travel time light points B? (Choose best answer)10.52 ☹︎ 11.02 ☹︎ 11.19 ☹︎ 11.61 ☹︎ 12.07 ☹︎ 12.22 ☹︎ 12.46 ☹︎ 12.50 ✓ 12.95 ☹︎ 13.19 ☹︎ 13.21 ☹︎ 13.34 ☹︎ 13.92 ☹︎ 14.03 ☹︎ 14.14 ☹︎ 14.16 ☹︎ 14.44 ☹︎ 14.5 ☹︎ 14.94 ☹︎ Question C ii) Suppose instead water, blue area glass. speed light glass roughly 1/1.5 times big vacuum. value \\(x\\) minimizes travel time light points B? (Choose best answer)10.13 ☹︎ 11.07 ☹︎ 11.13 ☹︎ 11.5 ☹︎ 11.57 ☹︎ 12 ☹︎ 12.38 ☹︎ 12.62 ☹︎ 12.87 ☹︎ 12.88 ☹︎ 12.95 ☹︎ 13.16 ☹︎ 13.4 ☹︎ 13.60 ✓ 13.71 ☹︎ 13.85 ☹︎ 14.18 ☹︎ 14.25 ☹︎ 14.34 ☹︎ 14.7 ☹︎ \nTurn problem algebra.Later accumulation, figure mile-markers road.tradition mathematics education using geometrical, distance-related problems illustrate optimization. happens, problems can provide valuable insight physical situations.Suppose function \\(f(x)\\) whose graph represents path road jungle. lion coordinates \\((3, 2)\\) jungle. point travel along road closest lion.trick see position road value \\(x\\) \\((x, f(x))\\). distance lion function \\(x\\) \\[ \\text{lion_dist}(x) \\equiv \\sqrt{(x - 3)^2 + (f(x)-2)^2} .\\]road lion graphed sandbox road \\(f(x) \\equiv x^2 e^{-x}\\). can see road comes closest lion roughly \\(x=3\\). implement \\(\\text{lion_dist}(x)\\) function, ’ll able find argmin, , value input \\(x\\) output \\(\\text{lion_dist}(x)\\) minimal. value function \\(\\text{lion_dist}(x)\\) argmin min function.find argmin distance lion precisely, implement \\(\\text{lion_dist}(x)\\) function sandbox. Plot look minimum. Alternatively, find \\(\\partial_x \\text{lion_dist}(x)\\) find \\(x\\) zero crossing.Question Using sandbox , find argmin graph function \\(g(x) \\equiv x^2 \\exp(-x)\\) comes closest point \\((3, 2)\\)? (Choose best answer.)2.03 ☹︎ 2.07 ☹︎ 2.21 ☹︎ 2.27 ☹︎ 2.28 ☹︎ 2.33 ☹︎ 2.37 ☹︎ 2.39 ☹︎ 2.43 ☹︎ 2.48 ☹︎ 2.58 ☹︎ 2.71 ☹︎ 2.80 ✓ 2.94 ☹︎ previous problem, used graphics find argmin function. can, course, successively reset domain graphing window zoom location argmin.find argmin numerically, start (pretty good) guess argmin. Recall function (total_time()) can modeled low-order polynomial. function extreme point polynomial include quadratic term. Suppose guessed \\(x=10\\) good starting guess argmin air--water problem. can compute first second derivatives total_time(x) respect x evaluate derivative functions \\(x=10\\). (Use D() function construct derivatives.) sandbox, use value two derivatives \\(x=10\\) guess find approximation minimum function.help remind , quadratic approximation function \\(t(x)\\) around reference point \\(x_0\\) : \\[q(x) \\equiv t(x_0) + \\partial_x t(x_0) [x - x_0] + \\frac{1}{2} \\partial_{xx} t(x_0) [x - x_0]^2\\]\nFind derivative \\(\\partial_x q(x)\\) set equal zero. Inserting appropriate values \\(x_0\\), \\(\\partial_x t(x_0)\\), \\(\\partial_{xx} t(x_0)\\) enable calculate value \\(x\\) minimum approximating quadratic.Question iii) Letting blue area water (1/1.3 speed factor) starting guess \\(x_0=10\\), find \\(x\\) minimizes approximating quadratic.9.912 ☹︎ 10.748 ☹︎ 11.017 ☹︎ 11.151 ☹︎ 11.267 ☹︎ 11.327 ☹︎ 11.515 ☹︎ 11.713 ☹︎ 11.81 ☹︎ 12.074 ☹︎ 12.276 ☹︎ 12.321 ☹︎ 12.438 ☹︎ 12.461 ☹︎ 12.579 ✓ 12.618 ☹︎ 12.637 ☹︎ 12.993 ☹︎ 13.261 ☹︎ 13.36 ☹︎ 13.527 ☹︎ 13.888 ☹︎ Question B iv) Using correct answer (iii) new \\(x_0\\), find value \\(x\\) minimizes new approximating quadratic.9.912 ☹︎ 10.748 ☹︎ 11.017 ☹︎ 11.151 ☹︎ 11.267 ☹︎ 11.327 ☹︎ 11.515 ☹︎ 11.713 ☹︎ 11.81 ☹︎ 12.074 ☹︎ 12.276 ☹︎ 12.321 ☹︎ 12.438 ☹︎ 12.461 ✓ 12.579 ☹︎ 12.618 ☹︎ 12.637 ☹︎ 12.993 ☹︎ 13.261 ☹︎ 13.36 ☹︎ 13.527 ☹︎ 13.888 ☹︎ ","code":"## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\n\n## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\n\n## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\n\n## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\ndistance_in_water <- makeFun( your_pythagorus_calculation ~ x)\ntime_to_ball <- makeFun(x/400 + distance_in_water/50 ~ x)## Warning in normalizePath(\"www/1200px-Fermat_Snellius.svg.png\"): path[1]=\"www/\n## 1200px-Fermat_Snellius.svg.png\": No such file or directory\ntotal_time <- makeFun( your_formula ~ x)\nslice_plot(total_time(x) ~ x, domain(x=c(0, 20)))\n\n# For the next problem\ndx_time  <- D(total_time(x) ~ x)\ndxx_time <- D(total_time(x) ~ x + x)\nslice_plot(x^2 * exp(-x) ~ x, domain(x=c(0,5))) %>%\n  gf_label(2 ~ 3, label=\"lion\") %>%\n  gf_refine(coord_fixed())"},{"path":"optim-and-shape.html","id":"tree-harvesting","chapter":"23 Optimization","heading":"23.4 Tree harvesting","text":"uncle Bob writing business plan tree farm lumber. heard taking Math 141Z, emails giving information asking numbers. particular, Bob sends report saying , species tree plans plant, amount usable lumber function growth time \\(t\\) looking like function defined sandbox:Bob heard time harvest tree growing fastest.Question C ) value t (years) \\(\\partial_t\\) lumber(t) largest?    15 ☹︎        16 ☹︎        17 ☹︎        18 ☹︎        19 ☹︎        20 ☹︎        21 ☹︎        22 ☹︎        23 ☹︎        24 ☹︎        25 ✓        26 ☹︎        27 ☹︎        28 ☹︎        29 ☹︎        30 ☹︎ patiently explain uncle certainly want harvest trees growing fastest. say, “want wait average growth rate point fastest. little tree reaches adult volume.”Question D B) value t (years) average growth rate, time, fastest.Figure 1 shows lens together source target point. Light passing lens refracted. path followed light one shortest time transit source target.light enters lens point \\(P_{} = (x_{}\\ , \\ -\\mbox{Lens}(x_{}))\\) leaves \\(P_{} = (x_{}\\ ,\\  \\mbox{Lens}(x_{}))\\). don’t know either \\(x_{}\\) \\(x_{}\\). can find optimization., find distance source \\(P_{}\\), \\(P_{}\\) target. two legs route air, time transit leg proportional refractive index 1.03 times distance.course, light also travel lens. ’ll make lens glass high refractive index, transit time distance \\(P_{}\\) \\(P_{}\\) multiplied lens’s refractive index 1.8.objective function sum three legs’ transit times. ’s already programmed sandbox. command make contour plot output objective function domain \\(x_{}\\) \\(x_{}\\). Finally, last line sandbox draws picture lens light path, insert argmins \\(x_{}\\) \\(x_{}\\) pick contour plot objective function. (\\(x_{}\\) \\(x_{}\\) shown initial code sandbox right!)Question index refraction lens 1.80, optimal values \\(x_{}\\) \\(x_{}\\)? (Choose best answer.)\\(x_{} = -22, \\ x_{} = -21\\) ✓ \\(x_{} = -26, \\ x_{} = -20\\) ☹︎ \\(x_{} = -24, \\ x_{} = -21\\) ☹︎ \\(x_{} = -18, \\ x_{} = -17\\) ☹︎ \\(x_{} = -25, \\ x_{} = -20\\) ☹︎ ’s good practice test software situations know right answer. simple situation lens . One way change middle line transit_time() index refraction 1.03, just like surrounding air.Question B index refraction lens 1.03, optimal values \\(x_{}\\) \\(x_{}\\)? (Choose best answer.)\\(x_{} = -17, \\ x_{} = -15\\) ✓ \\(x_{} = -18, \\ x_{} = -14\\) ☹︎ \\(x_{} = -16, \\ x_{} = -16\\) ☹︎ \\(x_{} = -18, \\ x_{} = -18\\) ☹︎ \\(x_{} = -17, \\ x_{} = -18\\) ☹︎ Let’s explore extreme situation. Diamond transparent material highest index refraction, 2.417. Imagine material index refraction 10. means light travel slowly within lens.Exercises involving computing derivativesIn previous discussion, used phrases “every function derivative,” “function can approximated” second-order polynomial. practical purposes, true. next chapter, however, ’ll set mathematical conditions “every” “” let us see can exception.[Deriv-10a] Understand distinguish max (min) argmax (argmin)[Deriv-10b] Visually identify max (min) argmax (argmin) graphs functions one two variables.[Deriv-10c] Find max min quadratic function using calculus algebra[Deriv-11a] Convert word problem Objective function constraint.[Deriv-11b] Convert multivariate objective function univariate objective function using constraint","code":"\nlumber <- makeFun(ifelse(t<10, 0, 100*exp((t-25)/8)/(1 + exp((t-25)/8))) ~ t)\ndt_lumber <- D(lumber(t) ~ t)\nave_growth_rate <- makeFun( your_expression_here ~ t)\nslice_plot(lumber(t) ~ t, domain(t=c(0,100)))\n# Describe the shape of the lens\nLens_top <- makeFun(-90 + sqrt(100^2 - x^2)  ~ x)\nLens_bottom <- makeFun(-Lens_top(x) ~ x)\n\n# Define the objective function\ntransit_time <- makeFun(\n  1.03 * sqrt((x_in - -20)^2 + (Lens_bottom(x_in)- (-30))^2) +\n  1.80 * sqrt((x_out-x_in)^2 + (Lens_top(x_out) - Lens_bottom(x_in))^2) + \n  1.03 * sqrt((x_out - -10)^2 + (Lens_top(x_out)-50)^2) ~\n    x_in + x_out)\n# Graph the objective function\ncontour_plot(transit_time(x_in, x_out) ~ x_in + x_out, \n             domain(x_in = c(-40,40), x_out = c(-40,40)), npts=200)\n# Insert argmax from contour plot\nplot_lens(10, -5, Lens_top, Lens_bottom)"},{"path":"partial-change.html","id":"partial-change","chapter":"24 Partial change","heading":"24 Partial change","text":"good time point something along, likely persistent component mathematics education may realized construction.two ways represent functions:computational algorithm generating output input(s), typically involving arithmetic .geometrical entity, specifically graph function can curve , functions two inputs, surface.two modes sometimes intertwained, use name “line” refer computational object: \\(\\line(x) \\equiv x + b\\).Unfortunately functions two inputs, surface hard present formats easily hand: piece paper, printed page, computer screen. ’s curved surface naturally 3-dimensional object, paper screens provide two-dimensional images. Consequently, graphics mode prefer presenting functions two variables contour plot, single geometrical object set many objects: contours, labels, colored tiles.’ve calculus functions one variable easy exploit computational mode graphical mode. might fairly taken basic organizing theme calculus thata line segment can good approximation curve choose make .figuring derivative function \\(\\partial_x f(x)\\) graph \\(f(x)\\), find tangent graph many input values, record slope line (throw away intercept) write series slopes function input, typically representing slope position along vertical axis corresponding input position along horizontal axis. Figure 24.1 shows process.\nFigure 24.1: slope function \\(f(x)\\) given input becomes value derivative input.\nConsider top panel (). input \\(x=0\\)—point labeled “L”—value function \\(f(0) \\approx 25\\). practically value “K.” slope short line segment labeled “L” \\(\\partial_x f(0) = -3.4\\) Now look input bottom panel (B). shows \\(\\partial_x f(x)\\) vertical axis. slope \\(f()\\) \\(x=0\\) negative, even though \\(f(0)\\approx 25\\).graph \\(\\partial_x f()\\), position “L” negative territory. ’s quite different position neighbor “K.”","code":""},{"path":"partial-change.html","id":"calculus-on-two-inputs","chapter":"24 Partial change","heading":"24.1 Calculus on two inputs","text":"think derivatives functions two inputs, need way approximate surface point small linear form tangent surface point.applet written Alfredo Sánchez Alberca lets visualize tangent plane surface. (Instructions: Check “tangent plane” rotate view. Move (x,y) coordinate point see tangent plane differs place place.)tangent plane infinite extent. Let’s use word facet refer little patch tangent plane centered point contact. facet flat. (’s part plane!) Figure 24.2 shows facets tangent curved surface. two oriented way.\nFigure 24.2: melon model curved surface graph function two inputs. tangent facet orientation. (Disregard slight curvature small pieces paper. Summer humidity interfered attempt model flat facet piece Post-paper!\nBetter picture summer melon, pick hardcover book place curved surface ’s convex facing away cover. cover match orientation surface point tangency. Change orientation cover find point tangency change correspondingly.purposes computation eye, contour graph surface can easier deal . Figure 24.3 shows contour graph smoothly varying function. Three points labeled , B, C.\nFigure 24.3: function 2 inputs 3 specific inputs marked , B, C\nZooming marked points presents simpler picture , although one different point. zoomed-plot contains almost parallel, almost evenly spaced contours. surface exactly planar zoomed-domain, contours exactly parallel exactly evenly spaced.\nFigure 24.4: Zooming neighborhoods , B, C Figure 24.3 shows simple, almost planar, local landscape.\nJust function \\(\\line(x) \\equiv x + b\\) describes straight line, function \\(\\text{plane}(x, y) \\equiv + b x + c y\\) describes plane whose orientation specified value parameters \\(b\\) \\(c\\).Figure 24.5, facets tangent original surface , B, C displayed. Comparing Figures 24.4 24.5 can see facet orientation surface; contours face way.\nFigure 24.5: facets around points linear functions, aligned contours near point Figure 24.3\nRemember point constructing facets generalize idea derivative function one input \\(f(x)\\) functions two inputs \\(g(x,y)\\). Just derivative \\(\\partial_x f(x_0)\\) reflects slope line tangent graph \\(f(x)\\) \\(x=x_0\\), plan “derivative” \\(g(x_0,y_0)\\) represent orientation facet tangent graph \\(g(x,y)\\) \\((x=x_0, y=y_0)\\). question us now information needed specify orientation.One clue comes formula function whose graph plane oriented particular direction:\\[\\text{plane}(x,y) \\equiv + b x + cy\\]explore roles parameters \\(b\\) \\(c\\) setting orientation line, open SANDBOX. scaffolding code generates particular instance \\(\\text{plane}(x,y)\\) plots two ways: contour plot surface plot. Change numerical values \\(b\\) \\(c\\) observe orientation planar surface changes graphs. can also see value \\(\\) irrelevant orientation plane, just intercept straight-line graph irrelevant slope line.\nalways can difficult extract quantitative information surface plot. example , can see high-point surface \\(x\\) negative \\(y\\) positive. Compare contour plot verify two modes displaying surface.(Note: gf_refine(coord_fixed()) part contour-plot command makes numerical intervals horizontal vertical axes length.)instructive experience pick rigid, flat object, instance smartphone hardcover book. Hold object level pinched fingers mid-point short ends, shown Figure 24.6 (left).\nFigure 24.6: Combining two simple movements can tip plane sorts different orientations.\ncan tip object one direction raising lowering one hand. (middle picture) can tip object coordinate direction rotating object around line joining points grasped left right hands. (right picture) combining two motions, can orient surface object wide range directions.purpose lesson show two-numbers sufficient dictate orientation plane: amount one hand raised relative angle rotation around hand--hand axis.Similarly, formula plane, orientation set two numbers, \\(b\\) \\(c\\) \\(\\text{plane}(x, y) \\equiv + b x + c y\\).find right \\(b\\) \\(c\\) tangent facet function \\(g(x,y)\\) specific input \\((x_0, y_0)\\)? Taking slices \\(g(x,y)\\) provides answer. particular, two slices:\n\\(\\text{slice}_1(x) \\equiv g(x, y_0) = + b\\, x + c\\, y_0 \\ \\ \\text{}\\ \\ \\text{slice}_2(y) \\equiv g(x_0, y) = + b x_0 + c y\\)Look carefully formulas slices. \\(\\text{slice}_1(x)\\), value \\(y\\) held constant \\(y=y_0\\). Similarly, \\(\\text{slice}_2(y)\\) value \\(x\\) held constant \\(x=x_0\\).parameters \\(b\\) \\(c\\) can read derivatives respective slices:\\[b = \\partial_x \\text{slice}_1(x)\\left.\\strut\\right|_{x=x_0} \\ \\ \\text{}\\ \\ c=\\partial_y \\text{slice}_2(y)\\left.\\strut\\right|_{y=y_0}\\]\nderivatives slice functions called partial derivatives. word “partial” refers examining just one input time. , ’re evaluating partial derivative functions specific inputs, \\(x=x_0\\) \\(y=y_0\\).don’t need create slices explicitly order calculate partial derivatives.\nSimply differentiate \\(g(x, y)\\) respect \\(x\\) order get parameter \\(b\\) differentiate \\(g(x, y)\\) respect \\(y\\) get parameter \\(c\\). demonstrate, ’ll make use sum rule:\n\\[\\partial_x g(x, y) = \\underbrace{\\partial_x }_{=0} + \\underbrace{\\partial_x b x}_{=b} + \\underbrace{\\partial_x cy}_{=0} = b\\]\nSimilarly, \\[\\partial_y g(x, y) = \\underbrace{\\partial_y }_{=0} + \\underbrace{\\partial_y b x}_{=0} + \\underbrace{\\partial_y cy}_{=c} = c\\]Get habit noticing subscript differentiation symbol \\(\\partial\\). taking, instance, \\(\\partial_y f(x,y,z, \\ldots)\\), variables \\(y\\) held constant. examples:\\[\\partial_y 3 x^2 = 0\\ \\ \\text{}\\ \\ \\ \n\\partial_x 3 x^2 = 6x\\\\\n\\ \\\\\n\\partial_y 2 x^2 y = 2x^2\\ \\ \\text{}\\ \\ \\\n\\partial_x 2 x^2 y = 4 x y\n\\]","code":"\nplane <- makeFun(a + b*x + c*y ~ x + y, a = 1, b = -2.5, c = 1.6)\ninteractive_plot(plane(x, y) ~ x + y, domain(x=c(-2, 2), y=c(-2, 2)))\ncontour_plot(plane(x, y) ~ x + y, domain(x=c(-2, 2), y=c(-2, 2))) %>%\n  gf_refine(coord_fixed())"},{"path":"partial-change.html","id":"all-other-things-being-equal","chapter":"24 Partial change","heading":"24.2 All other things being equal …","text":"Recall derivative function one variable, say, \\(\\partial_x f(x)\\) tells , possible value input \\(x\\), much output change proportional small change value input. exactly first-order polynomial approximation (, linear approximation), saying: small \\(dx\\), \\[f(x+dx) = f(x) + \\partial_x f(x) \\times dx\\]\nlogic applies functions two inputs:\n\\[g(x + \\color{blue}{dx}, y) = g(x,y) + \\color{blue}{\\partial_x} g(x,y) \\times \\color{blue}{dx}\\\\\n\\text{} \\\\\ng(x, y+\\color{red}{dy}) = g(x,y) + \\color{red}{\\partial_y} g(x,y) \\times \\color{red}{dy}\\]statements changing one input holding input(s) constant. , familiar expression goes, \"effect changing one input things equal.[Deriv-4a] Understand many different slopes point non-constant function 2 variables.[Deriv-4b] Calculate partial derivatives contour plot[Deriv-4c] Understand “partial derivative” “changing one input holding constant inputs.”[Deriv-8b] Calculate partial derivatives “changing one input holding constant inputs.”[Deriv-4d] Know three properties gradient vectorsEverything ’ve said differentiation rules applies just functions one input, \\(f(x)\\), functions two inputs, \\(g(x,y)\\), \\(h(x,y,z)\\) . chapter, ’ll consider interpretation applications derivatives functions multiple inputs.","code":""},{"path":"partial-change.html","id":"gradient-vector","chapter":"24 Partial change","heading":"24.3 Gradient vector","text":"functions two inputs, two partial derivatives. functions three inputs, three partial derivatives. can, course, collect partial derivatives coordinate form. collection called gradient vector.Just notation differences (\\(\\cal D\\)) derivatives (\\(\\partial\\)) involves unusual typography letter “D,” notation gradient involves unusual typography although time \\(\\Delta\\), Greek version “D.” gradient symbol, turn \\(\\Delta\\) head: \\(\\nabla\\). ,\n\\[\\nabla g(x,y) \\equiv \\left(\\stackrel\\strut\\strut\\delta_x g(x,y), \\ \\ \\delta_y g(x,y)\\right)\\]Note \\(\\nabla g(x,y)\\) function \\(x\\) \\(y\\), general gradient vector differs place place function’s domain.graphics convention drawing gradient vector particular input, , \\(\\nabla g(x_0, y_0)\\), puts arrow root \\((x_0, y_0)\\), pointing direction \\(\\nabla g(x_0, y_0)\\), Figure 24.7.\nFigure 24.7: gradient vector \\(\\nabla g(x=1,y=2)\\). vector points steepest uphill direction. Consequently, perpendicular contour passing ’s root.\ngradient field (see Figure 24.8) value gradient vector point function’s domain. Graphically, order prevent -crowding, vectors drawn discrete points. lengths drawn vectors set proportional numerical length \\(\\nabla g(x, y)\\), short vector means surface relatively level, long vector means surface relatively steep.\nFigure 24.8: plot gradient field \\(\\nabla g(x,y)\\).\nSince gradient vector points uphill, start point follow vectors go, get local maximum!Open sandbox use following commands make “surface plot” contour plot function \\(g(x)\\) centered reference point \\((x_0\\!=\\!0,\\, y_0\\!=\\!0)\\).Rotate graphic around feel comfortable controls.making size smaller, can zoom around reference point. Zoom gradually (say, size = 1.0, 0.5, 0.1, 0.05, 0.01) reach point surface plot (practically) pretty simple inclined plane.either surface plot contour plot, zoomed graph shows inclined plane, figure sign \\(\\partial_x g(0,0)\\) \\(\\partial_y g(0,0)\\).Question answer best describes signs partial derivatives \\(g(x,y)\\) reference point \\((x_0=0, y_0=0)\\)?\\(\\partial_x g(0,0)\\) pos, \\(\\partial_y g(0,0)\\) pos  ☹︎ \\(\\partial_x g(0,0)\\) pos, \\(\\partial_y g(0,0)\\) neg  ☹︎ \\(\\partial_x g(0,0)\\) neg, \\(\\partial_y g(0,0)\\) neg  ☹︎ \\(\\partial_x g(0,0)\\) neg, \\(\\partial_y g(0,0)\\) pos. ✓ \\(\\partial_x g(0,0)\\) 0, \\(\\partial_y g(0,0)\\) pos ☹︎ Consider close function around reference point center graph.eye, estimate derivatives function reference point \\((x_0=-2, y_0=-5)\\).Question numerical value \\(\\partial_x g(x,y)\\) reference point?    -1 ☹︎        -0.50 ☹︎        -0.25 ☹︎        0 ☹︎        0.25 ☹︎        0.50 ✓        1 ☹︎ Question B numerical value \\(\\partial_y g(x,y)\\) reference point?    -1 ☹︎        -0.50 ☹︎        -0.25 ☹︎        0 ☹︎        0.25 ☹︎        0.50 ☹︎        1 ✓ next questions ask second-order partial derivatives. know, second derivative first derivative changes x y. Insofar function simple inclined plane, contours straight, parallel, evenly spaced, second derivatives zero. can see plane: contours curve bit.determining second derivatives eye graph, encouraged compare first derivatives opposing edges graph, opposed nearby points.Question C sign \\(\\partial_{xx} g(x,y)\\) reference point?    negative ✓        positive ☹︎ Question D sign \\(\\partial_{yy} g(x,y)\\) reference point?    negative ☹︎        positive ✓ Question E sign \\(\\partial_{xy} g(x,y)\\) reference point?    negative ☹︎        positive ✓ Question F sign \\(\\partial_{yx} g(x,y)\\) reference point?numerous occasions professional life, one positions:decision-maker presented results analysis conducted team unknown reliability, need figure whether telling credible.member analysis team needing demonstrate decision-maker work believed.example, consider one functions presented comedy book, Geek Logic: 50 Foolproof Equations Everyday Life (2006), Garth Sundem. particular function ’ll consider Dr(), intended help answer question, “go doctor?”\\[\\mbox{Dr}(d, c, p,  e,  n, s) = \\frac{\\frac{s^2}{2} + e(n-e)}{100 -  3(d + \\frac{p^3}{70} - c)}\\] \\(d\\) = many days past month incapacitated? \\(d_0 \\equiv 3\\)\\(c\\) = issue seem getting better worse. (-10 10 -10 “circling drain” 10 “dramatic improvement”) \\(c_0 \\equiv -2\\)\\(p\\) = much pain discomfort currently experiencing? (1-10 10 “currently holding detached toe Ziploc bag”) \\(p_0 = 3\\)\\(e\\) = embarrassing issue? (1-10 10 “slipped ice fell 1972 Mercedes-Benz hood ornament, now part body”) \\(e_0 = 4\\)\\(n\\) = noticeable issue? (1-10 10 “fell asleep waffle iron”) \\(n_0 = 5\\)\\(s\\) = serious issue seem? (1-10 10 “may well nail embedded frontal lobe [brain]”) \\(s_0 = 3\\)Although function offered tongue--cheek, let’s examine see even roughly matches common sense. tool use relates low-order polynomial approximation around reference point examining appropriate partial derivatives. save time, stipulate reference point , noted description variables .code creates R implementation function set default values variables given reference point. can use sandbox try different changes input quantities.According instructions book, Dr()\\(> 1\\), go doctor.Essay question tmp-34: 1) value Dr() reference point 0.10, indicating shouldn’t go doctor. don’t yet know whether 0.10 close decision threshold 1 far away. Describe reasonable way figure . Report description results .Essay question tmp-35: six inputs function. Go list six (without thinking hard ) write intuitive sense whether increase one point input raise lower output Dr() reference point. Also write whether think input large small determinant whether go doctor. (don’t need refer Dr() function , just intuitive sense effect inputs.)operator D() can calculate partial derivatives. can calculate value partial derivative easily reference point, using expression like , gives value partial Dr() respect input \\(s\\) reference point:’re now going use partial derivatives compare intuition going doctor function say. course, don’t know yet whether function reasonable, don’t disappointed intuition conflicts function.","code":"\ng <- rfun( ~ x + y, seed = 802, n = 15)\nx0 <-  0\ny0 <-  0\nsize <- 5\ninteractive_plot(g(x, y) ~ x + y,\n             domain(x = x0 + size*c(-1, 1),\n                    y = y0 + size*c(-1, 1)))\ncontour_plot(g(x, y) ~ x + y,\n             domain(x = x0 + size*c(-1, 1),\n                    y = y0 + size*c(-1, 1)))\nD(Dr(s = s) ~ s)()"},{"path":"partial-change.html","id":"gradient-vector-1","chapter":"24 Partial change","heading":"24.4 Gradient vector","text":"contour maps several functions input \\(x\\) \\(y\\). Underneath plots gradient field functions, order. job match contour plot gradient field.Question contour plot matches gradient field 1?    ☹︎        B ☹︎        C ☹︎        D ☹︎        E ☹︎        F ✓ Question B contour plot matches gradient field 2?    ✓        B ☹︎        C ☹︎        D ☹︎        E ☹︎        F ☹︎ \nQuestion C contour plot matches gradient field 3?    ☹︎        B ☹︎        C ☹︎        D ✓        E ☹︎        F ☹︎ \nQuestion D contour plot matches gradient field 4?    ☹︎        B ☹︎        C ✓        D ☹︎        E ☹︎        F ☹︎ \nQuestion E contour plot matches gradient field 5?    ☹︎        B ☹︎        C ☹︎        D ☹︎        E ✓        F ☹︎ \nQuestion F contour plot matches gradient field 6?Question ’s wrong gradient field 1?arrows point hill instead ☹︎ magnitude arrows wrong, direction right ✓ arrows don’t point right direction ☹︎ nothing wrong ☹︎ Question B ’s wrong gradient field 2?arrows point hill instead ✓ magnitude arrows wrong, direction right ☹︎ arrows don’t point right direction ☹︎ nothing wrong ☹︎ Question C ’s wrong gradient field 3?arrows point hill instead ☹︎ magnitude arrows wrong, direction right ☹︎ arrows don’t point right direction ☹︎ nothing wrong ✓ Question D ’s wrong gradient field 4?arrows point hill instead ☹︎ magnitude arrows wrong, direction right ☹︎ arrows don’t point right direction ✓ nothing wrong ☹︎ ’s relatively easy assess partial derivatives know gradient. , gradient vector \\((\\partial_x\\,f(x,y), \\partial_y f(x,y))\\). train eye, ’s contour plot corresponding gradient plot.Question rule determining \\(\\partial_x f(x,y)\\) direction gradient vector?vector component pointing right, \\(\\partial_x f\\) positive. ✓ vector component pointing left, \\(\\partial_x f\\) positive ☹︎ gradient points left, uphill left. function increasing right left. ’s negative partial derivative. vector vertical component pointing , \\(\\partial_x f\\) positive. ☹︎ true partial derivative respect \\(y\\), relevance partial respect \\(x\\). vector component pointing downward, partial derivative \\(\\partial_x f\\) positive. ☹︎ , partial respect \\(y\\) negative. Using gradient field depicted , figure sign partial derivatives labeled points. ’ll use “neg” refer negative partial derivatives, “pos” refer positive partial derivatives, “zero” refer partials small can’t visually distinguish zero.Question B \\(\\partial_y f\\) point ?    neg ✓        zero ☹︎        pos ☹︎ Question C \\(\\partial_x f\\) point ?    neg ☹︎        zero ☹︎        pos ✓ Question D \\(\\partial_x f\\) point B?    neg ☹︎        zero ☹︎        pos ✓ Question E \\(\\partial_x f\\) point C?    neg ☹︎        zero ✓        pos ☹︎ Question F \\(\\partial_y f\\) point E?    neg ☹︎        zero ☹︎        pos ✓ Question G \\(\\partial_x f\\) point E?    neg ✓        zero ☹︎        pos ☹︎ Question H letter partial respect \\(x\\) partial respect \\(y\\) negative.?contour plot marked several colored lines represent slices surface. job match slice plots presented .slice plots, input \\(t\\) reflects position slice. \\(t=0\\), position leftmost point slice, \\(t=1\\) position right terminus slice.Question color line corresponds slice 1?    black ☹︎        gray ☹︎        orange ☹︎        red ✓        yellow ☹︎ Question B color line corresponds slice 2?    black ☹︎        gray ✓        orange ☹︎        red ☹︎        yellow ☹︎ Question C color line corresponds slice 3?    black ✓        gray ☹︎        orange ☹︎        red ☹︎        yellow ☹︎ Question D color line corresponds slice 4?    black ☹︎        gray ☹︎        orange ☹︎        red ☹︎        yellow ✓ contour plot marked several colored lines represent slices surface. job match slice plots presented .slice plots, input \\(t\\) reflects position slice. \\(t=0\\), position leftmost point slice, \\(t=1\\) position right terminus slice.Question color line corresponds slice 1?    black ☹︎        gray ✓        orange ☹︎        red ☹︎        yellow ☹︎ Question B color line corresponds slice 2?    black ☹︎        gray ☹︎        orange ✓        red ☹︎        yellow ☹︎ Question C color line corresponds slice 3?    black ☹︎        gray ☹︎        orange ☹︎        red ☹︎        yellow ✓ Question D color line corresponds slice 4?almost everyone, house expensive buy cash, people need borrow money. usual form loan called “mortgage.” Mortgages extend many years involve paying fixed amount month. amount calculated , paying month duration mortgage, last payment completely repay amount borrowed plus accumulated interest.monthly mortgage payment dollars, \\(P\\), house function three variables, \\[P(, r, N)\\] \\(\\) amount borrowed dollars, \\(r\\) interest rate (per year), \\(N\\) number years mortgage paid .studio apartment selling $220,000. need borrow $184,000 make purchase.Question Suppose \\(P(184000,4,10) = 2180.16\\). tell financial terms?monthly cost borrowing $184,000 10 years 4% interest per year. ✓ monthly cost borrowing $184,000 4 years 10% interest per year. ☹︎ ’ve got order argument wrong. annual cost mortgage 4% interest 10 years. ☹︎ output function \\(P()\\) monthly mortgage payment. annual cost mortgage 10% interest 4 years ☹︎ output function \\(P()\\) monthly mortgage payment. Question B expect quantity \\(\\partial P / \\partial \\)?    ’s positive ✓ borrow money, holding mortgage duration interest rate constant, going pay month.        ’s zero ☹︎        ’s negative ☹︎ Question C expect quantity \\(\\partial P / \\partial N\\)?    ’s positive ☹︎        ’s zero ☹︎        ’s negative ✓ borrow amount money interest rate, years pay back, monthly payment smaller. Question D Suppose \\(\\partial P / \\partial r (184000,4,30) =\\) $145.64. financial significance number $145.65??interest rate \\(r\\) went 4 5, monthly payment increase $145.65. ☹︎ perfectly reasonable answer, … recall derivative gives rate increase output function input changes tiny amount. turns 1 percentage point increase interest rate large amount change. interest rate \\(r\\) went 4 4.001, monthly payment increase $145.65. ☹︎ indeed small change interest rate, value derivative rate increase, increase . interest rate \\(r\\) went 4 4.001, monthly payment increase $0.001 imes $145.65. ✓ might think nobody concerned small increase interest rate. knowing result small increase allows us calculate impact large increase process called integration. economic theory, quantity demand good decreasing function price good increasing function price competing good.classical example apple juice competes orange juice. demand orange juice units thousands liters orange juice. price units dollars per liter.’s graph input variables unlabeled.concept partial derivatives makes much easier think situation. two partial derivative functions relevant function graph. Well denote input variables apple orange, remember prices commodities dollars per liter.\\(\\partial_\\mbox{apple} \\mbox{demand}()\\) – demand changes apple-juice price goes , holding orange-juice price constant. (Another notation verbose perhaps easier read \\(\\frac{\\partial\\, \\mbox{demand}}{\\partial\\,\\mbox{apple}}\\))\\(\\partial_\\mbox{orange} \\mbox{demand}()\\) – demand changes orange-juice price goes , holding apple-juice price constant. (Another notation: \\(\\frac{\\partial\\, \\mbox{demand}}{\\partial\\,\\mbox{orange}}\\))Notice notation names output single input changed–inputs held constant.first paragraph problem gives economic theory amounts saying one partial derivatives positive negative.Question numbers labeling contours?Quantity orange juice. ✓ Price apple juice. ☹︎ prices apple juice orange juice inputs function. Input values displayed position axis. contour labels identify output value input corresponds point contour. Price orange juice. ☹︎ prices apple juice orange juice inputs function. Input values displayed position axis. contour labels identify output value input corresponds point contour. Quantity apple juice. ☹︎ reasonable answer, function output quantity orange juice. Question B proper translation notation \\(\\partial_\\mbox{apple}\\mbox{demand}()\\)?partial derivative orange-juice demand repect apple-juice price ✓ partial derivative apple-juice price repect demand orange juice ☹︎ Derivatives always respect input variable. Demand orange juice output variable. partial derivative apple-juice demand *respect price apple juice ☹︎ problem orange-juice demand, apple-juice demand. partial derivative orange-juice price respect apple-juice price. ☹︎ input variables demand function. partial derivative always change output one inputs changes, change one input another input changes. Question C According economic theory described , one partial derivatives positive negative. positive.\\(\\partial_\\mbox{apple} \\mbox{demand}()\\) ✓ \\(\\partial_\\mbox{orange} \\mbox{demand}()\\) ☹︎ orange juice prices went , drink orange juice? Question D vertical axis measure?Price orange juice ✓ Quantity apple juice ☹︎ Quantity orange juice ☹︎ Price apple juice ☹︎ Question E Consider magnitude (absolute value) partial derivative demand respect orange-juice price. magnitude greater toward top graph bottom?    top ✓        bottom ☹︎ horizontal distance contour lines larger bottom graph top. Far-apart contours mean function flatter.        neither ☹︎ Remember, ’re talking partial derivative respect orange juice price. corresponds slope moving horizontal direction. contour plot function \\(g(y, z)\\) overlaid vectors. black vector correct representation gradient (root vector). vectors also supposed represent gradient, might something wrong (might ). ’re job say ’s wrong vectors.Question ’s wrong red vector?nothing ☹︎ long ✓ red vector located place function almost level. can tell contour lines spaced far apart. magnitude gradient small area. , red vector even longer black vector, even though black steep area (closely spaced contours). short ☹︎ points downhill ☹︎ points uphill ☹︎ Pointing uphill gradient vectors ! problem . wrong direction entirely ☹︎ Question B ’s wrong green vector?nothing ☹︎ long ☹︎ Note vector reflects steepness point root vector drawn. root green vector area contour lines spaced similarly area near root black vector. ’s correct length green vector similar length black vector. short ☹︎ points downhill ✓ root green vector near contour=4, head contour=2. vector incorrectly pointing downhill. Gradients point steepest direction uphill. points uphill ☹︎ Pointing uphill gradient vectors ! problem . wrong direction entirely ☹︎ Question C ’s wrong blue vector?nothing ✓ long ☹︎ short ☹︎ blue vector flat area function. ’s ’s short. points downhill ☹︎ points uphill ☹︎ Pointing uphill gradient vectors ! problem . wrong direction entirely ☹︎ Question D ’s wrong orange vector?nothing ☹︎ long ☹︎ short ☹︎ points downhill ☹︎ points uphill ☹︎ wrong direction entirely ✓ Gradient vectors perpendicular nearby contours point uphill. orange vector neither Question E ’s wrong gray vector?nothing ☹︎ long ☹︎ short ✓ function practically steep root gray vector root black vector. (can tell spacing contour lines.) magnitude gray vector just magnitude black vector. points downhill ☹︎ points uphill ☹︎ ","code":""},{"path":"local-approximations.html","id":"local-approximations","chapter":"25 Local approximations","heading":"25 Local approximations","text":"focused book small set basic modeling functions three operations assembling new functions old ones: linear combination, multiplication, composition. domain whole number line, positive half number line, perhaps whole number line leaving zero isolated point. Consider domains global.also discussed components piecewise functions. component function defined limited domain, interval \\(\\leq x \\leq b\\). contrast global domains, ’ll call limited domains local.chapter, ’ll explore simple surprisingly powerful method approximate function locally, , small domain.want approximate function? just use function ?’s often case—fields, usually case—don’t functional form relationship. Instead know relationship data. ’s possible deep introspection colleague construct theory relationship points one basic modeling functions combination . Suppose ? anyone else theory mind approximate function locally using methods chapter.utility methods can skip theoretical relationship apply methods directly data. skip--theory approach ubiquitous fields.information relationship often takes form data table. row shows records one trial values inputs measured corresponding output value recorded. ’ll discuss methods constructing functions match data Block 4 course.Another common form information relationship derivatives. , know something derivative relationship even though don’t (yet) form function describing relationship. example, think building model sustainable speed bicycle function gear selected grade road—.Consider three questions experienced bicyclist can likely answer:given grade road, optimal gear highest sustained speed? (mind particular rider, perhaps .)Imagine grade road described positive number uphill negative number downhill: , slope road. positive (uphill) grade fixed gear, bike’s sustained speed higher lower function grade? (’s much downhill biking, keep mind shallow downhill higher numerical slope steep downhill. , derivative hill near zero shallow grade far zero (, negative) steep downhill grade.Assuming answered “yes” question (1): optimal gear choice depend grade road? (concrete terms, choose different gears uphill climb level road downhill stretch?)Using methods chapter, answers three questions let choose appropriate form speed(gear, grade) function. , using methods Block 3, can make measurements given rider construct model customized rider.Note three questions derivatives. “optimal gear” gear \\(\\partial_\\text{gear} \\text{speed}(\\text{gear}, \\text{grade}) = 0\\). ride slower higher numerical value slope means \\(\\partial_\\text{grade} \\text{speed}(\\text{gear}, \\text{grade}) < 0\\). know \\(\\partial_\\text{gear} \\text{speed}(\\text{gear}, \\text{grade})\\) depends grade; ’s ’s different optimal gear grade.","code":""},{"path":"local-approximations.html","id":"eight-simple-shapes","chapter":"25 Local approximations","heading":"25.1 Eight simple shapes","text":"many modeling situations single input, can get close good modeling function \\(f(x)\\) selecting one eight simple shapes. ’ve sketched annotated properties examples function forms shape.Straight-line functionsshallow steepsteep shallowlocal extremum\\(\\hump(x)\\) \\(-\\hump(x)\\)choose among shapes, consider modeling context:relationship positive (slopes ) negative (slopes )relationship monotonic notis relationship concave , concave , neitherFor instance, micro-economic theory production functions describe much good produced given price, demand functions describe much good purchased function price.rule, production increases price demand decreases price. short term, production functions tend concave , since ’s hard squeeze increased production existing facilities. long term, production functions can concave new businesses established meet demand.demand short term, functions concave group consumers choice buy product. example consumption gasoline versus price: ’s hard short term find another way get work. long term, consumption functions can concave consumers find alternatives high-priced good. example, high prices gasoline may, long term, prompt switch efficient cars, hybrids, electric vehicles. push demand steeply.Cooling water radio-activity functions time concave steep--shallow. incidence --control epidemic versus time concave , shallow--steep. epidemic brought control, decline steep--shallow concave . whole course epidemic, maximum incidence. experience shows epidemics can phase incidence reaches local minimum: decline people practice social distancing followed increase people become complacent.many minutes can run function speed? Concave shallow--steep; wear faster run high speed. far can walk function time? Steep--shallow concave ; ’re pace slows get tired? much fuel consumed aircraft function distance? long flights function concave shallow--steep; fuel use increases distance, amount fuel carry also increases distance heavy aircraft use fuel per mile. stew taste function saltiness. taste improves amount salt increases … point ’s downhill.examples scenarios modeler knows derivative concavity relationship modeled. ’s often case knowledge system comes form.see, often multiple basic modeling functions can used construct model follows appropriate slope curvature pattern. can simplify choice well algebra involved building model.","code":""},{"path":"local-approximations.html","id":"low-order-polynomial","chapter":"25 Local approximations","heading":"25.2 Low-order polynomial","text":"function form can take eight forms, second-order polynomial \\(g(x)\\) \n\\[g(x) \\equiv + b x + c x^2\\]\nknow, graph \\(g(x)\\) parabola.parabola opens upward \\(0 < c\\). ’s shape local minimum.parabola opens downward \\(c < 0\\). ’s shape local maximumConsider happens \\(c = 0\\). function becomes simply \\(+ bx\\), straight-line function.\\(0 < b\\) line slopes upward.\\(b < 0\\) line slopes downward.form \\(+ bx + cx^2\\) easily capable representing four eight simple shapes. four? can see done looking graphs parabolas \\(0 < c\\) \\(c < 0\\), Figure ??.\nFigure 25.1: Four eight simple shapes correspond sides parabola.\n\nFigure 25.2: Four eight simple shapes correspond sides parabola.\n","code":""},{"path":"local-approximations.html","id":"the-low-order-polynomial-with-two-inputs","chapter":"25 Local approximations","heading":"25.3 The low-order polynomial with two inputs","text":"functions two inputs, low-order polynomial approximation looks like :\\[g(x, y) \\equiv a_0 + a_x x + a_y y + a_{xy} x y + a_{yy} y^2 + a_{xx} x^2\\]\nreading form, note system used name polynomial’s coefficients. First, ’ve used \\(\\) root name coefficients. Sometimes might want compare two low-order polynomials, ’s convenient able use \\(\\) one, \\(b\\) another, .subscripts coefficients describes exactly term polynomial involves coefficient. instance, \\(a_{yy}\\) coefficient applies \\(y^2\\) term, \\(a_x\\) applies \\(x\\) term.\\(a_0, a_x,\\) \\(a_y,\\) \\(a_{xy}, a_{yy}\\), \\(a_{xx}\\) , final model, constant quantity. Don’t confused use \\(x\\) \\(y\\) name coefficient function inputs. ’s always constant, may know exactly value constant later process modeling setting interest.helps different names various terms. ’s bad say something like, “\\(a_{xy}\\) term.” (Pronounciation: “sub x y”) proper names : linear terms, quadratic terms, interaction term. (shout \\(a_0\\), constant term.)\\[g(x, y) \\equiv a_0 + \\underbrace{a_x x + a_y y}_\\text{linear terms} \\ \\ \\ + \n\\underbrace{a_{xy} x y}_\\text{interaction term} +\\ \\ \\  \\underbrace{a_{yy} y^2 + a_{xx} x^2}_\\text{quadratic terms}\\]\nFigure 25.3: saddle\n\nFigure 25.3: saddle\n","code":"show_poly2(111)\nshow_poly2(112)\nshow_poly2(113)\nshow_poly2(115)\nshow_poly2(116)\nshow_poly2(120)\nshow_poly2(121)"},{"path":"local-approximations.html","id":"derivatives-of-polynomials","chapter":"25 Local approximations","heading":"25.4 Derivatives of polynomials","text":"Consider function \\(h(t) \\equiv e^{kt} + B\\). linear combination two functions, can call \\(f(t) \\equiv e^{kt}\\) \\(g(t) \\equiv 1\\).course, \\(f(t)\\) \\(g(t)\\) basic modeling functions memorized derivatives: \\(f'(t) = k e^{kt}\\) \\(g'(t) = 0\\).Putting together gives \\[\\partial_t h(t) = \\, k\\, e^{kt} + B\\times 0= \\, k\\, e^{kt}\\]derivative polynomial follows linear combination rule. ’s polynomials linear combination monomials, \\(x^0\\), \\(x^1\\), \\(x^2\\), .consequence derivative polynomial another polynomial, term reduced one order.\\(\\partial_x x^0 = 0\\)\\(\\partial_x x^1 = x^0 = 1\\)\\(\\partial_x x^2 = 2 x^1 = 2x\\).Example: \\(f(x) \\equiv + b x + c x^2\\  \\  \\implies\\ \\ \\partial_x f(x) \\equiv b + 2 c x\\)","code":""},{"path":"local-approximations.html","id":"approximations-around-xstar","chapter":"25 Local approximations","heading":"25.5 Approximations around \\(x^\\star\\)","text":"Starting just naked modeling functions (e.g. \\(e^t\\)), small rich set mathematical operations enables make huge variety functions suit big range modeling needs:input scaling, turns naked modeling functions directly useful basic modeling functions.linear combinations functions, e.g. \\(+ B e^{-kt}\\)compositions functions, e.g. \\(e^{-kt^2}\\) can recognize composition exponential power-law function.products functions, e.g., \\(\\sin\\left(\\frac{2\\pi}{P}x\\right) e^{-kt}\\)Now want tame profusion possibilities consider way construct stand-ins function, using universal format needs minimum information can used many purposes place original function. ’s helpful name stand-ins reminds us stand-ins . original function \\(f(x)\\), ’ll write names stand-ins tilde, \\(\\widetilde{\\,f\\ }(x)\\).stand-functions intended much simpler original useable substitute original. catch stand-warranteed good substitute within small neighborhood domain origin.information need construct stand-ins limited. First, need specify warranteed neighborhood . ’ll tend use \\(x_0\\) identifying center neighborhood. ’ll also need \\(f(x_0)\\), output original function input \\(x_0\\), \\(\\partial_x f(x_0)\\) \\(\\partial_{xx} f(x_0)\\).good time remind notation conventions using write functions evaluating functions.function individual characteristics idiosyncracies written \\(f(x)\\): function name name input inputs. name function \\(f()\\). name input \\(f()\\) \\(x\\), whatever input name given parentheses following name.Every function derivative function. call derivative function anything like, ’s sensible give name states explicitly comes . ’re using \\(\\partial_x f(x)\\) purpose. Similarly, name use second derivative \\(\\partial_{xx} f(x)\\).Evaluating function means specify particular value input. use several ways making clear talking particular value input, e.g.\n\\[\\mbox{function output:}\\ \\ \\ f(x = 3)\\ \\ \\ \\text{}\\ \\ f(3)\\ \\ \\ \\text{}\\ \\ \\left.f(x)\\strut\\right|_{x=3}\\]\noutput evaluated function quantity.Sometimes want refer output particular input, don’t specific quantity pinned yet. preferred style writing use name similar input name, subscript \\(x_0\\), \\(x_1\\), \\(x_i\\), \\(x_\\star\\) , occasionally, superscript \\(x^\\star\\). output function written like :\n\\[\\mbox{function output:}\\ \\ \\ f(x = x_0)\\ \\ \\ \\text{}\\ \\ f(x_0)\\ \\ \\ \\text{}\\ \\ \\left.f(x)\\strut\\right|_{x=x_0}\\]\nstyle applies function name like \\(\\partial_x f()\\) \\(\\partial_{xx} f()\\), instance\\[\\mbox{function output:}\\ \\ \\ \\partial_x f(x = x_0)\\ \\ \\ \\text{}\\ \\ \\partial_x f(x_0)\\ \\ \\ \\text{}\\ \\ \\left.\\partial_x f(x)\\strut\\right|_{x=x_0}\\]two universal formats can used construct stand-function near particular input \\(x_0\\). Since ’s useful name stand-, ’ll use tilde top original function name:First-order approximation: \\(\\widetilde{f_1}(x) \\equiv f(x_0) + \\partial_x f(x_0) (x-x_0)\\)Second-order approximation: \\(\\widetilde{f_2}(x) \\equiv f(x_0) + \\partial_x f(x_0) [x-x_0] + \\frac{1}{2} \\partial_{xx} f(x_0) [x - x_0]^2\\)Notice first two terms \\(\\widetilde{f_2}(x)\\) identical \\(\\widetilde{f_1}(x)\\), write second-order approximation \n\\[\\widetilde{f_2}(x) \\equiv \\widetilde{f_1}(x) +\\frac{1}{2} \\partial_{xx} f(x_0) [x-x_0]^2\\]first-order approximation \\(\\widetilde{f_1}(x)\\) nothing straight-line function whose graph tangent graph \\(f(x)\\) input \\(x=x_0\\).second-order approximation quadratic polynomial. quadratic, graph familiar parabola. graph \\(\\widetilde{f_2}(x)\\) parabola tangent graph \\(f(x)\\).Consider function \\(g(x)\\) whose graph shown Figure ??.\nhaven’t given formula \\(g(x)\\), can see isn’t basic modeling functions something complicated. ’re going construct first-order second-order approximation \\(g(x)\\) neighborhood \\(x_0 = -1\\) marked blue shaded area.Note \\(x_0\\) argmin \\(g(x)\\). can see argmin little right \\(x_0\\).“facts” \\(g(x)\\) needed construct approximations, beyond specification location neighborhood \\(x_0\\), values \\(g(x_0)\\), \\(\\partial_x g(x_0)\\), \\(\\partial_{xx} g(x_0)\\). :facts, can construct first- second-order approximations:Figure 25.4 shows \\(\\widetilde{g_1}(x)\\) \\(\\widetilde{g_2}(x)\\), zooming around \\(x_0 = -1\\).\nFigure 25.4: first-order (green) second-order (red) approximations \\(g(x)\\) near \\(x_0=-1\\).\ncan see \\(\\widetilde{g_2}(x)\\) good approximation \\(g(x)\\). particular, argmin \\(\\widetilde{g_2}(x)\\) close \\(g(x)\\).previous example, showed argmin parabolic function \\(a_0 + a_1 x + a_2 x^2\\) \\(x^\\star = -\\frac{a_1}{2 a_2}\\). Using formula, argmin \\(\\widetilde{g_2}(x)\\) -2.3493/(7.8077/2) = -0.602.","code":"## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\n\n## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\nx0 <- -1\ng(x0)## [1] -23.992\ndx_g <- D(g(x) ~ x)\ndxx_g <- D(g(x) ~ x + x)\ndx_g(x0)## [1] -2.3493\ndxx_g(x0)## [1] 7.8077\ntilde1_g <- makeFun(-23.992 - 2.3493*(x-x0) ~ x)\ntilde2_g <- makeFun(tilde1_g(x) + (7.8077/2) * (x-x0)^2 ~ x)## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\n\n## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided."},{"path":"local-approximations.html","id":"solving-computationally","chapter":"25 Local approximations","heading":"25.6 Solving computationally","text":"find zeros derivative function evaluate second derivative zeros find kind critical point .cubic bifurcation. Start cubic argmax followed argmin. move parameter see two critical points coalesce single point disappear., maybe, “problem polynomials.” Linear function always 1 root critical points. Quadratic function always one critical point (subject constant may two roots generically). cubic might 1 3 solutions behavior depends constant. might one three critical points.","code":""},{"path":"local-approximations.html","id":"from-an-earlier-draft","chapter":"25 Local approximations","heading":"25.7 From an earlier draft","text":"facing modeling problem, ’s nice framework provides checklist approach:output quantity input quantities thought important connection output?input (1), aAn important framework simple models involves\nfunction form often employed models low-order polynomial. usual situation, region domain particular interest, \\(x_0\\) point region. approximating polynomial starts \\[p(x) \\equiv \\frac{1}{2} [x-x_0]^2 + b [x - x_0] + c\\]\\(f(x) = c\\), constant function, appropriate output \\(f()\\) doesn’t depend input.\\(f(x) = b x + c\\), straight-line function, simplest form output depends input.\\(f(x) = \\frac{1}{2}x^2 + b x + c\\), quadratic function, appropriate form input \\(x\\) output local maximum minimum.many modeling situations, construction model function can reduced short series questions:approximate output input fixed neighborhood interest?output increase monotonically maximum minimum?2 1.5, 1, .5, log(), -.5,[Deriv-5a] Understand strategy looking behavior function \\(f(x)\\) around point \\(x_0\\) considering new, possibly simpler function terms \\(x\\).[Deriv-5b] able construct straight-line function (Linear Approximation) approximates \\(f(x)\\) around \\(x_0\\)[Deriv-5c] able construct 2nd-order polynomial (Quadratic Approximation) whose value derivatives match functionExample modeling walkingThere’s exercise DailyDigitals/ 141 DD-35 narrativeand project DD-37Harvest shiny app materials DailyDigital/daily-digital-38.Rmd.Consider model presented class energy expenditure walking distance \\(d\\) grade \\(g\\): \\[E(d,g) = (a_0 + a_1 g)d\\] \\(d\\) (horizontal equivalent) distance walked \\(g\\) grade slope (, rise run).want \\(E\\) measured Joules.Question dimension Joules?dimensionless ☹︎ \\(L/T^2\\) ☹︎ \\(T/L^2\\) ☹︎ \\(M/T^2\\) ☹︎ \\(M L/T^2\\) ☹︎ \\(M/L^2\\) ☹︎ \\(M/(L^2 T^2)\\) ☹︎ \\(M L^2 / T^2\\) ✓ Question B dimension parameter \\(a_0\\)?dimensionless ☹︎ \\(L/T^2\\) ☹︎ \\(T/L^2\\) ☹︎ \\(M/T^2\\) ☹︎ \\(M L/T^2\\) ✓ \\(M/L^2\\) ☹︎ \\(M/(L^2 T^2)\\) ☹︎ \\(M L^2 / T^2\\) ☹︎ Question C dimension \\(g\\)?dimensionless ✓ \\(L/T^2\\) ☹︎ \\(T/L^2\\) ☹︎ \\(M/T^2\\) ☹︎ \\(M L/T^2\\) ☹︎ \\(M/L^2\\) ☹︎ \\(M/(L^2 T^2)\\) ☹︎ \\(M L^2 / T^2\\) ☹︎ Question D dimension parameter \\(a_1\\)?dimensionless ☹︎ \\(L/T^2\\) ☹︎ \\(T/L^2\\) ☹︎ \\(M/T^2\\) ☹︎ \\(M L/T^2\\) ✓ \\(M/L^2\\) ☹︎ \\(M/(L^2 T^2)\\) ☹︎ \\(M L^2 / T^2\\) ☹︎ \nSuppose describe spread infection terms three variables:\\(N\\) infection rate respect time: number new infections per day\\(\\) current number people infectious, , currently capable spreading infection\\(S\\) number people susceptible, , currently capable becoming infectious exposed infection.three variables functions time. News reports 2020 routinely one gave graph \\(N\\) versus time Covid-19.November 15, 2020, \\(N\\) 135,187 people per day. (number positive tests. true value \\(N\\) 5-10 times greater.) news reports don’t usually report \\(S\\) day--day basis.basic strategy modeling calculus take snapshot: Given \\(\\) \\(S\\) today, model \\(N\\) today. (Next semester, ’ll study “differential equations,” provide way assembling snapshot model time course pandemic look like.)low-order polynomial \\(N(S, )\\) \\[N(S,) = a_0 + a_1 S + a_2 + a_{12} S.\\] don’t include quadratic terms local maximum \\(N(S, )\\)—common sense suggests \\(\\partial_S N() \\geq 0\\) \\(\\partial_I N() \\geq 0\\), whereas local maximum requires least one derivatives negative near max.job figure , , terms can safely deleted low-order polynomial. good way approach figure , using common sense, \\(N\\) either \\(S=0\\) \\(=0\\). (Note previous restricted \\(S = = 0\\). one needs zero produce relevant result.)Question sufficiently complete low-order polynomial given behavior \\(N\\) \\(S=0\\) \\(=0\\)?\\(N(S,) = a_0 + a_1 S + a_2 + a_{12} S\\) ☹︎ don’t need four terms. Think ! \\(N(S,) = a_0 + a_1 S + a_2 \\) ☹︎ \\(S\\) \\(\\) zero, \\(N\\) non-zero. \\(N(S,) = a_1 S + a_2 + a_{12} S\\) ☹︎ \\(N(S,) = a_2 + a_{12} S\\) ☹︎ \\(N(S,) = a_1 S + a_{12} S\\) ☹︎ \\(N(S,) = a_{12} S\\) ✓ \\(N(S,) = a_1 S + a_2 \\) ☹︎ \noften happens decision making multiple criteria. instance, selecting cadets pilot training, two obvious criteria cadet’s demonstrated flying aptitude leadership potential cadet. Let’s assume merit \\(M\\) candidate function flying aptitude \\(F\\) leadership potential \\(L\\). simple model decision making candidates ordered highest \\(M\\) lowest. , depending many pilot trainees required, threshold set \\(M\\) candidates \\(M\\) greater threshold accepted.’ve tasked develop formula use pilot-training selection process.low-order polynomial model \\[M(F, L) = d_0 + d_1 F + d_2 L + d_{12} F L ,\\] \\(d_1\\) \\(d_2\\) positive. (Think minute coefficients must positive make sense way combining \\(F\\) \\(L\\) measure merit.)trying decide whether \\(d_{12}\\) positive, negative, zero. guide decision, statement general charge program: “rather good pilot good leader great pilot poor leader poor pilot great leader.” (might reasonably agree disagree point view, remember commanding .)Take minutes now think decide whether \\(d_{12}\\) positive negative zero implement general’s view. rest problem guide solution, ’ll understand better try , first.Using low-order polynomial model, find algebraically two partial derivatives\\(\\partial_F M(F, L)\\) \\(\\partial_L M(F, L)\\)Question possibilities true \\(\\partial_F M\\) function \\(F\\)?Increases F ☹︎ Decreases F ☹︎ function F. ✓ Question B possibilities true \\(\\partial_L M\\) function \\(L\\)?Increasing ☹︎ Decreasing ☹︎ function L. ✓ Question C one describes relationship \\(\\partial_F M()\\) function \\(L\\) \\(\\partial_L M()\\) function \\(F\\)? (Hint: Remember \\(d_1\\) \\(d_2\\) specified positive.)\\(\\partial_F M()\\) increasing function \\(L\\), \\(\\partial_L M()\\) must decreasing function \\(F\\). ☹︎ Notice partials involve \\(d_{12}\\) coefficient. \\(\\partial_F M()\\) increasing function \\(L\\), \\(\\partial_L M()\\) must increasing function \\(F\\). ✓ Neither needs true. ☹︎ Notice partials involve \\(d_{12}\\) coefficient. Think now general’s statement translate mathematical terms. ’s hint: Imagine Drew high \\(F\\) score low \\(L\\) score. Consider another cadet, Blake, scores \\(F-\\epsilon\\) \\(L + \\epsilon\\). Blake’s flying leadership scores closer together Drew’s. Drew Blake exactly average \\(F\\) \\(L\\). general find Blake superior inferior Drew? superior, want \\(\\partial_L M > \\partial_F M\\). inferior, model \\(\\partial_L M < \\partial_F M\\). general indifferent Drew Blake, two partial derivatives equal.Question D Based general’s statement, want \\(d_{12}\\) positive, negative, zero?Positive ✓ Zero ☹︎ Negative ☹︎ nothing general’s statement. ☹︎ \nexercise, ’re going looking shape contour lines close reference point. graph shows function ’ll examining. contours unlabeled, avoid distracting numbers; ’re interested shapes. Four different reference points marked, coordinatesFor reference points D, job zoom region around point. graphing expression sandbox written way allows specify exactly coordinates reference point, size region around reference point plotted. initial example sandbox reference point region size 0.5. reference point always exactly center plot.consider sequence region sizes\\[\\mbox{size}: 0.5,\\ 0.1,\\  0.05,\\  0.01,\\  0.005,\\ 0.001,\\ 0.0005,\\  0.0001\\]Start largest size try successively smaller sizes find size shape contour lines simple similar shape previous size. (Ignore contour labels: just look shape.)Question 1a) reference point small size shape contours differ substantially shape previous size.    0.1 ☹︎        0.01 ✓        0.001 ☹︎        1e-04 ☹︎ Question B 1b) reference point phrase best describes shape contours size found question (1a).contours straight almost exactly parallel evenly spaced ✓ contours straight, almost exactly parallel, unevenly spaced. ☹︎ contours straight, fan bit ☹︎ contours curved concentric evenly spaced ☹︎ contours curved concentric, unevenly spaced. ☹︎ Question C 2a) reference point B small size shape contours differ substantially shape previous size.    0.1 ☹︎        0.01 ✓        0.001 ☹︎        1e-04 ☹︎ Question D 2b) reference point B phrase best describes shape contours size found question (2a).contours straight almost exactly parallel evenly spaced ✓ contours straight, almost exactly parallel, unevenly spaced. ☹︎ contours straight, fan bit ☹︎ contours curved concentric evenly spaced ☹︎ contours curved concentric, unevenly spaced. ☹︎ Question E 3a) reference point C small size shape contours differ substantially shape previous size.    0.1 ☹︎        0.01 ☹︎        0.001 ✓        1e-04 ☹︎ Question F 3b) reference point C phrase best describes shape contours size found question (3a).contours straight almost exactly parallel evenly spaced ✓ contours straight, almost exactly parallel, unevenly spaced. ☹︎ contours straight, fan bit ☹︎ contours curved concentric evenly spaced ☹︎ contours curved concentric, unevenly spaced. ☹︎ Question G 4a) reference point D small size shape contours differ substantially shape previous size.    0.1 ☹︎        0.01 ☹︎        0.001 ☹︎        0.0001 ✓ Question H 4b) reference point D phrase best describes shape contours size found question (4a).contours straight almost exactly parallel evenly spaced ✓ Almost always, zoom enough, contours straight, almost parallel, evenly spaced. exceptions reference point exactly local maximum minimum (point C close, exactly maximum) exactly saddle point (point D close, exactly saddle point). contours straight, almost exactly parallel, unevenly spaced. ☹︎ contours straight, fan bit ☹︎ contours curved concentric evenly spaced ☹︎ contours curved concentric, unevenly spaced. ☹︎ \nConsider road descent summarized sign …“grade” road defined rise--run. Since rise run dimension \\(L\\), ratio dimensionless. grade percent 100 times rise--run. 100% grade corresponds \\(45^\\circ\\) angle.Question Taking “run” 5 miles indicated sign, ’s “rise?” (can find unit conversion data internet.)0.91 miles ☹︎ Close, 18% times 5 miles 0.9 miles. 4752 feet ✓ 1.5 km ☹︎ 0.932 miles. 292 rods ☹︎ 0.9125 miles. 7.36 furlongs ☹︎ 0.92 miles. 22.64 \\(\\sqrt{\\mbox{acre}}\\) ☹︎ square-root acre unconventional unit length. One acre 43560 ft\\(^2\\), square root acre 208.71 feet 0.03953 miles. 22.64 \\(\\sqrt{\\mbox{acre}}\\) 0.895 miles. Since vehicle’s odometer measures distance along road surface rather along horizontal “run,” ’s likely sign-makers mind 5 miles length hypotenuse triangle rather horizontal leg.Question B expressions gives horizontal run rise \\(y\\) miles?\\(\\sqrt{5 - y^2}\\)  ☹︎ \\(\\sqrt{25 - y^2}\\) ✓ \\(\\sqrt{y^2 + 25}\\) ☹︎ \\(\\sqrt{y^2+5}\\) ☹︎ Question C Given grade 18% length road surface 5 miles, “rise?”0.85 miles ☹︎ 1.40 km ☹︎ 283.5 rods ✓ 6.8 furlongs ☹︎ 22.01 \\(\\sqrt{\\mbox{acre}}\\) ☹︎ \n[Deriv-9a] Eliminate terms possible model considering simple inputs result known.[Deriv-9b] Understand concept grade relates elevation change.[Deriv-9c] Use dimensional analysis determine units terms within model.","code":"\nslice_plot((x+1)^0.5 ~ x, domain(x=c(0,1))) %>% \n  slice_plot(2*log(x+1) ~ x, color=\"red\") %>%\n  slice_plot(.2*exp(x+1) ~ x, color=\"green\") %>%\n  slice_plot(2*exp(-(x+1)) ~ x, color=\"orange\") %>%\n  slice_plot(1/(x+2) ~ x, color=\"blue\")\nx0 <- -2.100\ny0 <-  3.000\nsize <- 1.0\ncontour_plot(g(x, y) ~ x + y,\n             domain(x = x0 + size*c(-1, 1),\n                    y = y0 + size*c(-1, 1)))"},{"path":"approximation-near-a-reference-input.html","id":"approximation-near-a-reference-input","chapter":"26 Approximation near a reference input","heading":"26 Approximation near a reference input","text":"Back Chapter 25 considered eight simple shapes functions one input:\nFigure 26.1: eight simple shapes, locally, functions one input. (See Chapter 25.)\nsimple shapes can generated function formula appropriate values parameters \\(\\), \\(b\\), \\(c\\).\\[g(x) \\equiv a_0 + a_1 x + a_2 x^2\\]\nchapter examines possibilities extending formula bit, include higher-order terms, e.g. \\[h(x) \\equiv a_0 + a_1 x + a_2 x^2 + a_3 x^3 + a_4 x^4 + \\cdots\\]’ll consider two possible applications:Creating arithmetically simple approximation function whose formula already known. approximations known Taylor polynomials.Creating function capture patterns data, Chapter 25. turns dubious practice. discuss reasons can know avoid using high-order polynomials fit data.","code":""},{"path":"approximation-near-a-reference-input.html","id":"the-reference-point","chapter":"26 Approximation near a reference input","heading":"26.1 The reference point","text":"Since approximations, need way specify neighborhood function domain approximation intended good enough use. can use approach turned naked modeling functions (e.g., \\(x\\), \\(x^2\\), …) basic modeling functions: replacing \\(x\\) polynomial \\(\\line(x)\\). unlike basic modeling functions, useful form \\(\\line()\\) usually \\(ax + b\\), , ’ll use just shift form line, slope 1:\\[\\text{shift}(x) \\equiv \\left[\\strut x - x_0\\right]\\]\nparameter \\(x_0\\) called reference point. power-law function, \\[\\left[\\strut\\text{shift}(x)\\right]^n =  \\left[\\strut x - x_0\\right]^n\\]\noutput always zero \\(x=x_0\\), matter considerable importance go . Also, note ’re using square braces \\(\\left[\\ \\ \\right]\\) simply make completely unambiguous exponentiated.graphs three power-law functions (, \\(\\left[x-x_0\\right]^n\\)) different values \\(x_0\\):Question blue function, \\(x_0\\)?    -2 ☹︎        -1 ☹︎        0 ☹︎        1 ☹︎        2 ☹︎        3 ☹︎        4 ✓        5 ☹︎ Question B blue function, order polynomial?    0 ☹︎        1 ✓        2 ☹︎        3 ☹︎        4 ☹︎        5 ☹︎ Question C red function, \\(x_0\\)?    -2 ☹︎        -1 ☹︎        0 ☹︎        1 ☹︎        2 ✓        3 ☹︎        4 ☹︎        5 ☹︎ Question D red function, order polynomial?    0 ☹︎        1 ✓        2 ☹︎        3 ☹︎        4 ☹︎        5 ☹︎ Question E green function, \\(x_0\\)?    -2 ☹︎        -1 ☹︎        0 ☹︎        1 ☹︎        2 ☹︎        3 ☹︎        4 ✓        5 ☹︎ Question F green function, order polynomial?reference point \\(x_0\\) re-write approximating polynomial \n\\[h(x) \\equiv a_0 + a_1 [x-x_0] + a_2 [x - x_0]^2 + a_3 [x - x_0]^3 + \\cdots\\]\nformat convenient finding \\(a_0\\), \\(a_1\\), \\(\\ldots\\) approximating function \\(f(x)\\) neighborhood \\(x_0\\), way calculate quickly value \\(a_0\\). Note \\(x=x_0\\), terms polynomial go zero except first, know \\(a_0 = f(x_0)\\).Now consider derivative approximating polynomial. \n\\[\\partial_x h(x) = a_1 + 2 \\times a_2 [x-x_0] + 3 \\times a_3 [x-x_0] + \\cdots\\]\n, \\(x=x_0\\) terms except first go zero. \\(h(x)\\) approximation \\(f(x)\\) ’ll \\(a_1 = \\partial_x f(x_0)\\).can many times want. ’s second derivative \\(\\partial_{xx} h(x)\\):\n\\[\\partial_{xx} h(x) = 2 a_2  + 2 \\times 3 \\times a_3 [x-x_0] + \\cdots\\]\nthird\n\\[\\partial_{xxx} h(x) =  2 \\times 3 \\times a_3 + \\cdots\\], terms \\(\\partial_{xx} h()\\) \\(\\partial_{xxx} h()\\) except first go zero \\(x=x_0\\). implies\n\\[a_2 = \\frac{1}{2} \\partial_{xx} f(x_0) \\ \\ \\ \\text{}\\ \\ \\ a_3 = \\frac{1}{2\\times 3} \\partial_{xxx}f(x_0)\\]\nJust following pattern, can guess \\(a_4 = \\frac{1}{2 \\times 3 \\times 4} \\partial_{xxxx} f(x_0)\\) , general nth term\n\\[a_n = \\frac{1}{1\\times 2 \\times 3 \\times \\cdots \\times n} \\partial^n f(x_0)\\]\n’re writing \\[{\\huge \\partial^n} \\ \\text{stand }\\ \\ \\stackrel{\\Huge \\partial}{\\ } \\underbrace{xx...x}_\\text{n times}\\]quantity \\(1\\times 2 \\times 3 \\times \\cdots \\times n\\) called factorial written \\[\\huge n! =  1\\times 2 \\times 3 \\times \\cdots \\times n\\]case ’re already familiar factorials, note following:\n\\[1! = 1\\\\\n2! = 2\\\\\n3! = 6\\\\\n4! = 24\\\\\n5! = 120\\\\\n\\text{... }\n\\]R, use factorial() function calculate \\(n!\\) instance:","code":"\nfactorial(5)## [1] 120\nfactorial(6)## [1] 720\nfactorial(7)## [1] 5040\nfactorial(10)## [1] 3628800\nfactorial(15)## [1] 1.3077e+12"},{"path":"approximation-near-a-reference-input.html","id":"taylor-polynomials","chapter":"26 Approximation near a reference input","heading":"26.2 Taylor polynomials","text":"Putting together everything previous sections, arrive remarkable formula polynomial approximate smooth, continuous function \\(f(x)\\) neighborhood selected input \\(x_0\\). overall formula daunting first glance, terms pattern:\n\\[f(x) \\approx f(x_0) + \\frac{\\partial_x f(x_0)}{1!} [x - x_0]^1\n+ \\frac{\\partial_{xx} f(x_0)}{2!} [x - x_0]^2\n+ \\frac{\\partial_{xxx} f(x_0)}{3!} [x - x_0]^3\n+ \\ldots\n\\]\nTaylor polynomial. Taylor polynomial terminates \\([x-x_0]^2\\) term second-order Taylor polynomial, one terminates \\([x-x_0]^3\\) term third-order Taylor polynomial. Mathematicians particularly interested \\(n\\)th-order Taylor polynomial \\(n \\rightarrow \\infty\\).Construction Taylor polynomial involves finding various orders derivatives. cases simple, especially felicitous choice \\(x_0\\) can made.Example: successive derivatives \\(\\sin(x)\\) \\(cos(x)\\), \\(-\\sin(x)\\), \\(-\\cos(x)\\), back \\(\\sin(x)\\) onward order derivative like. select \\(x_0=0\\), derivatives evaluated \\(x_0\\) zero, \\(-1\\), \\(1\\). Taylor polynomial (5th order) \\(\\sin(x)\\) :\n\\[\\sin(x) \\approx 0 + \\frac{1}{1!}[x] + \\frac{0}{2!} [x]^2 - \\frac{1}{3!} [x]^3 + \\frac{0}{4!} [x]^4 + \\frac{1}{5!} [x]^5 = x - \\frac{x^3}{3!} + \\frac{x^5}{5!}\\]say “smooth, continuous function” instead just function talking kinds functions Taylor polynomials can approximate?Keep mind terms polynomial form \\(a_n [x-x_0]^n\\) \\(n=1,2,3, \\ldots\\). power-law function therefore smooth continuous. polynomial—sum individual terms—always smooth continous. \\(f()\\) , promises can given quality approximation.","code":""},{"path":"approximation-near-a-reference-input.html","id":"polynomials-and-data","chapter":"26 Approximation near a reference input","heading":"26.3 Polynomials and data","text":"’ll show high-order polynomials trouble.data ’s close straight line, look stability polynomials.show sensitive high-order polynomial slight changes data.following graph shows function \\(f(x)\\). Five values \\(x\\) labelled , B, …. possible values \\(x_0\\) questions.graphs follow show approximation \\(f(x)\\) one points , B, …. graph. approximations either constant (“order 0” approximation), linear (“order 1” approximation), quadratic (“order 2” approximation), something else. graph, say order approximation used.Question order approximation graph ()?    constant ✓        linear ☹︎ linear approximation exactly slope \\(f()\\) reference point \\(x_0\\).        quadratic ☹︎        none ☹︎ Question B reference position \\(x_0\\) approximation graph ()?    ☹︎ bad choice, notice constant approximation value little lower f().        B ✓ ’re right. correct value f(B).        C ☹︎        D ☹︎        E ☹︎        None ☹︎ Question C order approximation graph (II)?    constant ☹︎        linear ☹︎        quadratic ✓        none ☹︎ Question D reference position \\(x_0\\) approximation graph (II)?    ☹︎        B ☹︎        C ✓        D ☹︎ reference position, value approximation always \\(f(x_0)\\). ’s case .        E ☹︎        None ☹︎ Question E order approximation graph (III)?    constant ☹︎        linear ☹︎        quadratic ☹︎        none ✓ can’t two bends linear quadratic function. Question F reference position \\(x_0\\) approximation graph (III)?    ☹︎        B ☹︎        C ☹︎        D ☹︎ reference position, value approximation always \\(f(x_0)\\). ’s case .        E ☹︎        None ✓ ’s polynomial approximation points. Question G order approximation graph (IV)?    constant ☹︎        linear ✓        quadratic ☹︎        none ☹︎ Question H reference position \\(x_0\\) approximation graph (IV)?    ✓        B ☹︎        C ☹︎        D ☹︎        E ☹︎        None ☹︎ Question order approximation graph (V)?    constant ☹︎        linear ☹︎        quadratic ✓        none ☹︎ Question J reference position \\(x_0\\) approximation graph (V)?somewhat complex function two variables. labels , B, C, D mark possible reference points \\((x_0, y_0)\\) around polynomial approximations made.following graphs, say kind two-variable polynomial approximation made reference point approximation centered .Question order approximation graph ()?    constant ☹︎        linear ☹︎ contours straight approximation linear        bilinear ✓ Right. turns quadratic approximation similar, presumably \\(d_{xx}f(x_0, y_0)\\) \\(d_{yy} f(x_0, y_0)\\) small make difference.        quadratic ☹︎ bad answer. case, bilinear approximation looks lot like quadratic. Question B reference position \\((x_0, y_0)\\) approximation graph ()?    ✓        B ☹︎        C ☹︎        D ☹︎ Question C order approximation graph (II)?    constant ☹︎        linear ☹︎ contours straight approximation linear        bilinear ✓ Right. turns quadratic approximation similar, presumably \\(d_{xx}f(x_0, y_0)\\) \\(d_{yy} f(x_0, y_0)\\) small make difference.        quadratic ☹︎ circular (elliptical) contours hallmark quadratic approximation near maximum minimum. Question D reference position \\((x_0, y_0)\\) approximation graph (II)?    ☹︎        B ✓ Practically bullseye B!        C ☹︎        D ☹︎ Question E order approximation graph (III)?    constant ☹︎        linear ✓ linear approximation always produces straight, parallel, evenly spaced contours.        bilinear ☹︎        quadratic ☹︎ Question F reference position \\((x_0, y_0)\\) approximation graph (III)?    ☹︎        B ☹︎        C ☹︎        D ✓ Question G order approximation graph (IV)?    constant ☹︎        linear ☹︎ contours straight approximation linear        bilinear ☹︎ bad answer. curvature bilinear approximations always one direction.        quadratic ✓ Sometimes quadratic approximations produce elliptical contours, previous problem. sometimes produce X-shaped contours seen . cases, contours curve opposing ways different parts domain. way, contour pattern seen upper right graph corresponds shape saddle: curving along one line along perpendicular line. place right middle saddle called ‘saddle point.’ Question H reference position \\((x_0, y_0)\\) approximation graph (IV)?","code":""},{"path":"outline-of-block-3.html","id":"outline-of-block-3","chapter":"Outline of Block 3","heading":"Outline of Block 3","text":"section development purposes . included released text.outline established May 17-19, 2021 working sessions USAFi. ’s copied directly Teams document. ’ve made modifications noted [[square brackets]] deletions bold face additions..Adding preliminary intro chapter, motivating situation know derivative don’t know functionChange relationshipsChange relationshipsIteration Euler’s Method\nNTI\n’re going go -hand 3 iterations Euler’s method\n’ll show students loop, make create loop\n\nTopics\nTie loops (iteration)\nReversing difference quotient (slope function \\(\\diff{x}f(x)\\))\nInitial values\nhand\nImplement computer\n\nReadings: Chapter 27.\nEXERCISES ADD\nExercises/Accum/chain--differentiation.Rmd\n\nIteration Euler’s MethodNTI\n’re going go -hand 3 iterations Euler’s method\n’ll show students loop, make create loop\n’re going go -hand 3 iterations Euler’s methodWe’ll show students loop, make create loopTopics\nTie loops (iteration)\nReversing difference quotient (slope function \\(\\diff{x}f(x)\\))\nInitial values\nhand\nImplement computer\nTie loops (iteration)Reversing difference quotient (slope function \\(\\diff{x}f(x)\\))Initial valuesBy handImplement computerReadings: Chapter 27.EXERCISES ADD\nExercises/Accum/chain--differentiation.Rmd\nExercises/Accum/chain--differentiation.RmdIteration accumulation\nTopics\nEuler’s method\nComputing examples iteration loops\n\nExercises\nAccum/accumulate-numeric-draft.Rmd\nAccum/computing--antiD.Rmd\n\nReadings: Chapter 28\nIteration accumulationTopics\nEuler’s method\nComputing examples iteration loops\nEuler’s methodComputing examples iteration loopsExercises\nAccum/accumulate-numeric-draft.Rmd\nAccum/computing--antiD.Rmd\nAccum/accumulate-numeric-draft.RmdAccum/computing--antiD.RmdReadings: Chapter 28Accumulation net change\nNTI:\nIntroduce definition definite integral mathematical notation accumulation [[(Euler’s method) moved new Iteration accumulation]]\n\nTopics\nNotation definite integrals (connected Euler’s method)\nExercises/Accum/three-perspectives.Rmd\n\nEyeballing accumulation area curve goes\n. motivating graph www/covid-history.png Economist June 26, 2021 p. 8\nb. [Exercises/Accum/accumulation-limits.Rmd]\nc. [Exercises/Accum/ups--downs.Rmd]\nd. [App exercises: Exercises/Accum/Graph-anti.Rmd]\nConcrete examples anti-differentiation\n. Power energy [Exercises/Accum/solar-example.Rmd]\nii. Velocity position [Exercises/Accum/sailing--time.Rmd]\n. Acceleration-velocity-displacement [Exercises/Accum/falling--pisa.Rmd]\n. Probability: dnorm pnorm, Road-cone-metaphor.Rmd Exercises/Accum\n. AreaA\nAccumulating accumulation [Exercises/Accum/Glorias-family.Rmd]\nFundamentals integration (, fundamental theorem) [Exercises/Accum/first-fundamental-theorem.Rmd] [-.Rmd] [u---bottom.Rmd] [MMAC-1.Rmd]\n\nReadings: Chapter 29\nAccumulation net changeNTI:\nIntroduce definition definite integral mathematical notation accumulation [[(Euler’s method) moved new Iteration accumulation]]\nIntroduce definition definite integral mathematical notation accumulation [[(Euler’s method) moved new Iteration accumulation]]Topics\nNotation definite integrals (connected Euler’s method)\nExercises/Accum/three-perspectives.Rmd\n\nEyeballing accumulation area curve goes\n. motivating graph www/covid-history.png Economist June 26, 2021 p. 8\nb. [Exercises/Accum/accumulation-limits.Rmd]\nc. [Exercises/Accum/ups--downs.Rmd]\nd. [App exercises: Exercises/Accum/Graph-anti.Rmd]\nConcrete examples anti-differentiation\n. Power energy [Exercises/Accum/solar-example.Rmd]\nii. Velocity position [Exercises/Accum/sailing--time.Rmd]\n. Acceleration-velocity-displacement [Exercises/Accum/falling--pisa.Rmd]\n. Probability: dnorm pnorm, Road-cone-metaphor.Rmd Exercises/Accum\n. AreaA\nAccumulating accumulation [Exercises/Accum/Glorias-family.Rmd]\nFundamentals integration (, fundamental theorem) [Exercises/Accum/first-fundamental-theorem.Rmd] [-.Rmd] [u---bottom.Rmd] [MMAC-1.Rmd]\nNotation definite integrals (connected Euler’s method)\nExercises/Accum/three-perspectives.Rmd\nExercises/Accum/three-perspectives.RmdEyeballing accumulation area curve goes\n. motivating graph www/covid-history.png Economist June 26, 2021 p. 8\nb. [Exercises/Accum/accumulation-limits.Rmd]\nc. [Exercises/Accum/ups--downs.Rmd]\nd. [App exercises: Exercises/Accum/Graph-anti.Rmd]Concrete examples anti-differentiation\n. Power energy [Exercises/Accum/solar-example.Rmd]\nii. Velocity position [Exercises/Accum/sailing--time.Rmd]\n. Acceleration-velocity-displacement [Exercises/Accum/falling--pisa.Rmd]\n. Probability: dnorm pnorm, Road-cone-metaphor.Rmd Exercises/Accum\n. AreaAAccumulating accumulation [Exercises/Accum/Glorias-family.Rmd]Fundamentals integration (, fundamental theorem) [Exercises/Accum/first-fundamental-theorem.Rmd] [-.Rmd] [u---bottom.Rmd] [MMAC-1.Rmd]Readings: Chapter 29[[Basic antiderivative rules]] Anti-derivatives basic modeling functions\nTopics\nComposition naked function linear interior function pattern seen table derivatives. [See Exercises/Accum/basic-modeling-functions.Rmd & interior-funs-1.Rmd]\nSometimes need multiply divide constant get form can look table derivatives. Give new table.\nconstant integration [Exercises/Accum/lessons--euler.Rmd] [App: Exercises/Accum/find-C.Rmd]\n[[Exponential functions]] Moved introductory block\n[[Sine Cosine]]\n[[Logarithms]]\n[[Power functions]]\n[[Simple combinations ]] Moved next block\n\n[[Basic antiderivative rules]] Anti-derivatives basic modeling functionsTopics\nComposition naked function linear interior function pattern seen table derivatives. [See Exercises/Accum/basic-modeling-functions.Rmd & interior-funs-1.Rmd]\nSometimes need multiply divide constant get form can look table derivatives. Give new table.\nconstant integration [Exercises/Accum/lessons--euler.Rmd] [App: Exercises/Accum/find-C.Rmd]\n[[Exponential functions]] Moved introductory block\n[[Sine Cosine]]\n[[Logarithms]]\n[[Power functions]]\n[[Simple combinations ]] Moved next block\nComposition naked function linear interior function pattern seen table derivatives. [See Exercises/Accum/basic-modeling-functions.Rmd & interior-funs-1.Rmd]Sometimes need multiply divide constant get form can look table derivatives. Give new table.constant integration [Exercises/Accum/lessons--euler.Rmd] [App: Exercises/Accum/find-C.Rmd][[Exponential functions]] Moved introductory block[[Sine Cosine]][[Logarithms]][[Power functions]][[Simple combinations ]] Moved next blockProperties Accumulation\nTopics\nLinear properties\nSum difference\nMultiplication constant\n\nReversing limits integration\nAdditive property inserted limit integration\nDefinite integrals constant linear functions geometrically\nUnits dimension definite integral [Exercises/Accum/areas.Rmd] [wind-power.Rmd] [Exercises/Accum/Units_of_antiD.Rmd falcon-tell-mug.Rmd] [heat-engine.Rmd]\n\nExercies\nExercises/Accum/properties--anti-derivatives.Rmd\n\nProperties AccumulationTopics\nLinear properties\nSum difference\nMultiplication constant\n\nReversing limits integration\nAdditive property inserted limit integration\nDefinite integrals constant linear functions geometrically\nUnits dimension definite integral [Exercises/Accum/areas.Rmd] [wind-power.Rmd] [Exercises/Accum/Units_of_antiD.Rmd falcon-tell-mug.Rmd] [heat-engine.Rmd]\nLinear properties\nSum difference\nMultiplication constant\nSum differenceMultiplication constantReversing limits integrationAdditive property inserted limit integrationDefinite integrals constant linear functions geometricallyUnits dimension definite integral [Exercises/Accum/areas.Rmd] [wind-power.Rmd] [Exercises/Accum/Units_of_antiD.Rmd falcon-tell-mug.Rmd] [heat-engine.Rmd]Exercies\nExercises/Accum/properties--anti-derivatives.Rmd\nExercises/Accum/properties--anti-derivatives.RmdAdvanced algebraic methods\nTopics\nAntiderivatives method substitution\nReversing chain rule\n\nAntiderivatives method integration parts\nReversing product rule\n\n\nReadings: Chapter 30\nAdvanced algebraic methodsTopics\nAntiderivatives method substitution\nReversing chain rule\n\nAntiderivatives method integration parts\nReversing product rule\n\nAntiderivatives method substitution\nReversing chain rule\nReversing chain ruleAntiderivatives method integration parts\nReversing product rule\nReversing product ruleReadings: Chapter 30Review antiderivative methods\nTopics\nTables integrals [Exercises/Accum/function-order.Rmd]\n\nReadings: Chapter 31\nReview antiderivative methodsTopics\nTables integrals [Exercises/Accum/function-order.Rmd]\nTables integrals [Exercises/Accum/function-order.Rmd]Readings: Chapter 31Differential modeling\nReadings: Chapter ??\nDifferential modelingReadings: Chapter ??OrphanedAverage value (?)DD-142Z-02/discrete-inputs.RmdIODs drillLatex (e.g. DD-142Z-02/three-perspecitives-2.Rmd)","code":""},{"path":"change-accumulation.html","id":"change-accumulation","chapter":"27 Change and accumulation","heading":"27 Change and accumulation","text":"Consider table population versus year, records overall results every-10-year US Census since 1790\nFigure 27.1: US Population counted US Census Bureau: 1790-2020\npopulationThese discrete-time data, nobody dispute population continuous function time entitled graph Figure 27.2.\nFigure 27.2: US population since 1790. Source\nMany student readers book children 70 years old year 2100. Use Figure 27.4 make prediction population 2100.graph , might just sketch think trend. , formally, based ideas introduced Block 1, might seek exponential power-law function, fit data, extrapolate year 2100. next figure exactly , ’ll click “Show model prediction” see results.\nFigure 27.3: Predicted US population using exponential function (red) power-law function (green)\noccasions modeler alternative curve fitting. However, ’s best modeler knows much possible mechanisms process modeled can somehow incorporate processes model.population, know awful lot mechanisms involved: birth, death, immigration. births …. personal matter. mean ’s appropriate look mechanism terms births per person. ’re interested yearly growth population, ’s relevant rate births per person per year. ’s complicated rate, multiply population turns births per year, exactly right studying population. trend births per person per year downward since 1900. Immigration fluctuated decades. ’s going hard predict. death … Old age still primary risk factor death. population getting older, deaths per year may going .Births, deaths, immigration components population rate growth per year. statements previous paragraph suggest population rate growth per year going . census data don’t break population change components. Still, can check patterns decades, Figure 27.4.\nFigure 27.4: Annual growth rate US population (%)\n’s lot fluctuation, overall trend stands : population growth rate declining since mid-late 1800s. deviations trend telling. ’s relatively low growth rate seen 1870 census: ’s effect US Civil War. Great depression seen low growth 1930 1940. Baby Boom: look growth 1950-1960. bump 1990 2000? coincidentally, 1990 Immigration Act substantially increased yearly rate immigration.extrapolation historical pattern annual growth rate zero crossing 2075. know Block 2, zero crossing rate change corresponds local maximum. reasonable prediction therefore US population max second half 21st century decline thereafter.maximum population ? derivative tells us argmax, max. need make prediction future population accumulate yearly change population top known, current population. words, rather going population vs time rate change population versus time, need go way. process knowing derivative \\(\\partial_x f()\\) finding unknown function \\(f()\\) derived called anti-differentiation. Just name suggests, anti-differentiation opposite differentiation. ?predictions accumulate-population-growth model shown thin gray line Figure 27.3 along exponential power law models fit directly population vs year data. According accumulation model, population peaks 2075 390 million. Professional demographers make much sophisticated models using data many sources. demographers US Census Bureau predict population reach maximum 404 million 2060, shown little blue dot Figure 27.3.","code":""},{"path":"change-accumulation.html","id":"differentiation-and-anti-differentiation","chapter":"27 Change and accumulation","heading":"27.1 Differentiation and anti-differentiation","text":"Block 2 introduced derivative continuous function looking discrete differences. Given function \\(g(t)\\), quantified rate change using differencing operator. called \n\\[\\diff{t} g(t) \\equiv \\frac{g(t+h) - g(t)}{h}\\]\nwritten , \\(\\diff{t}\\) properly called finite-difference operator, since suggestion made \\(h\\) anything small number. moved \\(\\diff{t}\\) \\(\\partial_t\\) considering limit \\(h\\rightarrow 0\\) move fraught concern dividing zero, end found simple algebraic expressions derivatives naked modeling functions well rules handling basic ways combining functions using linear combinations, products, function combinations. rules sum rule, product rule, chain rule respectively.studying accumulation, ’ll follow much path. major difference starting point knowing function like \\(\\partial_t f(t)\\): derivative. construct \\(f(t)\\) \\(\\partial_t f(t)\\) derived, known first place. idea sometimes information comes us form rate change need figure function generated rate change.help keep mind fundamental principle calculus, even mental image principle remains blurry:Accumulation reverse operation differentiation, vice versa.make principle even easier remember, let’s restate using mathematical word used say precisely mean “accumulation”:Anti-differentiation reverse operation differentation, vice versa.mathematical notation differentiation simple: \\(\\partial_t f(t)\\). anti-differentiation notation typographically different. anti-derivative function \\(f(t)\\) written:\\[\\huge \\color{blue}{\\int} f(\\color{blue}{t}) \\color{blue}{dt}\\]\nmath notation consists several components, something say. components colored blue part general notation. can change name input variable \\(\\color{blue}{t}\\) whatever like, ’ll change \\(\\color{blue}{dt}\\) accordingly.R/mosaic notation anti-derivative exactly format derivative:","code":"antiD(f(t) ~ t)"},{"path":"change-accumulation.html","id":"anti-diff-viz","chapter":"27 Change and accumulation","heading":"27.2 Visualizing anti-differentiation","text":"Section 17.5 introduced non-standard visualization slope function. can build show function \\(f(x)\\) can reconstructed \\(\\partial_x f(x)\\).Figure 27.5 shows slope function visualization function \\(f(x)\\)\nFigure 27.5: slope function \\(\\partial_x f(x)\\) going reconstruct mother function \\(f(x)\\). sloped segments given label later reference.\n’ll reconstruct \\(f(x)\\) one segment time. Recall segments shows linear approximation \\(f(x)\\) input marked green dot. constructing slope function, threw away information vertical placement segment. Now recover discarded information, well can.big clue reconstruction function \\(f(x)\\) continuous. piecewise function graphed Figure 27.5 discontinuous; endpoints adjacent segments don’t meet .’s easy fix: ’ll just move segment (b) vertically becomes continuous segment ().\nFigure 27.6: Moving segment (b) become continuous segment ().\nNow () (b) joined, can join (c) :\nFigure 27.7: Moving segment (c) become continuous segments () (b).\nContinue process one segment time reconstruct \\(f(x)\\).\nFigure 27.8: joining segments together, picture \\(f()\\) complete.\nprocess reconstructs shape \\(f(x)\\) \\(\\partial_x f(x)\\). still something missing. never touched segment (). vertical location arbitrary. qualify claim reconstructed \\(f(x)\\). ’ve reconstructed function \\(\\widehat{f}(x)\\) whose derivative \\(\\partial_x f(x)\\). functions; function \\(\\widehat{f}(x) + C\\) can make legitimate claim anti-derivative \\(\\partial_t f(x)\\). ’ll return \\(C\\) later chapters, now ’ll just name : constant integration.population example started chapter, constructed model \\(\\partial_t f(t)\\), \\(f(t) = \\ln(P(t))\\). can plot \\(\\partial_t f(t)\\) using ordinary graph Figure 27.4, let’s use slope-function representation instead.\nFigure 27.9: slope-function visualization corresponding plot \\(\\partial_t f(t)\\) Figure 27.4.\nconstruct original function \\(f(t)\\), just connect segments Figure 27.9.\nFigure 27.10: Accumulating annual growth Figure 27.9.\naccumulated annual growth graph shows around 2075, accumulated growth 17% population 2020.may wonder ’m introducing anti-differentiation “slope-function visualization” rather “area curve.” One reason slope-function visualization closer logic Euler’s method, addition showing differentiation can undone, get free introduction Euler. reasons fundamental pedagogy challenges students relating differentiation anti-differentiation presented slope--area. ’ll start history …Pyrrhus Greek king invaded Italy 280 B.C. fought Romans. first battle, Heraclea, famous victory, second battle year later Asculum. History records Pyrrhus saying, second victory, “victorious one battle Romans, shall utterly ruined.” victories costly army sustained.pyrrhic victories occur throughout history: British Bunker Hill (1775), Napolean Borodino (1812), Lee Chancellorsville (1863).pyrrhic victory mathematics pedagogy: visualization integration “area curve.” account integration utterly dominant among graduates calculus courses. brilliant successful way give abstract operation anti-differentiation easily remembered visage. creates costs simply worth bearing.many genuine applications finding areas curves. Students, seeing emblematic calculus, often dis-motivated lack connection rhetoric importance calculus seeming unimportance primary application.’s extremely difficult make connection many genuine applications anti-differentiation mental image area.area easily shown fixed, delimited region, students introduced integration see anti-differentiation. can hard students make transition “slope point” “tangent line” slope function. cost paid moving integration anti-differentiation.Yin Yang calculus differentiation anti-differentation. Students successfully taught \\(f(x)\\) function, derivative slope function integral area function. creates unhelpful illusion derivatives anti-derivatives related function, intermediary . Translating image metaphor family generations, picture looks like \\(f(x)\\) parent \\(\\partial_x f(x)\\) \\(\\int f(x)dx\\) parent \\(f(x)\\). words, incorrect image encouraged anti-derivative grandparent derivative. fact anti-derivative derivative parent-child relationship.best, many people, relationship slope function area function hard see sometimes mysterious. (course ’s hard see: slope function second derivative area function.) ThisFor reasons, encourage instructors avoid defining calculus operation “area curve.” Make use areas part genuine application calculus. Save Riemann Sum courses analysis. demonstrating anti-differentiation, starting point function know derivative sought-function. Teach Euler connecting together short segments slopes. Emphasis connections differentiation anti-differentiation start: relationships one function another function, just every person mother child. anti-derivative mother child, derivative child mother.","code":""},{"path":"change-accumulation.html","id":"symbolic-anti-derivatives","chapter":"27 Change and accumulation","heading":"27.3 Symbolic anti-derivatives","text":"Euler method involves finite \\(h\\), just say \\(h\\) must non-zero. Otherwise, \\(f(t_0 + h)\\) exactly \\(f(t_0)\\). functions, however, ’s possible construct anti-derivative without needing deal \\(h\\) .Recall anti-differentiation undoes differentiation, vice versa. previous Block, found symbolic derivatives basic modeling functions general methods differentiating functions constructed linear combination, products, function composition. Using techniques Block 2, tables can constructed functions derivatives, looking like :Transforming table anti-derivatives merely matter re-labeling columns:unlike differentiation, anti-differentiation easy equivalents product rule chain rule (compositions functions).Recall every smooth, continuous function derivative defined everywhere function’s domain. Similarly, every function anti-derivative, even discontinuous, un-smooth functions nicely behaved anti-derivatives. sense anti-differentiation easy. ’s algebra anti-differentiation can hard often literally impossible.[Int-2b] Utilize knowledge derivatives rules backwards solve anti-derivatives.[Int-2f] Understand output anti-differentiation function known general solution information necessary find particular solution [DTK: language associate differential equations. : Find constant integration.][Int-2c] Understand notation indefinite integral include . integral symbol; b. variable integration (“respect ” variable); c. constant integration[Int-2d] Understand relationship (child) function (parent) integral.[Int-5c] Know common scientific application relationships base functions anti-derivatives: . Acceleration, Velocity, Position; b. Force, Work; c. Area, Volume; d. Cash flow, assetsCalculation luminance using light intensity different wavelengths integrated luminance function. https://en.wikipedia.org/wiki/Luminous_efficiency_functionPick Lorenz curve {.intheworld} Blocks 1 2. Integrate find Gini coefficient. Show Gini coefficient different types inequality therefore ’s good measure. integral poorest 25% 50% society.\"","code":""},{"path":"iteration-and-accumulation.html","id":"iteration-and-accumulation","chapter":"28 Iteration and accumulation","heading":"28 Iteration and accumulation","text":"Let’s review concept Euler step.Problem statement:seek find function, e.g. \\(f(t)\\) yet know.already know \\(\\partial_t f(t)\\). (following chapters ’ll show many instances unlikely-sounding situation, don’t know \\(f(t)\\) know \\(\\partial_t f(t)\\).) relationship, \\(\\partial_t f(t) \\longrightarrow f(t)\\) , course, revealed anti-differentiation.Setup:know make value \\(f(t)\\) particular time interest \\(t=t_0\\). “Making ” perfectly legitimate practice get started creating anti-derivative. reason hard explain see whole process anti-differentiation Euler method, hang . population modeling problem Chapter 27, interested forecasting population future, chose \\(t_0\\) recent year information: \\(t_0 = 2020\\). (polite mathematical conversation, “making ” pronounced “assuming.”)Consider quantity \\(h\\) regarded little bit \\(t\\): dimension. \\(h\\) “small,” “small” compared ? Often, modeling problem hand involves domain interest. instance, population modeling problem Chapter 27 involved forecast time interval year 2020 2100. Provisionally, take small mean 1% 0.1% extent domain interest. (population modeling problem, chose \\(h=1\\) year.)StepCompute value (still unknown) function \\(f(t)\\) input \\(t_0 + h\\) \n\\[f(t_0+h) = f(t_0) + h \\times \\partial_t f(t)\\]Now know little bit \\(f(t)\\), namely, value \\(t_0 + h\\).Since original problem figure \\(f(t)\\) domain interest (starting \\(t=t_0\\)), finished. taken one step journey many go.continue journey, take just found , namely \\(f(t_0 + h)\\). use starting point new step. don’t make anything already know \\(f(t_0 + h)\\).second step brings us \\(f(t_0 + 2h)\\)\\[f(t_0+2h) = f(t_0+h) + h \\times \\partial_t f(t+h)\\]\nthird:\n\\[f(t_0+3h) = f(t_0+2h) + h \\times \\partial_t f(t+2h)\\]long continue step--step process? original problem involved domain interest, selected \\(h\\) 1% 0.1% extent domain. \\(h\\) 1%, taking 100 steps get us far end domain. \\(h\\) 0.1%, need take 1000 steps.Using Euler method find \\(\\int f(t) dt\\) interval \\(t_0=0\\) \\(t_{end}=1\\). \\(t\\) quantity steps \\(h=0.01\\).","code":""},{"path":"iteration-and-accumulation.html","id":"automating-euler","chapter":"28 Iteration and accumulation","heading":"28.1 Automating Euler","text":"Although Euler method invented 18th century, became practicable way accumulating 1930s advent analog computing 1940s electronic computing first becoming available. days, primary mission computers accumulating trajectories artillery shells, problem inaccessible symbolic anti-differentiation complexities air resistence varying density air different altitudes, different humidity, .Nowadays computing roughly one-billionth cost World War II era, use computers just every task imaginable. early days, huge costs involved developing early computers justified prospect improved gunnery war. problems accumulation , specifically, Euler methods.today seems esoteric use computers fact prime motivation development. section introduces various ways programming Euler method computer.Euler method supplanted , modern methods whose inner workings based deeper knowledge calculus covered date programming methods automatically check adapt size \\(h\\).However sophisticated methods may , always easy use. example, R/mosaic antiD() operator draws one methods.","code":""},{"path":"iteration-and-accumulation.html","id":"euler-as-a-spreadsheet","chapter":"28 Iteration and accumulation","heading":"28.1.1 Euler as a spreadsheet","text":"Spreadsheets popular certain simple kinds computer programming. Euler method case point. Figure 28.1 shows formula layer Google Sheet implementing Euler method \\(\\int \\dnorm(t) dt\\). spreadsheet, NORMDIST() equivalent \\(\\dnorm()\\).\nFigure 28.1: formula layer spreadsheet implementing Euler method \\(\\int \\dnorm(x) dx\\). whole spreadsheet viewable \nfirst argument NORMDIST() reference cell column B stores sequence \\(t_0\\), \\(t_0 + h\\), \\(t_0 + 2h, \\ldots\\). (value \\(h\\) stored cell H2 (shown).) Column D contains results Euler calculation. starts time \\(t_0=0\\) referencing cell H4 (shown) contains starting value \\(f(t_0)\\). successive cell column refers one immediately , adding appropriate value NORMDIST() column multiplying \\(h\\) (, H2).10 Euler steps shown, 100 altogether. Typically viewing spreadsheet don’t see formula layer. Instead, results calculation cell presented. (Figure 28.2).\nFigure 28.2: Results formula layer shown Figure 28.1.\nPlotting column D column B gives graph \\(\\int \\dnorm(t) dt\\) versus \\(t\\). Notice output Euler method function stored table rather function formula. even though \\(\\int \\dnorm(t) dt\\) pretty simple form, namely, \\(\\pnorm(t)\\), spreadsheet makes look like something elaborate.Spreadsheets rightly criticized verbose. can make extremely challenging human programmer create spreadsheet claimed , let alone demonstrate result correct.Worse, ’s hard generalize spreadsheet handle given function rather one (, NORMDIST()) hard-coded sheet. usual practice copy spreadsheet customize use function whose anti-derivative sought. introduces potential human error way can hard detect line.","code":""},{"path":"iteration-and-accumulation.html","id":"using-antid","chapter":"28 Iteration and accumulation","heading":"28.1.2 Using antiD()","text":"R/mosaic antiD() operator uses symbolic differentiation can. Otherwise uses numerical methods spirit Euler. anti-differentiation spreadsheet done antiD():happens \\(\\dnorm(t)\\) one many functions anti-derivative calculated symbolically. (already know \\(\\int \\dnorm(t) dt = \\pnorm(t)\\), fact definition \\(\\pnorm()\\), known numerical calculations like Euler.)advantage using programming systems like R/mosaic provide way something result calculation. course plot f() slice_plot(), let’s show something much fundamental …know antiD() giving result give?Whenever calculation, ask similar question: “know [calculation] giving result ?” general, takes considerable experience provide answer question, case antiD(), approach simple: f() really anti-derivative dnorm(), differentiating f() give us something ’s dnorm().’s actual calculation:numerical methods, almost always error introduced round-calculations, never expect deviation zero. can see plot deviation (Look carefully vertical axis!) smaller 0.0000000001, tiny, tiny part size output \\(\\dnorm()\\).might seem odd use 3 lines R/mosaic commands confirm answer calculated one line. ’s pretty good representation much effort professional put testing result compared getting result.","code":"\nf <- antiD(dnorm(t) ~ t)\nfprime <- D(f(t) ~ t)\ndeviation <- makeFun(dnorm(t) - fprime(t) ~ t)\nslice_plot(deviation(t) ~ t, domain(t=c(-5,5)))"},{"path":"iteration-and-accumulation.html","id":"using-cumsum","chapter":"28 Iteration and accumulation","heading":"28.1.3 Using cumsum()","text":"antiD() produces function can evaluated input. contrast,\nEuler method described produces data table values , example, seen spreadsheet implementation Euler.R, data table can created data.table() function. ’ ’ll illustrate implement Euler format topic. raw ingredients :\\(t_0\\) \\(t_\\text{end}\\), start end input interval want accumulation.choice \\(h\\). ’ll set 1/100 length input interval.function want accumulate. ’ll represent tilde expression exactly manner makeFun(), D(), operators R/mosaic suite software. ’ll implement method series steps make data table whose t accum columns describe accumulated function.cumsum() function easy understand. First, know sum() adds together set numbers. instance, ’s data frame numbers 0, 1, 2, 3, …, 10. sum 55. cumulative sum also known “running sum.”Exercise 28.3  (cumsum)  Consider sequence: 4, 5, 3, 1, 2What sum?cumulative sum?good practice numerical methods package function, can easily apply method many different contexts. best way arrange calculation can debugged verified. function look like R:Let’s test accumulate(). Since dnorm() derivative pnorm(), accumulating dnorm() give function shape pnorm().plot, can see accumulated version dnorm() shape pnorm(). two functions shifted vertically. much?Euler method gives results roughly 0.16 units less true answer, pnorm(). Notice error practically \\(t\\). shows Euler accumulated dnorm() practically pnorm(t) - 0.16: pure vertical shift. (look closely, ’ll see diff exactly constant. ’s result using finite \\(h\\) Euler accumulation.)","code":"\n# Setup the incredients\ntilde_expr <- dnorm(t) ~ t\nt_0 <- -2\nt_end <- 2\nh <- (t_end - t_0) / 100\n# Create the function to be accumulated from the tilde expression\nf <- makeFun(tilde_expr)\n# Create a set of evenly spaced input values separated by h\n# tibble() arranges this as a data table\nResults <- tibble(\n  t = seq(t_0, t_end, by=h), # seq() makes a sequence\n  steps = f(t) * h,\n  accum = cumsum(steps)\n)\nn <- seq(0, 10, by=1)\nn##  [1]  0  1  2  3  4  5  6  7  8  9 10\nsum(n)## [1] 55\ncumsum(n)##  [1]  0  1  3  6 10 15 21 28 36 45 55\naccumulate <- function(tilde_expr, t_0=0, t_end=1, h=(t_end-t_0)/100) {\n  f <- makeFun(tilde_expr)\n  \n  tibble(\n    t = seq(t_0, t_end, by=h), \n    steps = f(t) * h,\n    euler = cumsum(steps)\n  )\n}\nPts <- accumulate(dnorm(t) ~ t, t_0=-1, t_end=3, h=0.01)\ngf_point(euler ~ t, data = Pts) %>%\n  slice_plot(pnorm(t) ~ t, color=\"red\")\nFor_plot <- Pts %>%\n  mutate(actual = pnorm(t),\n         diff = abs(actual - euler))\ngf_point(diff ~ t, data = For_plot) %>% \n  gf_lims(y = c(0, NA))"},{"path":"iteration-and-accumulation.html","id":"iteration","chapter":"28 Iteration and accumulation","heading":"28.2 Iteration","text":"important computational strategy behind Euler method, whether implemented spreadsheet R: iteration“Iteration” means something , , defined nicely New Oxford American Dictionary:repetition mathematical computational procedure applied result previous applicationYou saw iteration work Section 27.2 turned discrete sloping segments slope-function visualization continuous, joined line segments. started right endpoint segment (). applied procedure: change vertical position segment (b) left end (b) joins right end (). Now repeat , starting original segment () joined ()-(b) segments: move segment (c) vertically left end joined rightmost point ()-(b) segments. produces continuous ()-(b)-(c) structure. Repeat , using ()-(b)-(c) joining (d) . . Iteration.Iteration behind many algorithms used throughout mathematics computation generally. fundamental structure iteration involves three things:set items iteration performed. Call iteration set. Examples iteration sets: line segments slope-function visualization; cells spreadsheet; individual numbers sequence like 0, 1, 2, 3,object, called accumulator hold result accumulation. might shape single number, might sequence things, less like set (1).procedure takes accumulator well item (1) calculates something, augment accumulator.carry iteration, initialize accumulator way ’s appropriate, apply procedure first item set (1), thereby updating accumulator. Next, move second item set (1) update accumulator. Repeat items set (1). ’ve processed items accumulator holds result.Example 1: Summing set numbers.iteration set numbers, instance, 3, 5, -2, 1, 4.accumulator single number, initialize 0.procedure takes item iteration set updates accumulator adding item accumulator.accumulator starts 0. 3 added accumulator becomes 3. 5 added accumulator becomes 8. Next, -2 added accumulator becomes 6. 1 iteration set updates accumulator 7 , finally, last item iteration set—4—updates accumulator 11. final result: 11.Let’s look might written base R, even though R/mosaic software allows avoid constructions.Almost computer languages structure like loop R carrying repetition. Learning use things fundamental part computer programming.Example 2: cumulative sumWe’ll use iteration set previous example. accumulator two parts, running_sum set numbers. summation iteration, ’ll initialize running_sum zero. set numbers initialized empty set. addition updating running_sum, update procedure append running sum end set numbers. process appending called concatenation. One many ways R concatenate recent result looks likeIn R, c() function performs appending. “c” stands “concatenate.”’s one way write cumulative sum operation R:experienced programmers, cumulative-sum iteration code listed seem odd. ’s learning program mastered additional features programming language like indexing, enables refer specific item set. Many, many bugs programs originate faulty indexing; ’s always easy right.’s cumulative-sum iteration way seem familiar experienced programmers:programming languages Python C, looping style commonplace. also works R, experienced R programmers know set functions cumsum() cumprod() lapply() enable programmer write iteration operations without explicitly showing loop. Hiding loop makes program much smaller simpler, instance, following accumulation loop.Since functions like cumsum() carefully debugged validated authors, much reliable home-brew loops. addition, programmed run close hardware therefore fast. ’s issue iteration set containing five numbers, sets might well 100,000 times longer, .","code":"\niteration_set <- c(3, 5, -2, 1, 4)\naccumulator   <- 0 # initialize accumulator\nfor (item in iteration_set) { # for every item in the set, do ...\n  accumulator <- accumulator + item # the procedure on that item\n}\n# Done! accumulator holds the final result\naccumulator## [1] 11set_of_numbers <- c(set_of_numbers, running_sum)\niteration_set <- c(3, 5, -2, 1, 4)\nrunning_sum   <- 0 # initialize accumulator\nset_of_numbers <- c()\nfor (item in iteration_set) {\n  # procedure on one item\n  running_sum <- running_sum + item # update running_sum\n  set_of_numbers <- c(set_of_numbers, running_sum) # append\n}\n# set_of_numbers holds the result\nset_of_numbers## [1]  3  8  6  7 11\niteration_set <- c(3, 5, -2, 1, 4)\naccumulator   <- rep(iteration_set[1], length(iteration_set))\nfor (index in seq(2, length(iteration_set))) {\n  accumulator[index] <- accumulator[index-1] + iteration_set[index]\n}\naccumulator## [1]  3  8  6  7 11\niteration_set <- c(3, 5, -2, 1, 4)\ncumsum(iteration_set)## [1]  3  8  6  7 11"},{"path":"iteration-and-accumulation.html","id":"accumulating-population-change","chapter":"28 Iteration and accumulation","heading":"28.3 Accumulating population change","text":"Let’s return prediction future population show done. Recall started total population US estimated Census Bureau every ten years 1790 .21Those numbers monotonically increasing, projection future based just numbers bound give ever-increasing value. Augmenting data understanding mechanisms population growth, bringing additional information sources—families getting smaller average, people living longer—decided process census numbers give us better representation growth: annual per-capita population growth.Writing “annual per-capita population growth” explicit units gives “change population per year per person.” observed historical record quantity decreasing time way ’s reasonably extrapolated future straight-line function.part quantity “change population per year” units derivative respect time population: \\(\\partial_t P(t)\\). words, information ’re taking informative predicting future population growth, extrapolation growth rate, form derivative. ’re going transform derivative population function \\(P(t)\\). absolutely typical use anti-differentiation.annual growth rate population \\(\\partial_t P(t)\\) can approximated -per-decade data finite differencing:\n\\[\\diff{t} P(\\text{year}) = \\frac{P(\\text{year} + 10) - P(\\text{year})}{10}\\]\nquantity graphed Figure 27.4 little different, \npopulation growth rate per capital, , population growth rate divided population. terms derivatives, quantity using prediction function drawn blue line Figure 27.4 can directly estimate data \\(P(t)\\) \n\\[\\frac{\\partial_t P(t)}{P(t)} = 0.0071 - 0.000120 (t - 2020)\\]Someone absolutely mastered rules differentiation Block 2 might recognize \\[\\partial_t \\ln(P(t)) = \\frac{\\partial_t P(t)}{P(t)}\\]\nwords, modeling data told us derivative \\(P(t)\\) \\(\\ln(P(t))\\). Let’s accumulate .growth rate model \\[\\text{Growth rate model:}\\ \\ \\ \\partial_t \\ln(P(t)) = 0.0071 - 0.000120(t-2020)\\]’ll start 2020, know \\(P(t) = 331\\) million, \\(\\ln(P(2020)) = 19.618\\). According growth rate model, year 2021, growth rate \\(0.0071 - 0.000120(2021-2020)n= 0.00698\\)$ per year. means \\(\\ln(P(2021)) = 19.619 + 0.00698 = 19.6247\\).Performing accumulation simply accounting. model told us 4th column table year. first row table: \\(P(2020) = 331\\)M therefore \\(\\ln(P(2020)) = 19.618\\). get \\(\\ln(P(2021)\\) row, add number fourth column previous row. Continue row next. accumulated \\(\\ln(P(t))\\), can convert exponentiation \\(P(t)\\).[Int-2e] Determine units anti-derivative given base function variable integration.[Int-5a] Determine dimensions units utilizing graph.[Int-5b] Graph anti-derivative function given graph base function single point anti-derivative.[Int-2a] Utilize Euler’s Method approximate anti-derivatives value small.","code":""},{"path":"net-change.html","id":"net-change","chapter":"29 Accumulation as net change","heading":"29 Accumulation as net change","text":"derivative function \\(\\partial_t F(t)\\) tells us, input \\(t\\), instantaneous rate change mother function \\(F(t)\\). Suppose \\(F(t)\\) position car along city street, perhaps measured miles marked starting point. car, slowing , stopping, speeding traffic, velocity (instantaneous rate change position) changes time, \\(\\partial_t F(t)\\) different outputs different values input \\(t\\).accumulating \\(\\partial_t F(t)\\), , anti-differentiation, recover \\(F(t)\\). value \\(F(t)\\) \\(t\\) tells us amount distance covered car since … well, since ? Since beginning month? Since morning? Since car first manufactured? questions might legitimate purpose another, need careful using \\(F(t)\\) make sure result get answers question ’s relevant. ’ve built \\(F(t)\\), need specific answer “Starting ?”important way anti-derivative used involves specifying “Starting ?” input. Let’s call \\(t_a\\). Perhaps interest accumulating velocity know far ’ve traveled since starting present trip. set \\(t_a\\) start time.word “net” several meanings, including means fishing trapping butterflies. , use “net” reflects usage accounting. net quantity quantity minus deduction. Without taking account deduction, quantity called “gross” quantity. instance, can find gross weight bottle pickles putting sealed bottle scale. resulting gross quantity might important trucker carry load 10,000 bottles. consumer, weight pickles matters. gross weight subtract weight brine glass bottle. gives net weight.\nFigure 29.1: 32 ounces pickles (net) come package larger gross weight includes brine bottle.\nposition \\(t_a\\) can written accumulation \\(F(t_a)\\). net distance traveled time \\(t\\) difference \\[F(t) - F(t_a)\\] position now time \\(t\\) minus starting position.happens, every car feature display anti-derivative velocity evaluated current time. speedometer reads instantaneous velocity; anti-derivative shown odometer. ’re set trip want keep track far ’ve gone. look odometer start write . Later trip, know far ’ve gone, read odometer subtract value wrote start. \\(F(t) - F(t_a)\\).","code":""},{"path":"net-change.html","id":"quantifying-uncertainty-with-probability","chapter":"29 Accumulation as net change","heading":"29.1 Quantifying uncertainty with probability","text":"Note: section introduces new technical words, “probability,” “variance,” “state space,” “cumulative” broadly important quantitative work traditionally considered part calculus. Try understand words mean. help later studies downstream courses. examined details course.Uncertainty state unreliable undetermined. Probability —modern usage—way quantifying uncertainty, putting uncertainty scale. modern era, probability kind opposite uncertainty, state reliable determined. almost complete reversal definition probability reflects difficulty untrained people probability calculations correctly.mathematical formulation probability, central components “event” “state space.” event something happens, think one flip coin event, one frame bowling, wind speed particular instant. state space set possible outcomes event. state space coin flip famously heads tails. state space frame bowling numbers 0 10 reflecting number pins bowled . (’re ignoring “strikes” .) state space wind speed non-negative number might read anemometer.probability number assigned element state space. instance, coin flip, number 1/2 conventionally assigned possible outcomes: heads tails. two essential properties assigned numbers must valid probabilities:number must zero one (inclusive). can’t probability -0.2 13.added across elements state space, probability numbers must sum 1.probability number 0 assigned elements state space need listed first place, happen.probability number 1 assigned single element state space inevitable.possibly unfamiliar formal vocabulary used preceding, statements (1) (2) intuitive many people. might calculus contribute?course calculus, concerned particularly quantities continuous, e.g. location point number line, weight bucket ’s rained , etc. continuous quantity, state space number line \\(-\\infty < x < \\infty\\) finite segments number line, e.g. \\(0 \\leq x \\leq 1\\). Either way, state space consists infinite number possible values. example, one member \\(0 \\leq x \\leq 1\\) state space 0.963012894848362656100076390430914821056649089340673461090773. Another 0.4204042488709096655207811854786639390334021305202371464110919373058862984183853728834073997986972243. Still others \\(1/\\sqrt{2}\\) \\(1/\\pi\\) \\(1/e\\) without end.illustrate, sandbox allows specify target number like 0 1, ’ll call \\(\\tau\\) (tau). Using professional quality “random number generator” called rnorm(), ’ll generate 100 1000 1,000,000 events, random number 0 1. calculate many events hit specific target. can look events uncommenting middle line. last line counts many events “hit target.” (0 means, “none hit target.”)Play game many times like, whatever number \\(0 \\leq \\tau \\leq 1\\) think lucky. integer argument rnorm() specifies many trials run. sake burdening computers serving Daily Digital, don’t make argument much bigger 1,000,000. need change numbers blue font play game hit check answer button.TURN APP","code":"\ntau <- 1/3 # or whatever number you like between 0 and 1\n# rnorm(100) == beta # look at each of the events\nsum(rnorm(10000) == tau) # 10,000 events"},{"path":"net-change.html","id":"calculus-and-probability","chapter":"29 Accumulation as net change","heading":"29.2 Calculus and probability","text":"Given result “randomly hit target” experiment, reasonable conclude runif(0) picks numbers probability 0. better say probability infinitesimal, just like \\(h\\) definition derivative \\(dx\\) way write integrals.Calculus provides means assign infinitesimal probabilities elements continuous state space. strategy :Assign function whose output, state space, never negative.Ensure , state space, e.g. \\(x\\) interval \\(\\leq x \\leq b\\) \\[\\int_a^b\\! f(x) dx = 1\\]functions called “probability density functions.” ’s one probability density function:\\[\\mbox{uniform} (x) \\equiv \\left\\{\\begin{array}{cl}\\frac{1}{b-} & \\mbox{} \\ \\leq x \\leq b\\\\0&\\mbox{otherwise} \\end{array}\\right.\\]\nConsider question like, “’s probability outcome event governed uniform probability density \\(c\\)?”answer \\(f(c)\\). Neither \\(f(c) dx\\).Instead, answer \\(\\int_c^c f(x) dx = 0\\).Many non-mathematicians might answer question saying probability \\(f(c) dx\\). ’s something answer, remember \\(dx\\) notation meaning “take limit goes zero,” \\(f(c)dx\\) limit rather number. (Save trying sort shortcut: \\(f(c) dx\\) isn’t number. \\(\\int_c^c f(x) dx\\) number, namely 0.)\\(f(c)\\) much like concept “density.” can meaningfully say material density point. ’s useful say material mass point. mass material integral density space occupied material.Question \\[\\int_a^b dx\\ \\ \\mbox{?}\\]haven’t said function integrated . ☹︎ Let’s rewrite integral question \\[\\int_a^b 1 dx\\]. function integrated one output 1, regardless input. \\(b-\\) ✓ \\(b - + C\\) ☹︎ definite integral. constant integration. , said another way, answer \\((b+C) - (+C)\\), constant integration attaching evaluations anti-derivative limits integration. two \\(C\\) terms cancel . 1.4 ☹︎ Reasonable answer insofar definite integral, numerical limits integration, evaluates number. limits integration (\\(\\) \\(b\\)) parameters, definite integral function parameters. Question B According definition uniform\\((x)\\), \\[\\int_{-\\infty}^\\mbox{uniform}(x) dx\\ \\ \\mbox{?}\\]    0 ✓ Right. value uniform\\((x)\\) zero everywhere interval \\(- \\infty \\leq x \\leq \\).        1 ☹︎ bounds integration b. Remember lower bound uniform function.        \\(b - \\) ☹︎ Remember lower bound uniform function.        \\(- b\\) ☹︎ Remember lower bound uniform function. Question C According definition uniform\\((x)\\), \\[\\int_a^b\\mbox{uniform}(x) dx\\ \\ \\mbox{?}\\]0 ☹︎ uniform(x) definition probability density function. 1 ✓ can see using fact \\[\\int_a^b  dx = b - \\], \\(\\int_a^b \\mbox{uniform}(x) dx = 1\\). \\(b - \\) ☹︎ uniform(x) definition probability density function. \\(- b\\) ☹︎ uniform(x) definition probability density function. enough information know. ☹︎ uniform(x) definition probability density function. Question D Using results previous questions, \\[\\int_{-\\infty}^{\\infty} \\mbox{uniform}(x) dx\\ \\ \\mbox{?}\\]    0 ☹︎        1 ✓ ’s part definition probability density function, integral possible values \\(x\\) must 1.        \\(b-\\) ☹︎        \\(-b\\) ☹︎ ","code":""},{"path":"net-change.html","id":"the-probability-density-function","chapter":"29 Accumulation as net change","heading":"29.3 The probability density function","text":"probability density function helpful way visualizing possible outcomes event. looking graph density function, can see outcomes relatively likely .instance, probability density function called “exponential density.” \\[p(t) \\equiv k\\, e^{-t/k}\\]\nExponential densities often used model things like time earthquakes time engine failures. example, \\(t\\) measured years \\(k=1/100\\), exponential density standard model time consecutive 100-year storms location.Notice probability density zero negative time. ’s just common sense work; time consecutive storms can’t negative. Perhaps surprisingly, ’s substantially non-zero probability density time storms just 10 years, even less! notice small numbers y-axis; density much less 1. ’s OK, probability density probability.Question E much probability corresponds one small gray square area graph?    1 ☹︎ pick gray box, dimensions?        .0625 ✓ 6.25%        .125 ☹︎ pick gray box, dimensions?        .25 ☹︎ four gray boxes, one 25% Question F Using answer previous question, estimate probability (counting gray boxes) time 100 year storms 50 years less?    1 ☹︎ bounds t 0 50 years        .0039 ☹︎ answer percent        39% ✓ Correct. think answer counter-intuitive, almost 40% chance interval 100 year storms less 50 years, can appreciate ’s important hand probabilities quantitatively rather intuitively.        .25 ☹︎ bounds t 0 50 years ","code":""},{"path":"net-change.html","id":"the-cumulative-distribution","chapter":"29 Accumulation as net change","heading":"29.4 The cumulative distribution","text":"cumulative distribution translates probability density actual probability (number zero one). Formally, cumulative distribution \\[P(t) \\equiv \\int_{-\\infty}^t p(t) dt\\]Evaluating \\(P(t)\\) given value \\(t\\) gives probability. instance, \\(P(10) \\approx 0.095\\), roughly 10%. terms storms, means according standard model things, time consequtive 100-year storms 10% chance 10 years less!graph cumulative distribution shows might anticipated: hump function \\(p(t)\\) integral sigmoid function.Question G Imagine 100-year storm just happened location. probability next 100-year storm happen within 50 years?    11% ☹︎ ’s value \\(P(t=50)\\)        27% ☹︎ ’s value \\(P(t=50)\\)        39% ✓        51% ☹︎ ’s value \\(P(t=50)\\) Question H median time 100-year storms value 50% probability consecutive storms happen closer time value 50% consecutive storms happen apart value. median time 100-year storms, according standard model? (Hint: can read graph.)30 years ☹︎ 50 years ☹︎ 70 years ✓ 100 years ☹︎ 130 years ☹︎ ","code":""},{"path":"net-change.html","id":"the-expectation-value","chapter":"29 Accumulation as net change","heading":"29.5 The expectation value","text":"expectation value important way summarize probability density function. can valuable way inform decisions, topic ’ll save another day. , ’ll focus calculation expectation value .Expectation values useful, example, deciding whether make investment. Suppose offered “ground floor” opportunity start-company. statistics start-ups show 50% fail first year another 50% survivors fail year . ’ll forego salary, given stock options. think, 5 years, company gets far, options worth $5M. take job, instead , say, job paying $50K/year long-established company? simple model 1/32 chance options come $5M, otherwise worthless. expectation value $5,000,000 \\(\\times 1/32 =\\) $156,250. less make working long-established company 5 years. simple form decision-making compares expectation value start-($156,250) expectation value $50K/year job five years.Calculus provides tools working subtle models. working process event generates numerical outcome according probability density function \\(f(x)\\). collect outcomes many events: series numbers. know, average numbers often used represent “typical” outcome, shorthand way summarizing sequence .expectation value value get average construct infinitely long series events. “Infinitely long series” imaginary, theoretical construct. calculus provides way simulate infinitely long series. expectation value corresponding probability density function \\(f(x)\\) integral:\n\\[\\int_{-\\infty}^\\infty x \\cdot f(x) dx\\]Question Recall uniform probability density one generates outcomes equally likely number specified lower upper bounds. uniform density \\(\\) \\(b\\), probability density function \\[\\mbox{uniform} (x) \\equiv \\left\\{\\begin{array}{cl}\\frac{1}{b-} & \\mbox{} \\ \\ \\leq x \\leq b\\\\0&\\mbox{otherwise} \\end{array}\\right.\\] expectation value uniform(x), , \\[\\int_{-\\infty}^{\\infty} x\\ \\mbox{uniform}(x) dx \\mbox{?}\\] Hint: really need consider \\[\\int_a^b x\\ \\mbox{uniform}(x) dx\\], since \\[\\int_{-\\infty}^\\mbox{uniform}(x) dx=\\int_b^{-\\infty} \\mbox{uniform}(x) dx=0\\]\\((b-)/3\\) ☹︎ anti-derivative \\(x \\cdot\\) uniform\\((x)\\) \\[\\frac{1}{2}\\frac{1}{b-} x^2\\]. \\((+ b)/2\\) ✓ \\(\\sqrt{^2 + b^2}\\) ☹︎ anti-derivative \\(x \\cdot\\) uniform\\((x)\\) \\[\\frac{1}{2}\\frac{1}{b-} x^2\\]. \\((-b)/2\\) ☹︎ Remember \\(b^2 - ^2 = (b+)(b-)\\) involves \\(\\infty\\). ☹︎ think ’re plugging \\(\\pm \\infty\\) bounds definite integral. remember \\(\\mbox{uniform}(x < ) = \\mbox{uniform}(b < x) = 0.\\) sandbox gives probability density function exponential process used example time interval successive 100 year storms. task compute expectation value time storms. symbols, \\[\\int_{-\\infty}^\\infty t\\times p(t)\\, dt\\] can use antiD() find antiderivative Inf stand infinity.[Int-3a] Understand notation limits integration within definite integral.[Int-3b] Determine units definite integral (MMAC pg. 614).[Int-3c] Use algebraic properties definite integrals (MMAC pg. 615-616) calculate definite integrals.[Int-3d] Calculate definite integrals graphically[Int-4a] Understand Fundamental Theorem Calculus Part 2 evaluate definite integrals[Int-4b] Comprehend Fundamental Theorem Calculus Part 2 graphically can calculate area curves (MMAC pgs. 644-645)[Int-4c] Understand Fundamental Theorem Calculus Part 1 net accumulation function[Int-4d] Understand definite integral variable limit integration outputs functionBy introducing parent/child metaphor kind relationship captured differentiation, ’ve anticipated “Fundamental Theorem.” therefore won’t seem fundamental.don’t overdo “Fundamental” part.[Int-6a] Understand relationship hump function sigmoidal function.[Int-6b] Discuss scientific application probability density cumulative probability.[Int-6c] Understand concept expected value.","code":"\n# probability density\np <- makeFun(ifelse(t < 0, 0, exp(-t/100)/100) ~ t)\n# For the expectation value, we want to integrate t*p(t) \nF <- antiD(...integrand... ~ t)\n# Evaluate\nF(...upper...) - F(...lower...)"},{"path":"accum-advanced-algebra.html","id":"accum-advanced-algebra","chapter":"30 Advanced algebraic methods","heading":"30 Advanced algebraic methods","text":"[Int-7a] Find integral algebraically using technique u-substitution.[Int-7b] Find integral algebraically select functions using Integration Parts.","code":""},{"path":"accum-advanced-algebra.html","id":"differentials","chapter":"30 Advanced algebraic methods","heading":"30.1 Differentials","text":"notation using course “derivative \\(f()\\) respect \\(x\\) \\[\\partial_x f\\] subscript \\(\\partial\\) indicates ”respect \" variable, curly-d \\(\\partial\\) signals “derivative.” identification “respect ” variable particularly important function \\(f()\\) one input, example \\(f(x, t) \\equiv e^{-k x} \\sin(\\omega t)\\).anti-differentiation (also called “integration”), write things differently, example \\[\\int f(x, t) dx\\] \\(dx\\) signals “respect ” variable. just \\(\\partial_x f(x, t)\\) \\(\\partial_t f(x,t)\\) different functions, \\(\\int f(x, t) dx\\) \\(\\int f(x, t) dt\\). Writing anti-differentiation/integration way follows convention long standing.interpreting sequence symbols like \\(\\int f(x,t) dx\\), ’s natural think sequence three parts:\\[\\underbrace{\\int}_{\\mbox{integral sign}} \\overbrace{f(x, t)}^{\\mbox{function anti-differentiated}} \\underbrace{dx}_{\\mbox{'respect '}}\\]analogy, sentence\\[\\mbox{loaded snacks.}\\]consists five parts: five words sentence.can also see “loaded snacks” three parts:\\[\\underbrace{\\mbox{}}_{\\mbox{subject}}\\  \n\\overbrace{\\mbox{loaded }}^{\\mbox{verb}}\\ \\ \\ \n\\underbrace{\\mbox{snacks}}_{\\mbox{object}}\\]Likewise, integrate sentence can seen consisting just two parts:\\[\\underbrace{\\int}_{\\mbox{integral sign}} \\overbrace{f(x, t) dx}^{\\mbox{differential}}\\]differential corresponds little sloped segments add calculating definite integral numerically using slope function visualization. \n\\[\\underbrace{\\int}_{\\mbox{Sum}} \\underbrace{\\overbrace{f(x,t)}^\\mbox{slope segment}\\ \\  \\overbrace{dx}^\\mbox{run}}_\\mbox{rise}\\]differential genuine mathematical object used, example, analyzing geometry curved spaces, Theory General Relativity. well beyond scope introductory calculus course.one place introductory calculus need manipulate differentials: carrying anti-differentiation functions basic modeling functions linear interior function nonetheless anti-derivative can expressed algebra.thinking terms differentials see sentence like following:“\\(\\int \\sin(x) \\cos(x) dx\\), make substitution \\(u = \\sin(x)\\), implying \\(du = \\cos(x) dx\\) getting \\(\\int u du\\), simple integrate.”table gives examples functions differentials. “w.r.t” means “respect .”can see, differential function simply derivative function followed little \\(dx\\) \\(dt\\) whatever appropriate “respect ” variable.Note: Tradition write something like \\(u \\equiv e^{3 x}\\) rather \\(u(x) \\equiv e^{3 x}\\). traditional notation ’ll use following exercises.Question differential \\(u = x + 5\\)?\\(du = dx\\) ✓ Since \\(\\partial_x (x+5) = 1\\). \\(du = (x+5)dx\\) ☹︎ used \\(\\partial_x (x+5)\\) instead \\((x+5)\\) right side. \\(du = 5 dx\\) ☹︎ \\(\\partial_x (x+5) = 5\\)? ! \\(du = x dx\\) ☹︎ used \\(\\partial_x (x+5) = 1\\) instead \\(x\\) right side. Question B differential \\(u = \\sin(2x + 5)\\)?\\(du = 2 \\cos(2x + 5) dx\\) ✓ Since \\(\\partial_x \\sin(2x + 5) = 2 \\cos(2x + 5)\\). \\(du = (2x+5)dx\\) ☹︎ used \\(\\partial_x \\sin(2x+5)\\) instead \\((2x+5)\\) right side. \\(du = 5 dx\\) ☹︎ \\(\\partial_x \\sin(2x+5) = 5\\)? ! \\(du = 2x dx\\) ☹︎ used \\(\\partial_x \\sin(2x+5) = 2 \\cos(2x + 5)\\) instead \\(2x\\) right side. Question C differential \\(v = e^x\\)?\\(du = e^x dx\\) ☹︎ name function \\(v()\\), \\(u\\). differential written \\(dv\\). \\(dv = e^x dx\\) ✓ Since \\(\\partial_x e^x = 1\\). \\(du = x dx\\) ☹︎ name function \\(v()\\), \\(u\\). differential written \\(dv\\). \\(dv = x dx\\) ☹︎ \\(\\partial e^x = e^x\\), \\(x\\). Question D differential \\(f = \\cos(\\ln(t))\\)?\\(df = -\\sin(\\ln(t))/t dt\\) ✓ Since chain rule tells us \\(\\partial_t\\cos(\\ln(t)) = -\\sin(\\ln(t))/x\\). \\(du = -\\sin(\\ln(t))/t dt\\) ☹︎ ’s \\(u\\) sight problem. ’s \\(f\\). \\(dv = -\\sin(\\ln(t))/t dt\\) ☹︎ ’s \\(v\\) used problem. ’s \\(f\\) ’re asking . \\(df = -\\sin(\\ln(x))/x dx\\) ☹︎ \\(f\\) function \\(t\\), \\(x\\). \n","code":""},{"path":"accum-advanced-algebra.html","id":"u-substitution","chapter":"30 Advanced algebraic methods","heading":"30.2 U-substitution","text":"Differentiation anti-differentiation operations undo one another. instance, \\[F(t) = \\int \\left[\\partial_t F(t)\\right] dt + C\\] \\[f(t) = \\partial_t \\int f(t) dt\\]\nuse differentiation integration information one form (instance measurement current circuit) find usefult translate another form (instance voltage across element circuit).little reason use \\(\\partial_t\\) \\(\\int \\left[\\right]dt\\) cancel , basis successful strategy finding anti-derivatives algebraically. ’s differentiate/integrate algorithm behind u-substitution.Pick function \\(f()\\) another function \\(g()\\). Typically \\(f()\\) \\(g()\\) belong family basic modeling functions, e.g. \\(e^x\\), \\(\\sin(t)\\), \\(x^n\\), \\(\\ln(x)\\), . purpose illustration, ’ll use \\(f(x) = \\ln(x)\\) \\(g(t) = \\cos(t)\\).Compose \\(f()\\) \\(g()\\) produce new function \\(f(g())\\) , case, \\(\\ln(\\cos(t))\\).Use chain rule find \\(\\partial_t f(g(t))\\). example, derivative \\(\\ln(x)\\) \\(1/x\\), derivative \\(g(t)\\) \\(-\\sin(t)\\). chain rule, \\[\\partial_t f(g(t)) = - \\frac{1}{g(t)} \\sin(t)= -  \\frac{\\sin(t)}{\\cos(t)} = - \\tan(t)\\]sense, just watched function give birth another straightforward process differentiation. witnessed birth, know integration mother \\(\\tan(t)\\), namely \\(\\int \\tan(t) dt = \\ln(\\cos(t)\\). future reference, might write diary integrals:\n\\[\\int \\tan(t) dt = - \\ln(\\cos(t)) + C\\]\nSaving fact diary helpful. next time need find \\(\\int \\tan(x) dx\\), can look answer (\\(-\\ln(\\cos(x)) + C\\)) diary. use \\(\\int \\tan(x) dx\\) lot, probably come memorize answer, just already memorized \\(\\int \\cos(t) dt = \\sin(t)\\) (fact actually use lot rest course).Now u-substitution game. trick take problem form \\(\\int h(t) dt\\) extract \\(h(t)\\) two functions, \\(f()\\) \\(g()\\). ’re going \\(h(t) = \\partial_t F(g(t))\\), \\(\\partial_x F(x) = f(x)\\) ’ve done , answer original integration question: \\(\\int h(t) dt = F(g(t)) + C\\).’s Example 7 MMAC book:Evaluate definite integral \\(\\int \\frac{\\sin(\\ln(x))}{x} dx\\).don’t know ahead time integral amenable solution u-substitution. know, ’s . look instruction manual calculating integrals don’t yet know:integrand (\\(h(x)\\) \\(\\int h(x) dx\\)) one basic modeling functions (, perhaps, linear interior function)?, ’ve already memorized answer done. …Assume moment—without guarantee work, mind —answer can built using u-substitution. therefore look hard \\(h()\\) try see plausible form looks like derivative \\(f(g(x))\\).problem hand, can readily see something form \\(f(g(x))\\) \\(\\sin(\\ln(x))\\). immediately gives candidate \\(g(x)\\), namely \\(g(x)\\equiv \\ln(x)\\) don’t know \\(f()\\) yet, \\(g()\\) right guess, u-substitution going work, know \\(f()\\) something produces \\(\\sin()\\) differentiate . ’s \\(-\\cos()\\). now guess \\[h_\\mbox{guess}(x) = -\\cos(\\ln(x)) \\partial_x \\ln(x) = - \\cos(\\ln(x)) / x\\]guess matches actual \\(h()\\) win. answer \\(\\int h(x) dx\\) \\(f(g(x)) = -\\cos(\\ln(x))\\). , see plausible guess \\(g(x)\\) try. can’t find one works, go toIntegration parts. ’ll talk later.integration parts doesn’t work … variety possibilities asking math professor (much larger set functions hand ), looking table integrals (say, collective calculus diary generations math professors), using computer algebra system, using numerical integration. One work.Question E \\(h(x) = 2x/(x^2 + 2)\\) following plausible candidate interior function \\(g(x)\\)?    \\(\\sin(x)\\) ☹︎        \\(\\ln(x)\\) ☹︎        \\(2x\\) ☹︎ order interior function \\(g(x)\\) function embracing . \\(2x\\) standing proudly , ’s good choice \\(g(x)\\)        \\(x^2 + 2\\) ✓ Question F Continuing integral \\(h(x) = 2x/(x^2 + 2)\\) working guess \\(g(x) = x^2 + 2\\), see part \\(h()\\) match \\(\\partial_x g()\\)?    \\(1/x\\) ☹︎ ’s anything like \\(\\partial_x g(x)\\).        \\(\\ln(x)\\) ☹︎        \\(2x\\) ✓ Question G Taking seriously progress made previous two questions, now need write \\(h(x)\\) \\(f(x^2 + 2) 2x\\)? \\(f()\\) make match \\(h(x)\\)?\\(f(x) = \\sin(x)\\) ☹︎ \\(f(x) = \\ln(x)\\) ☹︎ \\(f(x) = 1/x\\) ✓ \\(x^2 + 2\\) ☹︎ Question H \\[\\mbox{Find plausible interior g(x) } \\ x \\exp(x^2 + 3)\\]    \\(\\exp(x)\\) ☹︎        \\(x\\) ☹︎        \\(x^2 + 3\\) ✓        \\(x^2\\) ☹︎ interior function everything embraced parentheses exterior function \\(f()\\). Question Using candidate \\(g()\\) previous question, exterior f(x) \\(x \\exp(x^2 + 3)\\)\\(f(x) = \\exp(x)\\) ✓ \\(f(x) = x\\) ☹︎ \\(f(x) = x \\exp(x)\\) ☹︎ , resulting \\(h()\\) something like \\((x^2 + 3) \\exp(x^2 + 3)\\) . \\(f(x) = \\ln(x)\\) ☹︎ Question J candidates \\(f()\\) \\(g()\\) produce \\[f(g(x))\\, \\partial_x g(x) = x^3 \\cos(x^4)\\ ?\\]\\(f(x) = \\cos(x)/4\\) \\(g(x) = x^4\\) ✓ 1/4 cancels 4 produced \\(\\partial_x g(x)\\). \\(f(x) = \\cos(x)\\) \\(g(x) = x^4\\) ☹︎ \\(f(x) = x^4\\) \\(g(x) = \\cos(x)\\) ☹︎ \\(h(x)\\) involves \\(\\cos(x^4)\\) \\(cos^4(x)\\). , \\(\\int h(x) dx = F(g(x))\\), \\(\\partial_x F(x) = f(x)\\).Question K \\[\\int \\frac{\\sin(x)}{\\cos^5(x)}dx\\ ?\\]\\(\\ln(cos(x))\\) ☹︎ \\(- \\frac{1}{4} \\cos^{-4}(x)\\) ✓ \\(\\frac{1}{6} \\cos^{-6}(x)\\) ☹︎ \nQuestion L Use u-substitution find \\[\\int \\frac{4 e^{4x} + 4}{e^{4x}}dx\\]\\(\\ln(e^{4x} + 4)\\) ✓ \\(1/(e^{4x} + 4)\\) ☹︎ \\(\\frac{1}{4} e^{4x} + 4\\) ☹︎ \\(\\frac{1}{2} 1/(e^{4x} + 4)^2\\) ☹︎ ","code":""},{"path":"accum-advanced-algebra.html","id":"integration-by-parts","chapter":"30 Advanced algebraic methods","heading":"30.3 Integration by parts","text":"far CalcZ developed methods algebraically finding anti-derivatives small set functions. include basic modeling functions \\[\\int\\cos(3x)dx = \\frac{1}{3}\\sin(3x) + C\\] complicated functions reverse chain rule, \\[\\int x^2 \\exp(x^3) dx = \\frac{1}{3} \\exp(x^3) + C .\\]bit work, can extend broader class functions fit two classes examples . example, consider finding anti-derivatives following functions:\n\\[f(x) \\equiv x e^x, \\ \\ \\ g(x)\\equiv x \\cos(x),\\ \\ \\mbox{}\\ \\ h(x) = x \\ln(x)\\] None basic modeling functions none fit “came chain rule” pattern.Now, ’re going explore “guess correct” method types anti-derivatives. doesn’t always work, ’s impressive.Note function products \\(x\\) basic modeling functions. Finding anti-derivatives functions , sense, involve reversing product rule.Consider \\(f(x) = x e^x\\). seem come blue, notice \\(f(x) = x \\partial_x(e^x)\\). strategy three steps.First, find helper function substituting \\(\\partial_x(e^x)\\) value produced differentiation. case \\(\\partial_x (e^x) = e^x\\), helper function \\(x e^x\\).Second, differentiate helper function, can using product rule: \\[\\partial_x (x e^x) = x e^x + e^x\\]Third, take anti-derivative term equation. easy, one .\n\\[\\int \\partial_x (x e^x)\n = \\int x e^x dx + \\int e^x dx\\\\\n \\mbox{integrating can ...}\\\\\nx e^x\\ \\ \\ \\ = \\int x e^x dx +\\ \\ \\ \\ e^x\\] one don’t know original problem. now know , re-arranging previous equation:\n\\[\\int x e^x dx = x e^x - e^x + C\\]\nadded constant \\(C\\) end get entire family anti-derivatives.Aren’t sure answer right? can check computing derivative answer see gives \\(x e^x\\).Problem 1: Go steps find anti-derivative \\(g(x) \\equiv x \\cos(x)\\).Step 1 hint: know anti-derivative \\(\\cos(x)\\) \\(\\sin(x)\\), appropriate helper function function \\(x\\, \\sin(x)\\). Now steps (2) (3): (2) take derivative helper function (3) integrate term result.Question M derivative helper function respect \\(x\\)?\\(\\partial_x \\mbox{helper}(x) = \\sin(x) + x \\cos(x)\\) ✓ \\(\\partial_x \\mbox{helper}(x) = \\sin(x) + x \\sin(x)\\) ☹︎ \\(\\partial_x \\mbox{helper}(x) = \\sin(x) + \\cos(x)\\) ☹︎ \\(\\partial_x \\mbox{helper}(x) = \\sin(x)\\cos(x)\\) ☹︎ Question N \\[\\int \\partial_x \\mbox{helper}(x)\\ ?\\]\\(\\mbox{helper}(x) + C\\) ✓ included constant integration \\(C\\) just reminder. \\(\\frac{1}{2} \\mbox{helper}^2(x)\\) ☹︎ \\(1 / \\mbox{helper}(x)\\) ☹︎ Whatever , ’s just complicated original integral. obvious way . ☹︎ Actually, answer simple, even doesn’t seem get us anywhere. Wait next problem! Question O integral respect \\(x\\) first part expanded form helper function, , \\(\\int \\sin(x) dx\\)?\\(-\\cos(x)\\) ✓ one basic modeling functions. \\(\\cos(x)\\) ☹︎ Close. \\(\\cos(x) = \\partial_x \\sin(x)\\), want \\(\\int \\sin(x) dx.\\) \\(e^x \\sin(x)\\) ☹︎ \\(e^x \\cos(x)\\) ☹︎ Question P integral respect \\(x\\) second part expanded form helper function, , \\(\\int x\\, \\cos(x)\\)?’s original problem! thought showing us problem. didn’t know answer started, able now? ☹︎ understandable frustration. think! Now original problem written part equation two integrals know. ’s original problem. ’ve got equation involving original problem two bits algebra/calculus know . Thanks! ✓ \\(\\sin(x)\\) ☹︎ true, \\(\\partial_x \\sin(x)\\) give us \\(x\\, \\cos(x)\\). , know, \\(\\partial_x \\sin(x) = \\cos(x)\\), answer must wrong. Solve answer original function write function R notation :Problem 2: Use procedure find anti-derivative \\(x\\, \\cos(2x)\\). Since \\[\\cos(2x) = \\frac{1}{2}\\partial_x \\sin(2 x)\\] reasonable guess helper function \\(x \\sin(2x)\\).(intentionally dropped \\(1/2\\) simplify rest procedure. ’ll see multiplicative constants don’t matter, since sides equation showing derivative helper function. can see keeping \\(1/2\\) helper function watching happens .)work steps careful constants make sure check final answer differentiating.Question Q \\(\\partial_x x\\, \\sin(x)\\)?\\(\\sin(x) + x\\, \\cos(x)\\) ✓ \\(\\sin(x) + x\\, \\sin(x)\\) ☹︎ \\(\\cos(x) + x\\, \\sin(x)\\) ☹︎ \\(\\cos(x) + x\\, \\cos(x)\\) ☹︎ Question R \\(\\int \\partial_x [ x\\, \\sin(x)] dx\\)?\\(x\\, \\sin(x)+C\\) ✓ Integration undoes differentiation! \\(\\sin(x)+C\\) ☹︎ \\(\\cos(x)+C\\) ☹︎ \\(x\\, \\cos(x)+C\\) ☹︎ Question S \\(\\int x\\, \\cos(x) dx\\)?\\(x\\, \\sin(x) + \\cos(x)\\) ✓ \\(x\\, \\cos(x) + \\cos(x)\\) ☹︎ \\(x\\, \\cos(x) + \\sin(x)\\) ☹︎ \\(x\\, \\sin(x) + \\sin(x)\\) ☹︎ giant tortoise (good eyesight standing unobstructed plane!) spies head lettuce ground 65 meters away. hungry (knowing shortest path two points plane!), tortoise takes straight line lettuce. pretty quickly reaches top speed, starts tire. velocity function time (meters per minute) modeled \\(v(t) = 7 t e^{−0.3t}\\), long take tortoise reach lunch? Answer question finding calculus/algebra formula tortoise’s displacement use approximate long takes get lettuce.’re going looking \\(\\int v(t) dt = 7 \\int t e^{-0.3 t} dt\\).’ll call left side equation “displacement(t).”\nUse integration parts find displacement(t) simple formula \\(t\\).tortoise reach cabbage time \\(t^\\star\\) \\(\\mbox{displacement}(t^\\star) = 65\\) meters. Graph displacement function find \\(t^\\star\\). can use sandbox. (Note graphics domain isn’t necessarily best choice answering question.)Question T time \\(t^\\star\\) tortoise reach cabbage?5.95 sec ☹︎ 10.85 sec ✓ 15.75 sec ☹︎ Never! (, \\(t^\\star\\) infinite. ☹︎ Commentary: procedure using find anti-derivatives can formalized method called integration parts (IBP). However, rather simply giving formula algorithm, wanted understand actually going behind scenes. formal IBP approach, try re-arrange function integrating product two simple functions: \\[\\int f(x)\\, \\partial_x g(x)\\, dx\\], assume part original function derivative function \\(g(x)\\). ’ve decided make re-arrangement \\(f(x)\\) \\(\\partial_x g(x)\\), calculated \\(g(x)\\) \\(\\partial_x g(x)\\), can write original integral new, possibly simpler, way:\n\\[\\int f(x)\\, \\partial_x g(x)\\, dx = f(x)\\, g(x) - \\int [\\partial_x f(x)]\\, g(x) dx\\] Notice formula replaces integral want compute another integral. idea new integral easier compute one started . procedure works much generality examples , easy use. need correctly assign \\(f(x)\\) \\(\\partial_x g(x)\\) parts original function, need able integrate \\(\\partial_x g(x)\\) get \\(g(x)\\). Finally, need able integrate \\([\\partial_x f(x)]\\, g(x)\\). Perhaps can go back look previous problems general description procedure.","code":"makeFun( ...your stuff here... ~ x)\ndisplacement <- makeFun(77.77 * WHAT ~ t)\nslice_plot(displacement(t) ~ t, domain(t=c(0,5)))"},{"path":"accum-advanced-algebra.html","id":"application-to-probability","chapter":"30 Advanced algebraic methods","heading":"30.3.1 Application to probability","text":"DD-08 used exponential probability density talked expectation values. Translate following step--step process, asking questions along way.Find \\(\\int \\frac{1}{k} t e^{-t/k} dt\\), expectation value exponential probability distribution.\\[\\int_a^b u \\cdot dv = \\left.u\\cdot v \\right|_a^b - \\int_a^b v\\cdot du\\]Let’s look function \\(\\frac{1}{k}\\ t \\ e^{-t/k}\\)Suppose let \\(dv = \\frac{1}{k} e^{-t/k} dt\\). gives \\(v= -e^{-t/k}\\).Let \\(u = t\\). \\(du = dt\\).Plugging integration--parts formula \\[\\int_{0}^\\infty \\frac{1}{k} t e^{-t/k} dt = \\left[ t e^{-t/k}\\right]_{0}^\\infty + \\int_{0}^{\\infty}e^{-t/k}dt= 0  - \\left[k e^{-t/k}\\right]_0^\\infty = k\\]","code":""},{"path":"antidiff-review.html","id":"antidiff-review","chapter":"31 Review of anti-differentiation methods","heading":"31 Review of anti-differentiation methods","text":"Whenever undertake study field, ’s helpful able figure already learned enough can apply know confidence solve analysis design tasks encounter. academia, sidestep heart important question define “enough” procedural terms: “enough” semester ended passed final exam. academic institutions, especially ones based liberal arts, ’s little point trying definitive. , “analysis design tasks [] encounter” yet unknown, even though can make reasonable guesses many .never know know integration. Thousands talented highly trained mathematicians applied scientists contributed body knowledge 300+ years simply don’t enough time life master . Even devoted life task, field evolves. instance, 1953 (may seem like antiquity) hugely important integration innovation presented paper. method, involves using random numbers, refined, extended, improved. breakthrough 1988 led algorithm solving genuinely important applied problems statistics previously thought impossible.Since ’ll never know everything integration, need prioritize. yet position set priorities. ’re start university-level sequence courses don’t yet know encounter. course, instructors know ’s sequence courses can make sensible choices , except … ’s courses depends traditions conventions fields interpreted textbook writers fields. ’s rooted textbooks instructors used students. turn, textbooks shaped education earlier textbook authors 50 100 years ago.Another aspect prioritization make imperatives jobs teachers. Instructors focus topics can assessed successfully resources hand. practice means topics answers either right wrong possible generate new assessment questions easily. Sometimes, places, cart gets put horse ease assessment becomes highest priority.CalcZ motivated desire start scratch reframe priorities according skills likely need next years. Yet disservice sweep floor completely clean. important part work next years engaging instructors communicate using conceptions calculus, largely formed educated.brings us … today’s Daily Digital. already introduced methods anti-differentiation based algebraic notation, specifically anti-derivatives basic modeling functions linear interior function. important relatively easy teach learn.Today ’re going introduce two algebraic methods anti-differentiation: “u-substitution” “integration parts.” may encounter future courses. “may” likely enough instructors courses rank high-priority topics introduction calculus. want us teach topics topics without argument traditional components introductory statistics courses.Regrettably, emphasis three algebraic methods integration give picture integration algebra. . Integration functions. many important widely used function types algebraic solution problem integration. Yet every function can anti-differentiated. , good technique anti-differentiating function readily hand via numerical techniques similar Euler method. methods implemented pretty simple R function: antiD(). Consider antiD() learning use fourth method integration, one much easier either u-substitution integration parts. Since antiD() can handle comers, algebraic methods can handle small (hard predict) set functions, terms using anti-derivatives, antiD() highest priority , , adequate integration. algebraic methods integrating basic modeling functions give vocabulary need communicate huge majority people learned calculus traditional, algebraic way. U-substitution integration parts bring marginally along, nearly far along computer algebra systems even traditional printed handbook called “table integrals.”Finally, learn statistics, way take sample fundamental importance whether get faithful representation process. calculus textbooks (even MMAC text), sample integration problems highly influenced relatively ease instructors generate new never--seen functions can anti-differentiated using u-substitution integration parts. ’s safe say never encounter functions professional uses calculus. (Uses teaching calculus, !)difficulty using u-substitution integration parts, league vast majority calculus students. Think fellow students master topic way think ice dancers. ’s beautiful watch, hardly solves every problem. People fall face strapped pair skates nonetheless made huge contributions technical fields, even involve ice. (Prof. Kaplan heart--heart 2009 Nobel-prize winner confessed always feeling bad inadequate scientist done well introductory calculus. nominated Nobel felt comfortable admitting “failure.”) Even don’t master u-substitution integration parts, remember can integrate function using easily accessible resources.’ve devoted third block accumulation algebraic techniques calculating anti-derivatives. see techniques use future classes work science engineering.’s nature things people master algebraic techniques many . ’s easy make mistakes. Even fundamentally, many accumulation problems functions integrated algebraic form anti-derivative. cases, professionals use numerical techniques Euler method.order give simple way construct anti-derivative (just ) function, minimizing amount computer programming, packaged anti-differentiation techniques one, easy use R function. antiD().antiD() function interface D() makeFun(): argument tilde expression sort sqrt(x*sin(3*x)) ~ x. result returned antiD() new R function takes argument “respect ” variable. sandbox provides space play antiD() feel comfortable using .can see output sandbox, antiD() returns R function(). variable right tilde expression argument becomes first arguments function. also C argument: constant integration.antiD() knows algebraic integration techniques, roughly level basic modeling functions part course. antiD() identifies tilde expression something can handle, returns function whose body algebraic formula anti-derivative (although sometimes written cumbersome way).antiD() recognize argument basic modeling function, result still R function “respect ” variable C arguments. body function unintelligible human reader (except perhaps numerical_integration()). method numerical integration sophisticated Euler, highly precise reliable.’re going use antiD() daily digital simply want focus process differential modeling. integrals encounter sometimes ones know handle algebraically. ’s good idea integrals hand compare results antiD() check work.Example: Find numerical value definite integral.Using whatever computational tool like, find numerical value definite integral.\\[\\int^{5}_{2} x^{1.5} dx\\]Question ’s numerical value \\[\\int_2^5 x^{1.5} dx  ?\\]Question B ’s numerical value \\[\\int^{10}_{0} \\sin( x^2 ) dx ?\\]Question C ’s numerical value \\[\\int^{4}_{1} e^{2x} dx ?\\]Include mortgage problem","code":"\nantiD(x^-2 ~ x)\n\nf <- makeFun(sqrt(x*sin(3*x)) ~ x)\nantiD(f(x) ~ x)\nF <- antiD(exp(x^2)~x)\nF(7) - F(3)## [1] 1.3767e+20\nf <- antiD( x^1.5 ~ x )\nf(5) - f(2)## [1] 20.098"}]
