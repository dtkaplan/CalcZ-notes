[{"path":"index.html","id":"welcome-to-calculus","chapter":"Welcome to calculus","heading":"Welcome to calculus","text":"Calculus set concepts techniques provide main mathematical basis dealing motion, growth, decay, oscillation. phenomena can simple ball arcing ballistically air complex airflow wing generates lift. Calculus used biology business, chemistry, physics engineering. basis weather prediction, understanding climate change, algorithms heart rate blood oxygen measurement wristwatches. major part language science, logistics. electron orbitals chemistry, stresses bones beams, business cycle recession rebound understood primarily calculus.Calculus central science beginnings. coincidence scientific method introduced language calculus invented small group people historical period known Enlightenment. Learning calculus always badge honor entry ticket professions. Millions students career ambitions enhanced passing calculus course thwarted lack access one.1880s, hit musical featured “model modern major general.” One claims modernity “’m good integral differential calculus.”1What modern 1880 modern anymore. Yet, amazingly, calculus today every bit central science technology ever , much important logistics, economics myriad fields ever .\nlast 20 years, calculus become even important. reason science, engineering, society now fully adopted computer almost aspects work, study, life. amount data collected used exploded. Machine learning become way human decision makers interact data.Think means become “computerized.” take everyday example, consider video. span human life moved system involved people going theaters watch shadows recorded cellulose film distribution airwaves low-resolution television, introduction high-def broadcast video, demand streaming huge libraries movies. Just anyone can record, edit, distribute video. range topics (including calculus) can access video tutorial demonstration incredibly vast. recent progress owed computers.“stuff” computers operate , transform transmit always mathematical representations stored bits. creation mathematical representations objects events real world essential every task sort computer performs. Calculus key component inventing using representations.may scratching head. calculus important, many friends took calculus came away wondering ? ’s important “slopes” “areas” come high-school teacher couldn’t tell calculus ?disconnect enthusiasm expressed preceding paragraphs lived experience students real. two major reasons disconnect, tackle head-book.First, teachers mathematics deep respect tradition. respect merits result almost calculus taught using methods appropriate era paper pencil, computer era. see, book express concepts calculus way carries directly uses calculus computers genuine work.Second, uses calculus enabled topics Calc Calc II, courses /II preliminary: linear algebra dynamics. small fraction students start Calc ever reach parts calculus useful.Fortunately, large amount bloat standard textbook topics Calc /II can removed make room genuinely important topics. try book.","code":""},{"path":"index.html","id":"computing-and-apps","chapter":"Welcome to calculus","heading":"Computing and apps","text":"text provides two complementary ways access computing. intuitive designed purely exercise visualize mathematical concepts mouse-driven, graphical apps. illustrate, app ’ll use Block 6. can click snapshot open app browser.fundamentally, carrying computing composing computer commands text computer carry commands. One good way sandbox, kind app provides safe place enter commands. ’ll open sandbox (click image ) browser.’ve entered computer commands, press “Run” button commands carried .may prefer install R RStudio software laptop. usually provides faster response lowers load sandbox cloud servers used students.Experienced R users may even prefer skip sandbox entirely use standard resources RStudio edit evaluate computer commands. ’d use exactly R commands regardless whether use cloud server laptop.important technique teaching learning computing present scaffolding computer commands. first, scaffolding may complete, correct commands can cut--paste sandbox calculation carried . times left student fill part ’s left scaffolding. example, introduce drawing graphs functions choice domain, might see scaffold blanks filled :can hardly expected point make sense part command, soon .","code":"slice_plot( exp(-3*t) ~ t, domain( --fill in domain-- ))"},{"path":"index.html","id":"exercises-and-feedback","chapter":"Welcome to calculus","heading":"Exercises and feedback","text":"Learning facilitated rapid, formative feedback. Many exercises book arranged give .Short answer exercises often arranged give immediate feedback goes beyond right--wrong. words, answer incorrect, try tell incorrect provide hint guide correct answer. frivolous example:Question word calculus mean literally?small stone ✓ stones part apparatus numerical calculations, back days pencil invented. source trouble students. ☹︎ Calculus sometimes reputation, say, “pain, gain.” Find better answer. element calcium. ☹︎ , get right answer ’ll realize two related cases. exercises meant drill, provide right--wrong feedback. Still exercises provide feedback . Typically, intended raise stakes graded work, encouraging think carefully choosing answer.","code":""},{"path":"outline-of-block-1.html","id":"outline-of-block-1","chapter":"Outline of Block 1","heading":"Outline of Block 1","text":"section development purposes . included released text.outline established May 17-19, 2021 working sessions USAFA. ’s copied directly Teams document. ’ve made modifications noted [[square brackets]] deletions bold face additions..Block 1 Functions Mathematical ModelingIntro course\nNTI\ncan make point Linear Function model change drawing pictures discussing certain quantities change two points time\ndiscussion Calc Z “Z different,” “Z new Calculus USAFA transitioning; may see differences course traditional course peers taking.”\nOveall goal day 1 build cadet’s confidence can successful. requires us show systems, resources, philosophy, expectations (e.g., college \\(\\neq\\) high school) behind course.\n\nLecture Topics\nCalculus Z overview trajectory\nCourse resources systems\nCalculus study change\nLinear Function model “change” “slope”\n\nOutcomes\nUnderstand equation relates quantities, function maps inputs outputs\nUnderstand difference \\(\\equiv\\) \\(=\\)\nable identify function’s input\n\nReadings (assigned M1, skim , read )\nChapter 1\n\nAdditional Resources\nNone\n\nAssignments\nHW01\nFeedback01\nDD01\n\nIntro courseNTI\ncan make point Linear Function model change drawing pictures discussing certain quantities change two points time\ndiscussion Calc Z “Z different,” “Z new Calculus USAFA transitioning; may see differences course traditional course peers taking.”\nOveall goal day 1 build cadet’s confidence can successful. requires us show systems, resources, philosophy, expectations (e.g., college \\(\\neq\\) high school) behind course.\ncan make point Linear Function model change drawing pictures discussing certain quantities change two points timeThe discussion Calc Z “Z different,” “Z new Calculus USAFA transitioning; may see differences course traditional course peers taking.”Oveall goal day 1 build cadet’s confidence can successful. requires us show systems, resources, philosophy, expectations (e.g., college \\(\\neq\\) high school) behind course.Lecture Topics\nCalculus Z overview trajectory\nCourse resources systems\nCalculus study change\nLinear Function model “change” “slope”\nCalculus Z overview trajectoryCourse resources systemsCalculus study changeLinear Function model “change” “slope”Outcomes\nUnderstand equation relates quantities, function maps inputs outputs\nUnderstand difference \\(\\equiv\\) \\(=\\)\nable identify function’s input\nUnderstand equation relates quantities, function maps inputs outputsUnderstand difference \\(\\equiv\\) \\(=\\)able identify function’s inputReadings (assigned M1, skim , read )\nChapter 1\nChapter 1Additional Resources\nNone\nNoneAssignments\nHW01\nFeedback01\nDD01\nHW01Feedback01DD01Basics modeling functions\nNTI\nEmphasize functions map inputs outputs, naked functions () flexible enough circumstances\nShow students graph 5 naked functions, pick \nPoints truly naked straight-line just \\(x\\), use introduction parameterization\nShow scatter plot \\(f(x)\\equiv -x+2\\) explain \\(f(x)\\equiv x\\) good model motivate basic modeling function\n\nLecture Topics\nNaked modeling functions\nBasic Modeling functions behaviors based parameters\n\nOutcomes\nKnow graphs, domains, ranges, horizonal/veritcal intercepts & asymptotes () naked modeling functions\nRecognize functions way modeling relationship real-world\nGiven parameters, describe parameters affect shape function\n\nReadings: Section 3 Chapter 2\nAdditional Resources\nPDF - Exponential Functions Deep Dive\nMath Insight - Logarithm basics\nKhan Academy - Properties Logarithms\nRESOURCE TRIG VALUES (TRIG TABLE)\n\nAssignments\nDD02\n\nBasics modeling functionsNTI\nEmphasize functions map inputs outputs, naked functions () flexible enough circumstances\nShow students graph 5 naked functions, pick \nPoints truly naked straight-line just \\(x\\), use introduction parameterization\nShow scatter plot \\(f(x)\\equiv -x+2\\) explain \\(f(x)\\equiv x\\) good model motivate basic modeling function\nEmphasize functions map inputs outputs, naked functions () flexible enough circumstancesShow students graph 5 naked functions, pick whichPoints truly naked straight-line just \\(x\\), use introduction parameterizationShow scatter plot \\(f(x)\\equiv -x+2\\) explain \\(f(x)\\equiv x\\) good model motivate basic modeling functionLecture Topics\nNaked modeling functions\nBasic Modeling functions behaviors based parameters\nNaked modeling functionsBasic Modeling functions behaviors based parametersOutcomes\nKnow graphs, domains, ranges, horizonal/veritcal intercepts & asymptotes () naked modeling functions\nRecognize functions way modeling relationship real-world\nGiven parameters, describe parameters affect shape function\nKnow graphs, domains, ranges, horizonal/veritcal intercepts & asymptotes () naked modeling functionsRecognize functions way modeling relationship real-worldGiven parameters, describe parameters affect shape functionReadings: Section 3 Chapter 2Additional Resources\nPDF - Exponential Functions Deep Dive\nMath Insight - Logarithm basics\nKhan Academy - Properties Logarithms\nRESOURCE TRIG VALUES (TRIG TABLE)\nPDF - Exponential Functions Deep DiveMath Insight - Logarithm basicsKhan Academy - Properties LogarithmsRESOURCE TRIG VALUES (TRIG TABLE)Assignments\nDD02\nDD02Functions /O Notational Structure functions (R<>Math)\nNTI\nRewrite \\(y=mx+b\\) \\(mx-y+b=0\\) show function notation eliminates ambiguity IO\nBreak student habit using “x-axis” “y-axis”; describe “horizontal” “vertical” axes\nBreak student habit using “x” “y”; instead say “input” “output”\nExplain parameters scale shift inputs/outputs. Ex: \\(C\\) \\(Ce^{kt}\\) scales output \\(k\\) scales input\nExample function without formula: \\(f:Cadet\\RoomNumber\\)\n\nTopics\nFunctions Input Ouptut (IO)\nIntroduce Multi-input functions\nFunction Representations\nNotation Conventions\nDistinguish mathematical symbols: \\(=\\), \\(\\equiv\\), $, <- See Secton 5.8\n\nOutcomes\nUnderstand function maps inputs outputs\nGiven input, able find output function one five standard forms:\nGraphs functions (including contour plots)\nTables inputs outputs\nWord descriptions\nComputer function name\nMathematical notation\n\nable translate traditional math notation R expressions\n\nReading: Chapter 5 & 6\n:\nProvide glossary notation across 6-blocks (+alternate forms)\n\nAssignments\nDD03\n\nFunctions /O Notational Structure functions (R<>Math)NTI\nRewrite \\(y=mx+b\\) \\(mx-y+b=0\\) show function notation eliminates ambiguity IO\nBreak student habit using “x-axis” “y-axis”; describe “horizontal” “vertical” axes\nBreak student habit using “x” “y”; instead say “input” “output”\nExplain parameters scale shift inputs/outputs. Ex: \\(C\\) \\(Ce^{kt}\\) scales output \\(k\\) scales input\nExample function without formula: \\(f:Cadet\\RoomNumber\\)\nRewrite \\(y=mx+b\\) \\(mx-y+b=0\\) show function notation eliminates ambiguity IOBreak student habit using “x-axis” “y-axis”; describe “horizontal” “vertical” axesBreak student habit using “x” “y”; instead say “input” “output”Explain parameters scale shift inputs/outputs. Ex: \\(C\\) \\(Ce^{kt}\\) scales output \\(k\\) scales inputExample function without formula: \\(f:Cadet\\RoomNumber\\)Topics\nFunctions Input Ouptut (IO)\nIntroduce Multi-input functions\nFunction Representations\nNotation Conventions\nDistinguish mathematical symbols: \\(=\\), \\(\\equiv\\), $, <- See Secton 5.8\nFunctions Input Ouptut (IO)Introduce Multi-input functionsFunction RepresentationsNotation ConventionsDistinguish mathematical symbols: \\(=\\), \\(\\equiv\\), $, <- See Secton 5.8Outcomes\nUnderstand function maps inputs outputs\nGiven input, able find output function one five standard forms:\nGraphs functions (including contour plots)\nTables inputs outputs\nWord descriptions\nComputer function name\nMathematical notation\n\nable translate traditional math notation R expressions\nUnderstand function maps inputs outputsGiven input, able find output function one five standard forms:\nGraphs functions (including contour plots)\nTables inputs outputs\nWord descriptions\nComputer function name\nMathematical notation\nGraphs functions (including contour plots)Tables inputs outputsWord descriptionsComputer function nameMathematical notationBe able translate traditional math notation R expressionsReading: Chapter 5 & 6To :\nProvide glossary notation across 6-blocks (+alternate forms)\nProvide glossary notation across 6-blocks (+alternate forms)Assignments\nDD03\nDD03Parameterized functions models\nNTI\nIntroduce idea input meaning, output meaning relative input\nGive students function. change units input different unit (e.g. feet go Meters)\nLogarithms necessarily used end model; lever seperate power exponential functions\nTODO: Think physical phenomenon appropriately modeled Logarithmic function power \\(p<1\\)\n\nFocus lesson entirely finding parameters Sine, Power, Exponential\n\nLecture Topics:\nModeling phenomenon basic modeling functions\nfind parameters basic modeling functions\nLinear\nSine\nPower\nExponential\nLogarithmic (note)\n\n\nObjectives\nGiven description real-world scenario, able identify appropriate basic modeling function\nGiven data, select parameters basic modeling functions “fit” data\n\nReading: Chapter 7\nParameterized functions modelsNTI\nIntroduce idea input meaning, output meaning relative input\nGive students function. change units input different unit (e.g. feet go Meters)\nLogarithms necessarily used end model; lever seperate power exponential functions\nTODO: Think physical phenomenon appropriately modeled Logarithmic function power \\(p<1\\)\n\nFocus lesson entirely finding parameters Sine, Power, Exponential\nIntroduce idea input meaning, output meaning relative inputGive students function. change units input different unit (e.g. feet go Meters)Logarithms necessarily used end model; lever seperate power exponential functions\nTODO: Think physical phenomenon appropriately modeled Logarithmic function power \\(p<1\\)\nTODO: Think physical phenomenon appropriately modeled Logarithmic function power \\(p<1\\)Focus lesson entirely finding parameters Sine, Power, ExponentialLecture Topics:\nModeling phenomenon basic modeling functions\nfind parameters basic modeling functions\nLinear\nSine\nPower\nExponential\nLogarithmic (note)\n\nModeling phenomenon basic modeling functionsHow find parameters basic modeling functions\nLinear\nSine\nPower\nExponential\nLogarithmic (note)\nLinearSinePowerExponentialLogarithmic (note)Objectives\nGiven description real-world scenario, able identify appropriate basic modeling function\nGiven data, select parameters basic modeling functions “fit” data\nGiven description real-world scenario, able identify appropriate basic modeling functionGiven data, select parameters basic modeling functions “fit” dataReading: Chapter 7[[Combining 2+ functions]] ’ve integrated “Parameterized function” chapter.\nExamples\nNTIs\nTopics\nLinear Combination (ex: Polynomial)\nComposition scaling function (\\(e^{kt}) 1. Gallons/\\) Liters/Euros\nComposition (affine shift)\n1. Fahrenheit <> Celsius\n\n[[Combining 2+ functions]] ’ve integrated “Parameterized function” chapter.ExamplesNTIsTopics\nLinear Combination (ex: Polynomial)\nComposition scaling function (\\(e^{kt}) 1. Gallons/\\) Liters/Euros\nComposition (affine shift)\n1. Fahrenheit <> Celsius\nLinear Combination (ex: Polynomial)Composition scaling function (\\(e^{kt}) 1. Gallons/\\) Liters/EurosComposition (affine shift)\n1. Fahrenheit <> CelsiusThe modeling processThe modeling processSlope function\nNTI:\nbroaden idea describing slope line general function?\n\\(h\\) point\nslope function function \\(s()\\) built function \\(f()\\)\n\nTopics\nAverage rate change. (Example: Quarterly return stocks. HW tree harvesting.) (Example 2: Sine wave difference around 1 period. maybe becomes low-pass filter example accumulation.)\n\\(s(x) \\equiv \\frac{f(x + 0.1) - f(x)}{0.1}\\)\nExcept linear function, slope function depends big \\(h\\) . let’s fix \\(h\\) figure things .\nEvery function slope function.\n’s helpful name functions know come . ’re going use \\(f'()\\) stand slope function \\(f()\\)\n\nReading: Chapter 9\nSlope functionNTI:\nbroaden idea describing slope line general function?\n\\(h\\) point\nslope function function \\(s()\\) built function \\(f()\\)\nbroaden idea describing slope line general function?\\(h\\) pointThe slope function function \\(s()\\) built function \\(f()\\)Topics\nAverage rate change. (Example: Quarterly return stocks. HW tree harvesting.) (Example 2: Sine wave difference around 1 period. maybe becomes low-pass filter example accumulation.)\n\\(s(x) \\equiv \\frac{f(x + 0.1) - f(x)}{0.1}\\)\nExcept linear function, slope function depends big \\(h\\) . let’s fix \\(h\\) figure things .\nEvery function slope function.\n’s helpful name functions know come . ’re going use \\(f'()\\) stand slope function \\(f()\\)\nAverage rate change. (Example: Quarterly return stocks. HW tree harvesting.) (Example 2: Sine wave difference around 1 period. maybe becomes low-pass filter example accumulation.)\\(s(x) \\equiv \\frac{f(x + 0.1) - f(x)}{0.1}\\)Except linear function, slope function depends big \\(h\\) . let’s fix \\(h\\) figure things .Every function slope function.’s helpful name functions know come . ’re going use \\(f'()\\) stand slope function \\(f()\\)Reading: Chapter 9Composition Generally\nNTI:\ntemperature driving mountain?\nProblem calculating slope sigmoid\n\nTopics:\nFormula Hump (exponential quadratic)\nDriving mountain temperature vs altitude, altitude vs road position, road position vs time\nHump slope function Sigmoid\n\nReading: Chapter 11\nComposition GenerallyNTI:\ntemperature driving mountain?\nProblem calculating slope sigmoid\ntemperature driving mountain?Problem calculating slope sigmoidTopics:\nFormula Hump (exponential quadratic)\nDriving mountain temperature vs altitude, altitude vs road position, road position vs time\nHump slope function Sigmoid\nFormula Hump (exponential quadratic)Driving mountain temperature vs altitude, altitude vs road position, road position vs timeHump slope function SigmoidReading: Chapter 11Multiplication functions\nNTIs:\nMultiplication Sines, exponential, hump, sigmoid\n\nTopics:\nMultiplying functions inputs gives function inputs.\nMultiplying functions different inputs gives function whose inputs union inputs multiplicands.\n\nable reverse engineer products: sinexp, sinhump, sinsigmoid\nReading: Chapter 11\nMultiplication functionsNTIs:\nMultiplication Sines, exponential, hump, sigmoid\nMultiplication Sines, exponential, hump, sigmoidTopics:\nMultiplying functions inputs gives function inputs.\nMultiplying functions different inputs gives function whose inputs union inputs multiplicands.\nMultiplying functions inputs gives function inputs.Multiplying functions different inputs gives function whose inputs union inputs multiplicands.able reverse engineer products: sinexp, sinhump, sinsigmoidReading: Chapter 11Multivariate functions\nNTIs:\nAsk students compute slope multi-input function best can imagine (homework?) Build imagined function (slope) plot function\n\nOutcomes:\nable read & construct (R) Contour Plots\nable read & construct (R) Surface Plots\nable read table w/ 2 inputs\n\nReading: Chapter 12\nMultivariate functionsNTIs:\nAsk students compute slope multi-input function best can imagine (homework?) Build imagined function (slope) plot function\nAsk students compute slope multi-input function best can imagine (homework?) Build imagined function (slope) plot functionOutcomes:\nable read & construct (R) Contour Plots\nable read & construct (R) Surface Plots\nable read table w/ 2 inputs\nable read & construct (R) Contour PlotsBe able read & construct (R) Surface PlotsBe able read table w/ 2 inputsReading: Chapter 12Piecewise functions [jettison needed favor homework]\nTopics\nConstruct evaluate piecewise functions\nDemonstrate implement R\n\nOutcomes:\nable identify break(s) piecewise function\nable evaluate piecewise function given input\nable implement piecewise function R\n\nReading: Chapter 13\nPiecewise functions [jettison needed favor homework]Topics\nConstruct evaluate piecewise functions\nDemonstrate implement R\nConstruct evaluate piecewise functionsDemonstrate implement ROutcomes:\nable identify break(s) piecewise function\nable evaluate piecewise function given input\nable implement piecewise function R\nable identify break(s) piecewise functionBe able evaluate piecewise function given inputBe able implement piecewise function RReading: Chapter 13Iterative Modeling\nNTI:\nExamples:\nTides\nCooling Water\n\nObjectives:\nDescribe differences two models model data\nIdentify disagreements model data\nd: Reading: NEED LINK CHAPTER\n::: {.workedexample}\nReview, GR, Project Days\n:::\n\nIterative ModelingNTI:Examples:\nTides\nCooling Water\nTidesCooling WaterObjectives:\nDescribe differences two models model data\nIdentify disagreements model data\nd: Reading: NEED LINK CHAPTER\n::: {.workedexample}\nReview, GR, Project Days\n:::\nDescribe differences two models model dataIdentify disagreements model data\nd: Reading: NEED LINK CHAPTER\n::: {.workedexample}\nReview, GR, Project Days\n:::[[Semi-log Log-log plots]] Magnitude log\nTopics:\nIntroduce idea using logarithms converts number order magnitude\n\nOutcomes:\nReading: Chapter 14\n::: {.workedexample}\nFlexible catchup day\n:::\n[[Semi-log Log-log plots]] Magnitude logTopics:\nIntroduce idea using logarithms converts number order magnitude\nIntroduce idea using logarithms converts number order magnitudeOutcomes:Reading: Chapter 14\n::: {.workedexample}\nFlexible catchup day\n:::Dimensional Analysis\nReading: Chapter 15\n1.5 class daysDimensional AnalysisReading: Chapter 151.5 class daysOne highlighting formats, called ::: {.takenote} used clear statement basic skills students master. might good tie quizzes vice versa.","code":""},{"path":"change.html","id":"change","chapter":"1 Change","heading":"1 Change","text":"Calculus change, change relationships. changing climate relationship , say, global average temperature time. ’s also changing levels CO2 methane, production elimination atmospheric geological processes. ’s burning oil (change configuration atoms hydrocarbons) contributes ocean acidification (process change ocean pH). ’s whole complex intricate network relationships change one component provokes change others.book presents calculus terms two simple central concepts: functions quantities. words everyday meanings , happily, close specific mathematical concepts using . Close … identical. pay careful attention brief descriptions follow.","code":""},{"path":"change.html","id":"quantity-vs-number","chapter":"1 Change","heading":"1.1 Quantity vs number","text":"mathematical quantity amount “stuff.” real-world stuff might mass time length. equally well can velocity volume momentum corn yield per acre. live world stuff, tangible (e.g., corn, mass, force) harder get hands minds around (acceleration, crop yield, fuel economy). important use calculus helping us conceptualize abstract kinds stuff mathematical compositions simpler stuff. example, crop yield incorporates mass length time. Later, ’ll see us using scientific-sounding term dimension instead “stuff.” fact, Chapter 15 entirely dedicated topic dimensions, now ’s sufficient understand numbers alone quantities.people inclined think “quantity” “number”; conflate two. understandable misguided. number meaningless. meaning number 5 without context? Quantity, hand, combines number appropriate context describe amount stuff. , first thing need know quantity kind stuff describes. “mile” kind stuff: length. meter kind stuff: length. liter different kind stuff: volume. gallon acre-foot kind stuff: volume.“Stuff,” mean , measure. know, measure units. units appropriate depends kind stuff. Meters, miles, microns appropriate units length, even though actual lengths units differ markedly. (mile roughly million microns.)know dimension units number meaning. Thus, number part specifying quantity.’s salient difference number quantity comes calculus: sorts arithmetic mathematical operations can performed combine numbers: addition, multiplication, square roots, etc. performing mathematics quantities, multiplication division universally allowed. addition subtraction, square roots, , operation makes sense dimensions suitable.mathematics units dimension equivalent technical world common sense everyday world. instance (may make sense point), someone tells taking square root 10 liters, know immediately either just mistaken haven’t told essential elements situation. ’s just someone said, “swam across tennis court.” know either used wrong verb—walk run work—wasn’t tennis court, something important unstated, perhaps, “flood, swam across tennis court.”","code":""},{"path":"change.html","id":"functions","chapter":"1 Change","heading":"1.2 Functions","text":"central concept book functions mathematical computing sense; primary topic Block 1. function something takes one inputs returns output. calculus, ’ll deal mainly functions take one quantities inputs return another quantity output. sometimes ’ll work functions take functions input return quantity output. even functions take function inputs return function output.’ve almost certainly seen functions expressed general form \\(f(x)\\). function \\(f()\\), input \\(x\\). Perhaps ’s obvious point \\(x\\) quantity. \\(f(x)\\) operation performed quantity. computing, definite, widely used, notations identify output function. Strangely, high-school mathematics . major source confusion students learning calculus professionals using computers work calculus.’s possible present calculus without functions. instance, Isaac Newton, inventor calculus, spoke “flowing quantities.”2It’s practically impossible (generally unwise) computing without functions. basic building block every mainstream modern computer language. Since operations calculus actual practice performed computer, common sense suggests describe calculus terms functions. ’s book., may take bit getting used . reason notation used high-school algebra almost calculus texts notation functions. example, almost students seen mathematical expression form: \\[y = m x + b\\]\nUsing language math classes, can say expression “describes relationship two variables.” experience, know variables \\(x\\) \\(y\\). letters, \\(m\\) \\(b\\), something else. Many students reflexively call “slope” “intercept” “line.”used probably don’t see huge ambiguity involved. instance, variable? Common sense suggest ’s thing varies. know value \\(x\\), still variable? statistics, variable something else entirely: trait. Since statistics mathematics used together, bound bring confusion.consider famous famous sentence high-school mathematics:\n\\[y = m x + b\\]notation equations poor substitute notation functions. instance, input output? ’s explicitly stated. , using allowed manipulations algebra, re-arrange \\[y = m x + b \\ \\ \\text{}\\ \\ \\ m = \\frac{y-b}{x}\\] still function? , function \\(m x + b\\)? \\(x\\) input \\(x\\) \\(y\\) inputs? \\(b\\)? re-arrangement, problem \\(x\\) zero, problem never encounter original \\(y=mx+b\\).engineers mathematicians invented computer languages realized explicit identifying input, output, function ; computers demand unambiguous instructions.3 Sorting difficult process even mathematically talented skilled pioneers notation. , can forgiven occasional confusion dealing notation pre-dates computing.book ’ll explicit consistent ways denote functions can always figure inputs translated output. good start learning read function notation see equivalent \\(y=m x + b\\) notation: \\[g(x) \\equiv m x + b\\]\nNotice ’re using \\(\\equiv\\) (three parallel bars) rather \\(=\\). ’s \\(y\\). \\(x\\) appears parentheses left side \\(\\equiv\\) say explicitly “\\(x\\) stands input.” notation provides place state name function, case \\(g()\\), can refer function unambiguously operations . Since often ’ll using many functions time, ’s helpful way distinguish name. functional notation makes easy create many different names: just \\(y\\) \\(g_\\star()\\), \\(h_\\text{altitude}()\\), azimuth(), . Try \\(y\\)","code":""},{"path":"structure-of-a-function.html","id":"structure-of-a-function","chapter":"2 Structure of a function","heading":"2 Structure of a function","text":"[F-10] Recognize functions way representing (storing) know able use properly basic nomenclature functions).’re used mathematical functions stated formulas, expressions composed addition, multiplication, square roots, . expression \\(m x + b\\) uses multiplication addition. \\(\\sqrt{\\strut 1 - x^2}\\) uses exponentiation (\\(x^2\\)), subtraction square root.’s nothing mathematical concept “function” requires formula. computer functions general based algebraic formula. word used describe internals computer function algorithm, generalization “formula” includes many non-arithmetic operations looping branching.","code":""},{"path":"structure-of-a-function.html","id":"inputs-to-output","chapter":"2 Structure of a function","heading":"2.1 Inputs to output","text":"using formulas extensively, best can visualize functions generally something ’s necessarily formula. section gives another perspective describe think function. remember, functions take inputs return corresponding output. arrangement accomplishes function, even arithmetic nowhere sight.simple useful framework organizing know table, generally set array rows columns. instance, table range internal combustion engines various sizes:row table reports one, specific engine. column one attribute engine. Using tables can easy. example, asked report fast engine named “Enya 60-4C” spins, go Enya 60-4C row “RPM” column read answer: 11,800 revolutions per minute (RPM).table like describes general relationships engine attributes. instance, might want understand relationship () RPM engine mass, relate diameter (, “bore”) depth (, “stroke”) cylinders power generated engine. single entry table doesn’t tell us general relationships; need consider rows columns whole.examined relationship engine power (BHP) bore, stroke, RPM, find (rule) larger bore, stroke, RPM, powerful engine. ’s qualitative description relationship. educated people able understand quantitative description. Even don’t know exactly “power” means, rough conception .Often, ’re interested quantitative description relationship one (bore, stroke, RPM) \\(\\rightarrow\\) power. Remarkably, many otherwise well-educated people uncomfortable idea using quantitative descriptions relationship: sort language description written ; perform calculations use description; translate data (table) quantitative description; translate quantitative description address particular question make decision.course constructing using quantitative descriptions: , mathematical modeling. Skills modeling essential work engineering science, highly valued many fields commerce, management, government. Often, work applying quantitative skills called calculation. name calculus used describe methods widely used undertaking calculations.Functions fundamental way organizing mathematical models calculations. undoubtedly seen previous mathematics education, ’s worth reviewing basics can share vocabulary communicating .function transformation one inputs output.keep things simple now ’ll focus inputs outputs numeric, later ’ll need nuanced view “numeric” takes account different kinds things represented numbers, e.g. length, power, RPM.","code":""},{"path":"structure-of-a-function.html","id":"a-bureaucratic-analogy","chapter":"2 Structure of a function","heading":"2.2 A bureaucratic analogy","text":"’ll many opportunities work functions defined formulas. , want emphasize functions really just way storing correspondence inputs outputs formulas need nothing except one way describing pattern. Instead formula, imagine long corridor sequence offices, identified room number. input function room number. evaluate function input, knock appropriate door , response, ’ll receive piece paper number take away . number output function.sound first simple true, … mathematical function office gives exactly number every time someone knocks door. Obviously, worker office highly tedious requires special skill. Every time someone knocks worker’s door, writes number piece paper hands person knocking. person number absolutely concern office worker.utility functions depends artistry insight person creates : modeler. important point course teach artistry. Hopefully learn artistry translate insight creation functions useful work. even just use functions created others, knowing functions built helpful using properly.sort function just described, offices along single corridor. functions said one input, , equivalently, functions one variable. operate function, just need one number: address office ’ll collect output.Many functions one input: two, three, four, … tens, hundreds, thousands, millions, …. course, ’ll work mainly functions two inputs, skills develop applicable functions two inputs.function two inputs look like office metaphor? Imagine office building many parallel corridors, numeric ID. evaluate function, need two numeric inputs: number corridor number door along corridor. two numbers hand, locate appropriate door, knock receive output number return.Three inputs? Think building many floors, floor many parallel corridors, corridor many offices sequence. Now need three numbers identify particular office: floor, corridor, door.Four inputs? street many three-input functions along . Five inputs? city many parallel four-input streets. .Applying inputs function order receive output small part calculations. Calculations usually organized algorithms, just say algorithms descriptions calculation. calculation … function!calculation work? Think business. People come business one inputs. take inputs , following carefully designed protocol, hand staff, perhaps duplicating simple arithmetic create new number. Thus equipped relevant numbers, member staff goes evaluate particular function numbers. (, staff member goes appropriate street, building, floor, corridor, door, returning number provided office.) staff re-assembles roadside stand, sorting numbers returned , following strict protocol. Perhaps combine new numbers ones originally given inputs. event, send staff new instructions—person’s instructions consist simply set inputs head evaluate return . point, perhaps many cycles, perhaps just one, able combine numbers ’ve assembled single result: number return person came business first place.calculation might involve just one function evaluation, involve chain sends workers buzzing around city visiting businesses turn activate staff add urban tumult.reader familiar floors corridors office doors may note addresses discrete. , office 321 offices 320 322 neighbors. Calculus continuous functions, need way accept, say, 321.487… input. office.slight modification procedure produce continuous function. works like : input 321.487… messenger goes office 321 322 collects respective outputs. Let’s imagine -14.3 12.5 respectively. ’s needed small calculation, case look like \\[-14.3 \\times (1 - 0.487...)   + 12.5 \\times 0.487...\\] called linear interpolation lets us construct continuous functions discrete data.Blocks 2 5 ’ll discuss widely used ways produce just continuous functions smooth functions. Understanding difference continuous smooth wait introduce couple calculus concepts: derivatives limits.","code":""},{"path":"structure-of-a-function.html","id":"domain-input-space","chapter":"2 Structure of a function","heading":"2.3 Domain: input space","text":"know, powerful way thinking numbers terms space geometry. instance, single number corresponds point line: -called number line. pair inputs, say, (x, y) corresponds point plane, often called Cartesian coordinate plane. Three numbers corresponds point space, perhaps organized (x, y, z) Cartesian space. higher-dimensional spaces, usually special training needed become comfortable . discomfort, might prefer work office metaphor. Just fun, ’s can think 10-dimensional space: 10 numbers, one telling planet, next specifying continent planet, country, state, city, street, building, floor, corridor, door.set inputs function can evaluated called domain function. Sometimes describe domain space, e.g. number line, plane, . Sometimes domains including restrictions. instance, particular input might meaningfully positive, offices corresponding negative values input. , input might restricted interval 0 1. Sometimes calculus, domain excludes isolated point. instance, may office door marked 0 neighboring doors open working offices.","code":""},{"path":"structure-of-a-function.html","id":"range-output-space","chapter":"2 Structure of a function","heading":"2.4 Range: output space","text":"range function set outputs can produced. Since stage ’re working functions return single number output, ’s common describe range part number line. instance, functions positive outputs. functions’ outputs always interval 0 1. (case, instance, function returns probability output.)Consider graph function \\(g(x)\\):Question domain \\(g(x)\\)?\\(-\\infty < x < \\infty\\) ☹︎ \\(-3 \\leq x \\leq 2\\) ✓ \\(-4 \\leq x \\leq 4\\) ☹︎ might called “graphics” domain, yet function graph doesn’t extend whole interval. $-10 g(x)  ☹︎ vertical extent graphics frame. \\(-1 \\leq g(x) \\leq 33\\) ☹︎ domain refers horizontal axis. Question B range \\(g(x)\\)?\\(-\\infty < x < \\infty\\) ☹︎ range refers output function. \\(x\\) input. \\(-3 \\leq x \\leq 2\\) ☹︎ range refers output function. \\(x\\) input. \\(-4 \\leq y \\leq 4\\) ☹︎ ’re used calling function output \\(y\\), ’s bad habit. Break ! $-10 g(x)  ☹︎ vertical extent graphics frame. \\(-1 \\leq g(x) \\leq 33\\) ✓ \nWeather forecasting numerical processWeather forecasting numerical process highly influential book, 1922, Lewis Fry Richardson. envisioned calculation weather forecast kind function. domain forecast latitude longitude point globe, rather rectilinear organization corridor.One fantastic illustration idea shows building constructed form inside-globe. many points globe, business. (can see clearly foreground, shows several boxes workers.)\nFigure 2.1: artist’s depiction organization calculations weather forecasting Richardson’s system. Source\nbusiness might work way: business person report current air pressure point globe, another person reports temperature, another reporting humidity, . compute predicted weather next day, business staff assigned visit neighboring businesses find pressure, temperature, humidity, etc. Still staffers take collected output neighbors carry arithmetic translate outputs forecast tomorrow. instance, knowing pressure neighboring points enables direction wind calculated, thus humidity temperature air coming region business handles. today’s numerical weather prediction models, globe divided finely latitude, longitude, altitude, software handles storage present conditions calculation future minutes later. Repeating process using forecast enables prediction made minutes , .important concepts calculus relate process collecting outputs neighboring points combining : instance finding difference sum. illustrate, first set equations Richardson’s Weather forecasting … written notation calculus:can hardly expected point understand calculations described equations, involve physics air flow, coriolis force, etc. ’s worth pointing notation:equations momentum column air particular latitude (\\(\\phi\\)) longitude.\\(M_E\\) \\(M_N\\) east-west north-south components momentum.\\(\\partial M_E /\\partial t\\) amount east-west momentum change next small interval time (\\(\\partial t\\)).\\(p_G\\) air pressure ground level column air.\\(\\partial p_G / \\partial n\\) difference air pressure column air columns north south.Calculus provides notation describing physics climate means translate physics arithmetic calculation.","code":""},{"path":"naked-intro.html","id":"naked-intro","chapter":"3 Naked modeling functions","heading":"3 Naked modeling functions","text":"Experience allows us make short list mathematical functions provide large majority tools representing real world mathematical object. Think list different actors, skilled portraying archetypical character: hero, outlaw, lover, fool, comic. play brings together different characters, costumes , builds dialog.mathematical modeler kind playwright. combines mathematical character types tell story relationships. handful archetypical mathematical functions, analog character actors drama comedy. calling naked modeling functions. writing mathematical model, clothe actors suit era location assemble together harmony discord.","code":""},{"path":"naked-intro.html","id":"the-list","chapter":"3 Naked modeling functions","heading":"3.1 The list","text":"list basic, unadorned functions, naked model function,Exponential \\(e^x\\)Logarithm \\(\\ln(x)\\)Power-law \\(x^p\\)Sinusoid \\(\\sin(x)\\)Straight-line \\(m x + b\\)Hump \\(\\text{dnorm}(x)\\)Sigmoid \\(\\text{pnorm}(x)\\)’ve written traditional notation can see connections math ’ve already studied. ’ve used \\(x\\) stand single input functions just ’s traditional.’s good refer functions word name—exponential, logarithm, power-law, sinusoid, straight-line, etc. helps avoid source common confusion. example, mathematical expressions \\(e^x\\) \\(x^e\\) easily confused, notation utterly different patterns. won’t easily mistake “exponential” “power-law.”One important point make list naked modeling functions short. memorize names able easily associate name traditional notation.next several chapters, introduce several features functions. basic modeling functions features, don’t. features include:monotonicity downconcavity downhorizontal asymptotesvertical asymptotesperiodicityBy end Block 1, able list seven basic modeling functions say features relevant .also use see computer names functions. names can differ somewhat one computer language another, names language use, R, easily recognized programmers use language.ease reference, ’s tableWe’ve left traditional notation hump sigmoid isn’t standard one. Surprisingly, specific name R Power law Straight-Line functions, ’s easy implement needed using code .noticed section heading “naked modeling functions.” mean “naked” metaphorical sense, chose metaphor make easy remember. Think list seven functions celebrities world calculus. Unlike human celebrities appear wane years, marry divorce frequently, celebrities us generations maintain intimate connections one another reflect nature mathematics rather fads fancies celebrities. (Mastering calculus largely matter becoming familiar mathematical connections. ’ll see due time.)(basic) celebrity functions appear many mathematical settings, just human celebrity strives maintain public image. human celebrity human organism organism naturally naked. public appearance, however, celebrity always clothed one way another. (OK … Rarely appear unclothed true mathematics.) words, order interact world large, celebrities need attire.Similarly, mathematical functions appear real-world applications—opposed math textbooks—always wear clothes, adorned call parameters. Parameters help deal units dimension quantities. just standard elements clothing: shirt, skirt, trousers, … standard ways clothing naked modeling function. process decorating basic modeling functions called parameterization function, often multiple ways paremeterizing function.dress naked functions—, parameterize —become superheroes calculus. ’ll call league superheroes basic modeling functions..consistent, \\(mx + b\\) really naked. naked equivalent simply \\(x\\). Almost always, way clothe functions replace naked \\(x\\) \\(mx + b\\)","code":""},{"path":"naked-intro.html","id":"function-shapes","chapter":"3 Naked modeling functions","heading":"3.2 Function shapes","text":"going building models selecting appropriate function putting functions together various ways. might remind Lego blocks. know, come different shapes: \\(6\\times 2\\), \\(4\\times 2\\), \\(2\\times 2\\), . Similarly, naked modeling function distinctively shaped graph. Knowing shapes name help need build model.\ndidn’t include graph straight-line function, since already know looks like. Instead, ’ll plot two basic functions, identity function constant function. ’ll see later, every straight-line function “linear combination” two.’s tempting deny constant function function. , output depend input. Still, situation arises frequently modeling: start supposing one quantity depends another turns . Since functions way representing relationships, ’s helpful function situation “relationship.” constant function job.","code":"## Warning: Removed 6 row(s) containing missing values (geom_path).## Warning in log(x): NaNs produced## Warning: Removed 50 row(s) containing missing values (geom_path)."},{"path":"naked-intro.html","id":"the-power-law-family","chapter":"3 Naked modeling functions","heading":"3.3 The power-law family","text":"power-law “function” really set differently shaped functions. lump together name “power-law” strongly related, especially comes calculus operations learning use.Even within power-law family, ’s helpful consider different overlapping groups:monomials: \\(m_0(x) \\equiv x^0\\), \\(m_1(x) \\equiv x^1\\), \\(m_2(x) \\equiv x^2\\), \\(\\ldots\\). course, \\(m_0()\\) exactly constant function, \\(m_1(x)\\) identity function. rest, just two general shapes: arms (even powers); one arm (odd powers.)\n2. negative powers, e.g. \\(f(x) \\equiv x^{-1}\\), \\(g(x) \\equiv x^{-2}\\), \\(h(x) \\equiv x^{-1.5}\\)non-integer powers, e.g. \\(f(x) = \\sqrt{x}\\), \\(g(x) = x^\\pi\\), .Answer questions naked-modeling functions. can refer graphs Figures ?? ??.Question best describes concavity hump function?’s concave. ☹︎ curves, ’s either concave . ’s concave . ☹︎ places, others. ’s concave center concave flanks. ✓ ’s concave left concave right ☹︎ Look Question B best describes concavity sigmoid function?’s concave. ☹︎ curves, ’s either concave . ’s concave. ☹︎ curves, ’s either concave . ’s concave . ☹︎ places, others. ’s concave . ☹︎ places, others. ’s concave left concave right. ☹︎ Look ’s concave left concave right. ☹︎ Look ’s concave left concave right. ✓ Look \nQuestion C best describes concavity second-order monomial \\(m_2(x) \\equiv x^2\\)?’s concave left concave right. ✓ Look \nQuestion C best describes concavity second-order monomial \\(m_2(x) \\equiv x^2\\)?’s concave. ☹︎ curves, ’s either concave . ’s concave. ☹︎ curves, ’s either concave . ’s concave . ☹︎ smile frown? ’s concave . ☹︎ smile frown? ’s concave left concave right. ☹︎ Look ’s concave left concave right. ☹︎ Look ’s concave everywhere domain. ✓ Look \n’s concave everywhere domain. ✓ Look need questions asymptotes.","code":""},{"path":"fun-describing.html","id":"fun-describing","chapter":"4 Describing functions","heading":"4 Describing functions","text":"need communicate functions fellow humans computers. Important modes communication include:Graphs functions show “shape”Tables inputs outputsWord descriptionsComputer function nameMathematical notationIn chapter, ’ll illustrate five different modes using naked modeling functions. ’s important become proficient five.","code":""},{"path":"fun-describing.html","id":"computer-commands","chapter":"4 Describing functions","heading":"4.1 Computer commands","text":"’ll start computer commands enable us draw graphs.make graph function one input, use slice_plot() command, like :can simply copy--paste command sandbox create graph. let’s take apart command ’s components see R commands structured.slice_plot( ... ) Commands usually start name operation perform. name always followed pair parentheses. parentheses contain arguments operation, can think specifying details done. slice_plot() operator draws graphs functions single input.exp(x) ~ x given first argument slice_plot() operator. ’ll defer detailed explanation, just pointing specifying computer want plot exponential function going use x name input.domain(x = c(-3,3)) Functions mathematical domains: set valid inputs function. exponential function entire number line domain. draw function graph need specify graphical domain, , part function domain show graph.","code":"\nslice_plot(exp(x) ~ x, domain(x=c(-2,2)))"},{"path":"fun-describing.html","id":"tables-of-inputs-and-outputs","chapter":"4 Describing functions","heading":"4.2 Tables of inputs and outputs","text":"Another way describing function give table inputs outputs. Like graphics, table can show possible inputs.modern computing, tables one primary means describe functions. People working calculus needed reference collection books containing tables functions used.computers, better faster ways get output function input. Still, modelers often use recorded data construct functions. Tables perhaps widely used method storing accessing data, although electronic spreadsheets used today instead printed tables.Even today, table can nice way describe function interested output handful possible inputs.Conceptually, ’s helpful keep mind every naked modeling function just way organizing information stored table.","code":""},{"path":"fun-describing.html","id":"word-descriptions","chapter":"4 Describing functions","heading":"4.3 Word descriptions","text":"Knowing correctly using handful phrases goes long way able communicate people functions single input. Often, words make sense everyday speech (“steep,” “growing,” “decaying,” “goes ,” “goes ,” \"flat).Sometimes words used everyday speech casual person isn’t sure exactly mean. instance, often hear phrase “growing exponentially.” graph exponential function illustrates exactly sort growth: flat small \\(x\\) growing steadily steeper steeper \\(x\\) increases.Still words best understood learn calculus. “Concave ,” “concave ,” “approaching 0 asymptotically,” “continuous,” “discontinuous,” “smooth,” “minimum …,” “minimum …,” “approaching \\(\\infty\\) asymptotically,” “vertical asymptote.”illustrate patterns described phrases, consider three naked modeling functions Figure 4.1:\nFigure 4.1: Three naked modeling functions: () exponential, (b) sinusoid, (c) power-law \\(x^{-1}\\).\nConcave\nexponential concave everywhere domain.\nsinusoid alternates back forth concave concave .\nparticular power law \\(x^{-1}\\) concave \\(x > 0\\) concave \\(x < 0\\).\nexponential concave everywhere domain.sinusoid alternates back forth concave concave .particular power law \\(x^{-1}\\) concave \\(x > 0\\) concave \\(x < 0\\).Continuous\nexponential continuous everywhere domain.\nsinusoid continuous everywhere domain.\npower law \\(x^{-1}\\) discontinuous \\(x = 0\\)\nexponential continuous everywhere domain.sinusoid continuous everywhere domain.power law \\(x^{-1}\\) discontinuous \\(x = 0\\)Periodic. sinusoid periodic, , repeating shape .Asymptote.\nexponential horizontal asymptote zero \\(x \\rightarrow -\\infty\\)\nsinusoid neither vertical horizontal asymptote.\npower law \\(x^{-1}\\) vertical asymptote \\(\\infty\\) \\(x \\rightarrow 0\\) right, \\(-\\infty\\) \\(x \\rightarrow 0\\) left.\nexponential horizontal asymptote zero \\(x \\rightarrow -\\infty\\)sinusoid neither vertical horizontal asymptote.power law \\(x^{-1}\\) vertical asymptote \\(\\infty\\) \\(x \\rightarrow 0\\) right, \\(-\\infty\\) \\(x \\rightarrow 0\\) left.Maximum. sinusoid maximum, , input output larger nearby input. sinusoid similarly minimum.","code":""},{"path":"fun-describing.html","id":"computer-function-names","chapter":"4 Describing functions","heading":"4.4 Computer function names","text":"might expect, computer programmers language developers written software implementing several naked modeling functions: exp(), log(), sin(), dnorm(), pnorm(). functions, name tells everying, far computer concerned, needed calculate output given input.Computer notation power-law straight-line functions different. much easier understand seen create name functions. reason difference power-law straight-line functions quite naked. parameters: exponent power-law function slope intercept straight-line function.include power-law straight-line functions list naked modeling functions naked?’re using “naked modeling function” list accomplish two things time:emphasize modeling real-world situations always expect functions parameters.point large fraction modeling situations can handled just function “shapes.”make list shapes (ii) comprehensive, ’ve stretch “naked” metaphor bit.","code":""},{"path":"fun-describing.html","id":"mathematical-notation","chapter":"4 Describing functions","heading":"4.5 Mathematical notation","text":"grown traditional mathematical notation likely familiar notation several naked modeling functions: \\(\\ln x\\), \\(\\sin x\\), \\(e^x\\), \\(x^p\\) (\\(x^2\\) \\(p=2\\) \\(\\sqrt{x}\\) \\(p=1/2\\)).Traditional notation mixes several things computer notation sensibly keeps separate. computer programmer’s point view, traditional notation idiosyncratic rather systematic.interested things, three concepts computing may help appreciate differences:Functional notation computing, notation function name followed parentheses4 inputs inside parentheses called “functional notation.” functional notation part traditional mathematical notation, although often parentheses left .Functional notation computing, notation function name followed parentheses4 inputs inside parentheses called “functional notation.” functional notation part traditional mathematical notation, although often parentheses left .Infix notation functions two inputs, computing languages often support different arrangement function name inputs name comes arguments. ’ve seen parts traditional arithmetic notation, instance, \\(3 + 5\\) \\(8/2\\). Infix notation sometimes used place functional notation 3^2 x^3.Infix notation functions two inputs, computing languages often support different arrangement function name inputs name comes arguments. ’ve seen parts traditional arithmetic notation, instance, \\(3 + 5\\) \\(8/2\\). Infix notation sometimes used place functional notation 3^2 x^3.Markup notation undoubtedly familar word processing , particularly, style word processing called --see----get (WYSIWYG). WYSIWYG, can enter plain text just using keyboard, want make something boldface italics, use mouse select text involved select style menu. Typically, WYSIWYG mathematical content involves similar mouse-based process. contrast, mainstream computer languages, mouse needed . computer commands constructed plain, linear sequences letters characters.\nComputer programmers helpfully observed word-processing process can constructed simple plain text input computer program interprets input well-defined ways carries typesetting. illustrate, consider next couple lines. first shows ordinary looking word-processor formatted sentence. second shows way encoded typesetter can produce formatted content.\n\n\\(e^x\\), \\(\\sqrt{x^2}\\) \\(\\int_0^\\infty \\frac{1}{x^2} dx\\) examples traditional notation.5\n\n\n$e^x$, $\\sqrt{x^2}$ $\\int_0^\\infty \\frac{1}{x^2} dx$ examples *traditional* notation.^[footnote]\nMarkup notation undoubtedly familar word processing , particularly, style word processing called --see----get (WYSIWYG). WYSIWYG, can enter plain text just using keyboard, want make something boldface italics, use mouse select text involved select style menu. Typically, WYSIWYG mathematical content involves similar mouse-based process. contrast, mainstream computer languages, mouse needed . computer commands constructed plain, linear sequences letters characters.Computer programmers helpfully observed word-processing process can constructed simple plain text input computer program interprets input well-defined ways carries typesetting. illustrate, consider next couple lines. first shows ordinary looking word-processor formatted sentence. second shows way encoded typesetter can produce formatted content.\\(e^x\\), \\(\\sqrt{x^2}\\) \\(\\int_0^\\infty \\frac{1}{x^2} dx\\) examples traditional notation.5$e^x$, $\\sqrt{x^2}$ $\\int_0^\\infty \\frac{1}{x^2} dx$ examples *traditional* notation.^[footnote]Traditional mathematical notation includes features superscripts special symbols easily written pencil hand. Often notation beautiful aesthetically cherished mathematicians. computer commands computer languages straight sequences characters using function infix notation.6","code":""},{"path":"fun-notation.html","id":"fun-notation","chapter":"5 Notation for functions","heading":"5 Notation for functions","text":"Part difficulty mathematics many people making sense nomenclature notation. taught high school highly idiomatic system can mastered extensive experience. Mathematicians undoubtedly skilled logic, mathematics ancient history littered language synonyms, near synonyms, inconsistencies, diacritical marks, letters unfamiliar alphabets.illustrate cultural admiration abstraction mathematics, consider famous poem University Oxford mathematician, Charles Lutwidge Dodgson (1832-1898):’Twas brillig, slithy toves\n       gyre gimble wabe:\nmimsy borogoves,\n       mome raths outgrabe.words commonly encountered traditional mathematics notation.equation, formula, function, variable, unknown, rootAnd mathematical sentences.\\(y = x\\)\\(y = \\sqrt{x}\\)\\(y^2 = x\\)\\(x^2 = x\\)\\(x = \\sqrt{x}\\)five sentences equations. ’s easy, equal sign two sides. formulas? functions? ’re used calling \\(x\\) \\(y\\) variables. become unknowns? Sentence (iv) might interpreted describing roots. sentence (v) says thing (iv) related roots.","code":""},{"path":"fun-notation.html","id":"a-notation-for-computing","chapter":"5 Notation for functions","heading":"5.1 A notation for computing","text":"traditional notation practically useless computing. programmer deep understanding notation intended mean given circumstance can construct computer expression carry meaning computer’s work.illustrate, similar-looking sentences. math notation, can mean something. R, one valid others invalid. Read one try guess one valid others .’ve made guesses, open sandbox see got right.student knows make sense math notation find much help writing computer notation. ’s like well educated foreigner trying make sense sentences meaningful others .“Chair meeting,” “seat meeting.”\n“Seat guest,” “chair guest.”\n“Bush ,” “tree .”\n“Tree cat,” “bush cat.”\n“Table motion,” “desk motion.”\n“Bench player,” “couch player.”\n“Couch meaning” “bench meaning.”book, ’re going use mathematical notation corresponds usable computer notation. first step stop using \\(=\\) mean many different things.","code":"\ny = x\ny = sqrt(x)\ny^2 = 3\ny = sqrt(3)\ny - x = 0\n0 = (x+3)(x-2)"},{"path":"fun-notation.html","id":"objects-and-actions","chapter":"5 Notation for functions","heading":"5.2 Objects and actions","text":"[F-30] Identify structure function notation function defined formula.’re going give names mathematical “objects” actions. introduction, ’ll use boldface objects italics actions.function mathematical object gives instructions transform one inputs output. Typically, always, give names functions can refer . can think function like recipe: tells inputs create output. ’re used functions recipe written formula using arithmetic operators. general term recipe function algorithm. (Section 5.3 gives definition “algorithm” shows examples formulas.)function mathematical object gives instructions transform one inputs output. Typically, always, give names functions can refer . can think function like recipe: tells inputs create output. ’re used functions recipe written formula using arithmetic operators. general term recipe function algorithm. (Section 5.3 gives definition “algorithm” shows examples formulas.)argument symbol stands input algorithm.argument symbol stands input algorithm.Applying function inputs means carry steps function’s algorithm, inserting appropriate quantity place symbol. Recipes use symbols like “rice” describe algorithm. cooking, apply recipe incredients. recipe says, “Add rice boiling water” use physical rice physical boiling water, instead symbols. Applying function inputs fundamental computing, ’ll often hear words “apply”: run function evaluate function execute function.Applying function inputs means carry steps function’s algorithm, inserting appropriate quantity place symbol. Recipes use symbols like “rice” describe algorithm. cooking, apply recipe incredients. recipe says, “Add rice boiling water” use physical rice physical boiling water, instead symbols. Applying function inputs fundamental computing, ’ll often hear words “apply”: run function evaluate function execute function.define function mathematical notation write something like : \\[g(x) \\equiv 4 x^2 - 7\\]\\(g()\\) name function.function takes just one argument, written symbol \\(x\\) definition. make double sure human reader sees symbol used argument, putting list symbols parentheses following function name. definition function two inputs looks like \\(h(x, y) \\equiv 3y - 5 x^2 + x\\) functions two inputs follow pattern.algorithm \\(g()\\) presented formula. formula example, \\(4 x^2 - 7\\) says, \"Take input quantity. Multiply 4 input multiply input . Subtract \\(7\\) produce output function.use \\(\\equiv\\) punctuation distinguish function name (argument list) algorithm. algorithm always right \\(\\equiv\\), name function argument list left.command g(3), applies function named \\(g()\\) value 3. replacing \\(x\\) algorithm \\(3\\) carry calculations algorithm. \\(g(3)\\), output 29.R, function defined using similar expression. \\(g()\\) defined , R definition beThe name function, without parentheses, left side assignment operator <-.use name g refer anything, function . R/mosaic operator makeFun() constructs functions leading command g <- gives output makeFun() name.text parentheses makeFun also R expression. call sort expression tilde expression. (symbol ~ called “tilde.”) tilde character simply punctuation separate expression left side, 4*x^2 - 7, expression right side. right side tilde expression identifies symbols arguments. (case, x argument.) left side tilde expression describes algorithm function, using argument names specified right side.apply function \\(g()\\) argument, write R expression value argument given parentheses. instance, apply \\(g()\\) value 3, write:","code":"\ng <- makeFun(4*x^2 - 7 ~ x)\ng(3)## [1] 29"},{"path":"fun-notation.html","id":"algorithms","chapter":"5 Notation for functions","heading":"5.3 Formulas and algorithms","text":"algorithms example functions previous section involved arithmetic. generally, formula involve invocation another function. example: \\(\\sqrt{\\strut m x + b}\\) \\(\\sin(m x) + \\ln(b)\\).idea “algorithm” generalizes formulas. starter definition :algorithm set instructions performing computation.High-school math typically involves presenting algorithms formula. learned, maybe middle school, follow arithmetic steps involved algorithms described formulas. also likely used calculator perform arithmetic evaluate functions \\(\\sin()\\) \\(\\ln()\\) \\(\\sqrt{\\strut}\\) don’t know evaluate using simple arithmetic. calculator implementing algorithm programmed enable calculation \\(\\sin()\\) \\(\\ln()\\) .slightly detailed definition “algorithm” highlights algorithms written terms , simpler algorithms.algorithm set instructions performing computation written terms algorithms already know perform.purposes, “algorithms already know perform” taken arithmetic—addition, subtraction, multiplication, division—well evaluation naked modeling functions. Admittedly, people compute logarithms fluently can add numbers, already R implementations basic modeling functions: exp(), log(), sin(), power-law, dnorm(), pnorm().\nvast majority functions see book (mathematical modeling general) can constructed basic arithmetic application naked modeling functions.","code":""},{"path":"fun-notation.html","id":"algorithms-without-formulas","chapter":"5 Notation for functions","heading":"5.4 Algorithms without formulas","text":"Many functions described algorithms use concepts common computer programming unknown traditional mathematical notation. names like iteration branching many refer stored lists fixed numbers (like office workers street, building, floor, corridor, door image function). ’ll deal things later, now …going use word algorithm name kind expression right \\(\\equiv\\) function definition. formula specific kind algorithm generally written traditional math notation.Algorithms, including ones formulas, written terms set symbols stand inputs. high-fallutin’ way saying something simple: \\(mx + b\\), \\(x\\), \\(m\\), \\(b\\) names give quantities used calculation.notation using function definition lists names two places, others one place. , look \\[g(x) \\equiv m x + b\\]\n\\(x\\) appears algorithm list input name \\((x)\\) left \\(\\equiv\\).\\(m\\) \\(b\\) different; appear algorithm. word quantities mathematics parameter. Eventually, algorithm followed, ’re going put specific numerical values place parameter.parameter values come ? subject mathematical notation silent. figure context experience. potentially confusing, especially human around sort things .","code":""},{"path":"fun-notation.html","id":"computer-notation","chapter":"5 Notation for functions","heading":"5.5 Computer notation","text":"notation used computer programming lets us explicit symbols refer function inputs parameters function.\nDepending computer language things can handled one way another. (experienced computer programmers: issue scope can complex right.)software used CalcZ (R/mosaic, R language augmented mosaic package extensions), take simple--use approach. works like :modeling functions construct R/mosaic list parameters formally arguments function.wrote traditional notation \\[g(x, m, b) \\equiv m x + b\\]also way give default numerical values parameters can write \\(g(3.5)\\) computer know find parameter values. writing formulas using math notation, ’ll extend traditional notation write, instance, \\(g(x, m=2, b=3) \\equiv m x + b\\).R/mosaic, construct mathematical function like \\(g()\\) using makeFun() function:also writebut notation means give specific numerical values m b inputs whenever evaluate g(). won’t default values “parameters--inputs” m b.[F-31-R] Identify create R versions mathematical functions using makeFun() tilde expressions.[F-33] Master conventions used CalcZ giving names functions referring functions “pronouns.”","code":"\ng <- makeFun(m*x + b ~ x, m=2, b=3)\ng <- makeFun(m*x + b ~ x)"},{"path":"fun-notation.html","id":"calcz-naming-conventions","chapter":"5 Notation for functions","heading":"5.6 CalcZ naming conventions","text":"’re going using lot functions CalcZ. functions proper names, usually written using short sequences letters: instance naked modeling functions \\(\\sin()\\), \\(\\ln()\\), \\(\\exp()\\).functions needed just sentence paragraph section, perhaps used example lay steps algorithm. natural languages English, often use pronouns purposes: , , , , , , …. also use pronouns identifying functions. policy :pronoun function named \\(f()\\) \\(g()\\) \\(h()\\) corresponding upper-case letters \\(F()\\), \\(G()\\), \\(H()\\). particular choice letter f, g, h significance whatsoever. just way give unambiguous handle function going using little .occasion, use subscripts superscripts pronoun letters, instance \\(f_1()\\) \\(g^\\star()\\). way give us many possible pronouns need . Perhaps analogous words like “sister,” “parent,” “husband,” “cousin,” etc. allow us refer, without proper name, specific person.occasions, function relates specific quantity position velocity, use names \\(x()\\), \\(y()\\), \\(z()\\), \\(u()\\), \\(v()\\), \\(w()\\), . letters , course, ones frequently use name inputs functions. know whether letter meant refer input rather function? parentheses provide clue: \\(x()\\) function name, \\(x\\) input name.can become tedious give name every function, even ’s used . Consider sentence example:“functions \\(g(x) \\equiv \\sqrt{\\strut x}\\) \\(h(x) \\equiv x^3\\) examples power-law functions.”Long awkward. ’ll feel free write instead,“\\(\\sqrt{\\strut x}\\) \\(x^3\\) examples power-law functions.”Without formality provided “\\(g(x) \\equiv\\)” can hard know whether \\(\\sqrt{\\strut x}\\) means “square-root function” \"take square root specific number \\(x\\). convention use based name used expression. standard argument names end alphabet used without subscript (e.g. \\(x_0\\)) special symbol subscript (e.g. \\(t^\\star\\)), intend expression function. However, want apply function specific values inputs write following styles:\\[f(x^\\star) \\ \\ \\mbox{}\\ \\ \\sqrt{\\strut x^\\star}\\ \\ \\mbox{}\\ \\ \\sqrt{\\strut x=3}\\ \\ \\mbox{}\\ \\ \\left.\\sqrt{\\strut x}\\right|_{x=3}\\ \\ \\mbox{}\\ \\ \\left.g(x)\\strut \\right|_{x=3}\\]One important techniques calculus take something often think number turn function whose output number. take time get used calculus notation able tell glance whether something function number.’s illustration make sense already studied calculus:\\[\\int_0^3\\!\\! f(x) dx\\ \\ \\text{number, }\\int_0^x\\!\\! f(x) dx \\ \\ \\text{function.}\\ \\ \\]high-school math notation, can hard tell expression intended function number. Careful attention CalcZ conventions make much easier figure whether expression resolves function number. first read mathematical expression, good first question ask , “kind thing ? function? number?”essential can apply conventions reflexively. able say kind thing symbol stands key understanding mathematical expression means.Use CalcZ naming conventions answer questions.Question \\(h()\\)?name function ✓ Right. Typically use \\(f()\\), \\(g()\\), \\(h()\\) something similarly generic stand function ’re going working little . Think pronouns. Just can say, meaningfully, “gave ,” can say \\(h(x) \\equiv f(x) + g(2*x)\\) name input. ☹︎ Sorry, usually letters like \\(x\\), \\(y\\), \\(t\\). specific numerical value ☹︎ Sorry, ’ll use constructions subscript like \\(x_0\\) \\(y_\\star\\) like . Question B come write \\(f()\\) name function rather just \\(f\\) \\(f(x)\\)?good reason ☹︎ certainly intend empty parentheses remind reader name refers function. spot place violate intention, point us. ’s reminder ’re talking function name “\\(f\\).” ✓ parentheses part name. ☹︎ . Names R never contain parentheses. f, fbar, fred valid names R command, f() . use parentheses writing human audience reminder name referring function. computer doesn’t need reminders Question C sort thing denoted \\(x_0\\) \\(y_\\star\\) \\(y_{max}\\)?particular numerical value ✓ Right. instance, might particular value input function produces output zero. might particular location domain function. name input ☹︎ Sorry. won’t typically use subscripts referring input name. Question D symbols might stand entire domain function?    \\(y\\) ✓ Right. Another term use symbol standing domain “name input.”        \\(f()\\) ☹︎ , write name function called “\\(f\\)”        \\(y_0\\) ☹︎ . \\(y_0\\) might used stand single point domain. Question E Suppose come across \\(v(w) \\equiv w + 3\\) book. \\(v\\) \\(w\\) stand ?\\(v()\\) name function \\(w\\) name input function. ✓ Right. Whenever write something like “name(another_name) \\(\\equiv\\),” ’re saying explicitly “name” refers function “another_name” refers input. ’s meaningless. ☹︎ ’ll try write meaningless mathematical expressions. mistake, let us know. ’s thing \\(v = w + 3\\). ☹︎ \\(v = w+3\\) equation. \\(v(w) \\equiv w+3\\) format defining function named \\(v()\\). Question F \\(g(x) \\equiv x^2\\) \\(h(w) \\equiv w^2\\) function?Yes, although function given two different names. ✓ thing ’s significant name input used consistently function algorithm. course ! ☹︎ Sorry. suppose might ask, “mean function?” Remember function relationship inputs output. \\(g(x) \\equiv x^2\\) \\(h(w) \\equiv w^2\\) describe exactly relationship: output square input. Question G R/mosaic notation \\(\\equiv\\)?    <- makeFun() ✓        makeFun() ☹︎ Almost right. makeFun() creates function doesn’t give name.        <- ☹︎ Sorry. R, symbol means “give name ” whatever right side <-. name given left side <-. ","code":""},{"path":"fun-notation.html","id":"functions-in-r","chapter":"5 Notation for functions","heading":"5.7 Functions in R","text":"name R language can refer sort object. use CalcZ naming conventions use R, ability develop read math notation help reading R vice versa.R/mosaic provides additional clues distinguish numbers functions.Almost time create function using makeFun(). see R expression starting name <- makeFun(tilde expression) know sure name refers function.get deeper calculus, meet additional R operators generate functions. ’ll introduce good time, someone reviewing course, include D(), antiD(), compose() iterate().readers may encountered R previously statistics data science course. readers wondering makeFun(). Experienced programmers know way make functions R using function keyword. instance:’s completely correct legitimate way define function R settings universal practice.developed makeFun() handle situation computers, insistence avoiding ambiguity, something person familiar math notation likely suspect. problem comes something simple asIn traditional math notation, \\(g(x) \\equiv m x + b\\), usually silent parameters like \\(m\\) \\(b\\) coming . , honest, don’t worry try evaluate function.evaluate, say, command \\(g(3)\\), R system knows find right values \\(m\\) \\(b\\). objects appropriate places R system, error message generated. rules computer languages follow tracking symbols aren’t argument list called scoping rules. Scoping advanced programming concept different languages use different rules. ’s recipe trouble confusion newbies. (even experts!)makeFun() arranged impose scoping system, one dead easy essentially every computer language. makeFun() add parameters function algorithm argument list. makeFun() command creates function 3 arguments.point ~ x part tilde expression simply name arguments come first. evaluate function, ’ll provide values m b. operations function—differentiation anti-differentiation, particular—can done without specify parameter values. know differentiation anti-differentiation , example:Sometimes particular numerical values mind parameters. instance, modeling trajectory ball, undoubtedly need make use gravitational acceleration Earth’s surface, \\(9.8 \\text{m}/\\text{s}^2\\). might prefer include specific number 9.8 function definitions can use functions model ball’s trajectory Mars. since balls thrown Earth, maybe ’s worthwhile insist value 9.8 specified every time function used. can ways using g parameter name instruct R set g 9.8 unless otherwise specified. function look like :","code":"\nf <- function(x) { 3 + 2*x }\ng <- function(x) { m*x + b }\nmakeFun(m*x + b ~ x)## function (x, m, b) \n## m * x + b\nD(m*x + b ~ x)## function (x, m, b) \n## m\nantiD(m*x + b ~ x)## function (x, C = 0, m, b) \n## m * 1/2 * x^2 + b * x + C\nball_velocity <- makeFun(g*t + t0 ~ t, g = 9.8, t0 = 0)\n# For Earth: falling 3 seconds from a standstill\nball_velocity(3)## [1] 29.4\n# For Earth when the ball has an initial upward velocity of 10 m/s\nball_velocity(3, t0 = -10)## [1] 19.4\n# For Mars ...\nball_velocity(3, t0 = -10, g = 3.711)## [1] 1.133"},{"path":"fun-notation.html","id":"foursigns","chapter":"5 Notation for functions","heading":"5.8 \\(=\\), \\(\\equiv\\), \\(\\rightarrow\\), <-","text":"\\(=\\) sign carries lot weight high-school notation. much weight. used several meanings distinguished one another. Combining one symbol leads confusion error.Meaning 1: “defined …”use \\(\\equiv\\) mathematical notation <- R. notation R bit simpler mathematical notation: way giving something name.“something” function, see left side <-, instance use makeFun() operator qw h <- makeFun(x^2 ~ x). left side simply name.math notation, equivalent written \\(h(x) \\equiv x^2\\). left side isn’t exactly name. ’s name followed parentheses names used algorithm.Keep mind writing functions, generally provide hint name refers function, writing \\(h()\\) h(). parentheses aren’t part name; name \\(h\\). parentheses remind us \\(h\\) function.Meaning 2: “Happens …”acceleration due gravity often given name \\(g\\). Earth’s surface, happens \\(9.8 \\text{m}/\\text{s}^2\\). math notation, use equal sign narrow meaning, \\(g=9.8\\text{m}/\\text{s}^2\\). R use =.Meaning 3: “Gets closer closer …”Calculus relationships: connection two () things. hear phrases like, “\\(x\\) increases, \\(f(x)\\) decreases.” , everyday experience, “gets humid, weather becomes uncomfortable.” , “slower safer,” “spicier better” “heavier blanket, warmer ’ll .” (One important uses derivatives calculus represent statements quantitatively. ’s subject next Block.)calculus, sometimes distinguish “\\(x\\) zero” “\\(x\\) gets closer closer zero.” ’ll need want say, “gets smaller smaller, doesn’t disappear entirely.” symbol “gets closer closer ” \\(\\rightarrow\\), \\(x \\rightarrow 0\\)reading math, take care notice \\(=\\), \\(\\rightarrow\\), \\(\\equiv\\) used. sign something important say intended help make sense read.","code":"\nname <- something"},{"path":"graphs-and-graphics.html","id":"graphs-and-graphics","chapter":"6 Graphics & function graphs","heading":"6 Graphics & function graphs","text":"[F-20] Understand mathematical graph consists points composite space: input \\(\\times\\) output.Scientific statistical graphics visual depictions information data. displaying function single input, mathematicians favor particular style graphics. favored style called function graph, specific technical meaning mathematics. Notice ’re writing “function graph” rather “function graphic.” function graph particular sort graphic: many types graphics ’ll use display data features functions.","code":""},{"path":"graphs-and-graphics.html","id":"the-graphics-frame","chapter":"6 Graphics & function graphs","heading":"6.1 The graphics frame","text":"Technical graphs usually drawn graphics frame\nseveral components:frame region piece paper computer screen marked horizontal vertical axis.horizontal axis stands one quantity.vertical axis stands another quantity.horizontal vertical axes drawn scale enables translate numerical value position.\nFigure 6.1: empty graphics frame scales horizontal vertical axes.\n","code":""},{"path":"graphs-and-graphics.html","id":"data-graphics-the-point-plot","chapter":"6 Graphics & function graphs","heading":"6.2 Data graphics: the point plot","text":"One common uses graphics frame display visually two columns table containing data. instance, small part table size penguins Palmer Archipelago Antarctica.point plot displays two columns table. row table represented one point graphic. instance:\nFigure 6.2: Data 344 penguins flipper length (cm) body mass (kg).\npenguin specific mass flipper length. look penguins mass around 4 kg, can see different penguins variety flipper lengths. ’s typical natural variability.function graph can constructed way. Start table reporting output function variety inputs, like :make point plot two columns table:\nFigure 6.3: point plot table.\nTypically, drawing graph function plot individual dots, lines connecting dots. ’s much making point plot, use gf_line().Data stored tables called data frames. many ways access data frames many different ways store . important topic data science. CalcZ supply data frames simplest possible way: giving name can use refer data frame.can use gf_point() plot pair columns data frame, know names columns. useful function names(). Similarly, look first rows, use head() function.","code":""},{"path":"graphs-and-graphics.html","id":"graphics-layers","chapter":"6 Graphics & function graphs","heading":"6.3 Graphics layers","text":"often want compare functions, compare function data, something elaborage. can using ordinary graphics functions, e.g. slice_plot() gf_point(). command generates graphics layer. can stack layers top one another connecting commands pipe, written %>% R. pipe token always come end line, never beginning. last command pipeline followed %>%.ugly plot made three layers, layer displaying one naked modeling functions. slice_plot() first layer, domain() must given explicitly. ’re welcome later layers, don’t original domain() passed pipeline.\nJust show things done, functions drawn different colors, different widths (e.g., size=2) different levels transparency (e.g. alpha=0.2).","code":"\nslice_plot(dnorm(x) ~ x, domain(x=c(-4,4))) %>%\n  slice_plot(pnorm(x) ~ x, color=\"red\", size=2) %>%\n  slice_plot(sin(x) ~ x, color=\"green\", size=4, alpha = 0.2)"},{"path":"graphs-and-graphics.html","id":"data-and-functions","chapter":"6 Graphics & function graphs","heading":"6.4 Data and functions","text":"Figure 6.2, data point plot penguin flipper length vs body mass, generally multiple penguins body mass different flipper lengths. overall impression cloud points.construct function model pattern observed cloud, need respect mathematical definition function, part function one output given input.\nFigure 6.4: penguin data doesn’t directly describe sensible mathematical function. (left) use modeling create function stays close, close, data points. (right)\ncreate model flipper length function body mass, used one set techniques called machine learning. , didn’t specify form exponential hump sigmoid particular shape. simply asked computer figure smooth function stays close data. result, happens, sigmoid.","code":"## `geom_smooth()` using method = 'loess'"},{"path":"graphs-and-graphics.html","id":"inputs-to-output-1","chapter":"6 Graphics & function graphs","heading":"6.5 Inputs to output","text":"can easily evaluate function given input graph. know, just put finger horizontal coordinate input. move finger upward reach point curve directly horizontal coordinate. read value function input reference scale vertical axis.’s possible show graph whole function whose domain \\(-\\infty\\) \\(\\infty\\). Consequently, drawing graph choose show part domain expect relevant needs.Sometimes, graphic’s domain includes parts domain function drawn. cases, function’s graph extend invalid part graphic domain, plot function whose domain positive numbers.function range runs \\(-\\infty\\) \\(\\infty\\), limits paper display mean can show part range. experience, ’ll learn read hints graph underlying function might range larger one shown graphic.","code":""},{"path":"graphs-and-graphics.html","id":"outputs-to-inputs","chapter":"6 Graphics & function graphs","heading":"6.6 Outputs to inputs","text":"Graphs relatively modern, coming mainstream use 1700s. Much mathematics developed graphs invented. One consequence function tasks easy using graph might hard previous ways implementing functions. analogous way arithmetic pretty easy Arabic numerals, really hard Roman numerals.function graph makes easy evaluate function inverse. basic modeling functions way calculate numerically output given input (function’s domain).Often, working function goes another way: know output want find corresponding input. ’s easy graph. Pick position vertical axis represents given input. trace horizontally ink . , trace vertically read value input produce given output.Mathematicians careful distinguish functions unique input generates given output, functions can one input generates output. Functions one--one relationship output input called “invertible.”Invertible , common procedure working functions find input corresponding specific, given output. high-school algebra, called “solving \\(x\\).” special case solving finding roots polynomial. name give procedure zero finding, correctly points trying find input.","code":""},{"path":"graphs-and-graphics.html","id":"graphs-of-functions-with-two-inputs","chapter":"6 Graphics & function graphs","heading":"6.7 Graphs of functions with two inputs","text":"can draw graphs functions two inputs. Now points need marked 3-dimensional space: one axis two inputs another axis output. Like :\nFigure 6.5: (Figure Fun-1b-1.2)\nhard read graph function two inputs. Think graph kind tent suspended domain ground. graph surface. show graph display, tricks trade used: color give additional scale output; computer graphics let us rotate surface look various perspectives, added grid lines marks surface help us read numerical value.","code":""},{"path":"graphs-and-graphics.html","id":"contour-plots","chapter":"6 Graphics & function graphs","heading":"6.8 Contour plots","text":"[F-21] Interpret contour plot function two input variables, include estimating function values locations peaks valleys.mathematical graph just one way draw picture function two inputs. ways. One helpful mode picture called contour plot, familiar many non-mathematicians form topgraphical maps showing landscape elevation function latitude longitude. ’s contour plot function shown previous graph:\nFigure 6.6: (Fig-1b-2.1)\ncontour plot topographical map mathematical graph Figure Figure (Fun-1b-1.2)may take practice learn read contour plots fluently skill ’s worthwhile . Note graphics frame Cartesian space two inputs. output presented contour lines. contour line label giving numerical value function output. input value pairs given contour line corresponds output level labeling contour line. find output input pair contour line, interpolate contours either side point.example, input pair (0, 0)—bottom frame, midway left right—falls contours labeled “20” “22.” means output corresponding input (0, 0) somewhere 20 22. point much closer contour labeled “20,” ’s reasonable see output value 20.5. , course, approximation, ’s nature reading numbers graphs.Often, specific numerical value point primary interest. Instead, may interested steep function point, indicated spacing contours. contours closely spaced, hillside steep. contours far apart, hillside steep, perhaps even flat.Another common task interpreting contour plots locate input pair ’s local high point low point: top hill bottom hollow. points called local argmax local argmin respectively. output function local argmax called local maximum; similarly local argmin, output called local minimum. (word “argmax” contraction “argument maximum.” tend use word “input” instead “argument,” means exactly thing say “inputs function” says “arguments function.”)Still common tasks reading contour plots start given input pair figure 1) direction move steeply uphill, 2) direction move keep function output .can helpful look contour map interpret contours representing geographical features: hills, valleys, crests, coves, hollows, ., (Fun-1c) translate contour plot graph function one input. (can think function two inputs, hold one inputs constant, , always . )","code":""},{"path":"graphs-and-graphics.html","id":"slice-plots","chapter":"6 Graphics & function graphs","heading":"6.9 Slice plots","text":"[F-23] Know meant slice function two variables. able determine function increasing, decreasing, constant moving horizontally vertically contour plot.mentioned , mathematical modeling process constructing mathematical representations situations phenomena interest. CalcZ, primarily interested using functions representations.Almost always, mathematically modeling real-world situation phenomenon, try capture every nuance every relationship might exist real world. leave things . simplifications make modeling problems tractable encourage us identify important features important relationships.hand, ’s easy go wrong leave something ’s important. mitigate risk, many modeling projects involve modeling cycle propose candidate model, examine consequence model see corresponds well parts reality important us task, modify model needed produce new better candidate.spirit, ’s useful always assume models leaving something complete model involves function inputs present candidate. present candidate model considered slice complete model. slice leaves one variables complete model.illustrate , suppose “complete model” form function two inputs, shown contour plot .become practiced reading contour plots, might prefer read one hilltop (shaded yellow) side--side hollow bowl (shaded purple), green, almost level flanks left right edges frame.common forms slice involve constructing simpler function one input . example, simpler function might ignore input #2. different ways collapsing function two inputs function one input. especially useful way calculus take two-input function set one inputs constant value.instance, suppose set input #2 constant value 1.5. means can consider value input #1, input #2 replaced 1.5. Figure Fig-1c.2, ’ve marked red points contour plot give output simplified function.point along red line corresponds specific value input #1. contours, can read output corresponding values input #1. relationship, output versus input #1 can drawn mathematical graph (right contour plot). Study graph can see rising falling parts graph correspond contours crossed red line.Slices can taken direction even along curved path! blue line slice constructed letting input #2 vary holding input #1 constant value 0.Austin surface_plot_with_contours() function. Add mosaicCalc.’ve created function named \\(\\mbox{twins}(x,y)\\) help practice making contour plots. ’ll need open sandbox draw plot.scaffolding command:Question domain plot large enough show mountain next deep hole. domains job?domain(x=c(-5, 5), y=c(-5, 5) ✓ domain(x=c(1, 5), y=c(1, 5) ☹︎ shows mountain, hole. domain(x=c(1,1), y=c(-1,1))) ☹︎ hole shown, none mountain. domain(x=c(5,10), y=c(0,10))) ☹︎ ’s hardly anything going domain. function pretty flat except dip lower left. different sandbox (can still see contour plot first sandbox), draw slice function along line \\(y=0\\). Use \\(x\\)-domain correct answer previous question.Question B expressions accomplish task?slice_plot(twins(x, y=0) ~ x, domain(x=c(-5,5))) ✓ slice_plot(twins(x) ~ x, domain(y=c(-5, 5))) ☹︎ domain \\(x\\), \\(y\\). twins() takes two inputs, even one fixed zero. slice_plot(twins(x, y=0) ~ x, domain(x=c(-5, 5), y=c(-5, 5))) ☹︎ slice plot domain includes one input. slice_plot(twins(x, y=0) ~ x + y, domain(x=c(-5, 5), y=c(-5, 5))) ☹︎ slice plot one input right side tilde expression. \nConsider graph length day different levels latitude different days year. Source.First, orient graph contours mean. Note vertical lines indicating days equinoxes solstices.Question True False: place equator day length exactly 12 hours time year.    TRUE ☹︎ , horizontal (dashed) line denoting equator cross 12-hour contour. doesn’t.        FALSE ✓ Since dashed equator line overlaps 12-hour contour line, time year length day equator exactly 12 hours. Presumably daylight starts somewhat sun rises horizon ends somewhat sun goes horizon. word “equinox” comes Latin “equal night.”Question B True False: judge contour plot, equinox every latitude length day somewhat longer length night.    TRUE ✓        FALSE ☹︎ Note neither lines March September equinoxes cross 12-hour length--day contour. Question C USAFA latitude 38.9983° N. Reading contour plot, roughly length (hours) longest day year?","code":"\ntwins <- mosaic::rfun(~ x + y, seed = 302, n=5)\ncontour_plot(twins(x, y) ~ x + y, domain(x=c(0,1), y=c(-1,1)))twins <- mosaic::rfun(~ x + y, seed = 302, n=5)\nslice_plot(__tilde-expression__, __domain__)"},{"path":"params-intro.html","id":"params-intro","chapter":"7 Parameters for functions","heading":"7 Parameters for functions","text":"naked modeling functions provide modeler collection shapes. yet fully suited represent real-world phenomena. illustrate, consider Figure 7.1 shows number officially confirmed cases March 2020.outbreak widely described “exponential,” alongside data Figure 7.1 shows function \\(e^x\\).\nFigure 7.1: Cumulative confirmed COVID-19 cases month March, 2020. red curve \\(e^x\\)\n’s obvious mismatch data function \\(e^x\\). mean COVID pattern exponential?hint comes formula \\(e^x\\). \\(x\\)? Plotted graph, \\(x\\) calender day March. shouldn’t \\(x\\) given hours minutes weeks?want input \\(\\exp()\\) hours, can multiply \\(x\\) 24. input weeks, multiplier \\(\\frac{1}{7} = 0.1429\\). cases, function \\(e^{kx}\\), \\(k\\) 24 hours 0.1429 weeks. Exploring bit, found \\(0.3 \\leq k < 0.5\\) produce functions graphs match data much better naked \\(e^x\\).\nFigure 7.2: COVID-19 data compared exponential functions \\(e^{kt}\\). variety possible numerical values \\(k\\) shown.\nmultiplier \\(k\\) \\(e^{kx}\\) called parameter function: number can use set scale input. use exponential function model COVID, ’ve stretch red curve Figure 7.2 clothing naked \\(x\\) \\(k x\\). Perhaps ’s matter personal choice size \\(k\\) best suited model data.personal choice \\(k=0.30\\). reasoning? orange curve parallels COVID data. flaw \\(k=0.30\\) curve lags several data several days. can fix pulling \\(k=0.30\\) curve left. Mathematically can accomplished subtracting days \\(x\\) multiplying \\(k\\), , using function \\[f(x) \\equiv e^{k(x-s)}\\] \\(s\\) stands shift.Figure 7.3 shows orange curve pulling 10 days left. ’s now pretty good match data.\nFigure 7.3: COVID-19 data compared exponential functions \\(e^{k(t-s)}\\).\nNote ’ve aligned orange curve horizontally, seems curve much. green curve much better. much gentler curve, \\(k=0.19\\) pulled little month left.parameterizing exponential function \\(e^{k(x-s)}\\) finding suitable values \\(k\\) \\(s\\), get good match March data. models can sometimes tell us . green curve Figure 7.3 value \\(s\\) -32 days. 32 days March 1 late January. even though didn’t January February data base green curve , late January 2020 regarded beginning outbreak.","code":""},{"path":"params-intro.html","id":"parallel-scales","chapter":"7 Parameters for functions","heading":"7.1 Parallel scales","text":"graphical format using display functions one variable places input horizontal axis output vertical axis. way draw function. Consider everyday objects: thermometer ruler.     object presents read-’s measured—temperature length—two different scales. time, objects provide way convert one scale another.function gives output given input. represent input value position number line—call “axis”—output position another output line, almost always drawn perpendicular one another. two number lines can just well parallel one another. evaluate function, find input value input scale read corresponding output. inverse function can evaluated just easily: switch roles input output scales.Taking traditional unit scale input metric scale output, two functions implemented objects :\n\\[\\underbrace{C(F) = \\frac{5}{9}(F-32)}_\\mbox{Fahrenheit Celcius}\\ \\ \\ \\text{}\\ \\ \\ \\ \\underbrace{\\text{cm(inches)} = 2.54 \\times (\\text{inches}-0}_\\mbox{inches cm})\\]\nsimple, straight-line functions, play important role modeling.conversion function can written form \\(h(x) \\equiv m (x - x_0)\\). course, multiply \\(m\\) terms parentheses, get \\(h(x) = m x - m x_0\\) can written even simply \\(mx + b\\) setting \\(b\\equiv m x_0\\). conversion function simply straight-line function.\\(m\\) \\(x_0\\) parameters straight-line function. terms graph straight-line function, slope x-intercept respectively.Often, functions can parameterized ways. instance, likely learned parameterization \\(m x + b\\), \\(m\\) (still) slope graph \\(b\\) now y-intercept.can call \\(m(x - x_0)\\) “x-intercept parameterization” \\(m x + b\\) \"y-intercept parameterization. equivalent equally good ways parameterizing straight line. still ways parameterizing, style reflecting format specifying two points make line.turn naked modeling function basic modeling function use \\(h()\\) convert input applying naked function.can see, straight-line function fundamental part modeling.illustrate link basic modeling functions naked progenitors, Figure 7.4 shows model fit COVID-19 data:\nFigure 7.4: graph naked modeling exponential additional scale displayed (red) match COVID-19 data\nfunction drawn simply \\(e^x\\): naked. black horizontal scale shows \\(x\\). match function data, , show basic modeling function, simply add new scale translates \\(x\\) “day March.” ’s red scale. , March 22, 25,000 COVID cases date.naked modeling function give good model COVID case numbers. scale input applying naked function, effectively laying new axis, stretched shifted original, let’s us read number cases.Input scaling empowers naked modeling functions model huge variety phenomena. ’s just one exponential function always looks exactly . huge variety ways scale input. input scaling, naked modeling function puts clothes becomes one basic modeling functions.\n\\[\\underbrace{e^x}_\\mbox{naked modeling function}\\ \\ \\ \\underbrace{e^{k(x-x_0)}}_\\mbox{basic modeling function}\\]\nstraight-line function \\(h()\\) written \\(k(x-x_0)\\) rather \\(m(x-x_0)\\). ’s traditional write basic modeling functions\nmay noticed uses \\(k\\) instead \\(m\\) multiplier straight-line function exponent. course, can use whatever name wish parameter. idiom mathematical notation several conventions. Knowing help read mathematics fluently.table shows . Often, multiple parameterizations.","code":""},{"path":"params-intro.html","id":"scale-the-output","chapter":"7 Parameters for functions","heading":"7.2 Scale the output","text":"Just natural input usually needs scaled reaches naked modeling function, output naked function may need scaled presents result suited interpreting real world.\nFigure 7.5: Natural quantities must scaled pure numbers suited naked modeling functions. output pure number scaled natural quantity interest.\noverall result input output scaling smartly dressed modeling function ready engage real world.parameter \\(C\\) often called baseline offset. Statisticians call “intercept,” plays role \\(b\\) straight-line function.working sinusoids, parameter \\(\\) called amplitude.course, ’re already familiar \\(\\) \\(b\\): slope intercept straight line.\nFigure 7.6: Baseline (blue), amplitude (red), period (green) sinusoid.\n\nFigure 7.7: baseline exponential horizontal asymptote.\nstraight-line function like penguin: even ’s naked, ’s still fully dressed!Now can let little secret. along, straight-line function dressed, naked. actual naked form simple can confusing:\\[\\text{identity}(x) \\equiv x\\]\nClothing identity function scaling looks like :\\[ x \\underbrace{\\longrightarrow}_\\mbox{input scaling} k x + c \\underbrace{\\longrightarrow}_\\mbox{output scaling} (kx + c) + C\\]\nlittle bit algebra transforms scaled function concise form:\\[(kx + c) + C \\longrightarrow \\underbrace{Ak}_ax + \\underbrace{Ac + C}_b \\longrightarrow ax + b\\]\nstudents thoroughly explored straight-line function high-school studies, thought ill-advised start identity function.graphs shows two horizontal scales one basic modeling functions. horizontal scale (black red) corresponds naked modeling function?Question graph (), scale corresponds naked modeling function?    black ✓        red ☹︎        neither ☹︎        ☹︎ can’t . ’s one naked function. scale input, becomes “basic modeling function.” Question B graph (B), scale corresponds naked modeling function?    black ☹︎        red ✓ Right. naked modeling function output 1/2 output zero. ’s red scale shows.        neither ☹︎        ☹︎ can’t . ’s one naked function. scale input, becomes “basic modeling function.” Question C graph (C), scale corresponds naked modeling function?Find straight-line function give value red scale point black scale.graph shows basic modeling function written style: \\(\\sin(r(t-t_0))\\). job estimate \\(t_0\\) \\(r\\).","code":""},{"path":"process-of-modeling.html","id":"process-of-modeling","chapter":"8 Process of modeling","heading":"8 Process of modeling","text":"Seen abstractly, mathematical model, using term, set functions represent relationships inputs outputs.simple level, building model can short process:Develop understanding relationship want model. Often, part “understanding” pattern seen data.Choose function type—e.g. exponential, sinusoidal, sigmoid—think good match relationship.Find parameters scales function able accept real-world inputs generate real-world outputs.’s important distinguish two basic types model:Empirical models rooted observation data.Mechanistic models created applying fundamental laws physics, chemistry, .going put mechanistic models , two reasons. First, “fundamental laws physics, chemistry, ” often expressed concepts methods calculus. heading , point don’t yet know core concepts methods calculus. Second, students don’t make careful study “fundamental laws physics, chemistry, ” studied calculus. examples mechanistic models bit hollow point.process constructing model good match data called curve fitting, , generally, fitting model.","code":""},{"path":"process-of-modeling.html","id":"variations-from-scaling","chapter":"8 Process of modeling","heading":"8.1 Variations from scaling","text":"good place start building model pick one basic modeling functions. works surprisingly often. remind , seven basic modeling functions:straight-lineexponentialpower-lawlogarithmsinusoidhumpsigmoidIt helps making selection ready mind basic shape function families. review, revisit Section 3.2.Remember also , general, scale inputs scale output. means choose model family, don’t worry first numbers axes. (course, numbers critically important later process!) scaling , however, allow us consider variations shapes modeling functions. particular, input scaling lets us flip shape right--left. output scaling lets us flip shape top--bottom.\\(f(t)\\), basic shape\\(f(-t)\\), flipped right--left\\(-f(t)\\), flipped top--bottom\\(-f(-t)\\), flipped top--bottom right--leftFor functions sinusoid, flipping much use, since flipped sinusoid curve still sinusoid. Similarly, right--left flipped hump function shape original. straight-line function, flipping either sort accomplishes thing: changing sign slope.exponential function, two possible types flipping—right--left top--bottom—produce four different curves, exponential, shown Figure 8.1.\nFigure 8.1: Four variations exponential functions.\nthree expressions\\[e^{kt}\\ \\ \\ \\ \\ 10^{t/d} \\  \\ \\ \\ \\  2^{t/h}\\]produce value \\(k\\), \\(d\\) \\(h\\) corresponding numerical values.scaffolding expression plotting \\(2^{t/h}\\) \\(-4 \\leq t \\leq 12\\) \\(h = 4\\). also plots \\(e^{kt}\\) \\(10^{t/d}\\)task modify values d k three curves lie top one another. (Leave h value 4.) can find appropriate values d k accomplish means like, say, using algebra exponents using trial error. (Trial error perfectly valid strategy regardless high-school math teachers might said “guess check.” trick make new guess systematically based previous ones observation previous ones performed.)found values k d suited task …Essay question tmp-1: Enter numerical value best estimate k.","code":"\nfa <- makeFun(2^(t/h) ~ t, h = 4)\nfb <- makeFun(10^(t/d) ~ t, d = 10)\nfc <- makeFun(exp(k*t)  ~ t, k = 0.1)\n\nslice_plot(fa(t) ~ t, domain(t = c(-4, 12))) %>%\n  slice_plot(fb(t) ~ t, color=\"blue\") %>%\n  slice_plot(fc(t) ~ t, color  = \"red\") %>%\n  gf_lims(y = c(0, 8))"},{"path":"process-of-modeling.html","id":"fit-exponential","chapter":"8 Process of modeling","heading":"8.2 Curve fitting an exponential function","text":"exponential function particularly useful quantity want model shows constant proportional increase. Many quantities everyday life way. instance, increase salary typically presented format like “3% increase.” population growth country often presented “percent per year.” Inflation price goods similarly described percent per year. Interest money bank savings account also described percent per year. bad fortune owe money loan shark, proportional increase might described “percent per month” “percent per week.”know “percent increase per time” quantity whose initial value \\(\\), exponential function easy write : \\[f(t) = (1+r)^t\\]\nnumber \\(r\\) often called interest rate discount rate given percent.Regrettably, ’s extremely easy amd common forget rules addition percent. \\(r = 5\\%\\), \\((1+r) = 1.05\\), 6. Always keep mind \\(5\\%\\) means \\(\\frac{5}{100}\\).Another source error stems tradition mathematics using number \\(e=2.718282\\) “natural” base exponential function, whereas \\(f(t) = (1+r)^t\\) base \\(1+r\\).can translate exponential \\(b^t\\) base \\(b\\) “natural” base. just matter calculating appropriate parameter \\(k\\) \\(e^k = b\\). Using logarithms, \\[e^k = b\\ \\ \\implies \\ \\  k=\\ln(b)\\] instance, \n\\(r=5\\%\\) per year, ’ll \\(k = \\ln(1+r) = \\ln(1.05) = 0.488\\) per year.Almost everybody happier arithmetic numbers like 2 10 rather \\(e=2.718282\\). reason, may see formulations exponential function \\(g(t) \\equiv 2^{t}\\) \\(h(t) \\equiv 10^{c t}\\). Remember \\(2^{t}\\) \\(e^{}\\), although exponential functions, quantitatively different. want write \\(2^{}\\) using “natural” base, \\(e^{\\ln(2) \\, t }\\). Similarly, \\(10^{ct} = e^{\\ln(10) c\\, t}\\).Exponential functions also describe decrease decay. Just replace \\(t\\) \\(-t\\). , movie decreasing quantity just movie increasing quantity played backwards time!Figure 8.2 shows data collected Prof. Stan Wagon support making detailed mechanistic model everyday phenomenon: cooling mug hot beverage room temperature. mug started room temperature, measured 26 degrees C. time 0 poured boiling water kettle measured temperature water next hours.\nFigure 8.2: Stan’s data\ntask translate data form function takes time input returns temperature output. model useful , say, filling gaps data. instance, might want find temperature water immediately poured kettle mug.Looking data, one sees temperature decreases along curve: cooling fast first slowly. pattern flipped right--left exponential. (Figure 8.1(B)) can imagine exponential, \\(e^{kt} + C\\) suitable model form cooling water.remains find parameters \\(\\), \\(k\\), \\(C\\). general process curve-fitting exponential. Later, ’ll apply process specifically water-cooling situation.General process curve-fitting exponentialStep 0: Check data show exponential pattern one variations, namely smooth increase decrease leveling beyond value \\(t\\). isn’t true, reconsider whether using exponential function first place.Step 1 data show exponential growth exponential decay? ’s exponential growth, flat region Step 0 left \\(k\\) positive. exponential decay, flat region right \\(k\\) negative.Notice question “growth decay” depends sign parameter \\(k\\). can exponentially decaying process ’s increasing. Consider, instance, speed car merges onto highway slow speed entrance ramp. car’s velocity increasing, approach highway speed rate increase gets smaller. ’s exponential decay.Step 2 baseline? ’re going put aside \\(k\\) moment find value output approached asymptotically, , height level zone data. height coefficient \\(\\) linear combination.Step 3 know baseline, ’re set find numerical value parameter \\(k\\).Pick point data far baseline. Call input \\(t_1\\).Scan forward backward time find point data ’s vertically half way original point toward baseline. Call input point \\(t_{1/2}\\). difference , \\(t_1 - t_{1/2}\\) called half-life halving-time ’s negative doubling time ’s positive.parameter \\(k\\) \\(0.693 / (t_1 - t_{1/2})\\). Double check sign \\(k\\) make sure ’s consistent saw Step 1. (Incidently, \\(0.693 = \\ln(2)\\). 2 2 doubling halving.)Step 4 Now numerical values baseline \\(\\) parameter \\(k\\), calculating value \\(B\\) straightforward.\n. Pick \\(t_0\\) ’s reasonably well represented data. Find vertical coordinate represented data near \\(t_0\\). Call \\({\\cal D}\\).\nii. Solve respect \\(B\\) equation \\(+ B e^{k t_0} = {\\cal D}\\). Things particularly easy can use \\(t_0 = 0\\). just straight calculate \\(B = {\\cal D} - \\).Step 5 Plot function \\(+ B e^{k t}\\) using values \\(\\), \\(B\\), \\(t\\) just found. satisfied, tweak parameters bit .Exponential curve fitting applied water-cooling dataLet’s illustrate general process water-cooling data, redrawn Figure 8.3.\nFigure 8.3: cooling-water data, repeated convenience.\nStep 0: data indicate smooth curve. \\(t\\) gets large, curve approaches constant. exponential model reasonable.Step 1: flat zone data right. ’ve got exponential decay \\(k < 0\\).Step 2: curve looks like ’s leveling temperature 25 degrees C large \\(t\\). \\(\\approx 25^{\\circ} \\text{C}\\).Step 3:point furthest baseline located \\(t_1 = 15 \\text{sec}\\) value \\({\\cal D} \\approx 80^\\circ\\text{C}\\).\\(55^\\circ\\text{C}\\) baseline. want find value \\(t_1\\) temperature half way 80 baseline. ’s temperature \\(80 - 55/2 = 53.5\\). Scanning right, function can imagine going data crossed \\(53^\\circ\\) \\(t_{1/2} = 40\\). Thus, half-life estimated 25s.parameter \\(k\\) therefore $k\\(0.693 / \\mbox{half-life}) = - 0.63 / 25 = -0.0277\\). Since identified Step 1 exponential decay involved, expect \\(k\\) negative. .Step 4.know \\(\\approx 25\\) \\(k \\approx -0.0277\\). also now \\(t=15\\) function output \\({\\cal D} = 80^\\circ\\).means \\(25^\\circ + B e^{- 0.0277 \\times 15} \\approx 80^\\circ = 25 + 0.66 B\\). Solving \\(B\\) gives \\(B = (80 - 25)/0.66 = 83.3\\)Step 5. Graph function data.\nFigure 8.4: exponential function roughly aligns data.\nBargain Basement store wants sell goods quickly. Consequently, reduce product’s price \\(P\\) 5% per day.Question jacket costs $80 today, much cost \\(t\\) days?\\(P = 80 - 5t\\) ☹︎ Remember, 5 percent exactly 0.05 \\(P = 80 - 4t\\) ☹︎ Remember, 4 percent exactly 0.04 \\(P = 80 - 0.05t\\) ☹︎ decrease price 5 cents every day. \\(P = 80 (0.05)^t\\) ☹︎ day’s price 5% previous day’s price. \\(P = 80 (0.95)^t\\) ✓ ’ll need open sandbox next question.’re ! Remember, raise number power, can use expression like `0.95^7$.Question B decided like $80 jacket, budget $60. long wait coming back Bargain Basement store.?    3 days ☹︎ day 3 price \\(0.95 imes 0.95 imes 0.95 imes 80\\). ’s budget.        4 days ☹︎ day 4 price \\(80 \\times 0.95^4\\)= $65.16. much!        5 days ☹︎ day 5 price \\(80 \\times 0.95^5\\)= $61.90. Close, still higher budget.        6 days ✓ Wikipedia entry “Common Misconceptions” used contain item:cooks believe food items cooked wine liquor non-alcoholic, alcohol’s low boiling point causes evaporate quickly heated. However, study found alcohol remains: 25% 1 hour baking simmering, 10% 2 hours.modeler’s go-function type events like evaporation alcohol exponential: amount alcohol evaporates , constant conditions (e.g. oven’s heat), proportional amount alcohol hasn’t yet evaporated.Question ) Assume 25% alcohol remains 1 hour? process exponential, much remain 2 hours?    10% ☹︎ ’s study reported found, ’s consistent exponential process decays 25% one hour        25% ☹︎ Exponentials decay zero eventually, don’t expect things stay still one hour.        25% 25% ✓ know 75% eliminated 1 hour, leaving 25%. continuing exponential process , next hour eliminate 75% amount start hour. hour 2 ’ll 25% amount hour 1, 25% original amount.        75% ☹︎ ’s much eliminated first hour, much remains 2 hours.        75% 75% ☹︎ exponential process, moment rate decay (e.g. 75% per hour) constant proportion amount still . one hour, 25% alcohol remaining. decay rate 75% per hour. next hour, ’ll lose 75% original 25%, giving us 25% original amount. Question B B) half-life exponential process decays 25% one hour?15 minutes ☹︎ provides time four halvings one hour, leave \\(\\frac{1}{2} \\times \\frac{1}{2} \\times \\frac{1}{2} \\times \\frac{1}{2} = 1/16\\) original 1/4. 30 minutes ✓ gives time two halvings one hour, bringing us 25% observed. 45 minutes ☹︎ Two halvings bring us 25%. rate, take 90 minutes get 25%, 60 minutes observed. none ☹︎ Let’s change pace think “10% 2 hours” observation. First, recall amount left \\(n\\) halvings \n\\(\\mbox{amount_left}(n) \\equiv \\frac{1}{2}^n\\)\nexponential function base 1/2.’re going carry guess--check procedure find zero function \\(\\text{amount_left}(n) - 0.10\\) , ’ll find \\(n\\) generate stated output value (e.g. 10%).\nOpen sandbox copy scaffolding, include definition amount_left() function. “guess” input. Change guess get output 10%.Question C C) Use amount_left() figure many halvings takes bring something 10% original amount.    2.58 ☹︎        3.32 ✓        3.62 ☹︎        3.94 ☹︎        4.12 ☹︎ Another way find input \\(n\\) generates output 10% construct inverse function \\(\\text{amount_left}()\\).computer already provides inverse functions \\(2^n\\) \\(e^n\\) \\(10^n\\). names log2(), log(), log10() repectively. Using log2(), write function named log_half() gives inverse function \\((1/2)^n\\). Remember, input inverse function corresponds 10%; output \\(n\\).Question D answer got part C) number halvings needed reach 10%. number occurs 2 hours (, 120 minutes), half life stated minutes.    30 ☹︎        35 ☹︎        36 ✓        38 ☹︎        42 ☹︎        47 ☹︎ Suppose compromise half-life needed reach 25% one hour half-life needed reach 10% two hours. Use, say, 33 minutes compromise half life. Using sandbox , calculate much left 1 hour compromise half life, much left 2 hours.Question E much left 1 hour 2 hours half life 33 minutes?28% 8% ✓ 31% 4% ☹︎ 30% 9% ☹︎ 27% 9% ☹︎ likely heard phrase “exponential growth” used describe COVID-19 pandemic. Let’s explore idea using actual data.COVID-19 Data Hub collaborative effort universities, government agencies, NGOs provide --date information pandemic. ’re going use data US whole-country level. (’s also data state county levels.)Perhaps simplest display show number cumulative cases (confirmed variable) deaths function time. can see documentation dataset COVID-19 Data HubOpen sandbox make plot.’re going plot confirmed cases blue deaths red.Question mid July, many confirmed cases ? (Note labeled tick marks refer beginning month, point labeled Feb February 1.)300,000 ☹︎ number 1e6 means 1,000,000, , six zeros following one. 350,000 ☹︎ number 1e6 means 1,000,000, , six zeros following one. 400,000 ☹︎ number 1e6 means 1,000,000, , six zeros following one. 3,000,000 ☹︎ Mid July tick mark one labelled Jul. 3,500,000 ✓ 4,000,000 ☹︎ Mid July tick mark one labelled Jul. ’re going something make graph informative. (least, informative understand logarithms exponentials!)’s graphic , taking logarithm number cases (, confirmed) number deaths. Since ’re taking logarithm y-variable, called “semi-log” plot.beginning March US, thought US cases people travelling US hot spots China Italy US, opposed contagion people within US. (contagion called “community spread.”) let’s focus data start March onward.Exponential growth appears straight-line pattern semi-log plot. Obviously, overall pattern curves straight line. explanation exponential growth rate changes time, perhaps due public health measures (like business closing, masks, etc.)first (official) US death Covid-19 recorded recorded Feb. 29, 2020. Five deaths occurred two days later, bringing cumulative number 6.Question B red data points Feb 29/March 1 show zero vertical scale. red data point March 2 around 2 vertical scale. consistent facts stated ?. data contradict facts. ☹︎ Think means 0 vertical scale. Yes. vertical scale log units, 0 corresponds 1 death, since \\(\\ln 1 = 0\\). ✓ . vertical scale doesn’t mean anything. ☹︎ can see plotting command quantity vertical axis : log(confirmed) blue dots log(deaths) red. One purposes making semi-log plot enable compare large numbers small numbers graph. instance, semi-log plot, can easily see first death occurred, fact invisible plot raw counts (first plot exercise).Another feature semi-log plots preserve proportionality. Look plot raw counts note curve number deaths much shallower curve number (confirmed) cases. Yet semi-log plot, two curves practically parallel.semi-log plot, arithmetic difference two curves tells proportion curves. parallel curves mean proportion practically constant.\nCalculate proportion deaths cases month May. ’s mathematical hint: \\(\\ln \\frac{}{b} == \\ln - \\ln b\\). interested \\(\\frac{}{b}\\).Question C proportion deaths cases month May?0.2% ☹︎ Remember, ’s natural logarithm ’s plotted, inverse function exp(). 1% ☹︎ correspond (vertical) difference curves 4.6 log units. really big? 2% ☹︎ correspond (vertical) difference curves 4 log units. really big? 6% ✓ Good. calculated exp(log(deaths) - log(cases)) gives answer around 0.06, 6%. 25% ☹︎ ’m really sure lead answer. ’re making mistake didn’t anticipate. 50% ☹︎ ’s true May log(deaths) 12, log(cases) 14, 12/14 indeed greater 50%. , log scale, proportion relates difference logs, ratio. many applications, people use semi-log plots see whether pattern exponential compare small large numbers. Often, people find easier vertical scale written original units rather log units. accomplish , vertical scale can ruled raw units spaced logarithmically, like :labels vertical axis show raw numbers, position shows logarithm numbers.next question meaning interval grid lines vertical axis. Note horizontal axis, spacing adjacent grid lines half month.Question D numerical spacing (terms raw counts) adjacent grid lines vertical axis?\\(10^1\\) ☹︎ true, moving lowest label (1e+01, , 10) next grid line 20, 30, 40. \\(10^2\\) ☹︎ true, moving lowest label (1e+01) next grid line 110, 210, 310. factor 10. ✓ Right. Every time move one grid line, raw number increases ten-fold, 10, 100, 1000, 10,000, . phrase factor 10 means multiply 10, add 10. factor 100. ☹︎ ’re thinking along right lines, difference every second grid line, adjacent grid lines. ","code":"\namount_left <- makeFun((1/2)^n ~ n)\namount_left(0)## [1] 1log_half <- makeFun( log2(...your stuff here ...) ~ x)\ngf_point(confirmed ~ date, data = Covid_US, color = \"blue\") %>%\n  gf_point(deaths ~ date, color = \"red\")\ngf_point(log(confirmed) ~ date, data = Covid_US, color = \"blue\") %>%\n  gf_point(log(deaths) ~ date, color = \"red\") \ngf_point(confirmed ~ date, data = Covid_US, color = \"blue\") %>%\n  gf_point(deaths ~ date, color = \"red\") %>%\n  gf_refine(scale_y_log10())## Warning: Transformation introduced infinite values in continuous y-axis\n\n## Warning: Transformation introduced infinite values in continuous y-axis"},{"path":"process-of-modeling.html","id":"fit-periodic","chapter":"8 Process of modeling","heading":"8.3 Curve fitting a periodic function","text":"Figure 8.5 shows tide level Providence, Rhode Island, starting midnight April 1, 2020 recorded every minute four half days. (data collected US National Oceanic Atmospheric Administration. Link)\nFigure 8.5: four days tide-level data Providence, Rhode Island\n’s hard see ’s going . tide rises falls every 12 hours. difference high tide low tide little one meter. tide gauge calibrated typical reading 1 meter, although don’t know respect . (Certainly sea level, since typical reading around zero.)simple description tells almost everything needed construct /B model tide level using sinusoid, , function form \\[+ B \\sin(2\\pi t/P)\\] procedure straightforward:Step 0: Determine whether sinusoid model appropriate. know, sinusoids oscillate repeatedly steady period. certainly seems case . sinusoids also steady peak trough values cycle. ’s approximately true Providence data. Models inevitably involve approximation. ’ll keep eye whether fixed amplitude feature sinusoidsStep 1: Choose sensible value represent low point repeatedly reached. 0.5 m seems appropriate , obviously exact position trough cycle varies 4.5 day duration data. Similarly, peak near 1.6 m. Parameter \\(\\) mean peak trough values: \\(\\frac{1.6 + 0.5}{2} = 1.05\\) m . Parameter \\(B\\) half difference peak trough values: \\(\\frac{1.6 - 0.5}{2} = 0.55\\). Parameter \\(\\) called baseline sinusoid. Paramter \\(B\\) amplitude. (Note convention, amplitude always half high--low range sinusoid.)Step 2: Estimate period \\(P\\) sinusoid. can done ruler: horizontal duration complete cycle. like use time peaks, time troughs work just well. Another good choice time positive sloping crossings baseline. (careful. time successive baseline crossings, one positive sloping negative, give just half period.)scale plot, ’s hard read time first peak. , zoom becomes obvious.\nFigure 8.6: Zooming start data (left) last part data (right).\nleft panel Figure 8.6 shows 24 hours start record. first peak 7 hours, second 18 hours. indicates period 18 - 7 = 11 hours.Step 3 Plot model data. Replacing symbols \\(\\), \\(B\\), \\(P\\) estimates, model \\[\\require{color}\n{\\color{green}\\mbox{tide}(t) \\equiv 1.05 + 0.55 \\sin(2\\pi t/11)}\\]Figure 8.7 shows model \\(\\color{green}\\mbox{green}\\).\nFigure 8.7: sinusoid fails align timing peaks troughs.\nperson breathes every three seconds. volume \\(V\\) air person’s lungs varies minimum \\(2\\) liters maximum \\(4\\) liters. Assume time \\(t\\) measured seconds.Remember full cycle sine wave \\(\\sin(x)\\) involves \\(x\\) going starting value value plus \\(2 \\pi\\).Question following appropriate models \\(V(t)\\)?\\(V(t) \\equiv 2 + 2 \\sin \\left( \\frac{\\pi}{3} t \\right)\\) ☹︎ varies minimum 0 maximum 2. \\(V(t) \\equiv 3 + \\sin \\left( \\frac{2\\pi}{3} t \\right)\\) ✓ Good. class, generally write sine function like \\(\\sin(2 \\pi t/P)\\) means overall argument sine function go 0 \\(2 \\pi\\) \\(t\\) goes 0 \\(P\\). \\(V(t) \\equiv 2 + 2 \\sin \\left( \\frac{2\\pi}{3} t \\right)\\) ☹︎ varies minimum 0 maximum 2. \\(V(t) \\equiv 3 + \\sin \\left( \\frac{\\pi}{3} t \\right)\\) ☹︎ Right amplitude baseline: minimum 2 liters maximum 4 liters. period wrong. Going \\(t=0\\) \\(t=3\\) produce full cycle sine function. argument go 0 $ 3 = \\(\\pi\\). 3 seconds, half cycle completed. Question B Given respiratory period 3 seconds/breath, respiratory frequency units breaths/minute?20 breaths/minute ✓ Right. breath takes 1/20th minute, 3 seconds, period specified question. 3 breaths/minute ☹︎ true, breath take 20 seconds complete. 1/3 breath per minute ☹︎ breaths completed every three seconds, 1/3 breath completed second. problem asked breaths per minute. 20 seconds per breath ☹︎ period units seconds per breath, frequency units breaths per second. Frequency reciprocal period (vice versa). respiratory cycle can divided two parts: inspiration expiration. Please experiment. Using clock watch, breath total period 3 seconds/breath, , complete one breath every three seconds. practiced can without forcing either phase breathing, make rough estimate fraction cycle inspiration fraction expiration. (“correct/incorrect” answers right people. natural respiration might different.)Question C true?Inspiration lasts longer expiration ✓ Expiration lasts longer inspiration ☹︎ Maybe , people. Try breathing counting 1-2-3 exhaling counting 1-2-3-4-5-6. Likely, ’s natural pattern . Inspiration expiration consume fraction complete cycle. ☹︎ People can consciously counting 1-2-3 inspiration another 1-2-3 expiration. usually feels forced unnatural. graph shows recording “spirometer,” instrument recording respiration. Like many old instruments, trace spirometer made pen end swinging arm paper moving steadily beneath . arm exactly aligned horizontal axis. Nonetheless, able estimate appropriate amplitude period trace. (dm\\(^3\\) cubic-decimeters: tenth meter cubed. liter.)Question appropriate estimates period amplitude respiration trace?\\(\\pm 1\\) liter 3 seconds. ☹︎ true, 120 seconds recording expect see 40 cycles respiration. \\(\\pm 1\\) liter 5 seconds. ✓ \\(\\pm 1\\) liter 7.5 seconds. ☹︎ true, expect see 16 cycles respiration 120 seconds recording. ","code":""},{"path":"process-of-modeling.html","id":"curve-fitting-a-power-law-function","chapter":"8 Process of modeling","heading":"8.4 Curve fitting a power-law function","text":"using power-law functions early math science education. examples:reason power-law functions important role science logic physical quantities length, mass, time, area, volume, force, power, . ’ll discuss length later course principles appear throughout calculus.finding power law \\(f(x) \\equiv x^p\\) provides good match data, ’ll need additional tools introduced Chapter 14.","code":""},{"path":"process-of-modeling.html","id":"hump-and-sigmoid-functions","chapter":"8 Process of modeling","heading":"8.5 Hump and sigmoid functions","text":"last two basic modeling functions express important idea modeling: localness. put concrete terms, imagine creating function depict elevation sea level long road function distance miles, \\(x\\), start road. road level 1200 feet elevation, sensible model \\(\\mbox{elevation}(x) = 1200 \\text{ft}\\). road gently sloping, better model \\(\\mbox{elevation}(x) = 1200 + 3 x\\).Now let’s add bump road. bump local feature, often feet wide. , perhaps road crossing mountain range. ’s also local feature, unlike bump road mountain range extends many miles.basic modeling function suited represent bumps road, potholes, mountain ranges called hump function.hump function two parameters: location hump, ’ll call center parameter, sideways extent hump, ’ll call spread. Figure ?? shows hump functions different parameters.’s easy read center parameter graph hump. ’s location top hump. (mentioned mathematical word “location top” argmax; value input function produces maximum output.)spread parameter also pretty straightforward, first become familiar unusual feature hump function. output hump function far center practically zero. exactly zero. can see graphs hump function long flanks approach zero output less manner exponential function. means can’t measure spread hump function distance zeros either side peak. Instead, need convention allow us precise quantifying admittedly vague concept width.simple convention spread “half-width half-height.” Come half-way peak hump. Panel (c) Figure ?? marks elevation thin, red, horizontal line. Along line, measure width hump, marked thick red line Panel (c). spread parameter half width hump measured way.keen eye, ’ll notice red line exactly half-way peak. ’s 39.35% peak. official definition width hump actually half-width half-height, simple formulation us present.Another seeming oddity hump function value maximum. seemed natural define 1, -called “unit height.” way actually works different: maximum height set area hump function 1.business area make sense ’ve learned calculus tools, specifically “differentation” “integration.” now though …Consider another road feature, local change one elevation another might accomplish ramp. basic modeling function corresponding local change one level another sigmoid function. Figure ?? shows three sigmoid functions.\nname “sigmoid” comes vague resemblance graph letter S (“sigma” Greek: ς).parameters sigmoid function hump function: center width. center easy estimate graph. ’s value input produces output 0.5, half-way max min sigmoid. hump function, width measured according convention. width change input needed go output 0.5 output 0.8413. use 0.8413 must seem loony first exposure, reason. ’ll need calculus tools can make sense.Hump functions sigmoid functions center width parameters close relationship. slope sigmoid function corresponding hump function. Figures ?? ?? show corresponding hump sigmoid functions. far left, sigmoid function effectively flat: slope near zero. Moving toward center sigmoid gentle slope: low number. center, sigmoid steepest: higher number. slope sigmoid becomes gentle gradually falling zero. Near zero, low, higher, low , falling zero: ’s also description hump function!R, name sigmoid function pnorm(). hump dnorm(). parameters specify center spread named mean sd. word “mean” accurately conveys idea “center.” nice able say sd comes spread, fact sd short standard deviation, old-fashioned term familiar students statistics.“Standard deviation” -putting many people really replaced something less weird, perhaps typical spread. “standard” can interpreted “widely used convention.” “deviation?” hump function first appeared two-hundred years ago part theory measurement error. context “error,” “deviation” might made sense. theory measurement error long ago became general theory variation. Errors just one source variation.hump function mainly use CalcZ implemented R dnorm(x, mean, sd). input called mean corresponds center hump. input called sd gives width hump.sandbox, make slice plot dnorm(x, mean=0, sd=1). varying value width, figure read value directly graph.plot , one double-headed arrows represents width parameter. others misleading.Question arrow shows correctly width parameter hump function graph arrows?    top ✓        middle ☹︎        bottom ☹︎        none ☹︎ Question B value center graph arrows?Hump functions sigmoidal functions come pairs. every possible sigmoid, corresponding hump gives, value input, slope sigmoid.following graphs shows sigmoid hump function. two might might correspond one another. , output hump might slope sigmoid, hump might correspond sigmoid. Remember, ’re comparing output hump slope sigmoid.graph, say whether hump sigmoid correspond one another. , choose one reasons .Question Graph ()hump sigmoid correspond. ✓ peak hump occur value \\(x\\) sigmoid steepest. ☹︎ \\(x\\) sigmoid steepest? \\(x\\) hump highest? numerical value output hump function , \\(x\\), much larger numerical value slope sigmoid. ☹︎ calculate numerical value slope sigmoid? Question B Graph (B)hump sigmoid correspond. ☹︎ peak hump occur value \\(x\\) sigmoid steepest. ✓ hump peaks \\(x=2\\) steepest part sigmoid \\(x=4\\) numerical value output hump function much larger numerical value slope sigmoid. ☹︎ calculate numerical value slope sigmoid? Question C Graph (C)hump sigmoid correspond. ✓ peak hump occur value \\(x\\) sigmoid steepest. ☹︎ \\(x\\) sigmoid steepest? \\(x\\) hump highest? numerical value output hump function , \\(x\\), much larger numerical value slope sigmoid. ☹︎ calculate numerical value slope sigmoid? graph D, several hump functions shown, one corresponds sigmoid.Question D hump corresponds sigmoid?mind hump function sigmoid function form corresponding pair.Question stories consistent relationship hump corresponding sigmoid?hump amount water bathtub sigmoid time spend bath. ☹︎ hump amount water bathtub sigmoid rate water flows tap. ☹︎ turn tap . ’s sigmoid looks like. hump rate water flows tap sigmoid amount water bathtub. ✓ hump indicates amount drain open sigmoid amount water bathtub. ☹︎ Shouldn’t amount water go drain open? data frame named EbolaSierraLeone11 records cumulative number Ebola cases Sierra Leone May 1, 2014 December 16, 2015.Let’s find well sigmoidal function models data.’s straightforward estimate values parameters data sigmoidal form. walk process, next plot shows simulated data genuine sigmoid function.Sketch S-shaped curve smoothly follows data.Sketch S-shaped curve smoothly follows data.Find top plateau S-curve. indicated red line graph . parameter simply height plateau, case \\(y \\approx 15\\).Find top plateau S-curve. indicated red line graph . parameter simply height plateau, case \\(y \\approx 15\\).Come half way plateau. , ’s 15/2 7.5, indicated horizontal blue line segment. Find inverse S-curve half-way point onto horizontal-axis. , gives \\(t \\approx 5\\). parameter center value.Come half way plateau. , ’s 15/2 7.5, indicated horizontal blue line segment. Find inverse S-curve half-way point onto horizontal-axis. , gives \\(t \\approx 5\\). parameter center value.center S-shaped curve, follow curve upward 2/3 way plateau. diagram, point marked green line \\(t \\approx 7\\). width distance along horizontal axis blue centerline green line. , ’s \\(7 - 5\\) giving 2 width.center S-shaped curve, follow curve upward 2/3 way plateau. diagram, point marked green line \\(t \\approx 7\\). width distance along horizontal axis blue centerline green line. , ’s \\(7 - 5\\) giving 2 width.might also want trace S-curve downward centerline 2/3 way zero. ’s indicated left green line. standard sigmoid, two green lines equally spaced around centerline. course data may shape standard sigmoid, might find two green lines equally spaced center.might also want trace S-curve downward centerline 2/3 way zero. ’s indicated left green line. standard sigmoid, two green lines equally spaced around centerline. course data may shape standard sigmoid, might find two green lines equally spaced center.Put aside moment Ebola data doesn’t look exactly like standard sigmoid function. Follow procedure, nevertheless.Question top plateau?Day 600. ☹︎ Measure height plateau, starts horizontally. 14,000 cases ✓ 20,000 cases ☹︎ Read vertical axis markings carefully. None ☹︎ One answers pretty good. Question B centerline?Near Day 200 ✓ Near Day 300 ☹︎ ’s center vertical scale, day curve reaches half-way eventual plateau. 7000 cases ☹︎ ’s half-way plateau, answer want day curve reaches point. Question C Now find width parameter. curve looks classically sigmoidal left centerline right, follow curve downward Step 4 algorithm find parameters. ’s good estimate width?50 days ✓ 100 days ☹︎ wide! 10 days ☹︎ small 2500 cases ☹︎ width measured along horizontal axis, vertical Open sandbox use following commands plot Ebola data along sigmoid matched data eye. commands also generate plot “refined” estimate found fitModel() starting -eye parameters. (Note: ’ll need fill blanks start scaffolding -eye parameters running code.)can’t predict see graph, since depends starting estimates used , center width.Essay question tmp-3: Write estimates made eye , center width. explain words major systematic deviations ‘refined’ model data.idea fitting sigmoidal curve globally data roughly sigmoidal might forgiven since ’s just textbook exercise. real-world problem, three rookie mistakes approach, despite technical sophistication.model built purpose. ’s statement exercise purpose .data good enough representation historical pattern. ’s need adorn fitted curve.mathematical processes justify expectation sigmoid curve useful based idea underlying mechanism phenomenon unchanging. epidemic, mechanism contagion. saying “mechanism unchanging,” mean person--person transmission Ebola virus happens way beginning epidemic middle end. strong public health interventions introduced control epidemic. ’s change mechanism.","code":"\nslice_plot(dnorm(x, mean=0, sd=1) ~ x,\n           domain(x = c(-4, 4)))\ngf_point(Cases ~ Day, data = MMAC::EbolaSierraLeone)A_estimate <-  _____\ncenter_estimate <- _____\nwidth_estimate <- ______\n\nguessed_fun <- makeFun(A* pnorm(Day, center, width) ~ Day,\n                       A = A_estimate,\n                       center = center_estimate,\n                       width = width_estimate)\n\n\nrefined_fun <- fitModel(Cases ~ A * pnorm(Day, center, width),\n                 data = EbolaSierraLeone,\n                 start = list(A=A_estimate, \n                              center=center_estimate,\n                              width=width_estimate))\n\ngf_point(Cases  ~ Day, data = MMAC::EbolaSierraLeone)  %>%\n  slice_plot(guessed_fun(Day) ~ Day, color=\"red\") %>%\n  slice_plot(refined_fun(Day) ~ Day, color=\"blue\")"},{"path":"process-of-modeling.html","id":"modeling-cycle","chapter":"8 Process of modeling","heading":"8.6 The modeling cycle","text":"Effective modelers treat models skepticism. look ways models failure capture salient features real world. eye deviations models show believe know system modeled. consider ways models might serve purpose developed.modelers spot failure deviation lack proper utility, might discard model often make series small adjustments, tuning model successfully serves purposes intended.Thus, modeling cyclic process creating model, assessing model, revising model. process comes sort preliminary end model serves purposes. even , models often revised check whether results sensitive factor included check whether component deemed essential really .","code":""},{"path":"process-of-modeling.html","id":"example-cooling-water","chapter":"8 Process of modeling","heading":"8.6.1 Example: Cooling water","text":"Looking back exponential fitted cooling water data Section 8.2, looks like original estimate half-life bit small; data doesn’t seem decay rate implied \\(k = -0.0277\\). Perhaps try somewhat slower decay, say \\(k = -0.2\\) see improves things.cooling water example, ’re using subset data collected Prof. Wagon. next commands re-create subset can work . also plot data exponential model.See \\(k=-0.02\\) provides better fit model. (can add another slice_plot() able compare original \\(k=-0.02\\) models.)Later CalcZ, ’ll study optimization. optimization techniques directing computer refine parameters best match data. Just illustrate, ’s get:\nFigure 8.8: Polishing fit using rough model starting point.\nrefined parameters give much better fit data original rough estimates eye.two rounds modeling cycle. First, choice /B expontential model rough estimate parameters , B, \\(k\\). Second, refinement parameters using computer.Looking results second round, experienced modeler can see disturbing discrepancies. First, estimated baseline appears high. Related, initial decay model function doesn’t seem fast enough decay model function large \\(t\\) appears slow. Prof. Stan Wagon noticed . used additional data fill gaps small \\(t\\) refined model changing basis functions linear combination. hypothesized least two different cooling processes. First, newly poured water raises temperature mug . Since water mug direct contact, fast process. , complete water/mug unit comes slowly equilibrium room temperature.newly refined model even better match data. nothing’s perfect Prof. Wagon saw opportunity additional refinement based idea third physical mechanism cooling: evaporation surface hot water. Prof. Wagon’s additional circuits modeling cycle appropriate purpose, develop detailed understanding process cooling. purposes, demonstrating appropriateness exponential process interpolating data points, earlier cycles might sufficed.’s graph model Prof. Wagon constructed match data.\nFigure 8.9: model combines three exponentials provides excellent fit.\nexcellent match data. … matching data isn’t always goal modeling. Prof. Wagon wanted make sure model physically plausible. looking refined parameters, include two exponential processes parameters \\(k_1\\) \\(k_2\\), saw something wrong:can make \\(k_1\\), whose [positive value] violates laws thermodynamics suggesting water gets hotter virtue presence cool air? likely problem simple model (proportionality assumption) adequate near boiling point. many complicated factors affect heat transportation, air movement, boundary layer dissipation, diffusion, use single linear relationship appears inadequate. next section [paper] suggest experiments, also hope experiments might inspire readers come better mathematical model.modeling cycle can go round round!","code":"\n# reconstruct the sample\nset.seed(101)\nStans_data <- CoolingWater %>% sample_n(20)\n# Plot the sample and overlay a model\ngf_point(temp ~ time, data=Stans_data) %>%\n  gf_lims(y = c(20, NA)) %>%\n  slice_plot(25 + 83.3*exp(-.0277*time) ~ time, color=\"blue\")\nrefined_params <- \n  fitModel(temp ~ A + B*exp(k*time), data = Stans_data, \n           start = list(A = 25, B = 83.3, k = -0.0277))\ncoef(refined_params)##           A           B           k \n## 25.92628463 60.69255269 -0.01892572\nnew_f <- makeFun(refined_params)\ngf_point(temp ~ time, data = Stans_data) %>%\n  slice_plot(new_f(time) ~ time, color=\"blue\")"},{"path":"process-of-modeling.html","id":"example-the-tides","chapter":"8 Process of modeling","heading":"8.6.2 Example: The tides","text":"Step 4: Evaluate refine. green model make poor predictions. model says “high tide” data say otherwise. ’s missing phase sinusoid. model incorporates phase \\[{\\color{blue}\\mbox{tide}(t) \\equiv 1.05 + 0.55 \\sin(2\\pi (t - t_0)/11)}\\]new parameter, \\(t_0\\), set time positive-going crossing baseline. ’s crossing time = 17. Happily, changing phase necessitate re-estimating parameters: baseline, amplitude, period. model, incorporating phase, graphed \\(\\color{blue}\\mbox{blue}\\).\nFigure 8.10: Shifting phase sinusoid gives flexibility needed align peaks troughs model data. Performing alignment one peak makes clear period wrong.\nmodeling purposes, prediction future tides, phase information impossible. others, say, description amplitude tides, . getting phase roughly right can help point problems. instance, blue sinusoid comparison makes clear estimated period 11 hours short. Maybe 13 hours better. Better still, since \\(t=t_0 = 17\\) model close match data, let’s use estimate start cycle. , let’s move much along data find another baseline crossing. judge right panel, baseline crossing \\(t=103\\). difference two times \\(103 - 17 = 86\\) hours. course, period 86 hours. Looking back whole set data can see 7 complete cycles \\(t=17\\) \\(t=103\\). new estimate period \\(86/7 = 12.3\\) hours.refinement model \n\\[{\\color{violet}\\mbox{tide}(t) \\equiv 1.05 + 0.55 \\sin(2\\pi (t - 17)/12.3)}\\]\nFigure 8.11: phase right, better estimate can made period: 12.3 hours.\n’s pretty good match data! might call quits . First, let’s polish parameter estimates, letting computer tedious work trying little tweaks see can improve fit.\nFigure 8.12: Polishing parameters sinusoid\nlast model seems capable making reasonable predictions, collected --date data might able fit new model predict tide level pretty accurately days ahead time. Also, excellent alignment model peaks data tell us cyclic tide period constant, least far well can tell.period estimate \\(P=12.56\\) hours, can go looking phenomena might account tides. period day-night cycle , course 24 hours. tides Providence come twice day. exactly. Something else must going .Isaac Newton first propose tides caused gravitational attraction Moon. complete cycle Moon—moon rise moon rise—takes 50 minutes longer full day: Earth revolves every 24 hours, time Moon moved bit orbit Earth. Moon’s period, seen fixed place Earth 24.8 hours. Half , 12.4 hours, awfully close estimate tidal period: 12.56 hours. difference periods, 8 minutes day, might hard observe 4 days. Maybe data ’d get better match tides moon.modeling cycle work: Propose model form (/B model sinusoid), adjust parameters match know (Providence tide record), compare model data, observe discrepancies, propose refined model. can stop model giving need. period 12.56 hour model seems good enough make prediction tide level days ahead, certainly better “two tides day” model. model yet able implicate precisely Moon’s orbit tidal oscillations.Discrepancies model data play two roles: help us decide model fit purpose mind can point way improved models. tidal data deviates steady amplitude model can clue look next. ’s always obvious lead.Historically, careful analysis tides led highly detailed, highly accurate model: linear combination sinusoids diurnal periods 12.42, 12.00, 12.66, 11.97 hours well components period 23.93, 25.82, 24.07, 26.87, 24.00 hours. tide-prediction model constructed finding coefficients linear combination; differ locale locale.data frame SunsetLA records number minutes 4 pm sun sets Los Angeles, CA 4-year interval January 2010 (month 1) December 2013 (month 48).Open sandbox make plot sunset time versus month.’re using gf_point() gf_line(). data oscillates , connecting data points lines makes easier see pattern.Question range number minutes sunset whole 4-year period?40 190 minutes ✓ 120 minutes ☹︎ range interval spanned two numbers. 40 180 minutes ☹︎ largest values half tick mark 180. Tick marks spaced 20 minutes. 0 48 months ☹︎ ’s domain. range along vertical axis. Question B data fall nicely sine-shaped curve. period sine?    6 months ☹︎ Look number months one peak another.        11 months ☹︎ Look carefully. remember change length day annual phenomenon.        12 months ✓        12 minutes ☹︎ Period refers interval domain function, range. function \\[\\mbox{sunset}(\\mbox{Month}) \\equiv  \\sin(2 \\pi\\, \\mbox{Month} / 12) + C\\] linear combination two functions:constant function one(Month)sine function sin(2*pi*Month/12)two functions scaled \\(C\\) \\(\\), respectively.can estimate \\(C\\) mid-point range (minutes) data. can estimate \\(\\) half length range (, half max minus min.)Make rough reasonable numeric estimates \\(C\\) \\(\\) data. , sandbox, define sunset() function using numerical estimates linear combination. Plot function layer top data. (Pipe gf_point() layer slice_plot().)domain slice_plot() inherited implied SunsetLA data. Notice input name slice_plot() corresponds established gf_point().Question C sunset() function pretty good match data except one thing. thing?sunset() function completely different range data. ☹︎ won’t case estimated \\(C\\) \\(\\) correctly. period sunset() function doesn’t match data. ☹︎ use sin(2*pi*Month/12)? , period right. horizontal time shift sunset() data. ✓ ’re going fix problem sunset() defining time offset use reference. sine function, suitable time offset value along horizontal axis phenomenon modeled crosses \\(C\\) positive slope. 4 points along horizontal axis readily identifiable data. (may integer value Month.)Question D suitable value time offset?    0 months ☹︎ ’s time data suggest \\(C\\) crossed.        19 months ☹︎ ’s maximum, crossing \\(C\\).        21.5 months ☹︎ ’s crossing \\(C\\), one positive slope.        15.5 months ✓ good rough value. Since period 12 months, equally well said offset 3.5 months. original scaffolding, value offset zero. Change match answer previous question.Plot modified sunset() function confirm much better match data original (, one without time offset). can “tune” function tweaking numerical values \\(\\), \\(C\\), \\(offset\\) parameters get solid match.Alternatively, can use fitModel() tuning . Plug estimates (.k.. “guesses”) parameters place ___ following. run code. ’ll see estimate function compared result computer refine estimate. Chances , computer better job stringing function data.Perhaps expecting tuned sine function match data exactly. . One reason Earth’s orbit around Sun exactly circular. sine function model phenomenon, good purposes others. complete explanation, see article Wikipedia.","code":"\ntide_mod <- \n  fitModel(level ~ A + B*sin(2*pi*(hour-hzero)/P),\n  data = RI_tide,\n  start=list(A=1.05, B=0.55, hzero=17, P=12.3))\ncoef(tide_mod)##          A          B      hzero          P \n##  1.0220540  0.4998367 15.3899905 12.5593556\ngf_point(Minutes ~ Month, data = SunsetLA) %>%\n  gf_line()sunset <- makeFun(A + C*sin(2*pi*(Month - offset)/12), \n                  A = __your estimate__, \n                  C = __your estimate__,\n                  offset=0)\ngf_point(Minutes ~ Month, data = SunsetLA) %>%\n  gf_line() %>%\n  slice_plot(sunset(Month) ~ Month)## rough estimates from graph\nrough_A <- __estimated_A__\nrough_C <- __estimated_C__\nrough_offset <- __estimated_offset___\nguessed_fun <-\n  makeFun(A*sin(2*pi*(Month - offset)/12) + C ~ Month,\n          A  = rough_A, C = rough_D,\n          offset = rough_offset)\n\ntuned_fun <-\n  fitModel(Minutes ~ A*sin(2*pi*(Month - offset)/12) + C,\n         data  = SunsetLA,\n         start = list(A = rough_A,\n                      C = rough_C,\n                      offset = rough_offset) )\n\ngf_point(Minutes ~ Month, data = SunsetLA) %>%\n  gf_line(color  = \"blue\") %>%\n  slice_plot(tuned_fun(Month) ~ Month) %>%\n  slice_plot(guessed_fun(Month) ~ Month,  color = \"red\")"},{"path":"fun-slopes.html","id":"fun-slopes","chapter":"9 Slope function","heading":"9 Slope function","text":"purposes, definition calculus isThe use functions model explore continuous changeThe agenda chapter give specific mathematical meaning word “change.”","code":""},{"path":"fun-slopes.html","id":"change-and-slope","chapter":"9 Slope function","heading":"9.1 Change and slope","text":"solid, intuitive sense “change” means. mathematics, especially mathematics functions, change simple meaning already touched previous math education.word encapsulates “change” high-school math slope. instance, ’ve undoubtedly calculate slope straight line graph. learned “rise” “run” read graph formula. slope ratio: rise run.Slope lovely metaphor change, since everyone intuitive sense slope road hillside. learned apply intuition reading graphs slope line. ’ll exploit intuitive ability read landscape order introduce abstract mathematical ideas --earth setting. ’s effective pedagogical strategy.everything changes “slope.” instance, population country can change, can number new cases epidemic disease, temperature cup coffee, distance Earth spacecraft. major part learning calculus generalizing abstracting mathematical concept “slope” example becoming proficient mathematical procedures working change.","code":""},{"path":"fun-slopes.html","id":"continuous-change","chapter":"9 Slope function","heading":"9.2 Continuous change","text":"people comfortable ideas daily changes temperature monthly changes credit-card debt quarterly changes unemployment rate annual changes height child. things easy record , say, spreadsheet. example, write, weather forecast next several days (southeastern Colorado mid-May) isSuch data said discrete. day listed, time day. high temperature forecast, time high. “description” also discrete, one several words used summarize quality weather, opposed quantity rain.Calculus continuous change. instance, weather bureau provide web interface let enter date time nearest fraction second, giving way track change continuously. Many physical processes intrinsically continuous, instance motion (change position) spacecraft height tide stress tree function wind velocity.Finding language describe continuous change—famously, position moon planets orbit, speed ball rolling ramp—central emergence historians call “Age Enlightenment” “modern scientific method.” first complete presentation language published Isaac Newton based work 1660s. might guess, name language “calculus.”","code":""},{"path":"fun-slopes.html","id":"slope","chapter":"9 Slope function","heading":"9.3 Slope","text":"already know pretty much everything know straight-line function,Formula: \\(f(x) \\equiv x + b\\). parameters \\(\\) \\(b\\) “slope” “intercept” respectively. (precisely, \\(b\\) “y-intercept.” statistics modeling, ’s just “intercept.”)Formula: \\(f(x) \\equiv x + b\\). parameters \\(\\) \\(b\\) “slope” “intercept” respectively. (precisely, \\(b\\) “y-intercept.” statistics modeling, ’s just “intercept.”)Reading parameters graph: learned several ways equivalent. Maybe easiest read y-intercept graph. ’s \\(b\\). choose non-zero \\(x_1\\) read graph value \\(f(x_1)\\). slope simply \\[\\frac{f(x_1) - b}{x_0}\\]\ny-intercept method special case general method, two-point method, can use even y-intercept isn’t shown graph. Pick two specific values \\(x\\), ’ll call \\(x_0\\) \\(x_1\\). Evalate function input values compute rise run: \\[\\mbox{rise run} \\equiv \\frac{f(x_1) - f(x_0)}{x_1 - x_0}\\]\nrise run slope straight line.\ny-intercept method exactly two-point method \\(x_0 = 0\\).Reading parameters graph: learned several ways equivalent. Maybe easiest read y-intercept graph. ’s \\(b\\). choose non-zero \\(x_1\\) read graph value \\(f(x_1)\\). slope simply \\[\\frac{f(x_1) - b}{x_0}\\]y-intercept method special case general method, two-point method, can use even y-intercept isn’t shown graph. Pick two specific values \\(x\\), ’ll call \\(x_0\\) \\(x_1\\). Evalate function input values compute rise run: \\[\\mbox{rise run} \\equiv \\frac{f(x_1) - f(x_0)}{x_1 - x_0}\\]\nrise run slope straight line.y-intercept method exactly two-point method \\(x_0 = 0\\).Matching straight-line function data: might taught formally, basic process easy imitate. process called line fitting , statistics fields, linear regression.Matching straight-line function data: might taught formally, basic process easy imitate. process called line fitting , statistics fields, linear regression.","code":""},{"path":"fun-slopes.html","id":"the-fitted-line","chapter":"9 Slope function","heading":"9.4 The fitted line","text":"[Fun-4--1] Construct straight-line model fits data.illustrate line fitting, let’s return cooling mug water. Figure 9.1 shows data along dozen candidate straight line functions, one drawn color.\nFigure 9.1: candidate straight-line function models plotted top cooling water data. one(s) pick good matches data?\nstraight-line models much better match data others. blue-shaded functions pretty good fits, greenish functions maybe OK little sketchy, purple-shaded functions just horrible.Now know reasonable straight-line model looks like, find pretty easy draw one data graphics even remotely show straight-line pattern.Step 1: Draw reasonable straight-line data points.Step 2: Find parameters correspond line drew.","code":""},{"path":"fun-slopes.html","id":"average-rate-of-change","chapter":"9 Slope function","heading":"9.5 Average rate of change","text":"Since slope standard way representing relationship change, often use way summarizing function. illustrate, consider exponential model constructed match cooling-water data:\nFigure 9.2: exponential function previously matched cooling-water data. slope straight line connecting two points function graph average rate change interval.\ninterval \\([t_0, t_1]\\) rate water cools higher first lower end. average rate change single number summarizes whole interval.except straight-line models, average rate change depends interval chosen.working extensively change output value function input value changes.change output value function \\(f()\\) input changes \\(x = \\) \\(x = b\\) \\[f(x=b) - f(x=)\\] Notice talk change \\(x=\\) \\(x=b\\) subtract \\(f(x=)\\) \\(f(x=b)\\). change sometimes called rise value function. Rise always compares (subtraction) two output values corresponding two specific input values. Remember \\(\\) \\(b\\) stand specific numbers.change output value function \\(f()\\) input changes \\(x = \\) \\(x = b\\) \\[f(x=b) - f(x=)\\] Notice talk change \\(x=\\) \\(x=b\\) subtract \\(f(x=)\\) \\(f(x=b)\\). change sometimes called rise value function. Rise always compares (subtraction) two output values corresponding two specific input values. Remember \\(\\) \\(b\\) stand specific numbers.Corresponding idea change output \\(f(x=b) - f(x=)\\) change input value function \\(b - \\). often called run value input.Corresponding idea change output \\(f(x=b) - f(x=)\\) change input value function \\(b - \\). often called run value input.point graph function Cartesian coordinates \\((, f(x=))\\). example, graph function \\(f()\\) shown Graph includes points \\((1.0, 4.0)\\), \\((3.5, 3.0)\\). second coordinate output value provide first coordinate input value. nature \\(f()\\) function (defined graph) \\(f(x=1) \\equiv 4\\) \\(f(x=3.5) \\equiv 3\\).Question True false: Graph , rise b positive.    TRUE ☹︎ \\(f(x=) > f(x=b)\\), rise \\(f(x=b) - f(x=)\\) negative.        FALSE ✓ Question B True false: Graph , run \\(x=\\) \\(x=b\\) positive.    TRUE ✓        FALSE ☹︎ run relative positions \\(x=\\) \\(x=b\\) x-axis. Since \\(< b\\), run \\(x=\\) \\(x=b\\) positive. Question C True false: Graph II, run b positive.    TRUE ✓        FALSE ☹︎ run relative positions b x-axis. Since left b, run b positive. Question D True false: Graph II, rise b positive.    TRUE ☹︎ Remember, rise \\(x=\\) \\(x=b\\) \\(f(x=b) - f(x=)\\)        FALSE ✓ Question E True false: Graph II, run b c positive.    TRUE ☹︎ run \\(x=b\\) \\(x=c\\) \\(c - b\\). Since \\(b>c\\) b c negative.        FALSE ✓ Question F True false: Graph II, rise b c positive.    TRUE ✓        FALSE ☹︎ rise \\(x=b\\) \\(x=c\\) \\(f(x = c) - f(x = b)\\). Since \\(f(x=c) > f(x=b)\\), rise positive. Question G interval [2, 6] value run? (answer independent particular graph/function.)    4 ✓ run always second number interval minus first number. ’s \\(6 - 2\\) .        -4 ☹︎ got backwards! second number interval, 6, numerically right 2, run positive. Question H run interval [6, 2]? (, answer independent particular graph/function.)    4 ☹︎ Sorry. run \\(x=6\\) \\(x=2\\) \\(2 - 6\\) \\(-4\\).        -4 ✓ run \\(2 - 6\\), second number interval minus first number. graph Figure 9.2, compute average rate change interval \\(10 \\leq t \\leq 200\\). compare average rate change interval \\(10 \\leq t \\leq 125\\)?Open R sandbox. can use function definitions help calculations.Using R, compute average rate change function given interval. Choose closest answer problem.Question \\(f(x) \\equiv 2 e^{x+1}\\) [-2, 2]    -2.99 ☹︎        1.54 ☹︎        2.72 ☹︎        4.68 ☹︎        9.85 ✓        11.32 ☹︎ Question B \\(g(x) \\equiv 3 e^{-x}\\) [-1, 1.5]    -2.99 ✓        1.54 ☹︎        2.72 ☹︎        4.68 ☹︎        9.85 ☹︎        11.32 ☹︎ Question C \\(h(x) \\equiv x e^x\\) [0, 1]    -3 ☹︎        1.54 ☹︎        2.72 ✓        4.68 ☹︎        9.85 ☹︎        11.32 ☹︎ ’s much less work use R function c() define interval, R function diff() calculate differences. next sandbox contains example asking compute average rate change \\(f(x) \\equiv e^x\\) interval [0, 4]. need lines 1, 3, 5. lines show intermediate results help understand diff() .Question D MMAC 4.1.61: True false: average rate change \\(f(x) \\equiv e^{x^2}\\) [0.0, 0.1] 0.1005017    TRUE ✓        FALSE ☹︎ Question E MMAC 4.1.62: True false: average rate change \\(f(x) \\equiv \\log(x)\\) [2, 3] 0.5062353.\n(Hint: Change code interval variable goes 2 3 f becomes function \\(f(x) \\equiv \\log(x)\\))    TRUE ☹︎        FALSE ✓ Question F MMAC 4.1.61: True false: average rate change \\(f(x) \\equiv \\sin(x)\\) [0.0, 0.5] 0.9588511    TRUE ✓        FALSE ☹︎ Consider sinusoid function, graphed .Question average rate change interval \\(0 < x < \\frac{1}{2}\\)? (Choose closest value.)    0 ☹︎ true, function output need two endpoints interval.        0.5 ☹︎ forget divide rise run?        1 ✓ Right. interval run 1/2. rise interval 0 1/2, rise 1/2. Question B average rate change interval \\(0 < x < 6.25\\)? (Choose closest value.)    -0.5 ☹︎        0 ✓ Right. function output zero endpoints interval, rise zero. Hence, run zero.        0.5 ☹︎ Question C average rate change interval \\(0 < x < 10\\)? (Choose closest value.)    -0.05 ✓ Right. rise -0.5 run 10.        -0.5 ☹︎ “rise” interval, ’s average rate change. ’ll need divide rise another quantity get average rate change.        0 ☹︎        0.5 ☹︎ rise \\(f(10) - f(0) pprox -0.5 - 0 = -0.5\\). ’ve got sign wrong. following, compute average rate change function given interval.Question average rate change \\(f(x) \\equiv x + 5\\) [3, 5]     -2 ☹︎ Remember, difference \\(x=3\\) 5 \\(f(5) - f(3)\\), way around. average rate change difference divided length interval.        -1 ☹︎ Remember, difference \\(x=3\\) 5 \\(f(5) - f(3)\\), way around. Similarly, length interval \\(x=3\\) 5 \\(5-3\\), \\(3-5\\).        1 ✓ \\(f(x=5) = 10\\) \\(f(x=3) = 8\\), difference values 2. Since difference occurs interval length 2 (, #x=3$ 5), average rate change 2/2.        2 ☹︎ sure took rate change rather simply change? Question B average rate change \\(f(x) \\equiv 3 - 2 x\\) [-4, -2]     -4 ☹︎ total difference interval, rate change.        -2 ✓ difference \\(x=-4\\) \\(-2\\) \\(f(-2) - f(-4) = (7) - (11) = -4\\). length interval \\((-2) - (-4) = 2\\). rate -4/2, just got.        0 ☹︎        1 ☹︎ \\(x\\) changes two units, \\(f(x)\\) changes 4. rate change 4/2 = -2.        2 ☹︎ Check +/- signs.        4 ☹︎ negative total difference interval, rate change. Also check +/- signs. Question C average rate change \\(f(x) \\equiv -3 x^2\\) [0, 4]     -24 ☹︎ Perhaps looking derivative \\(x=4\\) average rate change \\(x=0\\) 4.        -12 ✓ difference \\(f()\\) interval \\(f(4) - f(2) = (-48) - 0 = -48\\). length interval \\(4-0\\), average rate change interval \\((-48)/4 = -12\\).        0 ☹︎ Perhaps looking derivative \\(x=0\\) average rate change \\(x=0\\) 4.        1 ☹︎        2 ☹︎        12 ☹︎ Check signs arithmetic.        24 ☹︎ Question D average rate change \\(f(x) \\equiv x^3 - 2 x + 1\\) [0, 2]     -2 ☹︎ Either check +/- signs perhaps looking derivative \\(x=0\\) average rate change \\(x=0\\) 2.        1.5 ☹︎        2 ✓ difference \\(f()\\) interval \\(f(2) - f(0) = 5 - 1 = 4\\). length interval \\(2 - 0\\) average rate change \\(4/2 = 2\\).        7 ☹︎        10 ☹︎ think looking derivative \\(x=2\\) rather average rate change 0 2. ","code":"\nwater <- makeFun(60.7*exp(-0.019*t) + 25.93 ~ t)\nf <- makeFun(2*exp(x+1) ~ x)\ng <- makeFun(3*exp(-x) ~ x)\nh <- makeFun(x*exp(x) ~ x)\ninterval <- c(0, 4)  # creates the interval\ndiff(interval)       # calculate the run\nf <- makeFun(exp(x) ~ x)   #  create the function\nf(interval)     # evaluate  function at the endpoints of  the interval\ndiff(f(interval)) / diff(interval)  # complete answer"},{"path":"fun-slopes.html","id":"instantaneous-rate-of-change","chapter":"9 Slope function","heading":"9.6 Instantaneous rate of change","text":"water cooling continuously. Sometimes ’ll interested rate change given instant \\(t_0\\). choose small interval, say \\([t_0, t_0 + 0.1]\\), ’ll get good approximation instantaneous rate change.\n\\[\\text{instantaneous rate change} = \\frac{f(t_0 + 0.1) - f(t_0)}{0.1}\\]graph, instantaneous rate change slope tangent line point, shown Figure 9.3.\nFigure 9.3: Instantaneous rate change slope line tangent curve single point.\nBlock 2, ’ll see good way define instantaneous rate change \\(t_0\\) average rate change interval \\(t_0 \\leq t \\leq t_1\\) proviso interval length \\(t_1 - t_0\\) goes closely can zero.Figure 9.4 shows fitted rate change average rate change interval \\(10 \\leq t \\leq 125\\) well instantaneous rate change \\(t_0 = 50\\). different one another.\nFigure 9.4: Comparing average rate change (red) interval \\(10 \\leq t \\leq 125\\), instantaneous rate change \\(x_0 =25\\), fitted linear model (orange). exponential model shown gray.\n","code":""},{"path":"fun-slopes.html","id":"the-slope-function","chapter":"9 Slope function","heading":"9.7 The slope function","text":"way estimate instantaneous rate change function given input \\(t_0\\):\n\\[\\text{instantaneous_rate_of_change} \\equiv \\frac{f(t_0 + 0.1) - f(t_0)}{0.1}\\]\nNow ’ll let notation work us re-write instantaneous-rate--change function, ’ll call slope function.\n\\[\\text{slope}(t) \\equiv \\frac{f(t + 0.1) - f(t)}{0.1}\\]\n’ve merely made clear \\(\\text{slope}(t)\\) function written formula terms input \\(t\\) rather fixed number \\(t_0\\). course, “instantaneous rate change \\(t_0\\)” simply \\(\\text{slope}(t)\\).Let’s look slope function corresponds naked modeling functions: \\(e^x\\), \\(\\sin(x)\\), \\(x^{-1}\\) \\(\\ln(x)\\). Recall input naked functions always number. output number well. Thus can display function corresponding slope function coordinate frame. (true input quantity output another quantity.)\nFigure 9.5: Comparing naked modeling function (blue) ’s slope function (red)\nweb connections naked modeling functions slopes.Question 1. naked modeling function slope function simply input-shifted version ? (small enough \\(h\\).)exponential ☹︎ sinusoid ✓ logarithm ☹︎ power-law \\(x^{-1}\\) ☹︎ Question B 2. naked modeling function slope function identical ? (small enough \\(h\\).)exponential ✓ sinusoid ☹︎ logarithm ☹︎ power-law \\(x^{-1}\\) ☹︎ Question C 3. naked modeling function slope function another naked modeling function? (Hint: function also listed among choices.)exponential ☹︎ sinusoid ☹︎ logarithm ✓ power-law \\(x^{-1}\\) ☹︎ defined “slope function” \n\\[\\text{slope}(t) \\equiv \\frac{f(t + 0.1) - f(t)}{0.1}\\]0.1 definition slope function definitely kluge. 0.1 minutes may small comes cooling water, might small contexts. ’ll fix Block 2 define derivative operator replaces 0.1 something small every context.","code":""},{"path":"fun-slopes.html","id":"to-be-turned-into-exercises","chapter":"9 Slope function","heading":"9.8 To be turned into exercises","text":"“Slope” natural metaphor thinking function graph. general way describe concept rate change output respect input. change output one end interval \\(f(x_1) - f(x_0)\\), change input \\(x_1 - x_0\\). input time (hours), output position car (miles), rate change miles-per-hour: car’s velocity.straight-line function—think car driving constant speed highway—doesn’t matter choose \\(x_1\\) \\(x_0\\) (long identical). functions, choice matter.Imagine graph position car along road Figure @ref{fig:stop--go}. course hour, car travelled 25 miles. words, average speed 25 miles/hour: slope red line segment. Given traffic, sometimes car stopped (time C), sometimes crawling (time D) sometimes much faster average (time B).interval B C, car travelling relatively fast. slope brown segment connecting position times B C average rate change times B C. ’s easy see average rate change B C larger overall average \\(t=0\\) \\(t=1\\). Calculating slope matter evaluating position endpoints dividing length interval.average rate change car’s position interval \\(t_B = 0.40\\) \\(t_C=0.54\\)?length interval \\(t_C - t_B = 0.54-0.40=0.14\\).Evaluating function gives \\(x(t_C) = 18\\) \\(x(t_B) = 12.6\\).Rise \\(x(t_C) - x(t_B) = 18 - 12.6 = 5.4\\).Run \\(t_C - t_B = 0.54-0.40=0.14\\).average rate change interval $5.4/0.14 = 38.6 $ miles/hour.graph shows simplified model amount usable wood can harvested typical tree managed forest Ponderosa Pine. (can see actual forestry research models .)writing business plan proposed pine forest. Among things, forecast revenue generated salable product.say “time money.” Every year wait harvest another year don’t money. hand, every year wait means wood end. decide harvest?tree continues grow year 50, seems reached equilibrium: perhaps growth goes zero, rot balances growth . ’s point waiting year 50.year 25, tree growing fast ever . ’ll get 600 board-feet lumber. harvest year 25? ! tree growing fast means lot wood year 26, 27, . time harvest growth getting smaller, ’s worth waiting extra year.quantity interest average rate growth seedling harvest. Harvesting year 25 give total change 600 board feet 25 years, giving average rate change \\(600 \\div 25 = 24 \\mbox{board-feet-per-year}\\). wait year 35, ’ll 900 board feet, giving average rate change \\(900 \\div 35 = 25.7 \\mbox{board-feet-per-year}\\).’ve presenting average rate change number: \\[\\frac{f(t_B) - f(t_A)}{t_B - t_A}\\]’s helpful think function takes two inputs, can call \\(t_A\\) \\(t_B\\):\n\\[\\text{ave_rate_of_change}(t_A, t_B) \\equiv \\frac{f(t_B) - f(t_A)}{t_B - t_A}\\]\nsubtle maneuver. formula exactly , writing quantities \\(t_A\\) \\(t_B\\) inputs (putting parentheses left side), turn formula function.Sometimes average-rate--change function presents information clear way.Back forest … ’s graph average-rate-change function. function two inputs, botany dictates can growing word time seedling planted. ’ll set \\(t_A = 0\\) look corresponding slice function:","code":""},{"path":"function-inverses-and-solving.html","id":"function-inverses-and-solving","chapter":"10 Function inverses and “solving”","heading":"10 Function inverses and “solving”","text":"[Fun-inverse] Understand operation “solving” function able translate “zero-finding.”much spirit naming common tasks, process turning output function corresponding input using computer program called zero finding. often case, computer programming often involves reformatting things fit standard format. , standard format find input corresponds output zero. reality, snowplow problem, might care output zero. (facilities manager charge zero miles road likely job pretty soon!)output zero just format. can easily re-write function create new one output want turns zero. instance, snowplow problem, instead applying zero-finding function \\(g(x) = 168 x\\), construct another, related function \\(h(x) \\equiv g(x) - 400\\). Finding zero \\(h()\\) gives us directly input \\(g()\\) corresponding output 400.","code":""},{"path":"function-inverses-and-solving.html","id":"function-inverses","chapter":"10 Function inverses and “solving”","heading":"10.1 Function inverses","text":"[Fun-3a2] Determine whether function inverse. Know exponential logarithmic functions inverses inverse power-law function another power-law function.may sound like familiar word problem high-school algebra course:facilities manager small town. town contains\napproximately 400 miles road must plowed following significant snowfall. many plows must used order complete job one day plows can travel approximately 7 miles per hour engaged? — SourceThe task answering question often called solving word problem.don’t need calculus solve problem, insofar format familiar , might help depict addressed modeling task use model created guide mathematical work getting numerical answer problem.Modeling Phase: objective create function represents snow plowing let us answer question much plowing activity needed. ’s function takes input \\(x\\) number plows provides output number miles can serviced day.\n\\[\\mbox{miles_plowed}(x) \\equiv 7 \\times 24 \\times x\\]\nreality, “miles plowed” depends amount snow, safe speed limit plows, number rest breaks needed drivers, far snowplow terminus road system, many cars parked road available number tow trucks, day week time day. (Remember, might traffic road. Plowing rush hour bound small! slow night!) seems textbook “word problems” never mention issues, written world plowing snow exactly simple arithmetic.Likely, ’re going use modeling cycle end genuinely useful model. Still, start somewhere, let’s start \\(7 \\times 24 \\times x\\).can use function solve problem: many plows needed get 400-miles road serviced 1 day? ’s matter choosing suitable method applying function guide us answer.One simple method, sometimes called guess check propose answers see happens. experts snow plowing, know can’t negative fractional plows, guesses \\(x\\) integers. Let’s systematically:really don’t need scratch work crowding table, let’s streamline , keeping essentials:domain miles_plowed() function \\(x = 0, 1, 2, 3, \\ldots\\), table covers bit domain.Miles_plowed() might genius function, using keep mind don’t actually know input. know something form output: 400 miles. mathematical operation solving consists looking know output column table, reading corresponding input answer. Since 400 doesn’t appear output column, ’ll look interval includes 400. course, ’s interval 336 504. answer something bigger \\(x=2\\) doesn’t need larger \\(x=3\\). ’ve facilities management business many years, know choose answer \\(x=3\\).graph function, can easy calculate input given output. Just reverse finger action, looking output vertical axis, tracing horizontally function graph, reading result input axis.Now let’s write problem using math notation rather table. ’re looking value \\(x\\) \\[\\mbox{miles_plowed}(x) = 400\\] equation opposed function definition write \\(\\equiv\\) rather \\(=\\). point writing equations often signal us task “solve \\(x\\).”algebraic solution relies replacing miles_plowed(\\(x\\)) function’s formula re-arranging numbers possibly symbols equation form \\(x = \\ldots\\). , ’s easy:\\[7 \\times 24 \\times x = 400\\ \\ \\implies\\ \\ x = 400/(7\\times 24)\\]arithmetic find \\(x = 2.381\\). Apply common sense translate “three plows.”industrious facilities manager might go . “Today 400 miles road. next year , although don’t yet know exact number. ’m math work, ’ll write memo next year, know much road , can just arithmetic.” good idea, although mathematician might prefer word “function” “memo [guide] arithmetic.”likely learned set solve memo-writing function. key replace 400 symbol standing number miles road. ’ll use \\(M\\). re-arrangement \\(M\\) place 400.\\[168 x = M\\ \\ \\implies\\ \\ x = M/168\\]remains give informative name place \\(x\\) write proper function: \\(n_{plows}(M) \\equiv M/168\\).process starting function like \\(\\mbox{miles_plowed(x)}\\) transforming function convenient format task hand \\(n_{plows}(M)\\) called inverting function.High-school algebra emphasizes techniques inverting functions moving symbols around. great can done, ’s often impossible real science engineering problems. cases use powerful, general-purpose method, , guess check.Another common strategy inverting functions beyond reach algebraically rely specialist develop inverse function, give name, write formula mathematical notation , sometimes usefully, write computer program implements inverse function’s algorithm. strategy, ’s needed invert function know name formula function’s inverse. ’s table names formulas, likely familiar .can course read table either left right right left. instance, inverse \\(\\ln(x)\\) \\(e^x\\).know, function \\(g(x)\\), set valid values \\(x\\) called domain function. set possible outputs function called range function. inverse function \\(g()\\) domain range \\(g()\\) range domain \\(g()\\).Sometimes notation \\(g^{-1}(x)\\) used \"inverse function \\(g()\\). potentially confusing, since \\(g^{-1}(x)\\) might reasonable interpretted \\(1/g(x)\\) , general, two things equal.Straight-line (non-zero slope), exponential (\\(e^{kt}\\) \\(k\\neq 0\\)), logarithm functions aways inverse functions. power-law sinusoid functions, can several (many) different inverse functions. ’ll get need .’s easy graphical test whether unique inverse function . Draw graph, see horizontal line touches graph function one place. , unique inverse function.","code":""},{"path":"function-inverses-and-solving.html","id":"exercises","chapter":"10 Function inverses and “solving”","heading":"10.2 Exercises","text":"years ago, learned calculate slope straight-line function. graph, mark run corresponding rise, compute rise/run. formula definition, e.g. \\(f(x) \\equiv 3 - 4 x\\), simply read slope coefficient function input. , input named \\(x\\) coefficient formula \\(-4\\).question, ask estimate slope graph function. function exponential, straight line.fundamental idea calculus even function curved graph, zoom closely around given point, look like straight line. know calculate slope straight line.graph curved, slope different different points along graph. ’s single slope function. Still, can talk “slope point.”One way specify point function’s graph give horizontal coordinate: input function. ’re going give output function.Estimate slope exponential function \\(g(x) \\equiv e^x\\) several inputs, ’ll call \\(x_1\\), \\(x_2\\), \\(x_3\\) \\(x_4\\). won’t give numerical values \\(x_i\\) points, tell output function inputs. values \\(x\\) :\\(g(x_1) = 1\\)\\(g(x_2) = 5\\)\\(g(x_3) = 10\\)\\(g(x_4) = 0.1\\)code sandbox already contains R command plot mathematical exponential function domain \\(-3 \\leq x \\leq 3\\). ()-(d), modify command zoom domain around around appropriate value \\(x_i\\). calculate slope curve \\(x_i\\).Question Using answers slope points given ()-(d), choose best answer question: pattern slope \\(x\\) varies?slope value \\(x_i\\) \\(e^{x_i}\\). ✓ property exponential function becomes important describing wide range phenomena, nuclear isotope decay population growth. slope value \\(x_i\\) \\(x_i\\). ☹︎ saying slope \\(x_3\\) \\(\\approx 2.30\\). got? slope value \\(x_i\\) \\(x_i^2\\). ☹︎ saying slope \\(x_3\\) \\(\\approx 5.30\\). got? slope value \\(x\\) \\(\\sqrt{x}.\\) ☹︎ saying slope \\(x_i\\) \\(\\approx 1.52\\). got? Now ’ve found answer seen specify domain slice plot, ’s technique can make work bit easier. Add command plots \\(e^x\\) domain \\(-3 \\leq x \\leq 3\\)Make sure %>% line slice_plot() expression . Run amended command hover cursor graph.Reflection: One goal problem introduce way writing functions somewhat different may seen .Instead using letter \\(y\\)—\\(y = mx + b\\), give function name , parentheses name, list inputs function. instance, use \\(f(x)\\) \\(g(x)\\) problem.using equal sign (\\(=\\)) give name function; use \\(\\equiv\\). know, \\(=\\) means “equality.” \\(h(x) \\equiv x^2\\) describes definition: “define \\(h\\) name function \\(x\\) formula \\(x^2\\).” Definitions different equations. Equations important role mathematics, ’s worth confusing definitions.often use letters end alphabet—\\(x\\), \\(y\\), \\(z\\), \\(t\\), \\(u\\), \\(v\\), \\(w\\)—names inputs functions. important us give names inputs often deal functions one input ’ll need keep straight one stands .function kind machine takes inputs produces outputs. Similarly, printer machine takes several inputs—paper, ink, electricity, PDF file—produces familiar kind output. Printers designed different places different inputs, can’t mistake one . mathematical functions, purpose different names inputs.input slot printer often called “paper tray.” never confuse paper tray paper . Inputs function like paper tray. put particular value input slot \\(x\\) function, often call particular value something like \\(x_0\\) \\(x^\\star\\), \\(x_3\\). see something like \\(x_0\\), remember particular piece paper, input tray paper. ’ll even sometimes give output function—exponential function—ask figure particular input corresponds output. like asking, “Find piece paper , ’s printed , ink won’t show side.”","code":"\nslice_plot(exp(x) ~ x, domain(x = c(-3, 3)))%>% plotly::ggplotly()"},{"path":"fun-assembling.html","id":"fun-assembling","chapter":"11 Assembling functions","heading":"11 Assembling functions","text":"need new function purpose, practically always build existing functions. instance, parameterized function like \\[\\sin\\left(\\frac{2 \\pi}{P}x\\right) + C\\] built assempling together straight-line input scaling, naked \\(\\sin()\\) function, another straight-line function scaling output \\(\\sin()\\).chapter, ’ll introduce three general frameworks combining functions: linear combination, composition, multiplication.","code":""},{"path":"fun-assembling.html","id":"linear-combination","chapter":"11 Assembling functions","heading":"11.1 Linear combination","text":"One widely used sorts combination called linear combination. mathematics linear combination , happens, core use math applications, whether constructing Google-like search engine analyzing medical data see treatment positive effect.’ve worked many years one kind linear combination: polynomials. doubt ’ve seen functions12 like \\[f(x) \\equiv 3 x^2 + 5 x - 2\\]three modeling functions polynomial. case, polynomials generally, power-law functions: \\(g_0(x) \\equiv 1\\), \\(g_1(x) \\equiv x\\), \\(g_2(x) \\equiv x^2\\). functions defined, can write polynomial \\(f(x)\\) \\[f(x) \\equiv 3 g_2(x) + 5 g_1(x) - 2 g_0(x)\\]\nfunctions scaled quantity—3, 5, -2 example—scaled functions added . ’s linear combination; scale add. (Later, ’ll see scalars generally come units. might well metric polynomial equivalent traditional-unit polynomial. Just wait.)Notice said \\(g_0(x) \\equiv 1\\) power-law function. ? Since \\(x^0=1\\) \\(x\\), might equally well written \\(g_0(x) \\equiv x^0\\) visibly power-law function.’re just trying emphasize polynomial linear combination power-law functions, particular power-law functions whole-number, positive exponents. individual functions, say, \\(x^2\\) \\(x^5\\) called monomials. polynomial combination monomials, just like chemical polymer combination monomers.places seen linear combinations:parameterized sinusoid \\[\\sin\\left(\\frac{2 \\pi}{P}t\\right) + C\\] linear combination functions \\(h_1(t) \\equiv \\sin\\left(\\frac{2 \\pi}{P} t\\right)\\) \\(g_0(t) \\equiv 1\\). scalars \\(\\) \\(C\\).parameterized exponential \\[e^{kt} + C\\] functions combined \\(e^{kt}\\) \\(g_0(t) \\equiv 1\\). scalars , , \\(\\) \\(C\\).straight line function \\(x + b\\). functions combined \\(x\\) \\(1\\), scalars \\(\\) \\(b\\).Note neither parameterized exponential parameterized sinusoid polynomial.reasons us introducing linear combinations .see linear combinations everywhere know look .highly refined mathematical theory linear combinations gives us powerful ways think well computer software can quickly find best scalars use match input-output data.concept linear combination generalizes simple idea calling “scaling output.” now , ’ll use linear-combination terminology avoid narrower idea “scaling output.”Many physical systems described linear combinations. instance, motion vibrating molecule helicopter flight building shaken earthquake described terms simple “modes” linearly combined make entire motion. Earth, timbre musical instrument set scalars linear combination pure tones.Many modeling tasks can put framework choosing appropriate set simple functions combine (letting computer) figure best scalars use combination.Even better, automatic, reliable, fast algorithm finding scalars set functions combined match data closely possible. modeler just select functions used, computer can find coefficients. (’ll explore mathematics methods linear combinations, usually called linear algebra, Block 5.)graph shows two hump functions, hump1(t) hump2(t)linear combination hump functions shown Graph ().Question linear combination hump1(t) hump2(t) shown Graph ()?0.5*hump1(t) + hump2(t) ✓ hump1(t) + 0.25*hump2(t) ☹︎ case, right bump one-quarter big left bump. hump1(t) + 2hump2(t) ☹︎ Since hump2(t) maximum value 20, 2hump2(t) reach value 40. isn’t ’s shown graph. Another linear combination hump functions shown Graph (B).Question B linear combination hump1(t) hump2(t) shown Graph (B)?hump1(t) - 2*hump2(t) ✓ hump1(t) - hump2(t) ☹︎ second (downward) hump bigger first (upward) hump. 0.5*hump1(t) - 0.5*hump2(t) ☹︎ , first hump reach value 10 rather 20 seen Graph (B). -hump1(t) - hump2(t) ☹︎ first hump positive. ","code":""},{"path":"fun-assembling.html","id":"function-composition","chapter":"11 Assembling functions","heading":"11.2 Function composition","text":"compose two functions, \\(f(x)\\) \\(g(x)\\), means apply one functions output . “\\(f()\\) composed \\(g()\\)” means \\(f(g(x))\\). generally different “\\(g()\\) composed \\(f()\\)” means \\(g(f(x))\\).instance, suppose recorded outdoor temperature course day packaged function \\(\\mbox{AirTemp}(t)\\): temperature function time \\(t\\). digital thermometer uses degrees Celsius, want output units degrees Kelvin. conversion function \\[\\mbox{CtoK}(C) \\equiv C + 273.15\\]\nNotice CtoK() takes temperature input. , can write “Kelvin function time” \\[\\mbox{CtoK}\\left(\\mbox{AirTemp}(t)\\right)\\]\n’s important distinguish time \\(\\rightarrow\\) Kelvin function something looks much utterly different: \\(\\mbox{AirTemp}\\left(\\mbox{CtoK}(t)\\right)\\). matter arithmetic, can put time input CtoK(). completely different meaning terms real world. time measured hours, CtoK\\((t)\\) looking temperature eleven half days ago, instead temperature time \\(t\\).used \\(C\\) name input CtoK(). Shouldn’t something like \\(x\\) \\(y\\)?Keep mind names inputs function can anything whatsoever, long used consistently function algorithm. wanted, call first input function \\(x\\), matter \\(y\\) giraffe.point notation \\(\\mbox{CtoK}(C) \\equiv C + 273.15\\) make utterly clear \\(C\\) name ’re using input listing parentheses follow function name CtoK(). , unlike high-school notation, allows us great freedom choice names.can use freedom make easier communicate people. (remember, one people “future .”) used name \\(C\\) reinforce message CtoK() converts celsius kelvin, vice versa.simple, approximate formula length day (hours) function latitude \\(L\\) declination angle \\(\\delta\\) sun.\\[\\text{day_length}(L, \\delta) \\equiv \\frac{2}{15} \\arccos\\left(-\\tan(L)*\\tan(δ)\\right)\\]\ndeclination angle latitude point earth’s surface pierced imagined line connecting centers earth sun. summer solstice, \\(23.44^\\circ\\), longest day year.computer implement must look different, since \\(L\\) \\(\\delta\\) typically provided degrees tan() trigonometric functions computer languages expect units radians. conversion easy: \\(\\text{deg2rad}(d) \\equiv \\frac{\\pi}{180} d\\). conversion way \\(\\text{rad2deg}(r) \\equiv \\frac{180}{\\pi} r\\).order get day-length formula work computer, compose \\(\\tan()\\) function deg2rad(). output acos() radians, convert back degrees. Like :Question tmp-7: Using R sandbox, calculate length day latitude \\(39^\\circ\\) longest day year, declination sun \\(23.44^\\circ\\). long ?13.9 hours []13.9 hours []14.7 hours (+) []14.7 hours (+) []14.9 hours []14.9 hours []15.1 hours []15.1 hours []Now make plot day length function day year. course, day_length(L, d) take day year account. ’s missing know declination sun function calendar day.’ll represent calendar day number \\(n\\) runs 0 start January 1st 365 end December 31. Given convention, declination sun isComposing day_length() delta_sun() (d argument ) get function day year n:Question tmp-8: long day April Fools (\\(n=90\\)) Latitude 39N? (Use sandbox calculation.)12.38 hours (+) []12.38 hours (+) []12.59 hours []12.59 hours []12.64 hours []12.64 hours []12.74 hours []12.74 hours []Income inequality matter perennial political debate. US, people support Social Security, income re-distribution programming dating back almost century. re-distribution policies controversial. believe essential healthy society, others “cure” worse “disease.”Whatever one’s views, ’s helpful way quantify inequality. many ways might done. mathematically sophisticated one called Gini coefficient.Imagine society divided statistically income groups, poorest richest. income groups consists fraction population , aggregate, fraction national income. Poor people tend many number small fraction income. Wealthy people number, large fraction income. table shows data US households 2009:13The cumulative income shows fraction income people group poorer. Similarly cumulative population.function relates cumulative population cumulative income called “Lorenz” function. data graphed Figure ?? function fitted data.\nFigure 11.1: Data household incomes US 2009.\nLorenz curves necessarily concave , amounts saying curve gets steeper steeper population percentile increases. (? point, poorer people left richer right.) must connect (0,0) (1, 1).Calling income percentile \\(L\\) function population percentile \\(p\\), Lorenz function \\(L(p)\\) satisfies requirements previous paragraph.\nfunctions meet requirements:\\(L_b(p) \\equiv p^b\\) \\(1 \\leq b\\).\\(L_q(p) \\equiv 1 - (1-p)^q\\) \\(0 < q \\leq 1\\)Notice functions just one parameter. seems implausible workings complex society can summarized just one number. can use curve-polishing techniques introduced Section 8.6 find “best” parameter value match data. can see “best” good enough.\nFigure 11.2: Lorenz curves \\(L_b(p)\\) (blue) \\(L_q(p)\\) (red) fitted household income data.\nNeither form \\(L_b(p)\\) \\(L_q(p)\\) gives compelling description data. .can provide parameters constructing complicated Lorenz functions. two ways build new Lorenz function existing one:product two Lorenz functions, \\(L_1(p) L_2(p)\\) Lorenz function.linear combination two Lorenz functions, \\(L_1(p) + (1-) L_2(p)\\), long scalars add 1, Lorenz function. instance, white curve Figure 11.2 linear combination 0.45 times red curve plus 0.55 times blue curve.Question: composition two Lorenz functions Lorenz function?get started, figure whether \\(L_1(L_2(0)) = 0\\) \\(L_1(L_2(1)) = 1\\). answer yes, need find way compute concavity Lorenz function determine composition always concave . ’ll need additional tools .","code":"\nday_length <- makeFun(\n  (2/15)*rad2deg(\n    acos(\n      -tan(deg2rad(L))*tan(deg2rad(d))\n    )\n  ) ~ L+d)\ndelta_sun <- makeFun(-23.44*cos((2*pi/365)*(n+10) ) ~ n)\nslice_plot(\n  day_length(39, delta_sun(n)) ~ n, \n  domain(n=c(0,365))\n  )\nLb <- fitModel(income ~ pop^b, data = Income, start=list(b=1.5))\nLq <- fitModel(income ~ 1 - (1-pop)^q, data = Income, start=list(q=0.5))"},{"path":"fun-assembling.html","id":"modeling-polynomial-1","chapter":"11 Assembling functions","heading":"11.3 The modeling polynomial","text":"Sometimes, order model simple relationship need build function whose graph simple, curving shape.simple surprisingly powerful approach use low-order polynomial. order polynomial highest exponent input. example, straight-line function, \\(g_1(x) \\equiv a_0 + a_1 x\\), first-order polynomial. quadratic, \\(g_2(x) \\equiv b_0 + b_1 x + b_2 x^2\\) second-order polynomial.Many modelers tempted extend technique third-, fourth-, fifth-order even higher. rarely worthwhile since second-, fourth-, sixth- higher-even-order monomials basically U-shape, like referee signalling touch-. Similarly, first-, third-, fifth- higher odd-order monomial similar  shapes.ofttimes better approach compose polynomial curved monotonic function, logarithm.Explain now using subscripts names scalars.","code":""},{"path":"fun-assembling.html","id":"tukeys-ladder-optional","chapter":"11 Assembling functions","heading":"11.4 Tukey’s ladder (optional)","text":"[[Tukey’s ladder]] Using simple straight line input composition /output composition. can get variety curve shapes using linear function.“Rule 72”quantitatively literate, systems showing exponential growth decay encountered almost every day usually presented “percent per year” rates. examples:Money. Credit card interest rates, bank interest rates, student loans. credit card might charge 18% per year, bank might pay 0.3% savings account, “subsidized” student loans often around 7%.Population. Statistics often given “growth rates” percent. instance, 2016-17, Colorado’s population grew estimated 1.39% Idaho 2.2%. Illinois’s population shrank 0.26%, Wyoming’s 0.47%.Prices. Inflation rates usually presented percent.Home prices medical costs. largest expenses encountered families typically grow. might hear statistic like, “Regional median home prices increased 10% last year,” “Health insurance rates increasing 7% year.”understanding long-term consequences growth decay, can helpful frame rate growth percentage, doubling time (halving time decay).Happily, formula calculating doubling (halving) time directly percentage growth (decay) rate. \\[n = \\frac{\\ln(2)}{\\ln(1 + r/100)}\\] \\(r\\) percent per year growth rate \\(n\\) number years doubling (halving).calculation head? Perhaps carry around card graph looking answer:Clearly, straight-line calculation going match doubling-time curve well. quadratic approximation? Let’s make one centered \\(r = 5\\). formula, quadratic approximations \\[n(r) \\approx + b (r - r_0) + c (r-r_0)^2/2\\]centering \\(r_0=5\\) value \\(\\) doubling_time(5), value \\(b\\) dr_doubling_time(5), value \\(c\\) drr_doubling_time(5).Question 1) ’s numerical value \\(\\)?    10.2 ☹︎        11 ☹︎        11.9 ☹︎        12.9 ☹︎        14.2 ✓        15.7 ☹︎        17.7 ☹︎ Question B 2) Just looking graph doubling_time(r) figure signs \\(b\\) \\(c\\). ?\\(b\\) positive \\(c\\) positive ☹︎ \\(b\\) negative \\(c\\) positive ✓ \\(b\\) negative \\(c\\) negative ☹︎ \\(b\\) positive \\(c\\) negative ☹︎ Question C 3) ’s numerical value \\(b\\)? (Hint: Use D() operator calculate derivative doubling_time() respect r. evaluate function \\(r=5\\).)    -3.4 ☹︎        -2.8 ✓        -2.3 ☹︎        2.3 ☹︎        2.8 ☹︎        3.4 ☹︎ Question D 4) ’s numerical value \\(c\\)? (Hint: , use D() find 2nd derivative respect r. evaluate function \\(r=5\\).    -1.11 ☹︎        -0.83 ☹︎        -0.64 ☹︎        0.64 ☹︎        0.83 ☹︎        1.11 ✓ Using numerical values \\(\\), \\(b\\) \\(c\\) just calculated, construct quadratic approximation function plot red top \\(n(r)\\) function. (Hint: Connect two slice_plot() commands pipe %>%. can give slice_plot() color = \"red\" argument.)Question E 5) Comparing actual \\(n(r)\\) quadratic approximation, domain \\(r\\) functions match pretty well? Choose best answers.\\(r \\[3,7]\\) ✓ \\(r \\[1,6]\\) ☹︎ \\(r \\[2, 10]\\) ☹︎ \\(r \\[4, 10]\\) ☹︎ ’ve got quadratic approximation constructed derivatives \\(n(r)\\) hardly usable. couldn’t calculations head even , result limited domain relevance.Occasionally, simple functions give good approximation. one interest rates called “Rule 72.” function \\[n(r) \\approx 72 / r\\]. Plot Rule 72 function top actual \\(n(r)\\).Question F 6) Comparing actual \\(n(r)\\) Rule 72 function, domain \\(r\\) functions match pretty well? Choose best answers.\\(r \\[1,25]\\) ✓ \\(r \\[3,9]\\) ☹︎ \\(r \\[4, 15]\\) ☹︎ \\(r \\[8, 30]\\) ☹︎ Question G 6) Compare numerically actual \\(n(r)\\) Rule 72 function interest rate \\(r = 10\\) (per year). many years different two answers.exercises?Log transformation used car prices[[Perceived brightness loudness]] log scale.","code":"\ndoubling_time <- makeFun(log(2) / log(1 + r/100) ~ r)\nslice_plot(doubling_time(r) ~ r, domain(r = c(1,30))) "},{"path":"fun-assembling.html","id":"function-multiplication","chapter":"11 Assembling functions","heading":"11.5 Function multiplication","text":"third repertoire methods making new function old plain old multiplication. two functions \\(f(x)\\) \\(g(x)\\), product simply \\(f(x)g(x)\\).’s essential distinguish function multiplication function composition:\\[\\underbrace{f(x) g(x)}_\\mbox{multiplication}\\ \\ \\ \\ \\underbrace{f(g(x)) \\ \\ \\mbox{}\\ \\ \\ g(f(x))}_\\mbox{composition}\\]function composition, one functions—interior function applied overall input, \\(x\\) example. function gets input output partner.multiplication, functions applied input individually. outputs multiplied produce overall output.function composition, order functions matters: \\(f(g(x))\\) \\(g(f(x))\\) general completely different functions.function multiplication, order doesn’t matter multiplication commutative, , \\(\\) \\(b\\) quantities, \\(\\times b = b \\times \\).Transient vibrationA guitar string plucked produce note. note , course, vibrations air created vibrations string.plucking, note fades away. important model sinusoid (correct period correspond frequency note) times exponential.Function multiplication used often modeling ’ll see many modeling situations. ’s one example important physics communication: wave packet. Overall, wave packet localized oscillation Figure @ref{fig:wave-packet}.\nFigure 11.3: wave packet constructed multiplying sinusoid hump function.\nproduct two simple functions: hump times sinusoid.\nFigure 11.4: two components wave packet Figure 11.3\nEXERCISES: Say two kinds functions multiplied .Question tmp-9: two basic modeling functions multiplied?sinusoid another sinusoid faster period. (+) []sinusoid another sinusoid faster period. (+) []hump sinusoid. []hump sinusoid. []sigmoidal function sinusoid. []sigmoidal function sinusoid. [][][]Question tmp-10: period envelope?10 [’s true broad peaks overall function occur every 10 time units. sine wave two excursions zero every cycle, one positive one negative. period envelope 10, see amplitude faster sinusoid near zero every 5 time units.]10 [’s true broad peaks overall function occur every 10 time units. sine wave two excursions zero every cycle, one positive one negative. period envelope 10, see amplitude faster sinusoid near zero every 5 time units.]20 (+) []20 (+) []30 [, dips amplitude faster sign occur every 15 time units.]30 [, dips amplitude faster sign occur every 15 time units.]examples along lines.EXERCISE: Provide sigmoid series humps. Ask student sketch product.","code":""},{"path":"fun-assembling.html","id":"all-together-now","chapter":"11 Assembling functions","heading":"11.6 All together now!","text":"Two three techniques combining functions—linear combinations, function composition, function multiplication—can used function.Consider function length day\n\\[\\text{day_length}(L, \\delta) \\equiv \\frac{2}{15} \\arccos\\left(-\\tan(L)*\\tan(δ)\\right)\\]\n2/15 scaling output \\(\\arccos()\\). \\(\\arcos()\\) composed interior function scaled product two functions.","code":""},{"path":"fun-assembling.html","id":"exercises-1","chapter":"11 Assembling functions","heading":"11.7 Exercises","text":"’s common communications systems signal sine-wave carrier modulated another function. , carrier multiplied function: waveform(t) = modulator(t) \\(\\times\\) carrier(t).four examples sine period 2 units modulated another function, one modeling functions studied.Question () sort function modulating carrier?    exponential ✓        hump ☹︎        sigmoid ☹︎        sine ☹︎ Question B (B) sort function modulating carrier?    exponential ☹︎        hump ✓        sigmoid ☹︎        sine ☹︎ Question C (C) sort function modulating carrier?    exponential ☹︎        hump ☹︎        sigmoid ✓        sine ☹︎ Question D (D) sort function modulating carrier?One common measure quality life “life expectancy birth.” measure availability health care number physicians per 1000 people.question going examine whether life expectancy function availability health care , , kind function .data frame LifeExpectancyPhysicians contains official 2010 figures many countries life expectancy number physicians per 1000 population.Graph LifeExpectancy versus Physicians. Use linear axes, semi-log axes, log-log axes determine reasonable functional form. (Recall giving scale_y_log10() argument gf_refine() set y axis log scale, similarly x axis.)Using fitModel(), instructor found following model life-expectancy (’ll call L, years) function physicians-per-1000 people. (’ll call “doctor-density” short, D.)instructor’s model :\\[L(D) \\equiv 70.9 \\times D^{0.0683}\\]\nDefine function R graph data. Confirm reasonable match data. (, ’ve copied parameters wrong.)Question kind function instructor’s proposed model?    linear ☹︎ straight line linear axes?        exponential ☹︎ straight line semi-log axes?        power-law ✓ C consonant, Chub        sigmoidal ☹︎ S-shaped Question B According instructor’s model, ’s life expectancy physicians ?0 years ✓ believable, since (living) people physicians. power-law functional form always forces zero input zero output. maybe taken seriously. 35 years ☹︎ 50 years ☹︎ 70 years ☹︎ 100 years ☹︎ 115 years ☹︎ Question C According instructor’s model, life expectancy every person world physician? (Hint: Translate physicians/1000-people.)0 years ☹︎ 35 years ☹︎ 50 years ☹︎ 70 years ☹︎ 100 years ☹︎ 110 years+ ✓ probably starve death everybody physician! also unreasonable extrapolation. argued doctor-density function life expectancy rather way around. (seniors consume lot medical care.)Question D models agrees reasonably well data? (Hint: can plot model data.)\\(D(L) \\equiv 7.24\\times 10^{-19} \\times L^9.8\\) ✓ \\(D(L) \\equiv 3.19 \\times L^{3.1}\\) ☹︎ \\(D(L) \\equiv 8.64 \\times L^{6.3}\\) ☹︎ \\(D(L) \\equiv 5.50 \\times L^{2.4}\\) ☹︎ question now whether function \\(D(L)\\) (previous question) good match data, equivalent function \\(L(D)\\) instructor first proposed.order compare , make functions input. Let’s say take \\(D(L)\\) algebraically find inverse ’ll call \\(D^{inv}(D)\\). inverse function takes input form D produces output form L.Using algebra, confirm \\[D^{inv}(D) \\equiv  70.9 \\times D^{1/9.8}\\]\nsandbox, plot instructor’s proposed model \\(L(D)\\) model \\(D^{inv}(D)\\) axes, along data. (’ll decide variable put horizontal axis, notation \\(L(D)\\) \\(D^{inv}(D)\\) give good clue.)Question E model, \\(L(D)\\) \\(D^{inv}(D)\\) better match data \\(D < 1\\)?\\(L(D)\\) ✓ \\(D^{inv}(D)\\) ☹︎ function. ☹︎ Complex social phenomena, like life expectancy, … well, complex. Life expectancy depends many factors health care: nutrition, war, automobile safety, etc.Notice data countries highest life expectancies \\(D \\approx 3\\). yet, many countries \\(D \\approx 3\\) relatively low life expectancy. One reason inequality. many countries, urbanites live high standard people countryside little access health care reliably good nutrition, civil order, .EXERCISE: algebra composition hump function \\(e^{-\\frac{x^2}{2}}\\). Parabola nice starting point. want go zero asymptotically, \\(-\\infty\\). might seem tall order, exponential function .","code":"\ngf_point(LifeExpectancy ~ Physicians,\n         data = LifeExpectancyPhysicians) %>%\n  gf_refine()"},{"path":"fun-multiple-inputs.html","id":"fun-multiple-inputs","chapter":"12 Functions with multiple inputs","heading":"12 Functions with multiple inputs","text":"can use linear combination function multiplication build custom functions basic modeling functions. Similarly, linear combination function multiplication provide ways construct functions multiple inputs.","code":""},{"path":"fun-multiple-inputs.html","id":"fx-times-gt","chapter":"12 Functions with multiple inputs","heading":"12.1 f(x) times g(t)","text":"example, soon guitar string plucked conforms sinusoid pattern displacement straight-line connecting two fixed ends string: one set finger pressure fret bridge.string length \\(L\\), string displacement function position \\(x\\) along string linear combination functions \\[g_k(x) \\equiv \\sin(k \\pi x /L)\\] \\(k\\) integer. functions graphed Figure 12.1.\nFigure 12.1: Vibrational modes guitar string.\nShapes sort Figure 12.1 stop-motion flash snapshot string. string’s shape also changes time, string’s displacement function \\(x\\) \\(t\\). displacement sinusoid whose time period depends length tension string well number cycles spatial sine:\n\\[g_k(x, t) \\equiv \\sin(\\frac{k \\pi}{L} x) \\ \\sin(\\frac{k \\pi}{P}t)\\] Figure 12.2 shows snapshots 1.5 cycle string different moments time, motion linear combination.\nFigure 12.2: String position changes time.\n","code":""},{"path":"fun-multiple-inputs.html","id":"two-variable-modeling-polynomial","chapter":"12 Functions with multiple inputs","heading":"12.2 Two-variable modeling polynomial","text":"Section 11.3 introduced low-order polynomial, either \\(g_1(x) \\equiv a_0 + a_1 x\\) \\(g_1(x) \\equiv b_0 + b_1 x + b_2 x^2\\) general-purpose way generating function smoothly curved shape. applies constructing simple functions two variables.Almost always, use least first-order polynomial, :\n\\[h_1(x, y) \\equiv a_0 + a_x x + a_y y\\]\nimportant extension , using ’s called bilinear term , evocatively statistics, interaction term. \n\\[h_2(x, y) \\equiv \\underbrace{b_0}_\\mbox{intercept} + \\underbrace{b_x\\, x + b_y\\, y}_\\mbox{linear terms} + \\underbrace{b_{xy}\\,x\\, y}_\\mbox{bilinear term}\\]bilinear term arises models phenemona spread epidemics, population dynamics predator prey animals, rates chemical reactions. situations one thing interacting another: predator killing prey animal, infective individual meeting person susceptible disease, one chemical compound reacting another.certain circumstances, modelers include one quadratic terms, \n\\[h_3(x, y) \\equiv c_0 + c_x\\, x + c_y\\, y + c_{xy}\\,x\\, y + \\underbrace{c_{yy}\\, y^2}_\\mbox{quadratic y}\\]\nskilled modeler can often deduce terms include basic facts system modeled. ’ll need additional calculus concepts can explain straightforward way.Explain using letter subscripts scalars linear combination.","code":""},{"path":"fun-multiple-inputs.html","id":"function-composition-not","chapter":"12 Functions with multiple inputs","heading":"12.3 Function composition (not!)","text":"left function composition list ways build multivariable functions simpler functions single input.instance, consider two functions \\(f(x)\\) \\(g(t)\\). composition \\(f(g(t))\\) one input: \\(t\\). Similarly, \\(g(f(x))\\) one input: \\(x\\).EXERCISE:Section 11.2 saw function giving declination sun function day year, length--day function latitude sun’s declination. Putting together let’s us assemble day-length function latitude day year.Give function. DRAW CONTOUR PLOT, take slices. Day length seen migrating bird. [Plug simple sinusoid latitude reduce function day-length versus day--year.]Many printed tables meant used functions; plug input values read output. ’s table published National Oceanic Atmospheric Administration heat index, way summarizing perceived comfort (discomfort) summer-like weather conditions.Question ) inputs heat-index functiontemperature relative humidity ✓ temperature wind speed ☹︎ inputs wind-chill function, heat index. temperature, latitude, longitude ☹︎ heat index doesn’t depend location. table actually shows three different functions:heat index \\(^\\circ\\) F.heat index \\(^\\circ\\) C.caution warning level.Question B B) inputs 70% relative humidity \\(88^{\\circ}\\) F, outputs three functions?\\(100^{\\circ}\\) F, \\(38^\\circ\\) C, “extreme caution.” ✓ \\(100^\\circ\\) F, \\(38^\\circ\\) C, “danger.” ☹︎ Check ! \\(100^\\circ\\) F, \\(33^\\circ\\) C, “extreme caution.” ☹︎ 33C temperature 100F. Question C C) Holding relative humidity 70%, much ambient temperature increase (\\(88^\\circ\\) F) change caution-level output “dangerous?”Increase \\(2^\\circ\\) F ✓ Increase \\(6^\\circ\\) F ☹︎ looks like ’re increasing humidity point heat index \\(106^circ\\) F. asked much temperature input change, heat-index output. Increase relative humidity 80%. ☹︎ ’s true \\(100^\\circ\\) F 80% humidity, caution-index “dangerous.” problem specified holding humidity constant. Question D D) starting point \\(88^\\circ\\) F 70% humidity, slope increase heat index moving 80% humidity.\\(6^\\circ\\) F per 10 percentage points humidity ✓ \\(6^\\circ\\) F ☹︎ slope always “rise run.” ’ve got rise right, run? \\(6^\\circ\\) F per 80% humidity. ☹︎ slope change output divided change input, .e. “rise run.” 80% humidity endpoint, run change humidity starting point endpoint. Question E E) heat-index output inputs 52% relative humidity \\(91^\\circ\\) F? Choose best answer.\\(98.4^\\circ\\) F ✓ course, 4 last digit sketchy, ’s reasonable calculate interpolated output averaging neighboring outputs. \\(101^\\circ\\) F ☹︎ ’s output 55% humidity \\(92^\\circ\\) F. table doesn’t say. ☹︎ ’s true table entry specifically 52% \\(91^\\circ\\) F, can make reasonable guess interpolation, , reading rows columns. Question F True false: caution-level output presented function just one variable, rather needing temperature humidity .    TRUE ✓ caution-level output function ambient temperature alone humidity alone. know heat-index, know caution level exactly.        FALSE ☹︎ Notice caution-level output given level heat index, regardless ambient temperature humidity separately. US National Weather Service also publishes heat index graphic, one .Recall Pythagorean theorem: \\(C^2 = ^2 + B^2\\). Let’s write function takes inputs lengths two legs produces output length hypotenuse.\\[\\mbox{hypotenuse}(, b) \\equiv \\sqrt{\\strut ^2 + b^2}\\]can seen composition function \\(f()\\) onto linear combination power-law functions \\(g()\\) different inputs.Question function \\(f()\\)?\\(f(x) \\equiv ^2\\) ☹︎ wouldn’t make sense. output \\(f()\\) doesn’t depend input. \\(f(x) \\equiv \\sqrt{x}\\) ✓ \\(f(x) \\equiv x^2\\) ☹︎ part interior function, outer function. \\(f(x) \\equiv +\\) ☹︎ Sorry, output hypothenuse() function needs quantity, \\(+\\) quantity. Question B function \\(g()\\)?\\(g(x) \\equiv ^2\\) ☹︎ wouldn’t make sense. output \\(f()\\) doesn’t depend input. \\(g() \\equiv x^2\\) ☹︎ wouldn’t make sense. output \\(f()\\) doesn’t depend input. \\(g(x) \\equiv x^2\\) ✓ Right, power-law function. doesn’t matter call input, long ’s used consistently definition. \\(g(x) \\equiv ^2 + b^2\\) ☹︎ Sorry, input name \\(x\\) formula right side tilde expression \\(\\) \\(b\\) . Question C two functions linear combination. ?\\(g()\\) \\(g(b)\\) ✓ \\(f(x)\\) \\(g(x)\\) ☹︎ \\(f(b)\\) \\(g(b)\\) ☹︎ Question D scalars linear combination?\\(1\\) \\(1\\) ✓ \\(1\\) \\(-1\\) ☹︎ scalars. ☹︎ think know ’re getting . tradition mathematics scalar \\(1\\), don’t write . still, scalar \\(1\\). used \\(\\) \\(b\\) names inputs hypotenuse(). Aren’t \\(\\) \\(b\\) meant parameters, input names?can use whatever want input names, long used consistently left right sides \\(\\\\equiv\\). Names like \\(x\\), \\(t\\), \\(y\\) scream recognized input names, use time. Pythagorean theorem usually written using , B, C. ’m honoring convention human reader gets cultural hint inputs stand . ’m unapologetic , since got fair warning left side \\(\\\\equiv\\) argument names .function bigger() defined piecewise terms two extremely simple functions.","code":"\nbigger <- makeFun(ifelse(y > x, y, x) ~ x + y)\ncontour_plot(bigger(x,y) ~ x+y, domain(x=c(-2,2), y=c(-2,2)))"},{"path":"fun-piecewise.html","id":"fun-piecewise","chapter":"13 Piecewise functions","heading":"13 Piecewise functions","text":"[Fun-4-b-4a] Identify graphs piecewise linear function.[Fun-1C-d] Construct hock-stick function piecewise combination constant function straight-line function non-zero slope.[Fun-4-b-4b] Recognize traditional curly-brace notation piecewise functions.[Fun-4-b-4c] able create piecewise function R.[Fun-4-b-4d] Distinguish continuous discontinuous functionsEach basic modeling functions, two exceptions, domain entire number line \\(-\\infty < x < \\infty\\). matter big small value input, function output. functions particularly nice work , since never worry input going bounds.two exceptions :logarithm function, defined \\(0 < x\\).power-law functions: \\(x^p\\).\n\\(p\\) negative, output function undefined \\(x=0\\). can see simple example: \\(g(x) \\equiv x^{-2}\\). students drilled “division zero illegal,” \\(g(0) = \\frac{1}{0} \\frac{1}{0}\\), double law breaker.\n\\(p\\) integer, \\(p \\neq 1, 2, 3, \\cdots\\) domain power-law function include negative inputs. see , consider function \\(h(x) \\equiv x^{1/3}\\).\n\\(p\\) negative, output function undefined \\(x=0\\). can see simple example: \\(g(x) \\equiv x^{-2}\\). students drilled “division zero illegal,” \\(g(0) = \\frac{1}{0} \\frac{1}{0}\\), double law breaker.\\(p\\) integer, \\(p \\neq 1, 2, 3, \\cdots\\) domain power-law function include negative inputs. see , consider function \\(h(x) \\equiv x^{1/3}\\).can tedious make sure right side law dealing functions whose domain whole number line. designers hardware computer arithmetic, several decades work, found clever system make easier. ’s standard part hardware whenever ta function handed input part function’s domain, one two special “numbers” returned. illustrate:NaN stands “number.” Just calculation involving NaN generate NaN result, even involving multiplication zero cancellation subtraction division.14 instance:Division zero produces Inf, whose name reminiscent “infinity.” Inf infiltrates calculation takes part:see benefits NaN / Inf system let’s plot logarithm function graphics domain \\(-5 \\leq x \\leq 5\\). course, part graphics domain, \\(-5 \\leq x \\leq 0\\) domain logarithm function computer entitled give us slap wrists. NaN provides room politeness.Open sandbox see happens make plot.purely mathematical sense, problem functions undefined extended part domain handled cunning imagination. solution—invention complex numbers—concern . Instead, ’re going embrace functions domain smaller whole number line see can .illustrate, let’s use computer notation create function whose domain \\(x < 1\\). , need way write “,” , “\\(x\\) 1 greater, return NaN.” ’ll use function R let’s ask TRUE/FALSE question , depending answer, one another calculation. question-answering R function ifelse() whose name remarkably descriptive. ifelse() function takes three arguments. first question asked, second value return answer “yes,” third value return “” answer.\ntakes getting used expression x < 1 question statement fact. ’s standard traditional mathematical notation questions, although people use question mark \\(x \\stackrel{?}{<} 1\\).table shows computer notation common sorts questions.","code":"\nsqrt(-3)## [1] NaN\n(-2)^0.9999## [1] NaN\n1/0## [1] Inf\n0 * NaN## [1] NaN\nNaN - NaN## [1] NaN\nNaN / NaN## [1] NaN\n3 * Inf## [1] Inf\nsqrt(Inf)## [1] Inf\n0 * Inf## [1] NaN\nInf + Inf## [1] Inf\nInf - Inf## [1] NaN\n1/Inf## [1] 0\nslice_plot(log(x) ~ x, domain(x=c(-5,5)))\ng <- makeFun( ifelse(x < 1, x, NaN) ~ x)\nslice_plot(g(x) ~ x, domain(x = c(-2, 2)))"},{"path":"fun-piecewise.html","id":"piecewise-functions","chapter":"13 Piecewise functions","heading":"13.1 Piecewise functions","text":"ability split domain function provide different formula pieces allows us \nconstruct piecewise functions. illustrate, function \\(h(x) \\equiv |x|\\). ’ll recognize “absolute value” function. intuitive algorithm “strip negative sign, ” input. ability divide domain pieces, gain access less mysterious sort arithmetic operation can re-write \\[h(x) \\equiv \\left\\{ \n\\begin{array}{cl} x & \\text{}\\ 0 \\leq x\\\\-x & \\mbox{otherwise}\\end{array}\n\\right.\\]\n, computer notationNote absolute value function built-R form abs() function.Less familiar Heaviside function important uses physics engineering:\\[\\mbox{Heaviside}(x) \\equiv \\left\\{ \n\\begin{array}{cl} 0 & \\text{}\\ x < 0\\\\1 & \\mbox{otherwise}\\end{array}\n\\right.\\]\ncomputer notation, \nvertical gap two pieces called discontinuity. Intuitively, draw discontinuous function without lifting pencil paper. Heaviside function discontinuity \\(x=0\\).Similarly, ramp function kind one-sided absolute value:\n\\[\\mbox{ramp}(x) \\equiv \\left\\{ \n\\begin{array}{cl} x & \\text{}\\ 0 \\leq x\\\\0 & \\mbox{otherwise}\\end{array}\n\\right.\\]\n, computer notation:linear combination two input-shifted ramp functions gives piecewise version sigmoid.Figure ?? graph monthly natural gas use author’s household versus average temperature month. (Natural gas measured cubic feet, appreviated ccf.)\ngraph looks somewhat like hockey stick. sloping straight-line dependence ccf temperature temperatures \\(60^\\circ\\)F constant higher temperatures. shape originates dual uses natural gas. Gas used cooking domestic hot water, demand less independent outdoor temperature 15 ccf per month. Gas also used heating house, ’s needed temperature less \\(60^\\circ\\)F.can accomplish hockey-stick shape linear combination ramp() function constant. ramp function represents gas used heating, constant uses gas (modeled depending temperature. Overall, model \\[\\text{gas_ccf}(x) \\equiv 4.3\\,  \\mbox{ramp}(62-x)  + 15\\]\nEven simpler model uses natural gas:\n\\[\\text{other_ccf}(x) \\equiv 15\\].\n:::heating degree days integration.Similarly power wind turbinesOur last example concerns bit familiar technology: music synthesis. Generating pure tone electronically easy done using sinusoid. Generating note rich instrumental timbre can accomplished linear combination sinusoids. course, note localized time. accomplished multiplying sinusoids hump function envelope.turns standard hump function, dnorm(), generate realistic sound. Instead, complicated envelope used, ADSR function shown Figure 13.1. function six (!) parameters: time key pressed, duration “attack” phase sound amplitude increasing response impulse imposed key, decay duration D output level S lasts key released, decay zero duration R. ’s reasonable think D S phases piecewise linear approximation exponential decay.\nFigure 13.1: ADSR envelope function used music synthesis consists 6 pieces including zero output key pressed pulse ends. Source\n","code":"\nh <- makeFun(ifelse(x >= 0, x, -x) ~ x)\nHeaviside <- makeFun(ifelse(x < 0, 0, 1) ~ x)\nramp <- makeFun(ifelse(0 < x, x, 0) ~ x)\nslice_plot(ramp(x) ~ x, domain(x=c(-3, 3)))\nsig <- makeFun(ramp(x+0.5) - ramp(x-0.5) ~ x)\nslice_plot(sig(x) ~ x, domain(x=c(-3, 3)))"},{"path":"magnitudes.html","id":"magnitudes","chapter":"14 Magnitudes","heading":"14 Magnitudes","text":"Undoubtedly comfortable standard way writing numbers, instance 33 512 1051. Elementary school students master comparison numbers. greater: 512 33? less, 1051 512? can answer questions glance; comparison can accomplished simply counting number digits. 1051 four digits, larger three-digit number 512. two digits 33, smaller 512. two numerals number digits—say, 337 512—can’t answer “greater ” question simple counting. Instead, proceed left write compare number place. , 512 337, compare 5 3 … since 5 greater 3, 512 greater 337. two leading digits , go next digit digits turn.Things always simple. number system uses place Arabic numerals human invention. example earlier number system Roman numerals. , comparison hard. instance, three numbers bigger?\\[\\mbox{MLI CXII XXXIII}\\]\ntypographically shorter number largest, vice versa. Even two Roman numerals length, ’s trivial compare place--place basis. instance, IC fifteen times bigger VI, even though much smaller V.","code":""},{"path":"magnitudes.html","id":"counting-digits","chapter":"14 Magnitudes","heading":"14.1 Counting digits","text":"Digit counting provides easy, fast way perform many calculations, least approximately. \\(\\sqrt{10000}\\)? five digits, square root number “half number digits.” , \\(\\sqrt{10000} = 100\\). \\(10 \\times 34\\)? Easy: 340. Just append one zero 10 end 34. \\(1000 \\times 13\\)? Just easy: 13,000. even punctuate written numbers commas period order facilitate counting digits.Imagine digit counting function called digit(). takes number input produces number output. don’t formula digit(), inputs output can calculated just counting. example:digit(10) \\(\\equiv\\) 1digit(100) \\(\\equiv\\) 2digit(1000) \\(\\equiv\\) 3… …digit(1,000,000) \\(\\equiv\\) 6… .digit() function easily can applied product two numbers. instance:digit(1000 \\(\\times\\) 100) = digit(1000) + digit(100) = 3 + 2 = 5.Similarly, applying digit() ratio gives difference digits numerator denominator, like :digit(1,000,000 \\(\\div\\) 100) = digit(1,000,000) - digit(100) = 6 - 2 = 4","code":""},{"path":"magnitudes.html","id":"using-digit-to-understand-magnitude","chapter":"14 Magnitudes","heading":"14.2 Using digit() to understand magnitude","text":"haven’t shown digit() function anything handful discrete inputs listed . heroic task produce continuous version digit(). method sketched 14.7.practice, digit() useful well one basic modeling functions:\n\\[\\text{digit(x)} = 2.302585 \\ln(x)\\] , R, log10(). elected \\(\\ln()\\) rather digit() reasons seen study differentiation.","code":""},{"path":"magnitudes.html","id":"quantity-and-magnitude","chapter":"14 Magnitudes","heading":"14.3 Quantity and magnitude","text":"familiar quantity 60 miles-per-hour written number (60 ) followed units. quantity neither number units: combination two. instance, 100 obviously 60. miles-per-hour kilometers-per-hour. Yet, 60 miles-per-hour almost exactly quantity 100 kilometers-per hour.166, 60, 600, 6000 miles-per-hour quantities differ size orders magnitude. differences often point substantial change context. jog 6 mph, car highway goes 60 mpg, cruising commercial jet goes 600 mph, rocket passes 6000 mph way orbital velocity.everyday speech, difference 60 6 54; just subtract. Modelers scientists routinely mean something else: difference 60 6 “one order magnitude.” Similarly, 60 6000 different “two orders magnitude,” 6 6000 three orders magnitude.everyday English, phrases like “completely different situation” “different kind” “qualitatively different” (note l) indicate substantial differences. “Different orders magnitude” expresses kind idea specific reference quantity.use factors 10 counting orders magnitude arbitrary. person walking person jogging edge qualitatively different, although speeds differ factor 2. Aircraft cruise 600 mph 1200 mph qualitatively different design, although speeds factor 2 apart. professional basketball player (height 2 meters ) qualitatively different third grader (height 1 meter).Modelers develop intuitive sense think difference terms subtractive difference (e.g. 60 - 6 = 54) look orders magnitude (e.g. 60--6 one order magnitude). seems skill based experience judgment, opposed mechanical process.One clue thinking terms orders magnitude appropriate working set objects whose range sizes spans one many factors 2. Comparing baseball basketball players? Probably need orders magnitudes. Comparing infants, children, adults terms height weight? Orders magnitude may useful. Comparing bicycles? Mostly fit within range 2 terms size, weight, speed (expense!). Comparing cars, SUVs, trucks? Differences factor 2 routine, thinking terms order magnitude likely appropriate.Another clue whether “zero” means “nothing.” Daily temperatures winter often near “zero” Fahrenheit Celcius scales, way means complete absence heat. scales arbitrary. Another way think clue whether negative values meaningful. , thinking terms orders magnitude likely useful.may guessed digits() handy computing differences terms orders magnitude. ’s :Make sure quantities expressed units.Calculate difference digits() numerical part quantity.order--magnitude difference velocity snail walking human. snail slides 1 mm/sec, human walks 5 km per hour. Putting human speed units snail speed:\n\\[5 \\frac{km}{hr} = \\left[\\frac{1}{3600} \\frac{hr}{sec}\\right] 5 \\frac{km}{hr} = \\left[10^6 \\frac{mm}{km}\\right] \\left[\\frac{1}{3600} \\frac{hr}{sec}\\right] 5 \\frac{km}{hr} = 1390 \\frac{mm}{sec} \\]\nCalculating difference digits() 1 1390:, 3 orders magnitude difference speed. snail, walking humans must seem like rockets way orbit!Animals, including humans, go world varying states illumination, bright sunlight high noon dim shadows half moon. able see diverse conditions, eye needs respond light intensity across many orders magnitude.lux unit illuminance Système international. table17 shows illumination range familiar outdoor settings:creature active night day, eye needs sensitive 7 orders magnitude illumination. accomplish , eyes use several mechanisms: contraction dilation pupil accounts 1 order magnitude, photopic (color, cones) versus scotopic (black--white, rods, nighttime) covers 3 orders magnitude, adaptation minutes (1 order), squinting (1 order).","code":"\nlog10(1390) - log10(1)## [1] 3.143015"},{"path":"magnitudes.html","id":"composing-ln","chapter":"14 Magnitudes","heading":"14.4 Composing \\(\\ln()\\)","text":"logarithm inverse exponential function. words, \\[\\ln(e^x) = x\\ \\ \\text{}\\ \\ e^{\\ln(x)} = x\\]Think terms kinds quantities input output function.Logarithm: input quantity, output magnitude quantity.Exponential: input magnitude, output quantity magnitude.Question ) True false: \\(2^x\\) power-law function.    TRUE ☹︎ power-law function, input base. \\(2^x\\), input exponent. ’s exponential function.        FALSE ✓ Question B B) True false: \\(3/x^2\\) power-law function.    TRUE ✓        FALSE ☹︎ \\(3 x^{-2}\\). can see \\(x\\) base, power-law function. Question C C) True false: \\(5\\sqrt{x}\\) power-law function.    TRUE ✓        FALSE ☹︎ \\(5 x^{1/2}\\). input \\(x\\) base, power-law function. Question D D) gravitational force, F, two bodies inversely proportional square distance \\(d\\) . …Inversely proportional square \\(d^{-2}\\) ☹︎ \\(F = kd^{-2}\\) ✓ square-root relationship. ☹︎ inversely proportional square root. ☹︎ Robert Boyle (1627-1691) iwas founder modern chemistry scientific method general. chemistry student already knows, Boyle sought understand properties gasses. results summarized Boyle’s Law.going examine data Boyle’s lab notebooks. (preserved Royal Society London. data copied source.) data available data frame Boyle. units pressure mmHg units volume cubic inches.Open sandbox carry calculations Boyle’s data. see data frame organized, use head(Boyle) names(Boyle) commands.scaffolding contains command plotting Boyle’s data. also includes command, gf_lm() add graph best straight-line model plotted points. Recall # symbol turns follows line comment, ignored R. removing # selectively can turn display log axes.Question () sandbox, plot pressure versus volume using linear, semi-log, log-log axes. Based plot, straight-line function drawn, good model relationship pressure volume?    linear ☹︎ look like straight line linear axes.        exponential ☹︎ look like straight line semi-log axes.        power-law ✓ want find slope intercept straight-line model. can hard read graph log scales, use special purpose function find formula straight-line function fits data. ’s example use .Notice use log(pressure) formula scaffolding. appropriate think data fall straight-line semi-log axes. use log-log axes, want use log(volume) right side tilde expression. , ’re using linear axes, leave logs altogether.Question B (B) slope produced fitModel() fitting correct model type part (1)?Roughly -1 ☹︎ must precise person! Almost exactly -1 ✓ -1.5 ☹︎ ’m sure arrived answer. Slope \\(> 0\\) ☹︎ able see graph made part (1) slope negative. According appropriate model found () (B), interpret function found relating pressure volume.Question C (C) volume becomes large, happens pressure?Pressure becomes small. ✓ Pressure stays constant ☹︎ can see graph part () pressure change volume. Pressure also becomes large. ☹︎ can see graph part () pressure goes volume goes . None ☹︎ Return use fitModel() find slope straight-line fit appropriately log-transformed model. carried log transformation, used -called “natural logarithm” expressions like log(pressure). Alternatively, used log base-10 log base-2, expressions like log(pressure, base = 10) log(volume, base = 2). Whichever use, use base logarithmic transformations finding straight-line parameters.Question D (D) slope straight line found fitModel() depend base used?    ✓        Yes ☹︎ use base logarithms fitModel() expression?        ’s way tell. ☹︎ Yes, . Try using fitModel() different bases log. Question E (E) intercept straight line found fitModel() depend base used?","code":"\naskMC(\n  prompt = \"A) True or false: $2^x$ is a power-law function.\",\n  \"TRUE\" = \"In a power-law function, the input is the base. In $2^x$, the input is the exponent. So it's an exponential function.\",\n  \"+FALSE+\",\n  random_answer_order = FALSE)\naskMC(\n  prompt = \"B)  True or false: $3/x^2$ is a power-law function. \", \n  \"+TRUE+\",\n  \"FALSE\" = \"This is the same as $3 x^{-2}$. You can see that $x$ is the base, so this is a power-law function.\",\n  random_answer_order = FALSE)\naskMC(\n  prompt = \"C) True or false: $5\\\\sqrt{x}$ is a power-law function. \", \n  \"+TRUE+\",\n  \"FALSE\" = \"This is the same as $5 x^{1/2}$. The input $x$ is the base, so this is a power-law function.\")\nmessage <- \"Inversely proportional to the square would be $d^{-2}$\"\naskMC(\n  prompt = \"D) The gravitational force, F, between two bodies is inversely proportional to the square of the distance $d$ between them. Then ...\",\n  c(\"$F = k d^{2}$\" = message, \n    \"+$F = kd^{-2}$+\", \n  \"$F = k d^{1/2}$\" = \"This is a square-root relationship.\", \"$F = k d^{-1/2}$\" = \"This is inversely proportional to the square root.\"),\n  inline=FALSE)\ngf_point(pressure ~ volume, data = Boyle) %>%\n  gf_refine(\n     # scale_x_log10(),\n     # scale_y_log10()\n  ) %>%\n  gf_lm()\nfitModel(log(pressure) ~ a + b*volume, data = Boyle) %>%\n  coefficients()"},{"path":"magnitudes.html","id":"magnitude-graphics","chapter":"14 Magnitudes","heading":"14.5 Magnitude graphics","text":":::Based log-log plot horsepower (BHP) versus engine displacement, answer questions.Question many engines displacement 1 liter less?    none ☹︎ Perhaps recognized left-tick mark corresponds value 1, data points 1 smaller. one liter corresponds 1000 cc.        7 ☹︎ number engines displacement 10 cc smaller. one liter corresponds 1000 cc.        14 ✓ Right. ’s \\(10^3\\) tick marks 1 liter, since 1 liter 1000 cc.        25 ☹︎ true cut-10 liters. ’s .        randomAnswerOrder ☹︎ FALSE Question B Using log-log plot, many decades BHP spanned data?Derive straight-line form power-law functionSuppose \\(f(x) = x^p\\). \\(\\ln(f(x)) = p \\ln(x) + \\ln()\\).plot power output (BHP) versus displacement (cc) 39 internal combustion engines.Question study partner claims smallest engine data displacement 2000 cc (, 2.0 liters) 100 horsepower. Based graph, claim plausible?Yes, 2000 cc 100 hp look like (0, 0) scale graph. ✓ Yes, size engine typical small car. ☹︎ may , certainly ’ve encountered lawn mower engines much smaller. , smallest engine close 0 cc. ☹︎ able distinguish visually engine 1 cc engine 1000cc graph? values lie horizontal pixel graph. , study partner always wrong. ☹︎ may, ’re looking principled answer, ad hominem one. Semi-log scalesThe next command make graph engine data , log scale horizontal axis. vertical axis still linear.Question B Using just graph, answer question: engines range many decades displacement? (Remember, decade factor 10.)7 decades ✓ Can’t tell ☹︎ Yes, can. Figure one decade corresponds terms distance log axes. \\(10^7\\) decades ☹︎ estimated volume entire universe \\(4 \\times 10^{86}\\) cc. volume neutron \\(6 \\times 10^{-81}\\) cc. range neutron universe therefore \\(86 - -81 = 167\\) decades. think likely internal combustion engine smaller neutron larger universe? 3.5 decades ☹︎ Perhaps ’re treating distance axis labels one decade. Look carefully see ’s actually factor 100, , two decades. Log-log scalesIn order make graph log-log scales, refine graph scale_y_log10() scale_x_log10(), following …Based log-log plot, answer questions.Question C many engines displacement 1 liter less?    none ☹︎ Perhaps recognized left-tick mark corresponds value 1, data points 1 smaller. one liter corresponds 1000 cc.        7 ☹︎ number engines displacement 10 cc smaller. one liter corresponds 1000 cc.        14 ✓ Right. ’s \\(10^3\\) tick marks 1 liter, since 1 liter 1000 cc.        25 ☹︎ true cut-10 liters. ’s .        randomAnswerOrder ☹︎ FALSE Question D Using log-log plot, many decades BHP spanned data?    4 ☹︎ bad answer, best one either. Notice smallest engine half decade 1 BPM, largest half decade 10,000 BPH        5 ✓        100 ☹︎ number \\(10^{100}\\) called googol roughly many particles (including photons, neutrinos, etc.) universe. Imagine, quite contrary fact, 1 BHP generated burning one molecule fuel per second. many fuel molecules particles universe burned second power engine high end span 100 decades. ","code":"\ngf_point(BHP ~ displacement, data = Engines) %>%\n  gf_refine(scale_x_log10(), scale_y_log10())\nf <- makeFun(A  * x^p ~ x, A=1, p=2.5)\nPts <- tibble::tibble(\n  x = seq(1, 50, length=10),\n  y = f(x),\n  color = rainbow(length(x))\n)\n\nP <- slice_plot(f(x) ~ x, domain(x=c(0,50))) %>%\n  gf_point(y ~ x, color=~color, data = Pts) %>%\n  gf_refine(scale_color_identity())\nP\nP %>%\n  gf_refine(scale_y_log10(), scale_x_log10())## Warning: Transformation introduced infinite values in continuous y-axis## Warning: Transformation introduced infinite values in continuous x-axis\ngf_point(BHP ~ displacement, data = Engines) %>%\n  gf_lims(y  = c(0, 30000))\ngf_point(BHP ~ displacement, data = Engines) %>%\n  gf_refine(scale_x_log10())\ngf_point(BHP ~ displacement, data = Engines) %>%\n  gf_refine(scale_x_log10(), scale_y_log10())"},{"path":"magnitudes.html","id":"magnitude-scales","chapter":"14 Magnitudes","heading":"14.6 Magnitude scales","text":"Plotting logarithm quantity gives visual display magnitude quantity labels axis magnitude. useful graphical technique label axis original quantity, letting position axis show magnitude.illustrate, Figure ??(left) log-log graph horsepower versus displacement internal combustion engines reported Engines data frame. points admirably evenly spaced, hard translate scales physical quantity. right panel Figure ?? shows exactly data points, now scales labeled using original quantity.tick marks vertical axis left pane labeled 0, 2.5, 5.0, 7.5, 10. doesn’t refer horsepower , logarithm horsepower. right pane tick labels horsepower positions marked 1, 10, 100, 1000, 10000.even splits 0-100 scale appropriate logarithmic scales. One reason 0 logarithmic scale first place since \\(\\log(0) = -\\infty\\).Another reason 1, 3, 10 pretty close even split logarithmic scale running 1 10. ’s something like :’s nice labels show round numbers. ’s also nice evenly spaced along axis. 1-2-3-5-10 convention good compromise; almost evenly separated space yet showing simple round numbers.Question Consider axis scales shown . kind scale horizontal axis?linear ✓ can see given length along axis corresponds arithmetic difference regardless axis. distance 0 50 exactly difference 50 100, distance 150 200. logarithmic ☹︎ clue axis logarithmic zero marked. log zero \\(-\\infty\\), can’t appear actual graph. Another key whether scale shows doubling behavior. distance 50 100 represents one doubling: 100 twice 50. scale logarithmic, moving forward distance 100 bring 200. ’s happens . semi-logarithmic ☹︎ “Semi-logarithmic” single axis two axes: horizontal vertical. means one axis linear logarithmic. log-log ☹︎ “Log-log” single axis two axes. means horizontal vertical axes logarithmic. Question B kind scale vertical axis?linear ☹︎ Measure distance 30 50. scale linear, moving distance 50 bring 70, moving distance bring 90. can see instead reaching 90, ’d reach something greater 100 scale. scale linear. logarithmic ✓ semi-logarithmic ☹︎ “Semi-logarithmic” single axis two axes: horizontal vertical. means one axis linear logarithmic. log-log ☹︎ “Log-log” single axis two axes. means horizontal vertical axes logarithmic. Question C Given answers previous two questions, kind plot made frame displayed top question?data frame SSA_2007 comes [US Social Security Administration(https://www.ssa.gov/oact/STATS/table4c6.html) contains mortality US function age sex. (“Mortality” refers probability dying next year.)Open sandbox copy following scaffolding see organization data.understand data organization, delete old scaffolding insert :\n::: {scaffolding}slight mistake way command written,\nerror message generated. figure ’s wrong, read error message, check variable names, successfully make plot.\n:::Question ) mistake plotting command code box?Variable names didn’t match ones data. ✓ tilde argument color = ~ sex ☹︎ color = argument right. value used, ~ sex, one-sided formula used things like color, shape, transparency, …. data frame name spelled wrong. ☹︎ . function gf_point(). ☹︎ . gf_point() one commonly used plotting functions Essay question tmp-11: B) ’s obvious (simple) message plot?Now going use semi-log log-log scales look mortality data . , use gf_refine() function.Fill __and_so_on__ details correctly run command sandbox.written, vertical horizontal axes log scales. may want end.Arrange plotting command make semi-log plot mortality versus age. Interpret plot answer following questions. Note labels along vertical axis often called “decade labels.”Question B level mortality year 0 life much greater year 1 ?twice large. ☹︎ C) Hint: much change successive labels y axis? five times large ☹︎ C) Hint: much change successive labels y axis? 10 times large ✓ 100 times large ☹︎ C) Hint: much change successive labels y axis? Question C D) Near age 20, mortality males much compared females?Less twice large. ☹︎ Hint: Due nature logs, difference half decade corresponds change \\(\\sqrt{10}\\). bit three times large ✓ 8 times large ☹︎ Hint: Due nature logs, difference half decade corresponds change \\(\\sqrt{10}\\). 12 times large ☹︎ Hint: Due nature logs, difference half decade corresponds change \\(\\sqrt{10}\\). Question D E) ages 40 80, mortality change age?stays . ☹︎ curve sloping , isn’t ? increases straight line. ☹︎ fair say logarithm mortality. straight line log mortality means mortality increasing exponentially. increases exponentially. ✓ increases, decreases, increases . ☹︎ Interesting say function clearly monotonically increasing age 30. Remake plot mortality vs age , time put log-log axes. sign power-law relationship shows straight line log-log axes.Question E F) ages 40 80 increase mortality better modeled exponential power-law process?Power-law ☹︎ ’s hard find straight line log-log plot. Exponential ✓ Right. graph much closer straight line semi-log scales log-log scales. reason prefer one . ☹︎ One much closer straight line . \n","code":"\ngf_point(log(BHP) ~ log(displacement), data = Engines)\ngf_point(BHP ~ displacement, data = Engines) %>%\n  gf_refine(scale_y_log10(), scale_x_log10()) 1              2            3          5            10     x\n|----------------------------------------------------|\n0               1/3         1/2        7/10          1     log(x)\ndata(SSA_2007)\nSSA_2007\ndata(SSA_2007)\ngf_point(mortality ~ age, color = ~ sex, data = SSA_2007)gf_point( __and_so_on__) %>%\n  gf_refine(\n    scale_y_log10(),\n    scale_x_log10()\n  )"},{"path":"magnitudes.html","id":"fractional-digits","chapter":"14 Magnitudes","heading":"14.7 Fractional digits (optional)","text":"far, digit() function tabular form:’s point-plot presentation table:\nFigure 14.1: Connecting data points digit function make continuous function.\n’ve imagined digits() continuous function ’ve connected gaps straight line. Now function output input 0.01 1,000,000, instance, 500,000.angles consecutive line segments give function plotted Figure 14.1 unnatural look. Still, continuous function output input even input listed table.Starting around 1600, two (now famous) mathematicians, John Napier (1550-1617) Henry Briggs (1561-1630) idea filling gaps table. saw pattern numbers \\(\\) \\(b\\) input column table\n\\[ \\text{digit}(\\times b) = \\text{digit}() + \\text{digit}(b)\\]\ntrue even \\(=b\\). instance, digit(10)=1 digit(10\\(\\times\\) 10) = 2.Consider question digit(316.2278)? seems odd question unless realize \\(316.2278 \\times 316.2278 = 100,000\\). Since digit(100000) = 5, must digit(316.2278) = 5/2.Another question: digit(17.7828)? seems crazy, notice \\(17.7828^2 = 316.2278\\). digit(17.78279) = 5/4.happens couple thousand years mathematicians known compute square root number high precision. taking square roots dividing two, ’s easy fill rows digit()-function table. get even rows noticing simple patterns like \\[\\text{digit}(/10) = \\text{digit}() -1  \\ \\ \\\\ \\ \\ \\text{digit}(10 ) = \\text{digit}() + 1\\]additional rows tableYou can play game weeks. asked computer play game half second expanded original digit() table 7975 rows.Figure ?? plots expanded digits() function table.Henry Briggs assistants similar calculation hand. work published 1617 table.\nFigure 14.2: Part first page Henry Briggs table logarithms\ntable called Chilias prima, Latin “First group one thousand.” True name, table gives output digits() inputs 1, 2, 3, …, 998, 999, 1000. instance, can see top row right-column, digits(67) = 1.82607480270082.everyday speech, 67 two digits. authors Chilias prima sensibly didn’t use name “digit()” function. chose something abstract: “logarithm().” Nowadays, function named \\(\\log_{10}()\\). R, function called log10().main use \\(\\log_{10}()\\)/log10() count digits order quickly compare magnitude numbers. difference digits(\\(x\\)) - digits(\\(y\\)) tells many factors 10 separate magnitude \\(x\\) \\(y\\).Another important logarithmic/digit-counting function \\(\\log_2()\\), written log2() R. counts many *binary digits number. us, \\(\\log_2(x)\\) tells many times need double, starting 1, order reach \\(x\\). instance, \\(\\log_2(67) = 6.06609\\), indicates \\(67 = 2\\times 2 \\times 2 \\times 2 \\times 2 \\times 2 \\times 2^{0.06609}\\)\\(\\log_2(x)\\) \\(\\log_{10}(x)\\) proportional one another. One way think count “digits” report results different units, much might report temperature either Celsius Fahrenheit. \\(\\log_2(x)\\) units output bits. \\(\\log_{10}(x)\\) output decades.third version logarithm function called natural logarithm denoted \\(\\ln()\\) math notation simply log() R. ’ll need additional calculus concepts can understand justifies calling \\(\\ln()\\) “natural.”EXERCISE: Compute \\(10^y\\) convert “number digits” number whose digits counted. instance, \\(10^2.5\\) 316.228.EXERCISE: many binary digits 64? 127?","code":"\nlog10(67)## [1] 1.826075"},{"path":"dimensions.html","id":"dimensions","chapter":"15 Dimensions","heading":"15 Dimensions","text":"currently just jumble. Reorganize !Next time ’re family gathering 10-year old cousin, give following math quiz.’s 3 + 2?’s 7 - 3?’s 3 miles + 2 miles?’s 3 miles + 2 kilometers?’s 3 miles + 2 kilograms?don’t know cousin, suspect easy time answering (1) (2) correctly. (3), might give correct answer, “5 miles,” just say “5.” , ’ll follow “5 ?” point ’ll definitely say “miles.”bit harder. might need prompt information 1 kilometer 0.6 miles. , ’s pretty smart, ’ll answer “4.2 miles.”10-year olds pretty creative, ’m sure ’ll answer (5). ask Ph.D. aunt, ’ll answer along lines “silly question,” “’s thing.” ’s true.Consider everyday quantities:60 miles per hour: typical speed driving highway2106 square feet: -bounds area court used singles tennis.375 cubic centimeters: volume canned beverage (US).2.5 gallons per minute: US mandated maximum flow rate water shower head.35 miles per gallon: typical fuel economy small car US.body mass index: measure mass divide square height.Consider measure things:ordinarily use speedometer measure instantaneous car speed police use radar gun. fundamentally, measure distance traveled time used divide distance time.people rely internet information, check local court measuring width (27 feet standard) length course (78). Multiply two.Pour beverage measuring cup read volume. fundamentally, measure circumference can (\\(2 \\pi r\\)), square (\\(4 \\pi^2 r^2\\)) divide \\(4 \\pi\\) get cross section area can. multiply height can.don’t usually monitor water use shower. need , get 5-gallon pail (standard volume plastic pails used many purposes construction), put shower head, measure time takes fill pail. Divide volume time.Record mileage car’s odometer fill car gas. Drive. next get gas, measure new odometer reading volume gas purchased. Divide change odometer reading gas volume. (Europe, divide gas volume change odometer reading.)Weigh . scale usually graduated pounds kilograms: take choice. Measure height; ruler---doorway method works well. divide weight square height.Evidently, makes sense multiply divide different types quantities: feet, gallons, kilometers, kilograms, pounds, hours, …. won’t ever see quantity constructed adding subtracting miles hours gallons square feet. can square feet cube centimeters, can take square root gallon? make sense raise 2 power 3 yards?section mathematical structure combining quantities; kinds mathematical operations legitimate .","code":""},{"path":"dimensions.html","id":"mathematics-of-quantity","chapter":"15 Dimensions","heading":"15.1 Mathematics of quantity","text":"[Fun-10a] Know definition fundamental dimension notation common ones (definition page 241-242)[Fun-10b] Understand derived dimensions formed fundamental dimensions (definition page 241-242)[Fun-10c] Know units ways measuring dimensions derived dimensions.first step understanding mathematics quantity make absolute distinction two concepts , everyday life, used interchangeably: dimension unit.Length dimension. Meters unit length. also measure length microns, mm, cm, inches, feet, yards, kilometers, miles, say nothing furlongs, fathoms, astronomical units (AU), parsecs.Time dimension. Seconds unit time. also measure time micro-seconds, milli-seconds, minutes, hours, days, weeks, months, years, decades, centuries, millenia.Mass dimension. Kilograms unit mass.Length, time, mass called fundamental dimensions. length important area volume. ’s can construct area volume multiplying lengths together. evident consider units area like square-inches cubic centimeters, obscured names units like acre, liter, gallon.’ll use notation L, T, M refer fundamental dimensions. (Electrical charge Q also fundamental dimension, won’t much use examples.)","code":""},{"path":"dimensions.html","id":"compound-dimensions","chapter":"15 Dimensions","heading":"15.2 Compound dimensions","text":"dimensions: volume, force, pressure, energy, torque, velocity, acceleration, . called compound dimensions represent combinations fundamental dimensions, L, T, M. notation combinations involves multiplication division. instance:Volume L \\(\\times\\) L \\(\\times\\) L \\(=\\) L\\(^3\\), “cubic centimeters”Velocity L/T, “miles per hour”Force M L/T\\(^2\\), obscure unless remember Newton’s Second Law \\(\\text{F} = \\text{m}\\,\\text{}\\): “force equals mass times acceleration.” terms dimension, mass M, acceleration L/T\\(^2\\). Multiply two together get dimension “force.”Multiplication division used construct compound dimension fundamental dimensions L, T, M.Addition subtraction never used form compound dimension.Much work understanding dimensions involves overcoming looseness everyday speech. Remember weight scale graduated pounds kilograms. unit kilograms way measuring M, unit pounds way measuring force: M L/T\\(^2\\).Weight mass. makes sense people doesn’t really matter everyday life. ’s venture surface Earth difference shows . person orbit “weightless” person continues mass. weight woman Mars different weight Earth martian mass exactly earthly mass.Another source confusion carried everyday life sometimes measure quantity using different dimensions. can measure volume weighing water; gallon water weighs 8 pounds, liter water mass 1 kg. Serious bakers measure flour weight; casual baker uses measuring cup. can measure water volume length water (--less) constant mass density. 8 pounds gasoline considerably gallon. turns density flour varies substantially depending ’s packed, humidity, etc. matters whether weigh flour baking measure volume. can measure time swing pendulum. measure time successfully different pendula need length, mass.unit conventional amount quantity given dimension. lengths dimensionally, can measured different conventions: inches, hards, meters, … Units dimension can converted unambiguously one . meter exactly quantity length 39.3701 inches, mile length 1609.34 meters. Liters gallons units volume (L\\(^3\\)): gallon 3.78541 liters.hear said kilogram 2.2 pounds. ’s strictly true. kilogram dimension M pound dimension ML/T\\(^2\\). Quantities different dimensions “equal” even legitimately compared one another. Unless bring something else game physically changes situation, instance gravity (dimension acceleration due gravity (dimension \\(\\text{L}/\\text{T}^2\\)). weight kilogram surface Earth 2.2 pounds gravitational acceleration (almost) everywhere surface Earth.’s also potentially confusing sometimes different dimensions used get idea. instance, car gets 35 miles / gallon US (dimension \\(\\text{L}/\\text{L}^3 = 1/\\text{L}^2\\)) use 6.7 liters per 100 kilometers (\\(\\text{L}^3 / L = \\text{L}^2\\)) Europe. car. fuel. Different conventions using different dimensions.[Fun-10d] Understand bracket notation works dimensional arithmetic.Keeping track various compound dimensions can tricky. many people, ’s easier keep track physical relationships involved use knowledge put together dimensions appropriately. Often, relationship can described using specific calculus operations, knowing dimensions units helps use calculus successfully.’ll use specific bracket notation translate words concept dimension. instance, [length] = L, [mass] = M, [time] = T, [inches] = L, …Easy compound dimensions likely already know:[Area] \\(= \\text{L}^2\\). corresponding units remind : “square feet,” “square miles,” “square centimeters.”[Volume] \\(= \\text{L}^3\\). Units remind : “cubic centimeters,” “cubic feet,” “cubic yards.” (landscapers informally call “yard,” instance “10 yards topsoil” properly called “10 cubic-yards topsoil.”)[Velocity] \\(= \\text{L}/\\text{T}\\). Units: “miles per hour,” “inches per second.”[Momentum] \\(= \\text{M}\\text{L}/\\text{T}\\). Units: “kilogram meters per second.”Anticipating return section reference, ’ve also added dimensions can understood relevant calculus operations.acceleration: [Calculus: derivative velocity respect time, 2nd derivative position respect time]force: [Calculus: Derivative momentum respect time]energy: [Calculus: Integral force respect length]power: [Calculus: Derivative energy respect time]Density sounds like specific concept, many different kinds densities. common ratio physical amount geometric extent:physical amount: might mass, charge, people, etc.geometric extent: might length, area, volume.examples:“paper weight” mass per area, typically grams-per-square-meter“charge density” amount electrical charge, usually per area volume“lineal density red blood cells” number cells capillary divided length capillary. (Capillaries narrow. Red blood cells go one .)“population density” people per area ground.theory dimensions units developed physical sciences. Consequently fundamental dimensions physics: length, mass, time, electrical current, luminous intensity.Since proper use units important even outside physical sciences, ’s helpful recognize several kinds quantity dimensions.“people”/“passengers”/“customers”/“patients”/“children”/“students”/“professors” — different dimensions really units: fixed translation units.\n“money”: Units dollars (many varieties: US, Canadian, Australian, New Zealand), euros, yuan (synonym: renminbi), yen, pounds (many varieties: UK, Egypt, Syria, Lebanon, Sudan South Sudan), pesos (many varieties), dinar, franc (Swiss, CFA), rand, riyal, rupee, won, many others. Conversion rates depend situation national policy.Examples: Passenger-miles standard unit transport. Passenger-miles-per-dollar appropriate unit economic efficiency transport. Passenger-deaths per million passenger-mile one way describe risk transport.","code":""},{"path":"dimensions.html","id":"arithmetic-with-dimensions","chapter":"15 Dimensions","heading":"15.3 Arithmetic with dimensions","text":"Recall rules arithmetic dimensioned quantities. restate briefly square-bracket notation “dimension .” instance, “dimension \\(b\\)” written \\([b]\\). also write \\([1]\\) stand dimension pure number, , quantity without dimension.","code":""},{"path":"dimensions.html","id":"example-dimensional-analysis","chapter":"15 Dimensions","heading":"15.4 Example: Dimensional analysis","text":"want relate period (T) pendulum ’s length mass. Gravity also plays role. simplicity, ’ll assume pendulum cable rod massless.analysis strategy combine four quantities think play role one total quantity dimensionless. Since dimensionless, can constant regardless mass, length, period, gravity individual situation.\\[\\mbox{[Period]}^\\cdot \\mbox{[Mass]}^b \\cdot \\mbox{[Length]}^c \\cdot \\mbox{[Gravity]}^d = T^\\cdot M^b \\cdot L^c \\cdot L^d \\cdot T^{-2d}\\]\ndimensionless …\\(c = -d\\), cancel L\\(= -2d\\), cancel T\\(b=0\\), ’s mass term, need cancel MLet \\(d=1\\) see happens.\\[ \\frac{\\mbox{Gravity}}{\\mbox{Length}\\cdot \\mbox{Period}^2} \\equiv c\\]\nConsequently\\[Period = \\sqrt{\\frac{\\mbox{Gravity}}{\\mbox{Length}} }\\]\n::: {.forinstructors}\nTest via experimentString knotted 4 equal segments (1 foot ) bolt endHang string first knot: length L=4\nTime 10 oscillations record result\nTime 10 oscillations record resultHang string second knot: length L=3\nTime 10 oscillations record result\n… \nTime 10 oscillations record result\n… onCalculate dimensionless quantity \\(c\\) case. approximately .\n:::activity apply concepts techniques ’re learning answer following question:fast satellite move along orbit?can imagine, answer already known look . point reconstructing already known see totality modeling project, even simple one.textbooks -class demonstrations, students often shown complete, flawless models. reality, model construction matter trial error. Whoops! ’re supposed say “modeling cycle.” phrase doesn’t suggest anything “error.” reality, modelers make mistakes, operate misconceptions, collect erroneous data, misunderstand purpose building model, make sorts mistakes. cope unhappy situation, good modelers constantly checking testing models inconsistencies.start, haveA good idea eventual answer . Often, idea comes somewhat vague imprecise knowledge. example, may heard takes satellite low orbit 90 minutes complete one circuit Earth. may also know length equator roughly 40,000 kilometers. (actually original definition meter.) velocity distance traveled time, satellite low orbit velocity roughly \\(40000 / 90\\) km/minute, comes 7400 meters/second.good idea eventual answer . Often, idea comes somewhat vague imprecise knowledge. example, may heard takes satellite low orbit 90 minutes complete one circuit Earth. may also know length equator roughly 40,000 kilometers. (actually original definition meter.) velocity distance traveled time, satellite low orbit velocity roughly \\(40000 / 90\\) km/minute, comes 7400 meters/second.theory relates want know already know. purposes, theory comes directly Isaac Newton 1680s: laws motion theory universal gravitation.theory relates want know already know. purposes, theory comes directly Isaac Newton 1680s: laws motion theory universal gravitation.theoryWe won’t assume anything vague understanding Newton’s laws theory gravitation. diagram shows situation schematically.satellite traveling clockwise along curved trajectory encircling Earth. position satellite shown several times numbered blue dots. Let’s focus satellite time 1.satellite object motion. Newton’s First Law (“Lex ”) stated 1687 book, Philosophiae Naturis Principia Mathematica (Mathematical principles natural philosophy) p.12Translating English, isLaw : Every body persists state rest uniform motion straight line, unless compelled change motion forces impressed upon .dashed line connecting points labeled 1 2’ shows path satellite follow forces impressed upon .Yet force impressed satellite: gravitational attraction Earth satellite. force accelerates satellite perpendicular orbit (toward center Earth) causing satellite follow curved path rather straight path deep space. acceleration satellite traveling constant speed orbit depends velocity \\(v\\) satellite radius \\(r\\) orbit.Task #1: Let \\(A_1\\) acceleration needed keep satellite circular orbit. Find plausible relationship \\(A_1\\), \\(r\\), \\(v\\). One possibility relationship general product form \\[A_1 = v^n\\ r^m .\\] Use dimensional analysis find \\(n\\) \\(m\\). Recall acceleration dimension L/T\\(^{2}\\), velocity dimension \\(L/T\\) radius dimension L.determine \\(n\\) \\(m\\), write relationship \\(A_1\\) function \\(r\\) \\(v\\).know, gravity pulls objects toward center Earth. acceleration \\(A_2\\) due gravity object distance \\(r\\) enter Earth proportional mass Earth known \\[A_2  = G\\ M_e/r^2\\]\n\\(G\\) constant proportionality \\(M_e\\) mass Earth.order satellite stay orbit, two accelerations \\(A_1\\) (’s needed stay orbit) \\(A_2\\) (Earth’s gravity provides) must equal.Task #2: Set expression \\(A_1\\) equal expression \\(A_2\\) solve velocity \\(v\\) satellite (original objective exercise). answer involve \\(G\\), \\(M_e\\), \\(r\\).Use known numerical values \\(G\\) \\(M_e\\) given next section check answer makes sense.dataThe data come scientific observations made centuries give us numerical values (units) \\(M_e\\) \\(G\\) theory.\\(G\\) universal constant (according Newton’s theory gravitation). quantity given several sources \\[G = 6.67 \\times 10^{−11} m^3 /(s^2 kg).\\]Similarly, mass Earth given \\[M_e  = 5.972 × 10^{24} kg\\]reported facts seem plausible, ’s good practice check. Toward end, checkThe dimension units \\(A_2(v, r)\\) consistent.value \\(A_2\\) Earth’s surface consistent famous value 9.8 m/s\\(^2\\).Task #3: Finishing .Use formula derived \\(v\\) function \\(r\\), \\(G\\), \\(M_e\\) find \\(v\\) satellite low orbit around Earth. (’ll decide “low” means.)always, want calculation way helps spot possible errors. two good practices:already confirmed () formula \\(v\\) function \\(r\\), \\(G\\), \\(M_e\\) dimensionally consistent. plug numerical values \\(r\\), \\(G\\), \\(M_e\\), make sure keep track units explicitly result get proper units velocity.Compare result rough estimate \\(v\\) satellites low orbit made beginning activity. discrepancy, review initial rough estimate well gravity-based derivation \\(v\\) figure inconsistency comes . fix .","code":"o-------o-------o-------o-------Bolt"},{"path":"dimensions.html","id":"conversion-flavors-of-1","chapter":"15 Dimensions","heading":"15.5 Conversion: Flavors of 1","text":"Numbers dimensionless necessarily unitless. Failure accept distinction one prime reasons people trouble figuring convert one unit another.1 favorite elementary school students multiplication division tables completely simple. Anything times one, anything divided one, simply thing. Addition subtraction pretty simple, , ’s concern .comes quantities, ’s just one one many. often look nothing like numeral 1. examples 1 quantity:\\(\\frac{180}{\\pi} \\frac{\\text{degrees}}{\\text{radians}}\\)\\(\\frac{180}{\\pi} \\frac{\\text{degrees}}{\\text{radians}}\\)\\(0.621371 \\frac{\\text{mile}}{\\text{kilometer}}\\)\\(0.621371 \\frac{\\text{mile}}{\\text{kilometer}}\\)\\(3.78541 \\frac{\\text{liter}}{\\text{gallon}}\\)\\(3.78541 \\frac{\\text{liter}}{\\text{gallon}}\\)\\(\\frac{9}{5} \\frac{^\\circ F}{^\\circ C}\\)\\(\\frac{9}{5} \\frac{^\\circ F}{^\\circ C}\\)\\(\\frac{1}{12} \\frac{\\text{dozen}}{\\text{item}}\\)\\(\\frac{1}{12} \\frac{\\text{dozen}}{\\text{item}}\\)like call others different flavors one.every example, dimension numerator matches dimension denominator. [feet / meter] L/L = 1. [cups / pint] L3/L3 = 1. [miles/hour / ft per sec] = L/T / L/T = 1. quantities units dimension.’s helpful think conversion units matter multiplying appropriate flavor 1. conversion change dimension quantity render new units.Example: Convert 100 feet-per-second miles-per-hour. First, write quantity converted fraction along side , write desired units conversion. case \\[100 \\frac{\\text{feet}}{\\text{second}} \\ \\ \\ \\text{} \\ \\ \\ \\frac{\\text{miles}}{\\text{hour}}\\]First, ’ll change feet miles. can accomplished multiplying flavor one units miles-per-foot. number give flavor one? One mile 5280 feet, \\[\\frac{1}{5280} \\frac{\\text{miles}}{\\text{foot}}\\] flavor one.Next, need flavor one turn \\(\\frac{1}{\\text{second}}\\) \\(\\frac{\\text{1}}{\\text{hour}}\\). form \\(\\frac{\\text{second}}{\\text{hour}}\\). number give flavor one units. One hour 3600 seconds, \\[3600 \\frac{\\text{second}}{\\text{hour}}\\] flavor one.Multiplying carefully selected flavors one initial quantity, get \\[\n\\frac{1}{5280} \\frac{\\text{miles}}{\\text{foot}} \\times 3600 \\frac{\\text{second}}{\\text{hour}}\\times 100 \\frac{\\text{feet}}{\\text{second}} = 100 \\frac{3600}{5280} \\frac{\\text{miles}}{\\text{hour}} = 68.18 \\frac{\\text{miles}}{\\text{hour}}\\]","code":""},{"path":"dimensions.html","id":"dimensions-and-linear-combinations","chapter":"15 Dimensions","heading":"15.6 Dimensions and linear combinations","text":"Low-order polynomials useful way constructing model functions. polynomial linear combination monomials. instance, suppose want model yield corn field per inch rain growing season, call corn(rain). output units bushels (corn). input units inches (rain). second-order polynomial appropriate reasons discussed Chapter ??.\\[\\text{corn(rain)} \\equiv a_0 + a_1\\, \\text{rain} + \\frac{1}{2} a_2\\, \\text{rain}^2\\]\ncourse, addition linear combination make sense three terms \\(a_0\\), \\(a_1\\,\\text{rain}\\), \\(a_2\\, \\text{rain}^2/2\\) dimension. clearly \\([\\text{rain}] \\neq [\\text{rain}^2]\\). order things work , scalars must dimension. know output function dimension \\([\\text{volume}] = \\text{L}^3\\). Thus, \\([a_0] = \\text{L}^3\\).\\([a_1]\\) must different, cancel \\([\\text{rain}] = \\text{L}\\) produce \\(\\text{L}^3\\). Thus, \\([a_1] = \\text{L}^2\\).Finally, \\([a_2] = \\text{L}\\). Multiplying \\([\\text{rain}]^2\\) give required \\(\\text{L}^3\\)everyday communication well domains construction, geography, navigation, astronomy measure angles degrees. 90 degrees right angle. mathematics, unit angle radians right angle 1.5708 radians. (1.5708 decimal version \\(\\pi/2\\).) conversion function, ’ll call raddeg(), \\[\\mbox{raddeg}(r) \\equiv \\frac{180}{\\pi} r\\] function converts degrees radians, ’ll call degrad() similar: \\[\\mbox{degrad}(d) \\equiv \\frac{\\pi}{180} d\\]\n(Incidentally, \\(\\frac{180}{\\pi} = 57.296\\) \\(\\frac{\\pi}{180} = 0.017453\\).)traditional notation, trigonometric functions \\(\\sin()\\) \\(\\tan()\\) can written argument either degrees radians. instance, \\(\\sin(90^\\circ) = \\sin\\left(\\frac{\\pi}{2}\\right)\\). Similarly, inverse functions like \\(\\arccos()\\) units output specified. works always human intervene written expression eventual computation. computer, valid expression like sin(90 deg) (although good !). angles always given radians. consistency admirable, people always consistent. common source computer bugs angles degrees handed functions like \\(\\sin()\\) output \\(\\acos()\\) (wrongly) interpreted degrees rather radians.Function composition rescue!Consider function given [Wikipedia article position sun] (seen Earth)18.\n\\[\\delta_\\odot(n) \\equiv - 23.44^\\circ \\cdot \\cos \\left [ \\frac{360^\\circ}{365} \\cdot \\left ( n + 10 \\right ) \\right ]\\]\n\\(n\\) zero midnight marking New Years increases 1 per day. (\\(n+10\\) translates New Years back 10 days, day winter solstice.) \\(\\delta_\\odot()\\) gives declination sun: latitude pieced imagined line connecting centers earth sun.Wikipedia formula well written uses familiar numbers help reader see formula comes . 365 recognizably length year days. \\(360^\\circ\\) angle traversed making full cycle around circle. \\(23.44^\\circ\\) less familiar, student geography might recognize latitude Tropic Cancer, latitude farthest north sun directly overhead noon (day summer solstice).’s world trouble programmer implements formula :::NEED INSERT FORMULAS MMACFor mathematical operation, identify operation valid invalid according rules dimensional arithmetic.Question tmp-12: Formula 25 MMAC p. 259, choose rule () violated.Addition Subtraction rule [numerator denominator valid subtractions, dimension L T respectively.]Addition Subtraction rule [numerator denominator valid subtractions, dimension L T respectively.]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Exponential [’s exponent .]Exponential [’s exponent .]’s valid. rules violated. (+) []’s valid. rules violated. (+) []Question tmp-13: Formula 26 MMAC p. 259, choose rule () violated.Addition Subtraction rule [addition subtraction .]Addition Subtraction rule [addition subtraction .]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Exponential [’s exponent .]Exponential [’s exponent .]’s valid. rules violated. (+) []’s valid. rules violated. (+) []Question tmp-14: Formula 27 MMAC p. 259, choose rule () violated.Addition Subtraction rule [addition formula.]Addition Subtraction rule [addition formula.]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Exponential (+) [exponent 4 ft / 3 g, dimension L / M. Exponents must always dimension [1].]Exponential (+) [exponent 4 ft / 3 g, dimension L / M. Exponents must always dimension [1].]’s valid. rules violated. []’s valid. rules violated. []Question tmp-15: Formula 28 MMAC p. 259, choose rule () violated.Addition Subtraction rule [addition subtraction formula.]Addition Subtraction rule [addition subtraction formula.]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Exponential [exponent 4hr/3min, dimension T/T = [1]. rule satisfied.]Exponential [exponent 4hr/3min, dimension T/T = [1]. rule satisfied.]’s valid. rules violated. (+) []’s valid. rules violated. (+) []Question tmp-16: Formula 29 MMAC p. 259, choose rule () violated.Addition Subtraction rule (+) [can’t subtract M M\\(^2\\). (Strictly speaking, lbs dimension force, \\(M L^2 / T^2\\), can’t subtract force M\\(^2\\) either.]Addition Subtraction rule (+) [can’t subtract M M\\(^2\\). (Strictly speaking, lbs dimension force, \\(M L^2 / T^2\\), can’t subtract force M\\(^2\\) either.]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Exponential [’s exponent .]Exponential [’s exponent .]’s valid. rules violated. []’s valid. rules violated. []Question tmp-17: Formula 30 MMAC p. 259, choose rule () violated.Addition Subtraction rule (+) [can’t add L\\(^3\\) L\\(^2\\).]Addition Subtraction rule (+) [can’t add L\\(^3\\) L\\(^2\\).]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Multiplication Division rule [restrictions multiplication division, formula can hardly violate !]Exponential [Maybe ’re thinking cube-root rule violated, since quantity cube root invalid, root doesn’t anything additionally wrong.]Exponential [Maybe ’re thinking cube-root rule violated, since quantity cube root invalid, root doesn’t anything additionally wrong.]’s valid. rules violated. []\n’s valid. rules violated. []Question tmp-18: ) dimension \\(t\\) T, , \\([t] = T\\). must dimension \\(k\\) arithmetic operation make sense?[1] [$[kt] = $T, violate exponential rule.][1] [$[kt] = $T, violate exponential rule.]T\\(^{ -1}\\) (+) [Right, [k] needs cancel [t] exponention valid.]T\\(^{ -1}\\) (+) [Right, [k] needs cancel [t] exponention valid.]T [$[kt] = \\(T\\)^2$, violate exponential rule.]T [$[kt] = \\(T\\)^2$, violate exponential rule.]None []None []Question tmp-19: B) must dimension \\(c\\) arithmetic operation \\(1 + c \\cdot 2^{kt}\\) make sense?[1] (+) [Right. ’re going add \\(c \\cdot 2^{kt}\\) 1. Since \\([kt] = [1]\\), \\(c\\) also needs dimensionless.][1] (+) [Right. ’re going add \\(c \\cdot 2^{kt}\\) 1. Since \\([kt] = [1]\\), \\(c\\) also needs dimensionless.]T\\(^{-1}\\) []T\\(^{-1}\\) []T [$[kt] = \\(T^2\\), violate exponential rule.]T [$[kt] = \\(T^2\\), violate exponential rule.]Depends dimension \\(2^{kt}\\) [already determined \\([kt] = [1]\\), \\([2^{kt}] = [1]\\).]\nDepends dimension \\(2^{kt}\\) [already determined \\([kt] = [1]\\), \\([2^{kt}] = [1]\\).]surface area \\(S\\) mammal reasonably well approximated function \\[S(M) \\equiv k M ^{2/3}\\] \\(M\\) body mass (kg) constant \\(k\\) depends particular species consideration.Note \\(M^{2/3}\\) allowed arithmetic operation. \\([M] = \\mbox{mass}\\), mass raised non-integer power. properly, expression written \\[\\left(\\frac{M}{1\\  kg}\\right)^{2/3}\\] division “1 kg” renders dimensionless quantity parentheses: \\[\\left[\\frac{M}{1\\  kg}\\right] = 1\\]\norder render quantity dimensionless unitless, \\(M\\) specified kg. usual practice skip “1 kg” business simply say, “\\(M\\) kg.” see notation frequently career take care use indicated units.’ll need open computing sandbox calculations.Question tmp-20: ) Consider baby adult. adult’s mass \\(8\\) times greater baby’s. adult’s surface area …?baby’s []baby’s []1.5 times baby’s []1.5 times baby’s []4 times baby’s (+) []4 times baby’s (+) []8 times baby’s []8 times baby’s []Question tmp-21: B) Consider human body mass 70 kg skin surface area 18,600 cm2. following units constant proportionality \\(k\\) correct?cm\\(^2\\) kg\\(^{-2/3}\\) (+) []cm\\(^2\\) kg\\(^{-2/3}\\) (+) []cm\\(^2\\) [units mass? takes care ?]cm\\(^2\\) [units mass? takes care ?]cm\\(^2\\) kg\\(^{2/3}\\) [multiply 70 kg \\(k\\), need get result \\(cm^2\\).]cm\\(^2\\) kg\\(^{2/3}\\) [multiply 70 kg \\(k\\), need get result \\(cm^2\\).]kg\\(^{-1}\\) [cancel units mass produce \\(cm^2\\) result?]kg\\(^{-1}\\) [cancel units mass produce \\(cm^2\\) result?]Question tmp-22: C) units part (B), value \\(k\\) closest ?1 []1 []10 []10 []100 []100 []1000 (+) []1000 (+) []numerical value constant \\(k\\) changes depending units want express . value found part (C) works masses stated kg skin areas cm\\(^2\\). Suppose want present \\(k\\) units make sense people used talking skin area square inches mass pounds. 1 inch \\(\\approx\\) 2.6 cm. rough--ready way everyday people express , 1 kg \\(\\approx\\) 2.2 lbs. (course, pounds measure force, mass. people use mass. mass 70 kg corresponds 4.8 slugs. Earth’s gravity, 4.8 slugs produces force 154 pounds.)Question tmp-23: Optional challenge) rough numerical value conversion factor produce constant proportionality suitable converting body mass pounds skin area square-inches?0.03 []0.03 []0.3 (+) [\\(k\\) 1000 cm\\(^2\\) kg\\(^{-2/3}\\). convert cm inches, need multiply (1 /2.6 cm)\\(^2\\). convert kg pounds, need multiply (2.2 pounds/ 1 kg)\\(^{-2/3}\\).]0.3 (+) [\\(k\\) 1000 cm\\(^2\\) kg\\(^{-2/3}\\). convert cm inches, need multiply (1 /2.6 cm)\\(^2\\). convert kg pounds, need multiply (2.2 pounds/ 1 kg)\\(^{-2/3}\\).]3 []3 []30 []30 []300 []300 []","code":"\ndec_sun <- makeFun(-23.44 * cos((360/365)*(n-10)) ~ n)"},{"path":"outline-of-block-2.html","id":"outline-of-block-2","chapter":"Outline of Block 2","heading":"Outline of Block 2","text":"section development purposes . included released text.outline established May 17-19, 2021 working sessions USAFA. ’s copied directly Teams document. ’ve made modifications noted [[square brackets]] deletions bold face additions..Revisiting Calculating slope\nNTI:\nAdmin:\nSizeable quiz interlude\n\nOutcomes:\nCalculate slope given two points\nGiven graph function, identify graph slope function \\(s(x)\\)\nGiven graph slope function, identify features original function\n\nReadings: Chapter @ref{difference--change}\nRevisiting Calculating slopeNTI:Admin:\nSizeable quiz interlude\nSizeable quiz interludeOutcomes:\nCalculate slope given two points\nGiven graph function, identify graph slope function \\(s(x)\\)\nGiven graph slope function, identify features original function\nCalculate slope given two pointsGiven graph function, identify graph slope function \\(s(x)\\)Given graph slope function, identify features original functionReadings: Chapter @ref{difference--change}Derivatives\nNTI:\nExplain limits solution problem arbitrary \\(h\\) slope function\n\nTopics:\nShow different definitions slope function \\(s(x)\\) depend \\(h\\) selected\nDescribe derivative limit \\(h \\rightarrow 0\\)\nDerivatives basic modeling functions\nLinear properties derivatives\n[[Derivative number; differentiation operator]] **need introduce operators earlier.\nFunctions arguments R\nIntroduce notation: \\(f'\\), \\(\\frac{df}{dx}\\), \\(\\partial_x f(x)\\), [[$D_x f]]$\nIntroduce NaN Inf\n\nOutcomes:\nFind derivatives basic modeling functions\nKnow basic properties differentiation\nContinue working graphing derivative\n\nReadings: Chapter 17\nDerivativesNTI:\nExplain limits solution problem arbitrary \\(h\\) slope function\nExplain limits solution problem arbitrary \\(h\\) slope functionTopics:\nShow different definitions slope function \\(s(x)\\) depend \\(h\\) selected\nDescribe derivative limit \\(h \\rightarrow 0\\)\nDerivatives basic modeling functions\nLinear properties derivatives\n[[Derivative number; differentiation operator]] **need introduce operators earlier.\nFunctions arguments R\nIntroduce notation: \\(f'\\), \\(\\frac{df}{dx}\\), \\(\\partial_x f(x)\\), [[$D_x f]]$\nIntroduce NaN Inf\nShow different definitions slope function \\(s(x)\\) depend \\(h\\) selectedDescribe derivative limit \\(h \\rightarrow 0\\)Derivatives basic modeling functionsLinear properties derivatives[[Derivative number; differentiation operator]] **need introduce operators earlier.Functions arguments RIntroduce notation: \\(f'\\), \\(\\frac{df}{dx}\\), \\(\\partial_x f(x)\\), [[$D_x f]]$Introduce NaN InfOutcomes:\nFind derivatives basic modeling functions\nKnow basic properties differentiation\nContinue working graphing derivative\nFind derivatives basic modeling functionsKnow basic properties differentiationContinue working graphing derivativeReadings: Chapter 17Relationships functions derivatives Part \nNTIs:\nSplit students /B pairs. graph derivative. B can’t see graph, can talk . B sketch original function based information , can see B’s sketch. reveal answer.\n\nTopics:\nArgmax/Argmin\nMax/min\nCritical points\n\nOutcomes:\nDetermine function’s critical points graphically algebraically\nDetermine whether critical point max min\n\nReadings: 18. doesn’t take much introduce max min graphs, argmax argmin, critical points. reading can quite small.\nRelationships functions derivatives Part INTIs:\nSplit students /B pairs. graph derivative. B can’t see graph, can talk . B sketch original function based information , can see B’s sketch. reveal answer.\nSplit students /B pairs. graph derivative. B can’t see graph, can talk . B sketch original function based information , can see B’s sketch. reveal answer.Topics:\nArgmax/Argmin\nMax/min\nCritical points\nArgmax/ArgminMax/minCritical pointsOutcomes:\nDetermine function’s critical points graphically algebraically\nDetermine whether critical point max min\nDetermine function’s critical points graphically algebraicallyDetermine whether critical point max minReadings: 18. doesn’t take much introduce max min graphs, argmax argmin, critical points. reading can quite small.Relationships functions derivatives Part II\nNTI:\nCurvature. like cup, like frown\n2nd derivative indicates curvature\n\nTopics:\nSecond derivatives slope slope\nConcavity slope slope\n\nReadings: Chapter 18 previous days reading. Maybe add section chains derivatives, especially polynomials, showing eventually go zero.\nRelationships functions derivatives Part IINTI:\nCurvature. like cup, like frown\n2nd derivative indicates curvature\nCurvature. like cup, like frown2nd derivative indicates curvatureTopics:\nSecond derivatives slope slope\nConcavity slope slope\nSecond derivatives slope slopeConcavity slope slopeReadings: Chapter 18 previous days reading. Maybe add section chains derivatives, especially polynomials, showing eventually go zero.Relationships functions derivatives Part III\nTopics:\nKnowing \\(f'(x_0) = 0\\) tells min/max/saddle \\(x_0\\)\n2nd derivative distinguish three\nChain derivatives\n\nOutcomes:\nable find max/min, argmax/argmin given functions graphically.\n**Construct derivative function use findZeros() locate argmax evaluate function get corresponding max\n\nReadings Chapter 18 Still previous two days.\nRelationships functions derivatives Part IIITopics:\nKnowing \\(f'(x_0) = 0\\) tells min/max/saddle \\(x_0\\)\n2nd derivative distinguish three\nChain derivatives\nKnowing \\(f'(x_0) = 0\\) tells min/max/saddle \\(x_0\\)2nd derivative distinguish threeChain derivativesOutcomes:\nable find max/min, argmax/argmin given functions graphically.\n**Construct derivative function use findZeros() locate argmax evaluate function get corresponding max\nable find max/min, argmax/argmin given functions graphically.**Construct derivative function use findZeros() locate argmax evaluate function get corresponding maxReadings Chapter 18 Still previous two days.Continuity, Differentiability, Smoothness, Splines\nTopics:\nSpline piecewise function\nOrder continuity\nDetermine graphically whether function continuous \nDetermine order continuity function\n\nOutcomes\nable determine first derivative function continuous graph function\nable determine second derivative function continuous graph function (taking 1st derivative plotting )\nable demonstrate discontinuities 3rd derivative spline\n\nReadings: Chapter 19\nContinuity, Differentiability, Smoothness, SplinesTopics:\nSpline piecewise function\nOrder continuity\nDetermine graphically whether function continuous \nDetermine order continuity function\nSpline piecewise functionOrder continuityDetermine graphically whether function continuous notDetermine order continuity functionOutcomes\nable determine first derivative function continuous graph function\nable determine second derivative function continuous graph function (taking 1st derivative plotting )\nable demonstrate discontinuities 3rd derivative spline\nable determine first derivative function continuous graph functionBe able determine second derivative function continuous graph function (taking 1st derivative plotting )able demonstrate discontinuities 3rd derivative splineReadings: Chapter 19Differentiation Products composition Functions\nTopics\nIdentifying composite function\nChain rule\nIdentifying product functions\nproduct rule\n\nOutcomes\nIdentify necessary differentiate chain rule\nFind derivative using chain rule\nIdentify necessary differentiate product rule\nFind derivative using product rule\n\nHomework: Save quotient rule HW\nReadings: Chapter 20\nDifferentiation Products composition FunctionsTopics\nIdentifying composite function\nChain rule\nIdentifying product functions\nproduct rule\nIdentifying composite functionChain ruleIdentifying product functionsproduct ruleOutcomes\nIdentify necessary differentiate chain rule\nFind derivative using chain rule\nIdentify necessary differentiate product rule\nFind derivative using product rule\nIdentify necessary differentiate chain ruleFind derivative using chain ruleIdentify necessary differentiate product ruleFind derivative using product ruleHomework: Save quotient rule HWReadings: Chapter 20Partial derivativesPartial derivativesLocal Polynomial Approximation\nNTI:\nKiller application Taylor polynomials Brook Taylor figured tools Newton developed\n\nTopics:\nList benefits approximation specifically benefits quadratic approximation opposed linear approximation\n[Average rate change] moved Block 1 slope function\nTangent Lines\nQuadratic equations\nFactorials\n\nReadings\nLocal Polynomial ApproximationNTI:\nKiller application Taylor polynomials Brook Taylor figured tools Newton developed\nKiller application Taylor polynomials Brook Taylor figured tools Newton developedTopics:\nList benefits approximation specifically benefits quadratic approximation opposed linear approximation\n[Average rate change] moved Block 1 slope function\nTangent Lines\nQuadratic equations\nFactorials\nList benefits approximation specifically benefits quadratic approximation opposed linear approximation[Average rate change] moved Block 1 slope functionTangent LinesQuadratic equationsFactorialsReadingsApproximation point\nNTI:\nR exercise constructing Taylor polynomial computationally\n\nOutcomes:\nCalculate Taylor polynomial\nUse Taylor polynomials simplify mathematical operations (derivatives, limits, etc.)\n\nApproximation pointNTI:\nR exercise constructing Taylor polynomial computationally\nR exercise constructing Taylor polynomial computationallyOutcomes:\nCalculate Taylor polynomial\nUse Taylor polynomials simplify mathematical operations (derivatives, limits, etc.)\nCalculate Taylor polynomialUse Taylor polynomials simplify mathematical operations (derivatives, limits, etc.)Note: don’t touch gradient . Provisionally, ’m moving gradients Block linear algebra.","code":""},{"path":"change-relationships.html","id":"change-relationships","chapter":"16 Change relationships","heading":"16 Change relationships","text":"questions started motion. words describe speed: fast slow. words describe force: strong weak, heavy light. words describe location: far near, long short. relationships among things? time fit , intangible quantity aspects location (long short) speed (quick slow)?Galileo (1564-1642) started ball rolling. son musician music theorist, sense musical time, steady beat intervals. student medicine Pisa, noted swinging pendulums kept reliable time, regardless amplitude swing. accidentally attending lecture geometry, turned mathematics natural philosophy. Inventing telescope, observations put collision course accepted classical truth nature planets. Seeking understand gravity, built apparatus enabled measure accurately position time ball rolling straight ramp. belled gates set mark ball’s passage spaced arithmetically musical time: 1, 2, 3, 4, …. distance gates geometric: 1, 4, 9, 16, …. Thus established mathematical relationship increments time increments position. Time advanced 1, 1, 1, 1, … position 1, 3, 5, 7, …. observed second increments position, increments increments 1, 3, 5, 7, …, evenly spaced: 2, 2, 2, ….Putting observations tabular form, adding columns thefirst increment \\(y(t) \\equiv x(t+1) - x(t)\\) thesecond increment \\(y(t+1) - y(t)\\)Galileo neither mathematics equipment measure motion continuously time. might obvious us now, position function time \\(x(t)\\), little practical significance . discover first increments \\(x\\) something much like slope function.\\[{\\cal D}_t\\, x(t) \\equiv \\frac{x(t + 1) - x(t)}{1}\\]\ndata, observed \\({\\cal D}_t\\, x(t)\\) increases linearly \\(t\\): \\[{\\cal D}_t x(t) = 2 t + 1\\]Calculating second increments \\(x\\) done “slope function slope function,” can call \\({\\cal D}_{tt}\\):\n\\[{\\cal D}_{tt} x \\equiv {\\cal D}_t \\left[{\\cal D}_t x(t)\\right] = 2(t+1) + 1 - (2 t + 1) = 2\\]Newton considered problem continuous time rather Galileo’s discrete time. reframed slope function big increments slope operator \\({\\cal D}_t\\) imagined vanishingly small increments operator shall denote \\(\\partial_t\\) call differentiation.kind question Newton wanted able calculate answer , “find function \\(x(t)\\) whose second increment, \\(\\partial_{tt} x(t) = 2\\)?” approach, called “method fluxions,” became important name became, simply, “Calculus.”next three centuries, calculus evolved set techniques describing motion general-purpose mathematics change. Applying calculus real world involves understanding change relationships quantities. give examples:Electrical power change respect time electrical energy.Birth rate one component change respect time population.Interest, bank interest credit card interest, change repect time assets.Inflation change respect time prices.Disease incidence one component change respect time disease prevalence.Force change respect position energy.question involves pair quantities function time might might quantity/rate--change pair. , say quantity . Feel free look dictionary definition words uncertain .Question Deficit debtDeficit rate change debt respect time. ✓ Debt rate change deficit respect time. ☹︎ rate change pair. ☹︎ Question B water contained flowFlow rate change water contained respect time. ✓ Water contained rate change flow respect time. ☹︎ rate change pair. ☹︎ Question C Interest rate debt owed credit cardInterest rate rate change credit card debut respect time. ✓ Credit card debut rate change interest rate respect time. ☹︎ rate change pair. ☹︎ Question D Rain intensity total rainfallRain intensity rate change total rainfall respect time. ✓ Total rainfall rate change rain intensity respect time. ☹︎ rate change pair. ☹︎ Question E Force accelerationForce rate change acceleration respect time. ☹︎ Acceleration rate change force respect time. ☹︎ rate change pair. ✓ dimension force \\(ML/T^2\\). dimension acceleration \\(L/T^2\\). rate change respect time extra T denominator dimensions. Question F Position accelerationPosition rate change acceleration repect time. ☹︎ Acceleration rate change position respect time. ☹︎ rate change pair. ✓ dimension position \\(L\\). dimension acceleration \\(L/T^2\\). rate change position dimension \\(L/T\\). ’s called ‘velocity.’ Question G Velocity air resistenceVelocity rate change air resistence repect time. ☹︎ Air resistence rate change velocity respect time. ☹︎ rate change pair. ✓ Air resistence force, dimension \\(M L/T^2\\). Velocity dimension \\(L/T\\). rate change velocity respect time acceleration, dimension \\(L/T^2\\). ","code":""},{"path":"change-relationships.html","id":"slopes-and-increments.","chapter":"16 Change relationships","heading":"16.1 Slopes and increments.","text":"mathematical tools Newton’s day basis today’s conventional high-school curriculum.19 today completely different tools based ability arithmetic function evaluation quickly computers. ’re going use new tools explore problem relating slope-function operator \\({\\cal D}_t\\) differential operator \\(\\partial_t\\). great advantage able look backwards can focus functions experience reveals widely useful: basic modeling functions.goal section discover slope functions basic modeling functions. Recall slope-function operator can written ratio rise--run:\n\\[{\\cal D}_t x(t) \\equiv \\frac{x(t+h) - x(t)}{h}\\] \\(h\\) length “run.” ’ll start two basic modeling functions considerable “personality”: sinusoid (sin()) sigmoid (pnorm()).\nFigure 16.1: naked sinusoid sigmoidal functions. vertical blue line added mark input \\(t=0\\)\n’ll use computer construct slope functions sinusoid sigmoid, ’ll call Dsin() Dsigma() respectively.tilde expression handed makeFun(), ’ve identified t name input given “small” default value h parameter. R recognizes Dsin() Dsigma() functions two variables, t h, can see parenthesized argument list functions.nuisance, since using slope functions need always think h, number ’d like describe simply “small,” always need provide numerical value. Let’s look Dsin() Dsigma() range values h, Figure 16.2.\nFigure 16.2: slope functions sinusoid sigmoid. curve shows slope function particular numerical choice h. panels show \\(h=2, 1, 0.5, 0.1, 0.01, 0.001, 0.0001, 0.00001, 0.000001\\).\nobservations numerical experiment:\\(h\\) gets small, slope function doesn’t depend exact value \\(h\\).\nprovide way us, eventually, discard \\(h\\) slope function need \\(h\\) argument.\\(h\\) gets small, slope function doesn’t depend exact value \\(h\\).provide way us, eventually, discard \\(h\\) slope function need \\(h\\) argument.small \\(h\\), \\({\\cal D}_t \\sin(t) = \\sin(t + \\pi/2) = \\cos(t)\\). , taking slope function sinusoid gives another sinusoid, shifted left \\(\\pi/2\\) original. , plain words, cosine slope function sine.small \\(h\\), \\({\\cal D}_t \\sin(t) = \\sin(t + \\pi/2) = \\cos(t)\\). , taking slope function sinusoid gives another sinusoid, shifted left \\(\\pi/2\\) original. , plain words, cosine slope function sine.small \\(h\\), \\({\\cal D}_t \\text{pnorm}(t) = \\text{dnorm(t)}\\). , hump function slope function sigmoid function.small \\(h\\), \\({\\cal D}_t \\text{pnorm}(t) = \\text{dnorm(t)}\\). , hump function slope function sigmoid function.can confirm last two statements comparison original functions, especially alignment peaks slope functions respect peak sinusoid half-way point sigmoid.Now consider slope functions logarithm exponential functions.\nFigure 16.3: slope functions logarithm exponential.\nnumerical experiments logarithm exponential functions evidence , \\(h\\) gets small, slope function doesn’t depend \\(x\\). , find :small \\(h\\), slope function logarithm power-law function: \\({\\cal D}_t \\ln(t) = \\frac{1}{t}\\).small \\(h\\), slope function exponential exponential : \\({\\cal D}_t e^x = e^x\\).can confirm evaluating slope function exponential \\(t=0\\) \\(t=1\\), slope function logarithm \\(t= 2, 1, 1/2, 1/4, 1/8.\\)numerical experiments naked modeling functions reveal pattern: slope function naked modeling functions tend similar naked modeling functions.list experimentally determined slope functions (small \\(h\\)) ’re ready start using slope functions without use left-shift combinations like \\(f(t+h) - f(t)\\).exercise, given series intervals get smaller smaller. job calculate average rate change function \\(f(x) \\equiv x^2\\) intervals. width intervals approach zero, average rates change become better approximations instantaneous rates change. use results calculate make informed estimate instantaneous rate change.. Use three intervals estimate instantaneous rate change \\(\\partial_x f(x=3)\\)\n- [3, 3.1]\n- [3, 3.01]\n- [3, 3.001]B. Use three intervals estimate instantaneous rate change \\(\\partial_x f(x=5)\\)\n- [4.9, 5]\n- [4.99, 5]\n- [4.999, 5]C. Use three intervals estimate instantaneous rate change \\(\\partial_x f(x=-2)\\)\n- [-2, -1.9]\n- [-2, -1.99]\n- [-2, -1.999]","code":"\nDsin   <- makeFun((  sin(t+h) -   sin(t))/h ~ t, h=0.1)\nDsigma <- makeFun((pnorm(t+h) - pnorm(t))/h ~ t, h=0.1)\nDsin## function (t, h = 0.1) \n## (sin(t + h) - sin(t))/h\nDsigma## function (t, h = 0.1) \n## (pnorm(t + h) - pnorm(t))/hinterval <- c(__start__ , __end__ )\nf <- makeFun(x^2 ~ x)\ndiff(f(interval)) / diff(interval)"},{"path":"change-relationships.html","id":"slopes-and-motion","chapter":"16 Change relationships","heading":"16.2 Slopes and motion","text":"worked theory slope functions, Newton ready express laws motion continuous time. expressing position \\(x(t)\\), familiar concepts velocity force terms slope functions position “quantity matter,” call “mass.”Velocity slope function position: \\(v(t) \\equiv {\\cal D}_t x(t)\\).Net force slope function velocity times mass: \\(F(t) \\equiv m {\\cal D}_t v(t)\\)take mass formulation, give name specifically slope function velocity; call acceleration.Acceleration slope function velocity: \\((t) \\equiv {\\cal D}_t v(t)\\).acceleration concept, can define net force mass times acceleration.used net force quantity related mass slope function velocity. different sources forces add can cancel . Famously, Newton formulated law universal gravitation ascribed force masses proportional product two masses inversely proportional square distance . mass table net force , since table pushes back (push = force) mass cancel force due gravity. “Net force” takes cancellation account.","code":""},{"path":"change-relationships.html","id":"differentiation","chapter":"16 Change relationships","heading":"16.3 Differentiation","text":"Differentiation process transforming function produce another function. several traditional notations differentiation function named \\(f()\\), instance:Leibnitz: \\(\\frac{df}{dx}\\)Partial: \\(\\frac{\\partial f}{\\partial x}\\)Euler: \\(D_x f\\)One-line: \\(\\partial_x f\\) (hybrid partial Euler notation)Newton (“dot”): \\(\\dot{f}\\)Lagrange (“prime”): \\(f'\\)book, mainly use one-line notation, \\(\\partial_x f\\), means exactly Leibnitz Partial notations, much widely used textbooks.’ve studied calculus , likely seen \\(f'\\) notation. admirably concise viable narrow circumstance: functions take single input. \\(f'\\) leaves means specify crucial aspect differentiation, -respect-variable. general situation differentiation involves functions one variables, example, \\(g(x, y, z)\\). functions, need specify -respect-variable. instance, can differentiate \\(g()\\) three different ways, way incrementing one another three inputs:\\[\\partial_z g(x, y, z) \\equiv \\frac{g(x, y, z+h) - g(x, y, z)}{h}\\\\ \n\\ \\\\\n\\partial_x g(x, y, z) \\equiv \\frac{g(x+h, y, z) - g(x, y, z)}{h}\\\\ \n\\ \\\\\n\\partial_y g(x, y, z) \\equiv \\frac{g(x, y+h, z) - g(x, y, z)}{h}\\]point studies, haven’t seen might choose differentiate function respect one variable another. come time. want set notation won’t narrow options.Leibnitz Partial notations explicit identifying function -respect--variable. example, using Partial differentiation notation, three ways differentiating example function \\(g(x, y, z)\\) labeled :\\[\\frac{\\partial f}{\\partial x},\\ \\ \\ \\frac{\\partial f}{\\partial y},\\ \\ \\text{}\\ \\ \\frac{\\partial f}{\\partial z}\\]R/mosaic computer differentiation longer explicit:Notice R/mosaic operator named D() function. follows pattern makeFun() slice_plot() contour_plot(): first argument tilde expression, instance g(x, y, z) ~ x, identifies mathematical function work (g()) name -respect-input function. R/mosaic notation makes clear differentiation operation function. D() operator takes function input produces output another function. ’ve seen similar behavior , say, slice_plot(), takes function input produces graphics output. D() slice_plot() need know identity -respect-variable well function work . ’s pieces input packaged tilde expression.’re calling D() operator rather function. reason purely communication people. many “functions” calculus course thought helpful distinguish kinds functions take quantities input produce quantity output, functions take function input produce function output. sorts called “functions” R terminology. sentence like, “Differentiation function takes function input produces function output,” true though , dizzying.fact mathematical scientific life variety notations used differentiation. extent, reflects historical precedence , honest, nationalistic European politics 18th century. make sense mathematical writing many areas calculus used, recognize . skill enhanced also memorize names different styles. ’s different pattern English multiple words sort object, instance: car, automobile, junker, ride, wheels, crate, jalopy, limo, motor car, horseless carriage.days carriages pulled horses, phrase “horseless carriage” made useful distinction. Today, horses rarely seen road, make sense trim notation essentials: horseless cariage. Think \\(\\partial_x\\) sort minification.20Recall function monotonically increasing given domain function’s slope positive everywhere domain. monotonically decreasing function, similarly, negative slope everywhere domain. slope zero, positive places negative others, function neither monotonically increasing decreasing.following graphs shows derivative function \\(f(x)\\). (Note: graph doesn’t show \\(f()\\) rather function \\(\\partial_x f()\\) derivative \\(f()\\).) graph, say whether function \\(f()\\) monotonically increasing, monotonically decreasing, neither. (Note horizontal scale every graph, vertical scale can different one scale another.)Question Function …monotonically increasing ✓ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) constant ☹︎ constant function derivative everywhere 0. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. Can’t tell info provided ☹︎ case tell derivative positive negative. Question B Function B …monotonically increasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically increasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ✓ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ✓ monotonically increasing function function everywhere \\(> 0\\) constant ☹︎ constant function derivative everywhere 0. constant ☹︎ constant function derivative everywhere 0. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. Can’t tell info provided ☹︎ case tell derivative positive negative. \nQuestion C Function C …Can’t tell info provided ☹︎ case tell derivative positive negative. \nQuestion C Function C …monotonically increasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically increasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) constant ☹︎ constant function derivative everywhere 0. constant ☹︎ constant function derivative everywhere 0. non-monotonic ✓ non-monotonic function goes , hence derivative positive places negative others. non-monotonic ✓ non-monotonic function goes , hence derivative positive places negative others. Can’t tell info provided ☹︎ case tell derivative positive negative. \nQuestion D Function D …Can’t tell info provided ☹︎ case tell derivative positive negative. \nQuestion D Function D …monotonically increasing ✓ monotonically increasing function function everywhere \\(> 0\\) monotonically increasing ✓ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) constant ☹︎ constant function derivative everywhere 0. constant ☹︎ constant function derivative everywhere 0. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. Can’t tell info provided ☹︎ case tell derivative positive negative. \nQuestion E Function E …Can’t tell info provided ☹︎ case tell derivative positive negative. \nQuestion E Function E …monotonically increasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically increasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) constant ☹︎ constant function derivative everywhere 0. constant ☹︎ constant function derivative everywhere 0. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. Can’t tell info provided ✓ case tell derivative positive negative. \nQuestion F Function F …Can’t tell info provided ✓ case tell derivative positive negative. \nQuestion F Function F …monotonically increasing ✓ monotonically increasing function function everywhere \\(> 0\\) monotonically increasing ✓ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) constant ☹︎ constant function derivative everywhere 0. constant ☹︎ constant function derivative everywhere 0. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. Can’t tell info provided ☹︎ case tell derivative positive negative. \nCan’t tell info provided ☹︎ case tell derivative positive negative. graphs various functions. right column shows functions named \\(f_1()\\), \\(f_2()\\), . left column shows functions \\(()\\), \\(B()\\), \\(C()\\), . functions right derivative function left, functions left corresponding derivative right. task: Match function left ’s derivative right.Question derivative Function () following:    f1() ☹︎        f2() ✓        f3() ☹︎        f4() ☹︎        shown ☹︎ Question B derivative Function B() following:    f1() ✓        f2() ☹︎        f3() ☹︎        f4() ☹︎        shown ☹︎ Question C derivative Function C() following:    f1() ☹︎        f2() ☹︎        f3() ☹︎        f4() ✓        shown ☹︎ Question D derivative Function D() following:    f1() ☹︎        f2() ☹︎        f3() ☹︎        f4() ☹︎        shown ✓ left column graphs shows functions (), B(), C(), D(). right column shows functions dd1(), dd2(), . Find function () right column corresponds 2nd derivative function left column.Remember concepts “concave ” (smile!) “concave ” (frown). values \\(x\\) 2nd derivative given function positive, given function concave . 2nd derivative negative, given function concave .Question second derivative Function () following:    dd1() ☹︎        dd2() ☹︎        dd3() ☹︎        dd4() ✓        shown ☹︎ Question B second derivative Function B() following:    dd1() ☹︎        dd2() ✓        dd3() ☹︎        dd4() ☹︎        shown ☹︎ Question C second derivative Function C() following:    dd1() ☹︎        dd2() ☹︎        dd3() ☹︎        dd4() ☹︎        shown ✓ Question D second derivative Function D() following:    dd1() ✓        dd2() ☹︎        dd3() ☹︎        dd4() ☹︎        shown ☹︎ ","code":"\nD(g(x, y, z) ~ x)\nD(g(x, y, z) ~ y)\nD(g(x, y, z) ~ z)"},{"path":"change-relationships.html","id":"dimension-of-derivatives","chapter":"16 Change relationships","heading":"16.4 Dimension of derivatives","text":"Recall differencing operator takes input function returns output another function takes kind input, produces different kind output.instance, suppose function pressure() takes altitude input (km) returns pressure (kPA–air pressure sea level 100 kiloPascal).derivative function, let’s call d_pressure(), also takes input km, produces output kPA per km: rate.can see examining differencing operator :\\[{\\cal D}_x f(x) \\equiv \\frac{f(x+h) - f(x)}{h}\\]Remember notation dimensions. quantity \\(x\\) dimensions denoted \\([x]\\). (nothing saying, “Pronounce ‘\\([x]\\)’ ‘dimensions \\(x\\).’”)\ninput \\(f()\\) dimension \\([x]\\). output \\(f()\\) dimension \\([f(x)]\\).dimension \\(h\\)? (write question simply, \"\\([h]\\)?) Since operator adds \\(x + h\\), must \\([h] = [x]\\).dimension \\(f(x + h) - f(x)\\)? (, ask simply, “\\([f(x+h) - f(x)]\\)?”) Since ’re subtracting two quantities, two quantities must dimension result also dimension. \\([f(x+h) - f(x)] = [f(x)]\\).output function \\(df(x)\\) produced \\(\\mbox{Diff}(f)\\) therefore dimension \\([f(x)] / [x]\\).. given function \\(N(y)\\), population Netherlands year \\(y\\).Dimension input \\(N(y)\\)?Dimension output \\(N(y)\\)?Dimension input \\(\\partial_y N(y)\\)?Dimension output \\(\\partial_y N(y)\\)?B. given function \\(p(u)\\), net profit manufactured good function number units manufactured.Dimension input \\(p(u)\\)?Dimension output \\(p(u)\\)?Dimension input \\(\\partial_u p(u)\\)?Dimension output \\(\\partial_u p(u)\\)?C. given function \\(w(t)\\), amount water leaky bucket time bucket filled.Dimension input \\(w(t)\\)?Dimension output \\(w(t)\\)?Dimension input \\(\\partial_t w(t)\\)?Dimension output \\(\\partial_t w(t)\\)?Question Tanks bulk storage natural gas typically large cylinders cap can . volume tank function position cap. dimension derivative cylinder volume respect cap position?    \\(L^2\\) ✓        \\(L\\) ☹︎        \\(L^3\\) ☹︎        \\(L^3/T\\) ☹︎        \\(T/L^3\\) ☹︎ ","code":""},{"path":"change-relationships.html","id":"using-h","chapter":"16 Change relationships","heading":"16.5 Using h","text":"working differentiation, introduced quantity \\(h\\) ignored , saying doesn’t really matter long “small.” reasonable person might wonder “small” really means, needed introduce \\(h\\) first place eventually going ignore .One reason “small” “zero,” although related, different. example, refering slope functions Dsin() Dsigma() created early example chapter, see setting \\(h\\) zero get us need :NaN, can hear echo fourth-grade teacher reminding illegal divide zero.Think \\(h\\) solvent paint. don’t want solvent paint wall; wet paint nuisance. getting paint can wall absolutely needs solvent.used solvent \\(h\\) earlier chapter numerical experiments led us derivatives naked modeling functions, instance \\(\\partial_x e^x = e^x\\) \\(\\partial_x \\sin(x) = \\cos(x)\\). Eventually, ’ll construct \\(h\\)-free theory differentiation, reducing process set algebraic rules \\(h\\) never appears. goal, let’s continue using \\(h\\) find additional useful facts derivatives.Linear combination one ways make new functions existing functions. recall, linear combination involves scaling function adding scaled functions. can easily use \\(h\\) show result differentiating linear combination functions. ’ll use \\(f(x)\\) \\(g(x)\\) names stand function whatsoever. ’ll let \\(b\\) name scalar. First, let’s figure \\(\\partial_x\\, b f(x)\\), Going back writing \\(\\partial_x\\) terms slope function:\n\\[\\partial_x\\, b\\,f(x) = \\frac{b\\, f(x + h) - b\\,f(x)}{h}\\\\\n\\ \\\\\n= b \\frac{f(x+h) - f(x)}{h} = b\\, \\partial_x f(x)\\]\nwords, know derivative \\(\\partial_x\\, f(x)\\), can easily find derivative scaled version \\(f()\\).Now consider derivative sum two functions, \\(f(x)\\) \\(g(x)\\):\n\\[\\partial_x\\, \\left[f(x) + g(x)\\right] =\\\\\n\\ \\\\\n=\\frac{\\left[f(x + h) + g(x + h)\\right] - \\left[f(x) + g(x)\\right]}{h} = \\\\\n\\ \\\\\n= \\frac{\\left[f(x+h) -f(x)\\right] + \\left[g(x+h) - g(x)\\right]}{h}\\\\\n\\ \\\\\n= \\frac{\\left[f(x+h) -f(x)\\right]}{h} + \\frac{\\left[g(x+h) - g(x)\\right]}{h}\\\\\n\\ \\\\\n= \\partial_x\\, f(x) + \\partial_x\\, g(x)\\]Using two rules together, can differentiate linear combination functions terms differentiated functions :\\[\\partial_x\\ \\left[\\strut a_1 g_1(x) + a_2 g_2(x) + a_3 g_3(x) + \\cdots\\right] =\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\\n\\ \\\\\n\\ \\ \\ \\ \\ \\ \\ \\ \\ a_1 \\partial_x\\, g_1(x) + a_2 \\partial_x\\, g_2(x) + a_3 \\partial_x\\, g_3(x) + \\cdots\\]way \\(\\partial_x\\) can “passed ” linear combination, mathematicians say differentiation linear operator. Consider new fact differentiation payment eventually become complete theory telling us differentiate product two functions composition two functions.EXERCISES: Simple drill ","code":"\nDsin(t=1, h=0)## [1] NaN\nDsigma(t=0, h=0)## [1] NaN"},{"path":"change-relationships.html","id":"differencing","chapter":"16 Change relationships","heading":"16.6 Differencing","text":"basic tool showing difference slope remarkably simple operator takes function input. function one input, operator \\({\\cal D}()\\) defined \n\\[{\\cal D}(f) \\equiv \\frac{f(x + 0.1) - f(x)}{0.1}\\]\nNotice \\({\\cal D}()\\) operator returns function. output linear combination input function \\(f()\\) shifted version \\(f()\\).function two inputs, two versions \\({\\cal D}\\):\n\\[{\\cal D}_x(f) \\equiv \\frac{f(x+0.1, y) - f(x, y)}{0.1}\\]\\[{\\cal D}_y(f) \\equiv \\frac{f(x, y+0.1) - f(x, y)}{0.1}\\]Suppose \\(f(x)\\equiv x^2\\). function \\({\\cal D}(f)\\)?\\[\n{\\cal D}(f) \\equiv \\frac{f(x+0.1) - f(x)}{0.1}\\\\ =\n10\\left((x+0.1)^2 - x^2\\right)\\\\\n=10 x^2 + 2x + 0.1 - 10x^2\\\\ = 2 x + 0.1\\]Suppose \\(f(x) \\equiv 2 x + y\\). Find function \\({\\cal D_x(f)}\\).linear combination \n\\[\\frac{1}{0.1}\\left(\\left[2 (x + 0.1) + y\\right] - \\left[2 x + y\\right]\\right) =\\\\ \\\\\n20 x + 2 + 10y - \\left[20 x - 10y\\right] = 2\\]","code":"\nf <- makeFun(2 *x * y ~ x + y)\nD(f(x, y) ~ x)## function (x, y) \n## 2 * (y)"},{"path":"change-relationships.html","id":"instantaneous-rate-of-change-1","chapter":"16 Change relationships","heading":"16.7 Instantaneous rate of change","text":"[Deriv-2b] Distinguish “average rate change” “instantaneous rate change.”Imagine graph position car along road Figure @ref{fig:stop--go2}.graph appears exercise Fun-slopes. intend prompt note. Perhaps link Fun-slopes.course hour, car travelled 25 miles. words, average speed 25 miles/hour: slope red line segment. Given traffic, sometimes car stopped (time C), sometimes crawling (time D) sometimes much faster average (time B).car’s speedometer shows speed moment—instant—trip. can see Figure @ref{fig:stop--go}, speed varies sometimes less average speed, sometimes greater, occasionally equal average speed trip. general term kind quantity presented speedometer instantaneous rate change position function respect input function.Figure @ref{fig:instant-speed} shows instantaneous rate change position respect time.Recall interval \\(t_B\\) \\(t_C\\) average rate change 39 miles-per-hour. Looking instantaneous rate change tells story differently: time \\(t_B\\) car accelerating 60 miles-per-hour. gradually slowed, coming stop just time \\(t_C\\).Figure @ref{fig:stop--go} shows function \\(\\mbox{position}(t)\\). Figure @ref{fig:instant-speed} shows different function, \\(\\mbox{speed}(t)\\). Although two functions different, intimately related: \\(\\mbox{speed}(t)\\) instantaneous rate change \\(\\mbox{position}(t)\\).Two central operations calculus :Given function \\(f(t)\\), find function \\(g(t)\\) giving instantaneous rate change \\(f()\\). process deriving \\(g(t)\\) \\(f(t)\\) called differentiation.Given function \\(g(t)\\), find \\(f(t)\\) \\(g(t)\\) instantaneous rate change. process finding \\(f()\\) given \\(g()\\) called anti-differentiation.context situation modeled determines whether ’s appropriate look average rate change instantaneous rate change. Figure @ref{fig:instant-tree} shows instantaneous rate change volume wood.\n’s tempting look year growth rate highest optimal harvest year. mistake. volume wood harvested accumulated growth instantaneous growth. Even though instantaneous growth higher year 23 year 30, ’s still pretty high year 30 waiting (later) accumates years higher--average growth. ’s average rate growth better thing look determine optimal harvest time. Still, right thing look ?year 30 32, hardly change value average-rate--change function. ’s increasing little, really worthwhile wait? One argument year 29 already valuable resource: wood money bank. money bank, invest earn money time get new seedling ground start growth. ’re two things . Efficient!know best year harvest point view, want calculate effective “interest rate” present amount wood earn form new wood. interest rate ratio instantaneous rate growth new wood divided amount existing wood. Figure @ref{fig:tree-interest} shows function:best time harvest annual “interest rate” paid growing tree falls level next best available investment. Suppose investment pay 10% per year. harvest tree year 24. next best investment paid 5% (blue horizontal line), harvest made year 29.","code":""},{"path":"h-and-derivatives.html","id":"h-and-derivatives","chapter":"17 h and derivatives","heading":"17 h and derivatives","text":"already established, numerical experiment, result differentiating naked modelings functions. summarize,mathematician might prefer replace word “established” first sentence table weaker word “motivated” “proposed.” entirely fair. Indeed, let’s another experiment cause us wonder just solid conclusions presented table .Recall can easily define slope function \\(f(x)\\), example slope function \\(\\sin(x)\\):justifying entry \\(\\sin()\\) table, plotted Dsin() using small h, instance, h=0.000001. comforting continue experiment even smaller h. , discover problem.\nFigure 17.1: Graphing slope function \\(\\sin(x)\\) small enough \\(h\\) produces result inconsistent table naked modeling functions. Instead producing \\(\\cos(x)\\), get ragged function.\nThings get even worse smaller \\(h\\) still, can confirm using computing sandbox.turns reason behavior way computer arithmetic engineered. demonstrate non-mathematical behavior computer arithmetic, consider happens add subtract using 1 number small compared 1.Using technical computing successfully professional level requires understanding ways computer arithmetic differs mathematical arithmetic, R/mosaic D() operator constructed considerations mind. purpose push computer beyond ’s arithmetic limits demonstrate differentiation table naked modeling functions correct.","code":"\nDsin <- makeFun((sin(x+h) - sin(x))/h  ~ x)\noptions(digits=20)\n0.000000000000000000000001## [1] 9.999999999999999237e-25\n1 + 0.000000000000000000000001## [1] 1\n1 - 0.000000000000000000000001## [1] 1\n1 + 0.000000000000000000000001 - 1## [1] 0"},{"path":"h-and-derivatives.html","id":"the-h-framework","chapter":"17 h and derivatives","heading":"17.1 The \\(h\\) framework","text":"end, work ’re going \\(h\\) simple result: confirming facts presented differentiation table. court law, confirmation established appeal established authority. instance, look calculus textbook ’ll see facts table. (find exception, can sure ’s typographical error!)people, mathematical proof much different appealing established authority. everyone skilled following deductive steps proof almost everyone tricked accepting step logically valid. everyone makes mistakes.benefit people, rather proving facts differentiation table, ’re going reconstruct, hopefully fun way, framework developed mathematics community roughly two centuries enabled mathematicians satisfy methods used pioneers justified beyond doubt.basic problem, everyone always agreed , ’s proper set \\(h\\) zero. dispute handle \\(h\\) way can held non-zero yet give results \\(h\\) evaporated never .illustrate can done, consider algebra slope function \\(g(x) \\equiv x\\):\\[{\\cal D}_x g(x) \\equiv \\frac{g(x+h) - g(x)}{h} = \\frac{(x+h) - x}{h} = \\frac{h}{h} = 1\\]\nsteps completely justified \\(h\\) whatsoever, long \\(h \\neq 0\\). formula \\({\\cal D}_x\\, x = 1\\) correct matter whether \\(h\\) big small.contrast, consider slope function \\(f(x) \\equiv x^2\\):\n\\[{\\cal D}_x f(x) \\equiv \\frac{f(x+h) - f(x)}{h} = \\frac{(x+h)^2 -x^2}{h} = \\\\\n\\ \\\\\n= \\frac{x^2 + 2hx + h^2 - x^2}{h} = \\frac{2 h x + h^2}{h} = 2 x + h\\]\n, formula correct \\(h\\) whatsoever, long \\(h\\) zero. Unfortunately, \\(h\\) still present formula. differentiating \\(x^2\\) want make \\(h\\) go away.like think \\(h\\) kind tire iron, small tool used stretch bead bicycle tire order pull wheel rim.\nFigure 17.2: tire iron use\ntire iron done job, removed never know ever (except tire now successfully mounted wheel).calculus, bicycle mechanics. know removing tire iron isn’t damaging mathematical wheel?Still spirit fun, let’s try serious metaphor… imagining \\(h\\) actually central character calculus play. character \\(h\\) middle story never appears play, like missing character Godot famous play Waiting Godot.said \\(h\\) slope function \\({\\cal D}_x x^2 = 2 x + h\\), long \\(h\\) small, plays central role hardly effect. economizing director re-writes play take \\(h\\) , setting \\(h=0\\) formula \\(2 x + h\\): non-speaking, offstage role.’ve already seen using legitimate algebra \\[{\\cal D}_x g(x) = 2 x + h\\] Re-writing replacing \\(h\\) 0 streamlines play, turning \\({\\cal D}_x x^2 = 2x +h\\) dialog involving \\(x\\) \\(h\\) monologue \\(h\\) absent: \\[\\partial_x x^2 = 2 x\\] Simple.yet … director gets letter Bit Players Union.observe eliminated role \\(h\\) final production version \\(\\partial_x g(x)\\). violation Union regulations. Recall basis \\(\\partial_x g(x)\\) slope function \\({\\cal D}_x g(x)\\). slope function defined ratio: \\[{\\cal D}_x g(x) \\equiv \\frac{g(x+h) - g(x)}{h}\\] Eliminating \\(h\\) entirely replacing zero division zero error forbidden Article 3.16§B¶2 Unified Laws Arithmetic. ask comply Article re-instating role \\(h\\) evaluations \\({\\cal D} g(x)\\).Reading , director calls lawyer. loophole removing \\(h\\) without breaking mathematical prohibition dividing zero?1734, famous philosopher George Berkeley (1685-1753) published long-titled book: Analyst: Discourse Addressed Infidel Mathematician: Wherein Examined Whether Object, Principles, Inferences Modern Analysis Distinctly Conceived, Evidently Deduced, Religious Mysteries Points Faith. Analyst, Berkeley took issue arguments time legitimate divide \\(h\\) , ultimately, \\(h\\) replaced zero. Calling \\(h\\) “evanescent increment,” asked,“evanescent Increments? neither finite Quantities Quantities infinitely small, yet nothing. May call ghosts departed quantities?”Interesting, Berkeley believed ghost \\(h\\) yielded correct results. objection framers calculus made two, canceling errors.“[B]y virtue two fold mistake arrive, though science, yet truth.”Berkeley saying calculus yet put solid logical foundation. century Berkeley’s death work accomplished. accomplished, results claimed true along confirmed.loophole involves bit legalistic cover, something like corporation. may know, corporation legal structure makes feasible people invest without subject unlimited liability. bought stock company later accidentally caused catastrophe? company go business stock worthless. legally obliged fix damage: liability limited. companies identify legal suffix “Inc.” beholden state certain ways, requirement pay taxes profits.calculus, equivalent “Inc” \\(\\lim_{h \\rightarrow 0}\\). prepending calculation, allowed carry arithmetic operations dividing \\(h\\) without concern liability dividing zero. can perform algebraic operations long legitimate \\(h \\neq 0\\). instance, taken entirely correct say:\\[\\lim_{h\\rightarrow 0}\\frac{h}{h} = 1\\]\nAnother privilege users \\(\\lim_{h\\rightarrow 0}\\) , end algebraic derivation, entitled replace \\(h\\) zero long divide zero required. endpoint 1, \\(h\\) doesn’t even appear. consider\n\\[\\lim_{h \\rightarrow 0} \\frac{(x + h)^2 - x^2}{h} = \\\\\n\\ \\\\\n= \\lim{h \\rightarrow 0} 2 x + h\\]last step, \\(h\\) appears. entitled take result derivation, \\(2 x + h\\), replace \\(h\\) zero. doesn’t entail illegitimate operation dividing zero.’s basic, ’re entitled state \\[\\lim_{h\\rightarrow 0} h = 0\\] , honest, looks like nothing common sense.","code":""},{"path":"h-and-derivatives.html","id":"approximations-to-naked-modeling-functions","chapter":"17 h and derivatives","heading":"17.2 Approximations to naked modeling functions","text":"Let’s take close look two naked modeling functions: \\(e^x\\) \\(\\sin(x)\\). “close” mean near \\(x=0\\). already know \\(e^0 = 1\\) \\(\\sin(0) = 0\\). consider “small” \\(x\\), spirit \\(\\lim_{x\\rightarrow 0}\\).fundamental approximations :\\[e^x \\approx 1 + x\\\\\n\\ \\\\\n\\sin(x) \\approx x\\\\\n\\ \\\\\n\\cos(x) \\approx 1 - x^2\\]Figure @ref(fig:small-x-naked} shows naked functions along approximations. ’re interested “small” \\(x\\). left panel shows functions \\(-1 \\leq x \\leq 1\\) right panel zooms small \\(x\\), taking “small” arbitrary everyday sense , say, less 0.01.\nFigure 17.3: Comparing naked modeling functions exp(x), sin(x), cos(x) simple approximations small x. functions drawn broad gray line; approximations thin blue line.\nNear \\(x=0\\), graph approximation dead center corresponding naked modeling function.approximations break small \\(x\\) none approximations involve dividing \\(x\\). remember approximations good \\(x\\) small!Consider result differentiating \\(e^x\\). slope function \\[{\\cal D}_x e^x \\equiv \\frac{e^{x+h} - e^x}{h} = e^x \\left[\\frac{e^h - 1}{h}\\right]\\]\nLet’s examine \\(\\frac{e^h - 1}{h}\\) small \\(h\\). use approximation \\(e^x\\), ’ll write \\(h\\) argument: \\(e^h \\approx 1 + h\\). Plugging bracketed quantity, \\[\\lim_{h \\rightarrow 0}\\frac{e^h - 1}{h} = \\lim_{h\\rightarrow 0}\\frac{1 + h - 1}{h} = 1\\] Overall, means \\[\\partial_x e^x = \\lim_{h\\rightarrow 0}{\\cal D}_x e^x = e^x\\]Now demonstrate \\(\\partial_x \\sin(x) = \\cos(x)\\) fact often used calculus. calculus teachers need know perform demonstration, following just FYI:.demonstration builds formula sine sum two quantities:\\[\\sin(x + h) = \\sin(x)\\cos(h) + \\cos(x)\\sin(h)\\], can simplify slope function \\(\\sin\\):\n\\[{\\cal D}_x \\sin(x) \\equiv \\frac{\\sin(x+h) - \\sin(x)}{h} =\\\\\n\\ \\\\\n= \\frac{1}{h} \\left[\\strut\\sin(x)\\cos(h) + \\cos(x)\\sin(h) - \\sin(x) \\right]\\\\\n\\ \\\\\n= \\frac{1}{h} \\left[\\strut \\sin(x) \\left[\\cos(h) -1\\right] + \\cos(x)\\sin(h)\\right]\\]\nPlugging approximations \\(\\sin(h) = h\\) \\(\\cos(h) = 1 - h^2\\) get\n\\[{\\cal D}_x \\sin(x) = \\frac{1}{h} \\left[\\strut\\sin(x)(- h^2)  +\\cos(x)h\\right] = \\\\\n\\ \\\\\n= \\cos(x) - h \\sin(x)\\]\ndivision \\(h\\) safely removed, cn now apply limit:\n\\[\\partial_x \\sin(x) = \\lim_{h\\rightarrow 0} \\left[\\strut \\cos(x) - h \\sin(x)\\right] = \\cos(x) - \\sin(x) \\left[\\lim_{h\\rightarrow 0}h\\right] = \\cos(x)\\]write differentiation operator (respect input \\(x\\)) \\(\\partial_x\\). wrote slope-function operator (, respect \\(x\\)) \\({\\cal D}_x\\).slope-function operator \\({\\cal D}_x\\) stepping stone path toward real destination: differentiation. ’re defining differentiation limit:\\[\\partial_x\\, f(x) \\equiv \\lim_{h\\rightarrow 0} {\\cal D}_x\\, f(x)\\]\npractice, however, perform differentiation whenever possible limit definition, consequences limit definition, \\(\\partial_x e^x = e^x\\) \\(\\partial_x \\sin(x) = \\cos(x)\\). Sometimes consequences called rules differentiation. rules important particularly carrying differentiation using paper pencil, computer available, rules mastered software. Since software widely available, ’re going step away bit. next chapters present uses differentiation contexts differentiation used constructing new modeling functions.Suppose want borrow \\(L=\\) $10,000 buy car. ’ll make equal monthly payments \\(P\\) five years (60 months) pay loan. interest rate \\(r\\) per month, payment : \\[P(L, r) = L r \\frac{(1+r)^{60}}{(1+r)^{60} - 1}\\]example, interest rate 0.005 per month (roughly 6% = 0.06 per year), monthly payment ::: {.scaffolding}Essay question tmp-25: Explain options(digits=20) statement . can experiments changing 20 something much smaller.Question statements true successive values x_sequence?approaches 3 . ✓ approaches 3 . ☹︎ oscillates, getting nearer farther 3. ☹︎ Question B statements true successive values f(x_sequence)?approaches 1 . ☹︎ approaches 1 . ☹︎ value constant 1. ✓ ’s simple enough say elementary-school pupil “division zero error.” computer , whatever reason, divides amount zero generated -erroneous early computation? many computer languages (including R) programmer can arrange unacceptable situation causes error message “thrown.” generally causes program stop. See account USS Yorktown (“Smart ship testbed”) example stopping program always acceptable practice.Modern computer arithmetic systems, implemented hardware, take different approach division zero. Rather error, divide--zero calculations return definite value called “number” printed NaN. Rather stopping program, calculations can continue . calculation involving NaN, 3 +  NaN NaN/NaN produces NaN. clever design allows system-level programmer determine whether division zero needs dealt .Question Warm : Using sandbox, determine one arithmetic expressions produce NaN output.1/0 ☹︎ 0/0 ☹︎ 0*NaN ☹︎ NaN/NaN ☹︎ 5e20 + NaN*1e-50 ☹︎ NaN - NaN ☹︎ NaN * Inf ☹︎ sin(NaN) ☹︎ sqrt(NaN) ☹︎ Inf/Inf ☹︎ 1/Inf ✓ NaN strategy effective plotting. Programs slice_plot() simply ignore points whose value NaN. result, shape graph determined points nearby, , singularity. overall effect graph clearly indicates whether singularity removable without user juggling NaN.following functions \\(x\\), use following procedure:Plug indicated value \\(x = x^\\star\\) find computer returns NaN. , function singularity \\(x^\\star\\).Draw graph function region close \\(x^\\star\\) see function behaves smoothly close \\(x^\\star\\). , find function’s limit \\(x \\rightarrow x^\\star\\). (Pay attention vertical axis scale.)Look formula function see equal terms numerator denominator can cancel create new function , everywhere \\(x^\\star\\), original.Example: \\(f(x) \\equiv \\frac{x^2 + 2x}{x^3 + 4x}\\) \\(x^\\star = 0\\). sandbox code set steps (1) (2). ’ll step (3) hand, using algebra. Notice f(xstar) returns NaN, indicating singularity xstar. graph, however, perfectly smooth value 0.5 xstar. limit \\(\\lim_{x\\rightarrow 0} f(x) = 0.5\\). Using algebra, can rewrite \\(f(x)\\)\\[f(x) = \\frac{x^2 +  2x}{x^3 + 4x} = \\frac{x}{x} \\frac{x + 2}{x^2 + 4}.\\] Eliminating \\(\\frac{x}{x}\\), remainder expression evaluates 1/2 \\(x=0\\) without problematic division zero. agrees perfectly graph.Question B 1) True false: \\[f(x)\\equiv \\frac{x^2 + 2x}{x^3 - 4x}\\] behaves nicely near \\(x^{\\star} = 0\\).    TRUE ✓        FALSE ☹︎ Question C 2) True false: \\[f(x)\\equiv \\frac{x^2 + 2x}{x^3 - 4x}\\] behaves nicely near \\(x^{\\star} = -2\\).    TRUE ✓        FALSE ☹︎ Question D 3) True false: \\[f(x)\\equiv \\frac{x^2 + 2x}{x^3 - 4x}\\] behaves nicely near \\(x^{\\star} = 2\\).    TRUE ☹︎        FALSE ✓ Question E 4) True false: \\[f(x)\\equiv \\frac{x^2 + x}{x + \\sqrt{x + 3}}\\] behaves nicely near \\(x^{\\star} = -2\\).    TRUE ✓        FALSE ☹︎ Question F 5) True false: \\[f(x)\\equiv x \\log(x)\\] behaves nicely approaching \\(x^{\\star} = 0\\) .    TRUE ✓        FALSE ☹︎ limits section exercise, ask \\(x^0\\)? 1? \\(x=0\\). Zero raised positive power 0. positive number raised 0 1. two ways thinking give different answers.computer handles question ease:computer results don’t always agree mathematical results.case, mathematicians looking question lens limits, agree computer looking function \\(g(x) \\equiv x^0\\). disagree function \\(h(x) \\equiv 0^x\\) \\(f(x) \\equiv x^x\\). three functions comes limits.Remember \\(\\lim_{x\\rightarrow 0}\\) replacing \\(x\\) zero, process examining result non-zero \\(x\\) \\(x\\) approaches zero. “zero raised positive power” ’re talking \\(0^{\\lim_{x\\rightarrow 0}}\\), \\(\\lim_{x\\rightarrow 0} \\left[x^x\\right]\\). Similarly, \\(\\left[\\lim_{x\\rightarrow 0}\\right]^0\\) different ","code":"\nPayment <- function(L, r, m=60) {\n  L*r*((1+r)^m) / ((1+r)^m - 1)\n}\nPayment(10000, 0.005)## [1] 193.33\nYou are a good negotiator and are trying to talk the car dealer down to a zero-percent loan. The dealer plugs $r=0$  into the mortgage calculator. His response to you: \"Sorry, but our system can't handle zero-percent loans.\"\n\n\n**Essay question tmp-24**: Explain what about the output of the calculator supports the dealer's response.\n\nYou press the point. \"Excuse me, Sir, but I'm in Math 141Z. That `NaN` appearing  on your screen is the result  of  a division by  zero  in the formula. But there's no reason to do that division. At zero percent interest, the monthly payment will  simply be the amount borrowed divided by the number of months of the loan, so  $10,000 divided by 60, giving a monthly payment of $166.6666... .\" \n\n\"I'm sure you're very  good at math,\" the dealer says, \"and I'm willing to agree to a monthly payment of $166.67, but I can't process any loan without going through this computer system. And zero percent won't fly.\"\n\nHaving studied limits, you have an idea. \"Suppose we agree on a non-zero interest rate--which your loan system can handle--that produces a monthly payment of $166.67? Can we write up the loan that way?\"\n\nDealer: \"I'd be happy to do that, but obviously it's impossible to find an interest rate greater than zero that gives the same result as your calculation  for zero interest.\"\n\nYou: \"Let's try. Instead of 0.005 for the monthly interest rate, put in $r = 0.0005$. You're computer can work with that, right?\"\n\nDealer: \"OK, let's see. ... Yes, the payment amount is $169.22. That'll work.\"\n\nYou: \"We're making progress. But my sense of mathematical honor insists that we find  an interest rate that gives $166.67,  as close as we can practically get to the exact  answer of $166.6666... .\"\n\n**Question A**  Work through  the sequence $r = 0.005$,  $r = 0.0005$, $r  = 0.00005$, making $r$ smaller and smaller. Is there a non-zero $r$ that brings the payment to the agreed-upon goal of $166.67? If so, what's the largest $r$ that will bring you there. \n\ni. 5e-04<span class='mcanswer'> ☹︎  <\/span>     \nii. 5e-05<span class='mcanswer'> ☹︎  <\/span>     \niii. 5e-06<span class='mcanswer'> ☹︎  <\/span>     \niv. 0.0000005<span class='mcanswer'> ✓  <\/span>     \nv. 5e-08<span class='mcanswer'> ☹︎  <\/span>     \nvi. 5e-09<span class='mcanswer'> ☹︎  <\/span>     \nvii. 5e-10<span class='mcanswer'> ☹︎  <\/span>     \nviii. no such $r$<span class='mcanswer'> ☹︎  <\/span>\n\nLater in the day, you tell  the story to your roommate, who is a computer science major. She says that you were lucky. \"Computer arithmetic isn't exactly the same as mathematical arithmetic. Computer calculations with very small numbers sometimes give different results than you would expect mathematically. I bet if  you tried an even smaller $r$, you would have gotten different answers or even just nonsense.\"\n\n**Question B**  Work through smaller and smaller $r$ in the mortgage calculator. What happens as you continue the sequence from the  previous question, adding in  more zeros before the 5? \n\ni. The  result steadily gets closer  to  166.6666....<span class='mcanswer'> ☹︎  <\/span>     \nii. At first, the result gets closer to 166.6666, but then as $r$ gets smaller the result stays at the same answer.<span class='mcanswer'> ☹︎  <\/span>     \niii. The result falls below 166.666 and stays there.<span class='mcanswer'> ☹︎  <\/span>     \niv. The computer output shows a result of infinity.<span class='mcanswer'> ✓ Surprising, huh? These sorts of problems do arise. In the 1991 Gulf war, one Iraqi missile got through the Patriot missile  defense system due to a problem like this. There are special mathematical/programming techniques to help avoid these situations, but the Patriot system was not designed with  them. [News story here](https://www.nytimes.com/1991/06/06/world/us-details-flaw-in-patriot-missile.html). <\/span>\n<\/details>\n\n\\BeginKnitrBlock{exercise}\\iffalse{-91-115-105-110-103-117-108-97-114-105-116-121-45-110-117-109-101-114-105-99-115-93-}\\fi{}<div class=\"exercise\"><span class=\"exercise\" id=\"exr:unnamed-chunk-149\"><strong>(\\#exr:unnamed-chunk-149)  \\iffalse (singularity-numerics) \\fi{} <\/strong><\/span><\/div>\\EndKnitrBlock{exercise}\n<details> \n\n\n\n\n\n\n\n\n\nConsider the function $f(x)  \\equiv  \\frac{x-3}{x-3}$. Simple algebra suggests that  the  output will be 1 for any $x$ value input, but the rules are division mean that the output is undefined for input $x=3$. We say,  the  function has a \"singularity\" at $x=3$. We want to test whether this singularity is removable, that is, whether  the function has  a  limit as $x \\rightarrow 3$. The computer can help us out.  The basic idea is to try inputs closer  and closer to $x=3$  and see if the output behaves nicely. To help you distinguish between removable and  non-removable singularities (or, in the words of the song \"Santa Claus is Coming to Town\", to know \"who's naughty or nice\"), the sandbox defines the function $f()$ and  a similar function $g()$. Try out both $f()$ and $g()$ for a sequence of inputs that get closer and closer to $x=3$ but are not *exactly*  3.\n\n\n```r\nf <- function(x) { (x-3) / (x-3)}\ng <- function(x) { (x-2.5) / (x-3)}\nx_sequence <- 3 - 10^-(1:15)\noptions(digits=20)\nx_sequence##  [1] 2.8999999999999999112 2.9900000000000002132 2.9990000000000001101\n##  [4] 2.9998999999999997890 2.9999899999999999345 2.9999989999999998602\n##  [7] 2.9999999000000001637 2.9999999900000000608 2.9999999989999999173\n## [10] 2.9999999998999999917 2.9999999999899999992 2.9999999999989999111\n## [13] 2.9999999999999000799 2.9999999999999897859 2.9999999999999991118\nf(x_sequence)##  [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\ng(x_sequence)##  [1] -3.9999999999999955591e+00 -4.9000000000001065814e+01\n##  [3] -4.9900000000005508127e+02 -4.9989999999894480425e+03\n##  [5] -4.9998999999672436388e+04 -4.9999899993011099286e+05\n##  [7] -4.9999990081828944385e+06 -4.9999999303873553872e+07\n##  [9] -4.9999995762981790304e+08 -4.9999995852981796265e+09\n## [11] -4.9999995861981788635e+10 -4.9995555365913500977e+11\n## [13] -5.0039995859662177734e+12 -4.8952169862721781250e+13\n## [15] -5.6294995342131100000e+14\nf <- function(x) {(x^2 + 2*x) / (x^3 + 4*x)}\nxstar <- 0\nf(xstar)\n\nslice_plot(f(x) ~  x, domain(x =  xstar + 0.001*c(-1,  1)))\n0^0## [1] 1"},{"path":"optim-and-shape.html","id":"optim-and-shape","chapter":"18 Optimization","heading":"18 Optimization","text":"“optimize” means make something good possible available resources. Optimization problems common science, logistics, industry, area one seeks best solution problem. everyday examples:much salt add stew. Stews can salty, can salty enough. Somewhere middle optimum.harvest trees grown lumber. Harvest soon might losing prime growing years. Wait long trees settled slow growth, .Walking steep slope tiring slows ; ’s hiking trails switchbacks. switchbacks shallow, takes long time cover distance. ’s efficient angle enable hikers get hill shortest time.","code":""},{"path":"optim-and-shape.html","id":"structure-of-the-problem","chapter":"18 Optimization","heading":"18.1 Structure of the problem","text":"optimization problem, one input quantity whose value choose. amount salt; years wait planting harvesting tree; angle trail respect slope. ’ll call decision quantity.Similarly, one output quantity value want make good possible. taste stew; income produced selling lumber; time takes walk hill. output quantity called objective.model relates inputs objective output called objective function. Solving optimization problem—modeling phase complete—amounts finding value decision quantity (input objective function) produces best level objective (output objective function).Sometimes objective something want minimize, make small possible. hiking trail problem, seek minimize amount time takes walk trail. Sometimes want maximize objective, wood-harvest problem objective harvest wood per year.Mathematically, maximization minimization thing. Every minimization problem can turned maximization problem putting negative sign front objective function. simplify discussion, talking finding solution optimization problem ’ll imagine goal maximize. keep mind many circumstances real world, “best” can mean minimization.solution seek maximization problem called argmax. contraction two words: argument (, input) produces maximum output. (minimization, solution ***argmin.)found argmax can plug value objective function find value output. value maximum.People often talk “finding maximum.” misleading. setup optimization problem :Construct (, model) objective function.Now know objective function, find input function—, argmax—produces maximum output.illustrate setup optimization problem, imagine situation contest see can shoot tennis ball farthest field slingshot. contest, adjust vertical angle launch, place ball slingshot’s cradle, pull back far possible, let go. win contest, need optimize launch ball.objective distance travelled ball. simplicity, ’ll imagine velocity ball release fixed \\(v_0\\). ’ll win lose based angle launch choose.head field experiment, let’s bit preparation. ’ll model far ball travel (horizontally) function angle launch \\(\\theta\\) initial velocity \\(v_0\\).mathematics problems involves area called differential equations, important part calculus ’ll come later course. Since don’t tools yet, ’ll just state simple model long ball stays air.\n\\[\\text{duration}(v_0, \\theta) = 2 v_0 \\sin(\\theta)/g\\] \\(g\\) acceleration due gravity, \\(9.8 \\text{m}\\text{s}^{-2}\\), assuming contest held Earth.horizontal distance travelled tennis ball \\[\\text{hdist}(v_0, \\theta) = \\cos(\\theta) v_0\\, \\text{duration}(v_0, \\theta) = 2 v_0^2 \\cos(\\theta)\\sin(\\theta) / g\\]\nobjective function hdist(), seek find argmax. input \\(v_0\\) (assumed) fixed, decision quantity angle \\(\\theta\\).best choice \\(\\theta\\) make quantity \\(\\cos(\\theta)\\sin(\\theta)\\) large possible. finding argmax, don’t need concerned \\(v_0\\) \\(g\\).Finding argmax can accomplished simply plotting function \\(\\cos(\\theta)\\sin(\\theta)\\). ’ll implement function input units degrees.\nFigure 18.1: distance travelled ball launched angle \\(\\theta\\)$, according simple model duration flight distance travelled.\ngraph, especially zoomed-version, can read argmax \\(\\theta = 45^\\circ\\).Finding argmax solves problem. may also want present solution saying value output hdist() argmax given input. can read graph maximum \\(\\cos(\\theta)\\sin(\\theta)\\) 0.5 \\(\\theta = 45^\\circ\\), overall distance \\(v_0^2 / g\\)Review Exercise: dimension \\(v_0^2 / g\\)?","code":"\nf <- makeFun(cos(pi*theta/180)*sin(pi*theta/180) ~ theta)\nslice_plot(f(theta) ~ theta, domain(theta=c(0,90)))\nslice_plot(f(theta) ~ theta, domain(theta = c(40, 50)))"},{"path":"optim-and-shape.html","id":"interpreting-the-argmax","chapter":"18 Optimization","heading":"18.2 Interpreting the argmax","text":"graphical solution given slingshot problem entirely satisfactory. Whether solution win contest depends course whether model built objective function correct. potentially important things left , air resistence.Solving optimization problem prepared us go field test result. Perhaps ’ll find real-world optimum angle somewhat steeper shallower \\(\\theta = 45^\\circ\\).Besides argmax, another important quantity read graph Figure 18.1 precision argmax. strict mathematical terms, argmax exactly 45 degrees. practical terms, may matter much outcome little away \\(45^\\circ\\). example, according model, angle range \\(40^\\circ < \\theta < 50^\\circ\\) produce output within 1% distance reached argmax.Contests won lost margins less 1%, casually deviate argmax. hand, \\(45^\\circ\\) argmax model. Reality may deviate model. instance, suppose air resistance wind might might effect 1% distance. can expect factors might change optimal angle much \\(\\pm 5^\\circ\\).","code":""},{"path":"optim-and-shape.html","id":"derivatives-and-optimization","chapter":"18 Optimization","heading":"18.3 Derivatives and optimization","text":"’re now going reframe search argmax ’s interpretation terms derivatives objective function respect decision quantity (\\(\\theta\\) slingshot problem). function one variable, improvement look---graph technique find argmax. genuine reason use derivatives set us future solve problems one variable, hard draw interpret graph. Also, describing functions language derivatives can help us think clearly aspects problem, precision argmax.graph Figure 18.1, ’s easy find argmax; common sense carries day. won’t obvious first going take following approach:Let’s denote argmax objective function \\(f(x)\\) \\(x^\\star\\).\nLet’s look derivative \\(\\partial_x f(x)\\) neighborhood \\(x^\\star\\). Referring Figure 18.1, \\(x^\\star = 45^\\circ\\), may able see \\(\\partial_x f(x^\\star)\\) zero; line tangent function’s graph \\(x^\\star\\) flat.Seen another way, slope \\(f(x)\\) left \\(x^\\star\\) positive; moving tiny bit right (, increasing \\(x\\) small amount, leads increase output \\(f(x)\\). Intuitively, approach peak hill, walking uphill.) Just right \\(x^\\star\\), slope \\(f(x)\\) negative; reach top hill continue , going downhill. derivative function positive one side \\(x^\\star\\) negative , suggesting crosses zero argmax.Inputs \\(x^\\star\\) \\(\\partial_x f(x^\\star) = 0\\) called critical points. call simply argmaxes? slope also zero argmin. ’s even possible slope zero point ’s neither argmin argmax.Question tmp-27: Consider function \\(f(x) \\equiv x^3\\). Confirm value derivative \\(\\partial_x f(x = 0)\\) \\(x^\\star = 0\\) critical point. sort critical point \\(x^\\star=0\\)? (Hint: Draw graph \\(f(x)\\) near \\(x=0\\) see ’s going .)argmax [\\(f(0) < f(x > 0)\\), \\(x^\\star=0\\) can’t argmax.]argmax [\\(f(0) < f(x > 0)\\), \\(x^\\star=0\\) can’t argmax.]argmin [\\(f(x < 0) < f(0)\\), \\(x^\\star=0\\) can’t argmin.]argmin [\\(f(x < 0) < f(0)\\), \\(x^\\star=0\\) can’t argmin.]Neither (+) []Neither (+) []point, know values \\(x^\\star\\) give \\(\\partial_x f(x^\\star) = 0\\) “critical points,” haven’t said figure whether given critical point argmax, argmin, neither. behavior \\(\\partial_x f(x)\\) near x=x^$ important. \\(x^\\star\\) argmax, \\(\\partial_x f(x)\\) positive left \\(x^\\star\\) negative right \\(x^\\star\\); walk hill get \\(x^\\star\\), top hill flat, just past top hill negative slope.argmin, changing \\(x\\) less \\(x^\\star\\) greater \\(x\\star\\); walking valley, level bottom \\(x=x^\\star\\), back side valley pass \\(x=x^\\star\\). Figure 18.2 shows situation.\nFigure 18.2: Top row: objective function near argmax (left) argmin (right). Bottom row: derivative objective function\nbottom row graphs Figure 18.2 shows derivative objective function \\(f(x)\\), , \\(\\partial_x f(x)\\). can see argmax \\(f(x)\\), derivative \\(\\partial_x f(x)\\) positive left negative right. Similarly, near argmin \\(f(x)\\), derivative \\(\\partial_x f(x)\\) negative left positive right.Stated another way, derivative \\(\\partial_x f(x)\\) positive slope near argmin negative slope near argmax.Just differentiate \\(f(x)\\) find ’s slope, find slope function \\(\\partial_x f(x)\\) can differentiate . result called second derivative. write \\(\\partial_x \\left[\\partial_x f(x)\\right]\\), brevity write \\(\\partial_{xx} f(x)\\).second derivative objective function \\(f(x)\\) critical point \\(x^\\star\\) tells us whether critical point argmax, argmin, neither.\nCritical point \\(x^\\star\\) | \\(\\partial_x f(x^\\star)\\) | \\(\\partial_{xx} f(x^\\star)\\)\n———————–|———————|——————-\nargmax | 0 | negative\nargmin | 0 | positive\nneither| 0 | 0Question tmp-28: Returning function \\(f(x) \\equiv x^3\\), find value second-derivative \\(\\partial_{xx} f(x^\\star)\\) evaluated critical point \\(x = x^\\star = 0\\). \\(\\partial_{xx} f( x=0\\)?Negative [established previous exercise critical point \\(x^\\star=0\\) neither argmin wan argmax.]Negative [established previous exercise critical point \\(x^\\star=0\\) neither argmin wan argmax.]Positive [established previous exercise critical point \\(x^\\star=0\\) neither argmin wan argmax.]Positive [established previous exercise critical point \\(x^\\star=0\\) neither argmin wan argmax.]Zero (+) []Zero (+) []differentiate function \\(f(x)\\), produce new function can call anything like. help readers follow thread story, ’s nice name new function \\(\\partial_x f(x)\\). signals clearly reader origins new function respect original function \\(f(x)\\).words, \\(\\partial_x f(x)\\) often called derivative \\(f(x)\\) (respect x). “derive” general term mean just way creating something new something old. calculus, “derivative” always means “created differentiation.” Perhaps better history led us call \\(\\partial_x f(x)\\) name “differentiated \\(f(x)\\)” “differential function \\(f(x)\\).”Graphically, can read second derivative \\(\\partial_{xx} f(x)\\) slope first derivative \\(\\partial_x f(x)\\) concavity function \\(f(x)\\) . \\(\\partial_{xx} f(x) < 0\\), \\(f(x)\\) concave (frown). Likewise, \\(\\partial_{xx} f(x) >0\\) \\(f(x)\\) concave (smile). \\(\\partial_{xx} f(x) = 0\\), \\(f(x)\\) curvature.point, ’ve translated features functions evident graph language derivatives:slope function \\(f(x)\\) input \\(x\\) value derivative function \\(\\partial_x f(x)\\) \\(x\\).concavity function \\(f(x)\\) input slope derivative function, , \\(\\partial_x f(x)\\).Putting () (ii) together, get concavity function \\(f(x)\\) input \\(x\\) value second derivative function, , \\(\\partial_{xx} f(x)\\).argmax \\(x^\\star\\) \\(f(x)\\), value derivative function \\(\\partial_x f(x^\\star)\\) zero value second derivative function \\(\\partial_{xx} f(x^\\star)\\) negative. (situation argmin similar, derivative objective function zero second derivative positive.)graph shows three different functions labeled (), (B), (C).Question Function ()     concave ✓        non-concave ☹︎        concave ☹︎ Question B Function (B)     concave ☹︎        non-concave ☹︎        concave ✓ Question C Function (C)     concave ☹︎        non-concave ✓        concave ☹︎ Question D negative function ()     concave ☹︎        non-concave ☹︎        concave ✓ graph shows function \\(\\mbox{wave}(t) \\equiv \\sin(2 \\pi t/4)\\) labels four input values \\(t\\).Question E values input \\(t\\) function concave ?\\(t = \\) \\(t=D\\) ☹︎ \\(t = \\) \\(t=C\\) ☹︎ \\(t = C\\) \\(t = D\\) ✓ none ☹︎ Question F values input \\(t\\) function non-concave?    \\(t = \\) ✓        \\(t=B\\) ☹︎        \\(t=C\\) ☹︎        none ☹︎ Question G function steepest?smooth function marked points. task , point, estimate value derivative, sign second derivative, radius circle nicely match function small region around point. (Remember, ’re asking radius circle, half diameter.)simplify things, table giving seven different combinations quantities estimate. correctly match one labeled points, . need choose correct set quantities labeled point.Question row table best matches function point ?    ☹︎        ii ☹︎        iii ☹︎        iv ☹︎        v ☹︎        vi ☹︎        vii ✓ Question B row table best matches function point B?    ☹︎        ii ✓        iii ☹︎        iv ☹︎        v ☹︎        vi ☹︎        vii ☹︎ Question C row table best matches function point C?    ☹︎        ii ☹︎        iii ☹︎        iv ✓        v ☹︎        vi ☹︎        vii ☹︎ Question D row table best matches function point D?    ✓        ii ☹︎        iii ☹︎        iv ☹︎        v ☹︎        vi ☹︎        vii ☹︎ Question E row table best matches function point E?Pick Lorenz curve {.intheworld} block 1. Compute concavity lorenz function, showing ’s everywhere positive. examine concavity composition lorenz functions determine necessarily everywhere positive.’s critical point?’re familiar quadratic polynomial: \\[g(x) = a_0 + a_1 x + a_2 x^2\\]\ngraph quadratic polynomial parabola, might concave concave . know, parabola one critical point, might argmin argmax.Let’s find critical point. know critical point \\(x^\\star\\) \\(\\partial_x g(x_0) = 0\\). Since know differentiate power law, can see \n\\[\\partial_x g(x) = a_1 + 2 a_2 x\\] , specifically, critical point \\(x^\\star\\) derivative \n\\[a_1 + 2 a_2 x^\\star = 0\\]\nequation, definition. says whatever \\(x^\\star\\) happens , quantity \\(a_1 + 2 a_2 x^\\star\\) must zero. Using plain old algebra, can find location critical point \\[x^\\star = -\\frac{a_1}{2 a_2}\\]Exercises involving computing derivatives","code":"## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\n\n## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\n\n## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\n\n## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided."},{"path":"optim-and-shape.html","id":"approximations-around-xstar","chapter":"18 Optimization","heading":"18.4 Approximations around \\(x^\\star\\)","text":"Starting just naked modeling functions (e.g. \\(e^t\\)), small rich set mathematical operations enables make huge variety functions suit big range modeling needs:input scaling, turns naked modeling functions directly useful basic modeling functions.linear combinations functions, e.g. \\(+ B e^{-kt}\\)compositions functions, e.g. \\(e^{-kt^2}\\) can recognize composition exponential power-law function.products functions, e.g., \\(\\sin\\left(\\frac{2\\pi}{P}x\\right) e^{-kt}\\)Now want tame profusion possibilities consider way construct stand-ins function, using universal format needs minimum information can used many purposes place original function. ’s helpful name stand-ins reminds us stand-ins . original function \\(f(x)\\), ’ll write names stand-ins tilde, \\(\\widetilde{\\,f\\ }(x)\\).stand-functions intended much simpler original useable substitute original. catch stand-warranteed good substitute within small neighborhood domain origin.information need construct stand-ins limited. First, need specify warranteed neighborhood . ’ll tend use \\(x_0\\) identifying center neighborhood. ’ll also need \\(f(x_0)\\), output original function input \\(x_0\\), \\(\\partial_x f(x_0)\\) \\(\\partial_{xx} f(x_0)\\).good time remind notation conventions using write functions evaluating functions.function individual characteristics idiosyncracies written \\(f(x)\\): function name name input inputs. name function \\(f()\\). name input \\(f()\\) \\(x\\), whatever input name given parentheses following name.Every function derivative function. call derivative function anything like, ’s sensible give name states explicitly comes . ’re using \\(\\partial_x f(x)\\) purpose. Similarly, name use second derivative \\(\\partial_{xx} f(x)\\).Evaluating function means specify particular value input. use several ways making clear talking particular value input, e.g.\n\\[\\mbox{function output:}\\ \\ \\ f(x = 3)\\ \\ \\ \\text{}\\ \\ f(3)\\ \\ \\ \\text{}\\ \\ \\left.f(x)\\strut\\right|_{x=3}\\]\noutput evaluated function quantity.Sometimes want refer output particular input, don’t specific quantity pinned yet. preferred style writing use name similar input name, subscript \\(x_0\\), \\(x_1\\), \\(x_i\\), \\(x_\\star\\) , occasionally, superscript \\(x^\\star\\). output function written like :\n\\[\\mbox{function output:}\\ \\ \\ f(x = x_0)\\ \\ \\ \\text{}\\ \\ f(x_0)\\ \\ \\ \\text{}\\ \\ \\left.f(x)\\strut\\right|_{x=x_0}\\]\nstyle applies function name like \\(\\partial_x f()\\) \\(\\partial_{xx} f()\\), instance\\[\\mbox{function output:}\\ \\ \\ \\partial_x f(x = x_0)\\ \\ \\ \\text{}\\ \\ \\partial_x f(x_0)\\ \\ \\ \\text{}\\ \\ \\left.\\partial_x f(x)\\strut\\right|_{x=x_0}\\]two universal formats can used construct stand-function near particular input \\(x_0\\). Since ’s useful name stand-, ’ll use tilde top original function name:First-order approximation: \\(\\widetilde{f_1}(x) \\equiv f(x_0) + \\partial_x f(x_0) (x-x_0)\\)Second-order approximation: \\(\\widetilde{f_2}(x) \\equiv f(x_0) + \\partial_x f(x_0) [x-x_0] + \\frac{1}{2} \\partial_{xx} f(x_0) [x - x_0]^2\\)Notice first two terms \\(\\widetilde{f_2}(x)\\) identical \\(\\widetilde{f_1}(x)\\), write second-order approximation \n\\[\\widetilde{f_2}(x) \\equiv \\widetilde{f_1}(x) +\\frac{1}{2} \\partial_{xx} f(x_0) [x-x_0]^2\\]first-order approximation \\(\\widetilde{f_1}(x)\\) nothing straight-line function whose graph tangent graph \\(f(x)\\) input \\(x=x_0\\).second-order approximation quadratic polynomial. quadratic, graph familiar parabola. graph \\(\\widetilde{f_2}(x)\\) parabola tangent graph \\(f(x)\\).Consider function \\(g(x)\\) whose graph shown Figure ??.\nhaven’t given formula \\(g(x)\\), can see isn’t basic modeling functions something complicated. ’re going construct first-order second-order approximation \\(g(x)\\) neighborhood \\(x_0 = -1\\) marked blue shaded area.Note \\(x_0\\) argmin \\(g(x)\\). can see argmin little right \\(x_0\\).“facts” \\(g(x)\\) needed construct approximations, beyond specification location neighborhood \\(x_0\\), values \\(g(x_0)\\), \\(\\partial_x g(x_0)\\), \\(\\partial_{xx} g(x_0)\\). :facts, can construct first- second-order approximations:Figure 18.3 shows \\(\\widetilde{g_1}(x)\\) \\(\\widetilde{g_2}(x)\\), zooming around \\(x_0 = -1\\).\nFigure 18.3: first-order (green) second-order (red) approximations \\(g(x)\\) near \\(x_0=-1\\).\ncan see \\(\\widetilde{g_2}(x)\\) good approximation \\(g(x)\\). particular, argmin \\(\\widetilde{g_2}(x)\\) close \\(g(x)\\).previous example, showed argmin parabolic function \\(a_0 + a_1 x + a_2 x^2\\) \\(x^\\star = -\\frac{a_1}{2 a_2}\\). Using formula, argmin \\(\\widetilde{g_2}(x)\\) -2.3493/(7.8077/2) = -0.602.","code":"## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\n\n## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\nx0 <- -1\ng(x0)## [1] -23.992419550105168469\ndx_g <- D(g(x) ~ x)\ndxx_g <- D(g(x) ~ x + x)\ndx_g(x0)## [1] -2.349320000760712901\ndxx_g(x0)## [1] 7.8076908494040253572\ntilde1_g <- makeFun(-23.992 - 2.3493*(x-x0) ~ x)\ntilde2_g <- makeFun(tilde1_g(x) + (7.8077/2) * (x-x0)^2 ~ x)## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\n\n## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided."},{"path":"optim-and-shape.html","id":"solving-computationally","chapter":"18 Optimization","heading":"18.5 Solving computationally","text":"find zeros derivative function evaluate second derivative zeros find kind critical point .cubic bifurcation. Start cubic argmax followed argmin. move parameter see two critical points coalesce single point disappear., maybe, “problem polynomials.” Linear function always 1 root critical points. Quadratic function always one critical point (subject constant may two roots generically). cubic might 1 3 solutions behavior depends constant. might one three critical points.previous discussion, used phrases “every function derivative,” “function can approximated” second-order polynomial. practical purposes, true. next chapter, however, ’ll set mathematical conditions “every” “” let us see can exception.","code":""},{"path":"cont-and-smooth.html","id":"cont-and-smooth","chapter":"19 Continuity and smoothness","heading":"19 Continuity and smoothness","text":"’ve seen various properties functions—whether monotonic, slopes, whether concave (), curvature, etc.—can related first second derivatives function.’s time introduce two new ways describing functions can useful determining whether given function fit purpose intended . continuity smoothness.","code":""},{"path":"cont-and-smooth.html","id":"continuity","chapter":"19 Continuity and smoothness","heading":"19.1 Continuity","text":"intuition behind continuity simple: can draw graph function without lifting pencil paper, graph continuous.Continuity can important attribute modeling function. Often, modeling phenomena small change input expected produce small change output. instance, income changes one penny, expect lifestyle change much. temperature oven changes 1 degree, don’t expect quality cake baking change noticeable way.basic modeling functions continuous entire input domain (one exception). illustrate discontinuity ’ll consider piecewise functions, introduced Chapter 13. Heaviside function, graphed Figure ?? discontinuous.Drawing graph Heaviside function \\(H(x)\\) involves lifting pencil \\(x=0\\).contrast, piecewise ramp function (Figure ?? continuous, don’t need lift pencil paper order draw ramp function.Imagine using Heaviside function, say \\(H(W-20)\\), model plant growth function amount water (cc) provided day. model implies provide 20.001 cc water, plant thrive. stingy, provide 19.999 cc water, plant die. words, small change input can lead large change output.Common sense suggests change 0.002 cc amount water—’s small fraction drop, 2 cubic millimeters volume, going lead qualitative change output. might prefer use sigmoidal function model rather Heaviside function.hand, sometimes small change input lead large change output. instance, model hardness water function temperature sensibly include discontinuity \\(32^\\circ\\)F, temperature water turns ice.One author Charles Dicken’s famous characters, Mr. Macawber, described relationship income, expenditure, happiness way:\"Annual income 20 pounds, annual expenditure 19 [pounds] 19 [shillings] six [pence], result happiness. Annual income 20 pounds, annual expenditure 20 pounds six, result misery.\"Macawber referring common situation pre-20th century England putting debtors prison, regardless size debt. Macawber statement suggests model happiness Heaviside function \\(H(\\text{income}- \\text{expenditure})\\).Whenever output function yes--value, can anticipate model involve discontinuous function.","code":""},{"path":"cont-and-smooth.html","id":"smoothness","chapter":"19 Continuity and smoothness","heading":"19.2 Smoothness","text":"Smoothness different concept continuity, although two related. simply, discontinuous function smooth input discontinuity occurs. even continuous ramp function smooth start ramp. Intuitively, imagine sliding hand along ramp function. feel crease \\(x=0\\).function smooth derivative function discontinuous. instance, derivative ramp function Heaviside function, ramp smooth \\(x=0\\).basic modeling functions (one exception!) smooth everywhere domain. particular, derivatives basic modeling functions continuous, second derivative, third derivative, line. functions called C-infinity, written \\(C^\\infty\\). superscript \\(\\infty\\) means every order derivative continuous.piecewise functions, can useful consider orders smoothness. example \\(C^0\\) means function continuous derivative , ramp function. Figure 19.1 shows \\(C^1\\) function, continuous first derivative discontinuous second derivative.\nFigure 19.1: function whose derivative ramp function (hence continous) whose second derivative Heaviside function (discontinous). Since first derivative continuous, function \\(C^1\\) smoothness.\ntell plot second derivative discontinuous. plane flying along trajectory, feel jerk crossed \\(x=0\\).","code":""},{"path":"cont-and-smooth.html","id":"doesnt-exist","chapter":"19 Continuity and smoothness","heading":"19.3 Doesn’t exist?","text":"Recall logical path led us idea derivative function. started differencing operator, takes input function “small” value \\(h\\):\n\\[{\\cal D}_x f(x) \\equiv \\frac{f(x+h) - f(x)}{h}\\]\n, Figures 16.2 16.3 reported experiments naked modeling functions , \\(h\\) small enough, graph \\({\\cal D}_x f(x)\\) depend \\(h\\). defined function \\(\\partial_x f(x)\\) \\(h\\) doesn’t play role, writing \\(\\lim_{h\\rightarrow 0}\\) remember ancestors, now departed scene:\n\\[\\partial_x f(x) \\equiv \\lim_{h\\rightarrow 0} \\frac{f(x+h) - f(x)}{h}\\]\nConveniently, found derivatives naked modeling functions can written terms naked modeling functions without making reference \\(h\\).discontinuous functions, luck. ’s happens compute \\({\\cal D}_x H(x)\\), derivative Heaviside function, smaller smaller \\(h\\).\nDifferencing Heaviside function produces different functions depending value \\(h\\). Since convergence \\(h\\) gets smaller, ’s fair say Heaviside function derivative. Perhaps useful way think “derivative” Heaviside function unaccountably large \\(h\\rightarrow 0\\).know function large derivative, small difference input make large difference output. brings us back definition discontinuous start chapter. like think “derivative” Heaviside function discontinuous.strictly logical thinker rebel conflict previous two paragraphs: first saying Heaviside function derivative, second saying derivative discontinuous. resolution point away \\(x=0\\), Heaviside function perfectly sensible derivative: \\(\\partial_x H(x) = 0\\) \\(x\\neq 0\\). derivative \\(x=0\\).[Deriv-3a] Understand physical analogs continuity smoothness.[Deriv-3b] Determine function continuous thinking “pencil stays paper” technique[Deriv-3c] Understand smooth degree 1 “Function continuous, derivative continuous[Deriv-3d] Understand smooth degree “Smooth degree derivative continuous”[Fun-4-b-4e] Identify “division zero” source interruption domain function. [[??? Redefine function avoid disruption.]]Now concept derivative function, can discuss terms used describe functions general.","code":"\nH <- makeFun(ifelse(x >=0, 1, 0) ~ x)\nDH01   <- makeFun((H(x + 0.01) - H(x))/0.01 ~ x)\nDH001  <- makeFun((H(x + 0.001) - H(x))/0.001 ~ x)\nDH0001 <- makeFun((H(x + 0.0001) - H(x))/0.0001 ~ x)\nslice_plot(DH01(x) ~ x, domain(x=c(-0.02, 0.02)), npts=500,\n           color=\"red\") %>%\n  slice_plot(DH001(x) ~ x,\n           color=\"green\", npts=500, alpha=0.5) %>%\n  slice_plot(DH0001(x) ~ x,\n           color=\"blue\", npts=500, alpha=0.5) "},{"path":"cont-and-smooth.html","id":"piecewise-functions-1","chapter":"19 Continuity and smoothness","heading":"19.4 Piecewise functions","text":"foil showing smoothness continuity.See section Fun-modeling.Rmd connect .","code":""},{"path":"cont-and-smooth.html","id":"continuity-1","chapter":"19 Continuity and smoothness","heading":"19.5 Continuity","text":"Lift pen.","code":""},{"path":"cont-and-smooth.html","id":"differentiability","chapter":"19 Continuity and smoothness","heading":"19.6 Differentiability","text":"want derivative exist matter details define derivative.\\(\\partial_x f(x) \\equiv \\lim_{h\\rightarrow 0} \\frac{f(x+h) - f(x)}{h}\\)\\(\\partial_x f(x) \\equiv \\lim_{h\\rightarrow 0} \\frac{f(x) - f(x-h)}{h}\\)\\(\\partial_x f(x) \\equiv \\lim_{h\\rightarrow 0} \\frac{f(x+h) - f(x-h)}{2 h}\\)Draw graph function imagination domain \\(x \\[-5, 5]\\). function continuous everywhere *except \\(x = -2, 1, 3\\).Draw graph function imagination domain \\(x \\[-5, 5]\\). function continuous everywhere *except \\(x = -2, 1, 3\\).Draw graph function imagination domain \\(x \\[-5,5]\\). function continuous everywhere \\([-5,5]\\). also derivative everywhere except \\(x = -2, 1, 3\\).Draw graph function imagination domain \\(x \\[-5,5]\\). function continuous everywhere \\([-5,5]\\). also derivative everywhere except \\(x = -2, 1, 3\\).sketched functions , decide level smoothness best describes function. (tricks drawings. function looks like ’s broken–, function locally V-shape \\(\\Lambda\\)-shape–take face value.Question ’s smoothness level function (x)? (Hint: quadratic function first derivative changes x second derivative constant x.)    discontinuous ☹︎        \\(C^0\\) ☹︎        \\(C^1\\) ✓        \\(C^2\\) higher ☹︎ Question B ’s smoothness level function B(x)?    discontinuous ✓        \\(C^0\\) ☹︎        \\(C^1\\) ☹︎        \\(C^2\\) higher ☹︎ Question C ’s smoothness level function C(x)?    discontinuous ☹︎        \\(C^0\\) ✓        \\(C^1\\) ☹︎        \\(C^2\\) higher ☹︎ Question D ’s smoothness level function D(x)?    discontinuous ☹︎        \\(C^0\\) ☹︎        \\(C^1\\) ☹︎        \\(C^2\\) higher ✓ ","code":""},{"path":"prod-comp-rules.html","id":"prod-comp-rules","chapter":"20 Differentiation by algebra","heading":"20 Differentiation by algebra","text":"","code":""},{"path":"prod-comp-rules.html","id":"memorizing-derivatives","chapter":"20 Differentiation by algebra","heading":"20.1 Memorizing derivatives","text":"Generations calculus students memorize algebraic form simple derivatives rules constructing derivative complicated algebraic expressions based simple forms.Often, courses many fields calculus pre-requisite make use simple forms rules. ’s helpful commit common ones memory.Naked modeling functionsThe derivative constant function zero function.\n\\(f(x) \\equiv 7 \\ \\ \\implies \\ \\ \\partial_x f(x) \\equiv 0\\)\n\\(g(x) \\equiv \\ \\ \\implies \\ \\ \\partial_x g(x) \\equiv 0\\)\n\\(h(x,y) \\equiv y \\ \\ \\implies \\ \\ \\partial_x h(x) \\equiv 0\\)\n\\(f(x) \\equiv 7 \\ \\ \\implies \\ \\ \\partial_x f(x) \\equiv 0\\)\\(g(x) \\equiv \\ \\ \\implies \\ \\ \\partial_x g(x) \\equiv 0\\)\\(h(x,y) \\equiv y \\ \\ \\implies \\ \\ \\partial_x h(x) \\equiv 0\\)derivative identity function 1 function.\n\\(f(x) \\equiv x \\ \\ \\implies \\ \\ \\partial_x f(x) \\equiv 1\\)\n\\(g(t) \\equiv t \\ \\ \\implies \\ \\ \\partial_t g(t) \\equiv 1\\)\n… \\(h(x, t) \\equiv t \\ \\ \\implies \\ \\ \\partial_x h(x, t) \\equiv 0\\). Make sure pay attention “respect ” argument, , subscript \\(\\partial\\).\n\\(f(x) \\equiv x \\ \\ \\implies \\ \\ \\partial_x f(x) \\equiv 1\\)\\(g(t) \\equiv t \\ \\ \\implies \\ \\ \\partial_t g(t) \\equiv 1\\)… \\(h(x, t) \\equiv t \\ \\ \\implies \\ \\ \\partial_x h(x, t) \\equiv 0\\). Make sure pay attention “respect ” argument, , subscript \\(\\partial\\).derivative exponential function exponential function.\n\\(f(t) \\equiv e^t \\ \\ \\implies\\ \\ \\partial_t f(t) = e^t\\).\n… watch -respect-argument matches argument exponent, instance, \\(f(x, t) \\equiv e^t \\ \\ \\implies\\ \\ \\partial_x f(x, t) = 0\\).\n\\(f(t) \\equiv e^t \\ \\ \\implies\\ \\ \\partial_t f(t) = e^t\\).… watch -respect-argument matches argument exponent, instance, \\(f(x, t) \\equiv e^t \\ \\ \\implies\\ \\ \\partial_x f(x, t) = 0\\).Sinusoids derivatives sinusoids.\n\\(f(x) \\equiv \\sin(x)\\ \\ \\implies\\  \\ \\partial_x f(x) = \\cos(x)\\)\n\\(f(x) \\equiv \\cos(x)\\ \\ \\implies\\  \\ \\partial_x f(x) = -\\sin(x)\\). Note minus sign!\n\\(f(x) \\equiv \\sin(x)\\ \\ \\implies\\  \\ \\partial_x f(x) = \\cos(x)\\)\\(f(x) \\equiv \\cos(x)\\ \\ \\implies\\  \\ \\partial_x f(x) = -\\sin(x)\\). Note minus sign!derivative power-law function power-law function.\n\\(f(x) \\equiv x^2 \\ \\ \\implies \\ \\ \\partial_x f(x) \\equiv 2 x\\)\n\\(f(x) \\equiv x^3 \\ \\ \\implies \\ \\ \\partial_x f(x) \\equiv 3 x^2\\)\n\\(f(x) \\equiv x^{1/2}\\ \\ \\implies \\ \\ \\partial_x f(x) \\equiv -\\frac{1}{2} x^{-1/2}\\)\n\\(f(x) \\equiv x^{1.43}\\  \\ \\implies \\ \\ \\ \\partial_x f(x) \\equiv 1.43 x^{0.43}\\)\ngeneral, rule \\(f(x) \\equiv x^n \\ \\ \\implies \\partial_x f(x) \\equiv n x^{n-1}\\) \\(n \\neq 0\\). \\(n = 0\\) function \\(x^0 = 1\\) simply constant derivative zero.\n\\(f(x) \\equiv x^2 \\ \\ \\implies \\ \\ \\partial_x f(x) \\equiv 2 x\\)\\(f(x) \\equiv x^3 \\ \\ \\implies \\ \\ \\partial_x f(x) \\equiv 3 x^2\\)\\(f(x) \\equiv x^{1/2}\\ \\ \\implies \\ \\ \\partial_x f(x) \\equiv -\\frac{1}{2} x^{-1/2}\\)\\(f(x) \\equiv x^{1.43}\\  \\ \\implies \\ \\ \\ \\partial_x f(x) \\equiv 1.43 x^{0.43}\\)general, rule \\(f(x) \\equiv x^n \\ \\ \\implies \\partial_x f(x) \\equiv n x^{n-1}\\) \\(n \\neq 0\\). \\(n = 0\\) function \\(x^0 = 1\\) simply constant derivative zero.derivative natural logarithm function \\(\\ln(x)\\) reciprocal \\(1/x\\).\n\\(f(x) \\equiv \\ln(x)\\ \\ \\implies \\  \\ \\partial_x f(x) \\equiv x^{-1}\\)\n\\(f(x) \\equiv \\ln(x)\\ \\ \\implies \\  \\ \\partial_x f(x) \\equiv x^{-1}\\)Basic modeling functionsEach basic modeling functions \\(f(x)\\) naked function scaled input general form \\(f\\left((x-x_0)\\right)\\). ’ll call \\(\\) scaling factor \\(x_0\\) shift. differentiate basic modeling functions two steps:Identify derivative naked modeling function \\(\\partial_x f(x)\\). Let’s call derivative \\(f'(x)\\). instance, \\(f(x) \\equiv e^x\\), \\(f'(x) = e^x\\). , \\(f(x) \\equiv \\ln(x)\\), \\(f'(x) = 1/x\\).Replace simple \\(x\\) argument (1) scaled input \\((x-x_0)\\), multiply scaling factor. result look like \\(f'\\!\\left((x-x_0)\\right)\\)\nderivative $f((x-x_0)) =first glance, pattern \\(\\sin()\\) may seem different, ’s really . write \\(\\sin\\left(\\frac{2\\pi}{P}(t-t_0)\\right)\\) scaling factor \\(\\frac{2\\pi}{P}\\).","code":""},{"path":"prod-comp-rules.html","id":"exponentials-and-logarithms-optional","chapter":"20 Differentiation by algebra","heading":"20.2 Exponentials and logarithms (optional)","text":"base. relationship particularly simple base \\(e\\).\n- \\(f(x) \\equiv e^x\\ \\ \\implies \\partial_x f(x) \\equiv e^x\\)\n- \\(g(x) \\equiv 2^x\\ \\ \\implies \\partial_x g(x) \\equiv \\ln(2)\\cdot 2^x\\)\n- \\(h(x) \\equiv 10^x\\ \\ \\implies \\partial_x h(x) \\equiv \\ln(10)\\cdot 10^x\\)\n- Note \\(\\ln()\\) -called “natural logarithm,” logarithm base \\(e \\approx 2.71828182845905...\\)","code":"- $g(x) \\equiv \\log_{10}(x)\\ \\ \\implies \\  \\ \\partial_x g(x) \\equiv [\\ln(10) x]^{-1}  \\approx  [2.30259  x]^{-1}$\n- $h(x) \\equiv \\log_2(x)\\ \\ \\implies \\  \\ \\partial_x h(x) \\equiv [\\ln(2) x]^{-1}  \\approx  [0.69315  x]^{-1}$"},{"path":"prod-comp-rules.html","id":"combining-functions","chapter":"20 Differentiation by algebra","heading":"20.3 Combining functions","text":"Chapter 11 introduced three major methods putting two basic modeling functions together order make new function.Linear combinations: e.g. \\(f(x) + b g(x)\\)Products: e.g. \\(f(x) g(x)\\)Composition:, e.g. \\(f(g(x))\\) (usually different function \\(g(f(x))\\).)three cases, start two functions \\(f(x)\\) \\(g(x)\\). Whatever functions , ’ll need find individual derivative. Normally, write derivatives \\(\\partial_x f(x)\\) \\(\\partial_x g(x)\\). seeing patterns derivatives three cases, helps use much compact (though less general) notation: \\(\\partial_x f(x) = f'(x)\\) similarly \\(g'(x)\\). notation, derivatives linear combinations, products, compositions matter applying formula, traditionally called rule.Linear combinations\\[\\partial_x \\left[\\strut f(x) + b g(x)\\right] = f'(x) + b g'(x)\\]\nii. Products:\n\\[\\partial_x \\left[\\strut f(x) g(x)\\right] = f'(x) g(x) + f(x) g'(x)\\]\niii. Composition:\n\\[\\partial_x \\left[\\strut f(g(x))\\right] = f'(g(x)) g'(x)\\\\\n\\ \\\\\n\\partial_x \\left[\\strut g(f(x))\\right] = g'(f(x)) f'(x)\\]derivative linear combinations particularly simple: derivative linear combination functions linear combination derivatives functions, , \\[h(x) \\equiv f(x) + b g(x)\\ \\ \\implies \\ \\ \\partial_x h(x) = \\,\\partial_x f(x) + b\\, \\partial_x g(x)\\]Consider function \\(h(t) \\equiv e^{kt} + B\\). linear combination two functions, can call \\(f(t) \\equiv e^{kt}\\) \\(g(t) \\equiv 1\\).course, \\(f(t)\\) \\(g(t)\\) basic modeling functions memorized derivatives: \\(f'(t) = k e^{kt}\\) \\(g'(t) = 0\\).Putting together gives \\[\\partial_t h(t) = \\, k\\, e^{kt} + B\\times 0= \\, k\\, e^{kt}\\]derivative polynomial follows linear combination rule. ’s polynomials linear combination monomials, \\(x^0\\), \\(x^1\\), \\(x^2\\), .consequence derivative polynomial another polynomial, term reduced one order.\\(\\partial_x x^0 = 0\\)\\(\\partial_x x^1 = x^0 = 1\\)\\(\\partial_x x^2 = 2 x^1 = 2x\\).Example: \\(f(x) \\equiv + b x + c x^2\\  \\  \\implies\\ \\ \\partial_x f(x) \\equiv b + 2 c x\\)","code":""},{"path":"prod-comp-rules.html","id":"composition-of-functions","chapter":"20 Differentiation by algebra","heading":"20.4 Composition of functions","text":"chain rule, considers derivative function \\(h(x)\\) composition two functions: \\(h(x) \\equiv f(g(x))\\).’ll call \\(f()\\) “exterior function” \\(g()\\) interior function. write exterior function , ’ll call input \\(y\\). interior function written ordinary way. example:apply chain rule, follow steps:Identify exterior function \\(f(y)\\) interior function \\(y(x) \\equiv g(x)\\).Calculate derivative interior function: \\(\\partial_x y(x)\\)Calculate derivative exterior function respect \\(y\\), , \\(\\partial_y f(y)\\)Write \\(\\partial_y f(y)\\) , everywhere \\(y\\) appears, replace \\(g(x)\\).Multiply expression (4) \\(\\partial_x g(x)\\). result derivative composition respect \\(x\\).Example: \\(\\partial_x \\sin(x)\\).exterior function \\(\\sin(y)\\) interior function \\(y(x) \\equiv ax\\)Derivative interior function: \\(\\partial_x y(x) \\equiv \\).Derivative exterior function: \\(\\partial_y \\sin(y) \\equiv \\cos(y)\\)Replace \\(y\\) (3) \\(y(x) \\equiv ax\\), giving \\(\\cos(ax)\\).Multiply result (4) \\(\\partial_x y(x)\\), giving final result \\(\\cos(ax)\\).Example: \\(\\partial_x \\sqrt{1 + x^2}\\)exterior function \\(\\sqrt{y}\\), interior function \\(y(x) \\equiv 1 + x^2\\).derivative interior function \\(\\partial_x y(x) \\equiv 2 x\\).derivative exterior function \\(-1/\\sqrt{y}\\)Replace \\(y\\) (3) interior function, giving \\(-1/\\sqrt{1 + x^2}\\)Multiply result (4) \\(\\partial_x y(x)\\), giving final result \\(-2x/\\sqrt{1 + x^2}\\)’ll start familiar linear approximation \\(f()\\), namely\\[f({\\cal X} + {\\cal H}) = f({\\cal X}) + {\\cal H}f'({\\cal X})\\]\nused funny symbols \\(\\cal X\\) \\(\\cal H\\) , doesn’t make fundamental difference. Since \\(\\cal X\\) can value whatsoever, let’s make output \\(g()\\) input \\(x\\): , \\({\\cal X} = g(x)\\). increase input \\(x+h\\), output change: \\(g(x+h) = g(x) + h g'(x)\\). Since output \\(g()\\) input \\(x+h\\) \\({\\cal X} + {\\cal H}\\), , \\(g(x+h) = {\\cal X} + {\\cal H}\\). Since already know \\({\\cal X} = g(x)\\) can solve \\({\\cal H}\\), namely\n\\[{\\cal H} = h g'(x)\\]\ndefinitions \\({\\cal X}\\) \\({\\cal H}\\) terms \\(g(x)\\) \\(h\\), find\n\\[f(g(x+h)) = f(g(x)) + h g'(x) f'(g(x))\\] Re-arranging, get \\[\\frac{f(g(x+h)) - f(g(x))}{h} = f'(g(x)) g'(x)\\] formula chain rule.","code":""},{"path":"prod-comp-rules.html","id":"product-of-functions","chapter":"20 Differentiation by algebra","heading":"20.5 Product of functions","text":"See 141 DD 31 drill problems","code":""},{"path":"prod-comp-rules.html","id":"checking-your-work","chapter":"20 Differentiation by algebra","heading":"20.6 Checking your work","text":"get result derivative, plot along finite-difference approximation. close, ’re good.get result derivative, plot along finite-difference approximation. close, ’re good.Apply antiD() operator derivative graphically confirm constant difference output antiD() original function.Apply antiD() operator derivative graphically confirm constant difference output antiD() original function.","code":""},{"path":"prod-comp-rules.html","id":"working-with-algebraic-derivatives","chapter":"20 Differentiation by algebra","heading":"20.7 Working with algebraic derivatives","text":"need re-organized, content broken chapter.’re proud pet dog, Swimmer. often go beach walk along water’s edge. throw ball beach, angle lands water. Swimmer goes work. runs beach (fast) plunges water, heading toward ball. can run fast beach: 400 m/minute. swims rather slower: 50 m/min.Suppose threw ball point 50 meters beach 10 meters water. overall distance ball therefore \\(\\sqrt{50^2 + 10^2} = 51\\) meters. Swimmer entered water immediately, take minute reach ball (51 m / 50 m/min). Swimmer can get ball faster running beach big turning water. Swimmer ran 50 meters beach turned swim 10 meters, take (50/400 + 10/50) minutes, one-third minute.Can Swimmer better? can set calculation like . Imagine \\(x\\) distance beach Swimmer runs. time run distance \\(x/400\\). distance remaining ball can found pythagorean theorem. One leg triangle length \\((50-x)\\), length 10 m. \\(x\\) 45, distance swim water \\(\\sqrt{(50-45)^2 + 10^2}\\). Divide distance 50 m/min get time spent water.Time_to_ball() takes one argument, distance \\(x\\) Swimmer runs beach turning water. Use sandbox find distance calculus-savvy Swimmer runs beach turning water, Swimmer’s goal get ball fast possible.Question ’s optimal running distance Swimmer?    47.25 ☹︎        47.5 ☹︎        48.25 ☹︎        48.75 ✓        49.25 ☹︎        49.75 ☹︎ ’s news story mathematician’s dog shore Lake Michigan.’re skeptical dog might calculus problem running fetch ball, consider path taken photon. “Fermat’s Principle” light takes path least time. illustrate, consider problem photon travelling point point B, diagram. shortest path two points straight line. Along straight-line path, time taken photon distance divided speed light.diagram shows another path consisting two segments, one length \\(l_1\\) \\(l_2\\). Obviously, two-segment path longer straight-line path. Fermat’s principle lead light “prefer” longer path time taken traverse shorter.reason indirect path might shorter speed light differs different physical media. Light traveling vacuum famously speed 300,000 km per second. air, speed smaller factor 1/1.003. water, speed smaller still: factor 1/1.3.Imagine blue zone diagram water clear zone air. time photon travel point B proportional \\(1.003\\ l_1 + 1.3\\ l_2\\).see path actually taken light, let’s imagine point \\((x=0, y=10)\\) point B \\((x=20, y=-10)\\), boundary water air \\(y=0\\). ’ll place point P \\((x, 0)\\). total time taken light traverse path 1.003 dist(P) + 1.3 dist(P B).Question formulas gives total time takes light traverse path P relative speed 1/1.003 path P B relative speed 1/1.3? located \\((0, 10)\\), B located \\((20,-10)\\), P located \\((x, 0)\\)\\(1.003 \\sqrt{(x-0)^2 +(0-10)^2}+ 1.3\\sqrt{(20-x)^2 + (-10 - 0)^2}\\) ✓ \\(\\sqrt{(x-0)^2 +(0-10)^2}/1.003+ \\sqrt{(20-x)^2 + (-10 - 0)^2}/1.3\\) ☹︎ ’s true divide distance speed get time, relative speeds \\(1/1.003\\) \\(1/1.3\\). \\(1.003 \\sqrt{(x-10)^2 +(0-0)^2}+ 1.3\\sqrt{(-10 -x)^2 + (50 - 0)^2}\\) ☹︎ mixes x y coordinates. distance P \\(\\sqrt{(x_P - x_A)^2 + (y_P - y_A)^2}\\). problem, point P \\((50-x, 0)\\). Implement calculation total_time() R, use graph find argmin.Question B ) value \\(x\\) (, argmin) minimizes travel time light points B? (Choose best answer)10.52 ☹︎ 11.02 ☹︎ 11.19 ☹︎ 11.61 ☹︎ 12.07 ☹︎ 12.22 ☹︎ 12.46 ☹︎ 12.50 ✓ 12.95 ☹︎ 13.19 ☹︎ 13.21 ☹︎ 13.34 ☹︎ 13.92 ☹︎ 14.03 ☹︎ 14.14 ☹︎ 14.16 ☹︎ 14.44 ☹︎ 14.5 ☹︎ 14.94 ☹︎ Question C ii) Suppose instead water, blue area glass. speed light glass roughly 1/1.5 times big vacuum. value \\(x\\) minimizes travel time light points B? (Choose best answer)10.13 ☹︎ 11.07 ☹︎ 11.13 ☹︎ 11.5 ☹︎ 11.57 ☹︎ 12 ☹︎ 12.38 ☹︎ 12.62 ☹︎ 12.87 ☹︎ 12.88 ☹︎ 12.95 ☹︎ 13.16 ☹︎ 13.4 ☹︎ 13.60 ✓ 13.71 ☹︎ 13.85 ☹︎ 14.18 ☹︎ 14.25 ☹︎ 14.34 ☹︎ 14.7 ☹︎ \nTurn problem algebra.Later accumulation, figure mile-markers road.tradition mathematics education using geometrical, distance-related problems illustrate optimization. happens, problems can provide valuable insight physical situations.Suppose function \\(f(x)\\) whose graph represents path road jungle. lion coordinates \\((3, 2)\\) jungle. point travel along road closest lion.trick see position road value \\(x\\) \\((x, f(x))\\). distance lion function \\(x\\) \\[ \\text{lion_dist}(x) \\equiv \\sqrt{(x - 3)^2 + (f(x)-2)^2} .\\]road lion graphed sandbox road \\(f(x) \\equiv x^2 e^{-x}\\). can see road comes closest lion roughly \\(x=3\\). implement \\(\\text{lion_dist}(x)\\) function, ’ll able find argmin, , value input \\(x\\) output \\(\\text{lion_dist}(x)\\) minimal. value function \\(\\text{lion_dist}(x)\\) argmin min function.find argmin distance lion precisely, implement \\(\\text{lion_dist}(x)\\) function sandbox. Plot look minimum. Alternatively, find \\(\\partial_x \\text{lion_dist}(x)\\) find \\(x\\) zero crossing.Question Using sandbox , find argmin graph function \\(g(x) \\equiv x^2 \\exp(-x)\\) comes closest point \\((3, 2)\\)? (Choose best answer.)2.03 ☹︎ 2.07 ☹︎ 2.21 ☹︎ 2.27 ☹︎ 2.28 ☹︎ 2.33 ☹︎ 2.37 ☹︎ 2.39 ☹︎ 2.43 ☹︎ 2.48 ☹︎ 2.58 ☹︎ 2.71 ☹︎ 2.80 ✓ 2.94 ☹︎ previous problem, used graphics find argmin function. can, course, successively reset domain graphing window zoom location argmin.find argmin numerically, start (pretty good) guess argmin. Recall function (total_time()) can modeled low-order polynomial. function extreme point polynomial include quadratic term. Suppose guessed \\(x=10\\) good starting guess argmin air--water problem. can compute first second derivatives total_time(x) respect x evaluate derivative functions \\(x=10\\). (Use D() function construct derivatives.) sandbox, use value two derivatives \\(x=10\\) guess find approximation minimum function.help remind , quadratic approximation function \\(t(x)\\) around reference point \\(x_0\\) : \\[q(x) \\equiv t(x_0) + \\partial_x t(x_0) [x - x_0] + \\frac{1}{2} \\partial_{xx} t(x_0) [x - x_0]^2\\]\nFind derivative \\(\\partial_x q(x)\\) set equal zero. Inserting appropriate values \\(x_0\\), \\(\\partial_x t(x_0)\\), \\(\\partial_{xx} t(x_0)\\) enable calculate value \\(x\\) minimum approximating quadratic.Question iii) Letting blue area water (1/1.3 speed factor) starting guess \\(x_0=10\\), find \\(x\\) minimizes approximating quadratic.9.912 ☹︎ 10.748 ☹︎ 11.017 ☹︎ 11.151 ☹︎ 11.267 ☹︎ 11.327 ☹︎ 11.515 ☹︎ 11.713 ☹︎ 11.81 ☹︎ 12.074 ☹︎ 12.276 ☹︎ 12.321 ☹︎ 12.438 ☹︎ 12.461 ☹︎ 12.579 ✓ 12.618 ☹︎ 12.637 ☹︎ 12.993 ☹︎ 13.261 ☹︎ 13.36 ☹︎ 13.527 ☹︎ 13.888 ☹︎ Question B iv) Using correct answer (iii) new \\(x_0\\), find value \\(x\\) minimizes new approximating quadratic.9.912 ☹︎ 10.748 ☹︎ 11.017 ☹︎ 11.151 ☹︎ 11.267 ☹︎ 11.327 ☹︎ 11.515 ☹︎ 11.713 ☹︎ 11.81 ☹︎ 12.074 ☹︎ 12.276 ☹︎ 12.321 ☹︎ 12.438 ☹︎ 12.461 ✓ 12.579 ☹︎ 12.618 ☹︎ 12.637 ☹︎ 12.993 ☹︎ 13.261 ☹︎ 13.36 ☹︎ 13.527 ☹︎ 13.888 ☹︎ ","code":"\ndistance_in_water <- makeFun( your_pythagorus_calculation ~ x)\ntime_to_ball <- makeFun(x/400 + distance_in_water/50 ~ x)## Warning in normalizePath(\"www/1200px-Fermat_Snellius.svg.png\"): path[1]=\"www/\n## 1200px-Fermat_Snellius.svg.png\": No such file or directory\ntotal_time <- makeFun( your_formula ~ x)\nslice_plot(total_time(x) ~ x, domain(x=c(0, 20)))\n\n# For the next problem\ndx_time  <- D(total_time(x) ~ x)\ndxx_time <- D(total_time(x) ~ x + x)\nslice_plot(x^2 * exp(-x) ~ x, domain(x=c(0,5))) %>%\n  gf_label(2 ~ 3, label=\"lion\") %>%\n  gf_refine(coord_fixed())"},{"path":"prod-comp-rules.html","id":"tree-harvesting","chapter":"20 Differentiation by algebra","heading":"20.8 Tree harvesting","text":"uncle Bob writing business plan tree farm lumber. heard taking Math 141Z, emails giving information asking numbers. particular, Bob sends report saying , species tree plans plant, amount usable lumber function growth time \\(t\\) looking like function defined sandbox:Bob heard time harvest tree growing fastest.Question C ) value t (years) \\(\\partial_t\\) lumber(t) largest?    15 ☹︎        16 ☹︎        17 ☹︎        18 ☹︎        19 ☹︎        20 ☹︎        21 ☹︎        22 ☹︎        23 ☹︎        24 ☹︎        25 ✓        26 ☹︎        27 ☹︎        28 ☹︎        29 ☹︎        30 ☹︎ patiently explain uncle certainly want harvest trees growing fastest. say, “want wait average growth rate point fastest. little tree reaches adult volume.”Question D B) value t (years) average growth rate, time, fastest.Figure 1 shows lens together source target point. Light passing lens refracted. path followed light one shortest time transit source target.light enters lens point \\(P_{} = (x_{}\\ , \\ -\\mbox{Lens}(x_{}))\\) leaves \\(P_{} = (x_{}\\ ,\\  \\mbox{Lens}(x_{}))\\). don’t know either \\(x_{}\\) \\(x_{}\\). can find optimization., find distance source \\(P_{}\\), \\(P_{}\\) target. two legs route air, time transit leg proportional refractive index 1.03 times distance.course, light also travel lens. ’ll make lens glass high refractive index, transit time distance \\(P_{}\\) \\(P_{}\\) multiplied lens’s refractive index 1.8.objective function sum three legs’ transit times. ’s already programmed sandbox. command make contour plot output objective function domain \\(x_{}\\) \\(x_{}\\). Finally, last line sandbox draws picture lens light path, insert argmins \\(x_{}\\) \\(x_{}\\) pick contour plot objective function. (\\(x_{}\\) \\(x_{}\\) shown initial code sandbox right!)Question index refraction lens 1.80, optimal values \\(x_{}\\) \\(x_{}\\)? (Choose best answer.)\\(x_{} = -22, \\ x_{} = -21\\) ✓ \\(x_{} = -26, \\ x_{} = -20\\) ☹︎ \\(x_{} = -24, \\ x_{} = -21\\) ☹︎ \\(x_{} = -18, \\ x_{} = -17\\) ☹︎ \\(x_{} = -25, \\ x_{} = -20\\) ☹︎ ’s good practice test software situations know right answer. simple situation lens . One way change middle line transit_time() index refraction 1.03, just like surrounding air.Question B index refraction lens 1.03, optimal values \\(x_{}\\) \\(x_{}\\)? (Choose best answer.)\\(x_{} = -17, \\ x_{} = -15\\) ✓ \\(x_{} = -18, \\ x_{} = -14\\) ☹︎ \\(x_{} = -16, \\ x_{} = -16\\) ☹︎ \\(x_{} = -18, \\ x_{} = -18\\) ☹︎ \\(x_{} = -17, \\ x_{} = -18\\) ☹︎ Let’s explore extreme situation. Diamond transparent material highest index refraction, 2.417. Imagine material index refraction 10. means light travel slowly within lens.","code":"\nlumber <- makeFun(ifelse(t<10, 0, 100*exp((t-25)/8)/(1 + exp((t-25)/8))) ~ t)\ndt_lumber <- D(lumber(t) ~ t)\nave_growth_rate <- makeFun( your_expression_here ~ t)\nslice_plot(lumber(t) ~ t, domain(t=c(0,100)))\n# Describe the shape of the lens\nLens_top <- makeFun(-90 + sqrt(100^2 - x^2)  ~ x)\nLens_bottom <- makeFun(-Lens_top(x) ~ x)\n\n# Define the objective function\ntransit_time <- makeFun(\n  1.03 * sqrt((x_in - -20)^2 + (Lens_bottom(x_in)- (-30))^2) +\n  1.80 * sqrt((x_out-x_in)^2 + (Lens_top(x_out) - Lens_bottom(x_in))^2) + \n  1.03 * sqrt((x_out - -10)^2 + (Lens_top(x_out)-50)^2) ~\n    x_in + x_out)\n# Graph the objective function\ncontour_plot(transit_time(x_in, x_out) ~ x_in + x_out, \n             domain(x_in = c(-40,40), x_out = c(-40,40)), npts=200)\n# Insert argmax from contour plot\nplot_lens(10, -5, Lens_top, Lens_bottom)"}]
