[{"path":"index.html","id":"welcome-to-calculus","chapter":"Welcome to calculus","heading":"Welcome to calculus","text":"Calculus set concepts techniques provide main mathematical basis dealing motion, growth, decay, oscillation. phenomena can simple ball arcing ballistically air complex airflow wing generates lift. Calculus used biology business, chemistry, physics engineering. basis weather prediction, understanding climate change, algorithms heart rate blood oxygen measurement wristwatches. major part language science, logistics. electron orbitals chemistry, stresses bones beams, business cycle recession rebound understood primarily calculus. 10Calculus central science beginnings. coincidence scientific method introduced language calculus invented small group people historical period known Enlightenment. Learning calculus always badge honor entry ticket professions. Millions students career ambitions enhanced passing calculus course thwarted lack access one.1880s, hit musical featured “model modern major general.” One claims modernity: “’m good integral differential calculus.”1What modern 1880 modern anymore. Yet, amazingly, calculus today every bit central science technology ever , much important logistics, economics myriad fields ever .\nlast 20 years, calculus become even important. reason science, engineering, society now fully adopted computer almost aspects work, study, life. amount data collected used exploded. Machine learning become way human decision makers interact data.Think means become “computerized.” take everyday example, consider video. span human life moved system involved people going theaters watch shadows recorded cellulose film distribution airwaves low-resolution television, introduction high-def broadcast video, demand streaming huge libraries movies. Just anyone can record, edit, distribute video. range topics (including calculus) can access video tutorial demonstration incredibly vast. recent progress owed computers. 20The “stuff” computers operate , transform transmit always mathematical representations stored bits. creation mathematical representations objects events real world essential every task sort computer performs. Calculus key component inventing using representations.may scratching head. calculus important, many friends took calculus came away wondering ? ’s important “slopes” “areas” come high-school teacher couldn’t tell calculus ?disconnect enthusiasm expressed preceding paragraphs lived experience students real. two major reasons disconnect, tackle head-book.First, teachers mathematics deep respect tradition. respect merits result almost calculus taught using methods appropriate era paper pencil, computer era. see, book express concepts calculus way carries directly uses calculus computers genuine work. 30Second, uses calculus enabled topics Calc Calc II, courses /II preliminary: linear algebra dynamics. small fraction students start Calc ever reach parts calculus useful.Fortunately, large amount bloat standard textbook topics Calc /II can removed make room genuinely important topics. try book.","code":""},{"path":"index.html","id":"computing-and-apps","chapter":"Welcome to calculus","heading":"Computing and apps","text":"text provides two complementary ways access computing. intuitive designed purely exercise visualize mathematical concepts mouse-driven, graphical apps. illustrate, app ’ll use Block 6. can click snapshot open app browser.fundamentally, carrying computing composing computer commands text computer carry commands. One good way sandbox, kind app provides safe place enter commands. ’ll open sandbox (click image ) browser.’ve entered computer commands, press “Run” button commands carried .40You may prefer install R RStudio software laptop. usually provides faster response lowers load sandbox cloud servers used students.Experienced R users may even prefer skip sandbox entirely use standard resources RStudio edit evaluate computer commands. ’d use exactly R commands regardless whether use cloud server laptop.important technique teaching learning computing present scaffolding computer commands. first, scaffolding may complete, correct commands can cut--paste sandbox calculation carried . times left student fill part ’s left scaffolding. example, introduce drawing graphs functions choice domain, might see scaffold blanks filled :can hardly expected point make sense part command, soon .","code":"slice_plot( exp(-3*t) ~ t, domain( --fill in domain-- ))"},{"path":"index.html","id":"exercises-and-feedback","chapter":"Welcome to calculus","heading":"Exercises and feedback","text":"Learning facilitated rapid, formative feedback. Many exercises book arranged give .50Short answer exercises often arranged give immediate feedback goes beyond right--wrong. words, answer incorrect, try tell incorrect provide hint guide correct answer. frivolous example:Question word calculus mean literally?small stone ✓ stones part apparatus numerical calculations, back days pencil invented. source trouble students. ☹︎ Calculus sometimes reputation, say, “pain, gain.” Find better answer. element calcium. ☹︎ , get right answer ’ll realize two related cases. exercises meant drill, provide right--wrong feedback. Still exercises provide feedback . Typically, intended raise stakes graded work, encouraging think carefully choosing answer.","code":""},{"path":"change-relationships.html","id":"change-relationships","chapter":"1 Change relationships","heading":"1 Change relationships","text":"questions started motion. words describe speed: fast slow. words describe force: strong weak, heavy light. words describe location distance: far near, long short, . relationships among things? time fit , intangible quantity aspects location (long short) speed (quick slow)? 2000Galileo (1564-1642) started ball rolling. son musician music theorist, sense musical time, steady beat intervals. student medicine Pisa, noted swinging pendulums kept reliable time, regardless amplitude swing. accidentally attending lecture geometry, turned mathematics natural philosophy. Inventing telescope, observations put collision course accepted classical truth nature planets. Seeking understand gravity, built apparatus enabled measure accurately position time ball rolling straight ramp. belled gates set mark ball’s passage spaced arithmetically musical time: 1, 2, 3, 4, …. distance gates geometric: 1, 4, 9, 16, …. Thus established mathematical relationship increments time increments position. Time advanced 1, 1, 1, 1, … position 1, 3, 5, 7, …. observed second increments position, increments increments 1, 3, 5, 7, …, evenly spaced: 2, 2, 2, …. 2005Putting observations tabular form, adding columns thefirst increment \\(y(t) \\equiv x(t+1) - x(t)\\) thesecond increment \\(y(t+1) - y(t)\\)Galileo neither mathematics equipment measure motion continuously time. might obvious us now, position function time \\(x(t)\\), little practical significance . discover first increments \\(x\\) something much like slope function Chapter ??. 2010\\[{\\cal D}_t\\, x(t) \\equiv \\frac{x(t + 1) - x(t)}{1}\\]\ndata, observed \\({\\cal D}_t\\, x(t)\\) increases linearly \\(t\\): \\[{\\cal D}_t x(t) = 2 t + 1\\]Calculating second increments \\(x\\) done “slope function slope function,” can call \\({\\cal D}_{tt}\\):\n\\[{\\cal D}_{tt} x \\equiv {\\cal D}_t \\left[{\\cal D}_t x(t)\\right] = 2(t+1) + 1 - (2 t + 1) = 2\\]\n## Continuous timeNewton considered problem continuous time rather Galileo’s discrete time. reframed slope function big increments slope operator \\({\\cal D}_t\\) imagined vanishingly small increments operator shall denote \\(\\partial_t\\) call differentiation. 2015The kind question Newton wanted able calculate answer , “find function \\(x(t)\\) whose second increment, \\(\\partial_{tt} x(t) = 2\\)?” approach, called “method fluxions,” became important name became, simply, “Calculus.” 2020Over next three centuries, calculus evolved set techniques describing motion general-purpose mathematics change. Applying calculus real world involves understanding change relationships quantities. give examples: 2025Electrical power change respect time electrical energy.Birth rate one component change respect time population.Interest, bank interest credit card interest, change repect time assets.Inflation change respect time prices.Disease incidence one component change respect time disease prevalence.Force change respect position energy.question involves pair quantities function time might might quantity/rate--change pair. , say quantity . Feel free look dictionary definition words uncertain .Question Deficit debtDeficit rate change debt respect time. ✓ Debt rate change deficit respect time. ☹︎ rate change pair. ☹︎ Question B water contained flowFlow rate change water contained respect time. ✓ Water contained rate change flow respect time. ☹︎ rate change pair. ☹︎ Question C Interest rate debt owed credit cardInterest rate rate change credit card debut respect time. ✓ Credit card debut rate change interest rate respect time. ☹︎ rate change pair. ☹︎ Question D Rain intensity total rainfallRain intensity rate change total rainfall respect time. ✓ Total rainfall rate change rain intensity respect time. ☹︎ rate change pair. ☹︎ Question E Force accelerationForce rate change acceleration respect time. ☹︎ Acceleration rate change force respect time. ☹︎ rate change pair. ✓ dimension force \\(ML/T^2\\). dimension acceleration \\(L/T^2\\). rate change respect time extra T denominator dimensions. Question F Position accelerationPosition rate change acceleration repect time. ☹︎ Acceleration rate change position respect time. ☹︎ rate change pair. ✓ dimension position \\(L\\). dimension acceleration \\(L/T^2\\). rate change position dimension \\(L/T\\). ’s called ‘velocity.’ Question G Velocity air resistenceVelocity rate change air resistence repect time. ☹︎ Air resistence rate change velocity respect time. ☹︎ rate change pair. ✓ Air resistence force, dimension \\(M L/T^2\\). Velocity dimension \\(L/T\\). rate change velocity respect time acceleration, dimension \\(L/T^2\\). ","code":""},{"path":"change-relationships.html","id":"slopes-and-motion","chapter":"1 Change relationships","heading":"1.1 Slopes and motion","text":"Chapter ?? introduced idea slope function: function \\(g(t)\\) whose value instant gives instantaneous rate change partner function \\(f(t)\\). keep easier track relationship function ’s slope function, use \\({\\cal D}\\) notation:\n\\[{\\cal}D_t f(t)\\] slope function \\(f(t)\\) respect \\(t\\).illustrate, imagine graph position car along road Figure 1.1. course hour, car traveled 25 miles. words, average speed 25 miles/hour: slope red line segment. Given traffic, sometimes car stopped (time C), sometimes crawling (time D) sometimes much faster average (time B). 2030\nFigure 1.1: position imagined car hour time. (black) red line shows position car travelled steadily average speed hour.\ncourse, ’re driving aware car’s speed instant. need look speedometer read value (miles per hour). Speedometers don’t show average speed entire trip. average speed slope red line Figure @ref(fig:stop--go2}, 25 miles one hour, usually stated 25 miles-per-hour. 2035In terms Figure @ref(fig:stop--go2}, speedometer reading slope \\(f(t)\\) given instant. can see Figure instant speed close average speed entire trip. instant B car going faster; slope much steeper. hand, instant C car standstill; position doesn’t change . 2040The car’s speedometer shows speed moment—instant—trip. can see Figure @ref{fig:stop--go}, speed varies sometimes less average speed, sometimes greater, occasionally equal average speed trip. 2045Although can easily judge whether instantaneous speed faster slower average speed, quantifying speed requires work: calculating slope tangent line.Far easier job done us. means compute slope function \\(f()\\), , \\({\\cal D}_tf()\\). Figure 1.2 shows \\({\\cal D}_tf()\\) directly.can read speed graph instant simply reference vertical axis.\nFigure 1.2: instantaneous velocity car whose position vs time shown Figure 1.1.\ntwo graphs Figures ?? 1.2 show exactly car trip. presentation data different graphs makes easy see things hard see others. instance, figuring car stand-still harder position-vs-time graph speed-vs-time graph. 2050Having worked theory slope functions, Newton ready express laws motion continuous time. denoting position \\(x(t)\\). familiar concepts velocity force defined terms slope functions position “quantity matter,” call “mass.” 2055Velocity slope function position: \\(v(t) \\equiv {\\cal D}_t x(t)\\).Net force slope function velocity times mass: \\(F(t) \\equiv m {\\cal D}_t v(t)\\)take mass formulation, give name specifically slope function velocity; call acceleration.Acceleration slope function velocity: \\((t) \\equiv {\\cal D}_t v(t)\\).acceleration concept, can define net force mass times acceleration. better known Newton’s Second Law Motion.used net force quantity related mass slope function velocity. different sources forces add can cancel . Famously, Newton formulated law universal gravitation ascribed force masses proportional product two masses inversely proportional square distance . mass table net force , since table pushes back (push = force) mass cancel force due gravity. “Net force” takes cancellation account. 2060","code":""},{"path":"change-relationships.html","id":"differentiation","chapter":"1 Change relationships","heading":"1.2 Differentiation","text":"Two central operations calculus :Given function \\(f(t)\\), find function \\(\\partial_t\\,f(t)\\) giving instantaneous rate change \\(f()\\). process deriving \\(\\partial_t\\, (t)\\) \\(f(t)\\) called differentiation.Given function \\(\\partial_t\\,(t)\\), find \\(f(t)\\) \\(\\partial_t\\,f(t)\\) instantaneous rate change. process finding \\(f()\\) given \\(\\partial_t\\,f()\\) called anti-differentiation. 2065Notice (1) (2) didn’t use \\({\\cal D}_t\\) notation. ’s time switch away . prompts change nuisance constant 0.1 definition slope function:\n\\[{\\cal D}_t f(t) \\equiv \\frac{f(t+0.1) - f(t)}{0.1}\\]Whereas slope function \\({\\cal D}_t f(t)\\) gives approximation instantaneous rate change, \\(\\partial_t f(t)\\) refers instantaneous rate change exactly.’ll come back relationship \\({\\cal D}_t\\) \\(\\partial_t\\) Chapter 5. ’s subject particular interest mathematicians, hence central part traditional calculus texts (mostly written mathematicians). modeling applications calculus, something side issue. 2070As intermediate step path \\({\\cal D}_t\\) \\(\\partial_t\\), let’s redefine slope function eliminate 0.1 replace parameter \\(h\\): \\[{\\cal D}_x f(x) \\equiv \\frac{f(x+h) - f(x)}{h}\\]\nway writing slope function enable us consider slope function changes \\(h\\) gets smaller smaller.","code":""},{"path":"change-relationships.html","id":"notations-for-differentiation","chapter":"1 Change relationships","heading":"1.3 Notations for differentiation","text":"several traditional notations differentiation function named \\(f()\\). instance:Leibnitz: \\(\\frac{df}{dx}\\)Partial: \\(\\frac{\\partial f}{\\partial x}\\)Euler: \\(D_x f\\)One-line: \\(\\partial_x f\\) (hybrid partial Euler notation.)Newton (“dot”): \\(\\dot{f}\\)Lagrange (“prime”): \\(f'\\)book, mainly use one-line notation, \\(\\partial_x f\\), means exactly Leibnitz Partial notations, much widely used textbooks.’ve studied calculus , likely seen \\(f'\\) notation. admirably concise viable narrow circumstance: functions take single input. \\(f'\\) leaves means specify crucial aspect differentiation, -respect-variable. general situation differentiation involves functions one variables, example, \\(g(x, y, z)\\). functions, need specify -respect-variable. instance, can differentiate \\(g()\\) three different ways, way incrementing one another three inputs: 2075\\[\\partial_z g(x, y, z) \\equiv \\frac{g(x, y, z+h) - g(x, y, z)}{h}\\\\ \n\\ \\\\\n\\partial_x g(x, y, z) \\equiv \\frac{g(x+h, y, z) - g(x, y, z)}{h}\\\\ \n\\ \\\\\n\\partial_y g(x, y, z) \\equiv \\frac{g(x, y+h, z) - g(x, y, z)}{h}\\]point studies, haven’t seen might choose differentiate function respect one variable another. come time. want set notation won’t narrow options. 2080Both Leibnitz Partial notations explicit identifying function -respect--variable. example, using Partial differentiation notation, three ways differentiating example function \\(g(x, y, z)\\) labeled : 2085\\[\\frac{\\partial f}{\\partial x},\\ \\ \\ \\frac{\\partial f}{\\partial y},\\ \\ \\text{}\\ \\ \\frac{\\partial f}{\\partial z}\\]R/mosaic computer differentiation longer explicit:names used arbitrary; can use names like. ’s nice dx_g others mimics math notation \\(\\partial_x g()\\).Notice R/mosaic operator differentiation named D() function. follows pattern makeFun() slice_plot() contour_plot(): first argument tilde expression, instance g(x, y, z) ~ x, identifies mathematical function work (g()) name -respect-input function. R/mosaic notation makes clear differentiation operation function. D() operator takes function input produces output another function. ’ve seen similar behavior , say, slice_plot(), takes function input produces graphics output. D() slice_plot() need know identity -respect-variable well function work . ’s pieces input packaged tilde expression. 2090We’re calling D() operator rather function. reason purely communication people. many “functions” calculus course thought helpful distinguish kinds functions take quantities input produce quantity output, functions take function input produce function output. sorts called “functions” R terminology. sentence like, “Differentiation function takes function input produces function output,” true though , dizzying. 2095It fact mathematical scientific life variety notations used differentiation. extent, reflects historical precedence , honest, nationalistic European politics 18th century. make sense mathematical writing many areas calculus used, recognize . skill enhanced also memorize names different styles. ’s different pattern English multiple words sort object, instance: car, automobile, junker, ride, wheels, crate, jalopy, limo, motor car, horseless carriage. 2100In days carriages pulled horses, phrase “horseless carriage” made useful distinction. Today, horses rarely seen road, make sense trim notation essentials: horseless cariage. Think \\(\\partial_x\\) sort minificat\nion older notations.2Recall function monotonically increasing given domain function’s slope positive everywhere domain. monotonically decreasing function, similarly, negative slope everywhere domain. slope zero, positive places negative others, function neither monotonically increasing decreasing.following graphs shows derivative function \\(f(x)\\). (Note: graph doesn’t show \\(f()\\) rather function \\(\\partial_x f()\\) derivative \\(f()\\).) graph, say whether function \\(f()\\) monotonically increasing, monotonically decreasing, neither. (Note horizontal scale every graph, vertical scale can different one scale another.)Question Function …monotonically increasing ✓ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) constant ☹︎ constant function derivative everywhere 0. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. Can’t tell info provided ☹︎ case tell derivative positive negative. Question B Function B …monotonically increasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically increasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ✓ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ✓ monotonically increasing function function everywhere \\(> 0\\) constant ☹︎ constant function derivative everywhere 0. constant ☹︎ constant function derivative everywhere 0. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. Can’t tell info provided ☹︎ case tell derivative positive negative. \nQuestion C Function C …Can’t tell info provided ☹︎ case tell derivative positive negative. \nQuestion C Function C …monotonically increasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically increasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) constant ☹︎ constant function derivative everywhere 0. constant ☹︎ constant function derivative everywhere 0. non-monotonic ✓ non-monotonic function goes , hence derivative positive places negative others. non-monotonic ✓ non-monotonic function goes , hence derivative positive places negative others. Can’t tell info provided ☹︎ case tell derivative positive negative. \nQuestion D Function D …Can’t tell info provided ☹︎ case tell derivative positive negative. \nQuestion D Function D …monotonically increasing ✓ monotonically increasing function function everywhere \\(> 0\\) monotonically increasing ✓ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) constant ☹︎ constant function derivative everywhere 0. constant ☹︎ constant function derivative everywhere 0. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. Can’t tell info provided ☹︎ case tell derivative positive negative. \nQuestion E Function E …Can’t tell info provided ☹︎ case tell derivative positive negative. \nQuestion E Function E …monotonically increasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically increasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) constant ☹︎ constant function derivative everywhere 0. constant ☹︎ constant function derivative everywhere 0. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. Can’t tell info provided ✓ case tell derivative positive negative. \nQuestion F Function F …Can’t tell info provided ✓ case tell derivative positive negative. \nQuestion F Function F …monotonically increasing ✓ monotonically increasing function function everywhere \\(> 0\\) monotonically increasing ✓ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) monotonically decreasing ☹︎ monotonically increasing function function everywhere \\(> 0\\) constant ☹︎ constant function derivative everywhere 0. constant ☹︎ constant function derivative everywhere 0. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. non-monotonic ☹︎ non-monotonic function goes , hence derivative positive places negative others. Can’t tell info provided ☹︎ case tell derivative positive negative. \nCan’t tell info provided ☹︎ case tell derivative positive negative. graphs various functions. right column shows functions named \\(f_1()\\), \\(f_2()\\), . left column shows functions \\(()\\), \\(B()\\), \\(C()\\), . functions right derivative function left, functions left corresponding derivative right. task: Match function left ’s derivative right.Question derivative Function () following:    f1() ☹︎        f2() ✓        f3() ☹︎        f4() ☹︎        shown ☹︎ Question B derivative Function B() following:    f1() ✓        f2() ☹︎        f3() ☹︎        f4() ☹︎        shown ☹︎ Question C derivative Function C() following:    f1() ☹︎        f2() ☹︎        f3() ☹︎        f4() ✓        shown ☹︎ Question D derivative Function D() following:    f1() ☹︎        f2() ☹︎        f3() ☹︎        f4() ☹︎        shown ✓ left column graphs shows functions (), B(), C(), D(). right column shows functions dd1(), dd2(), . Find function () right column corresponds 2nd derivative function left column.Remember concepts “concave ” (smile!) “concave ” (frown). values \\(x\\) 2nd derivative given function positive, given function concave . 2nd derivative negative, given function concave .Question second derivative Function () following:    dd1() ☹︎        dd2() ☹︎        dd3() ☹︎        dd4() ✓        shown ☹︎ Question B second derivative Function B() following:    dd1() ☹︎        dd2() ✓        dd3() ☹︎        dd4() ☹︎        shown ☹︎ Question C second derivative Function C() following:    dd1() ☹︎        dd2() ☹︎        dd3() ☹︎        dd4() ☹︎        shown ✓ Question D second derivative Function D() following:    dd1() ✓        dd2() ☹︎        dd3() ☹︎        dd4() ☹︎        shown ☹︎ ","code":"\ndx_g <- D(g(x, y, z) ~ x)\ndy_g <- D(g(x, y, z) ~ y)\ndz_g <- D(g(x, y, z) ~ z)"},{"path":"change-relationships.html","id":"dimension-of-derivatives","chapter":"1 Change relationships","heading":"1.4 Dimension of derivatives","text":"Recall differencing operator takes input function returns output another function takes kind input, produces different kind output.instance, suppose function pressure() takes altitude input (km) returns output pressure (kPa, “kiloPascal”3).derivative function, let’s call d_pressure(), also takes input km, produces output kPA per km: rate.can see examining differencing operator :\\[{\\cal D}_x f(x) \\equiv \\frac{f(x+h) - f(x)}{h}\\]Remember notation dimensions. quantity \\(x\\) dimensions denoted \\([x]\\). (nothing saying, “Pronounce ‘\\([x]\\)’ ‘dimensions \\(x\\).’”)\ninput \\(f()\\) dimension \\([x]\\). output \\(f()\\) dimension \\([f(x)]\\).dimension \\(h\\)? (write question simply, \"\\([h]\\)?) Since operator adds \\(x + h\\), must \\([h] = [x]\\). Otherwise, addition wouldn’t viable operation combine two quantities. 2105What dimension \\(f(x + h) - f(x)\\)? (, ask simply, “\\([f(x+h) - f(x)]\\)?”) Since ’re subtracting two quantities, two quantities must dimension result also dimension. \\([f(x+h) - f(x)] = [f(x)]\\). 2110The output function \\(df(x)\\) produced \\(\\mbox{Diff}(f)\\) therefore dimension \\([f(x)] / [x]\\).. given function \\(N(y)\\), population Netherlands year \\(y\\).Dimension input \\(N(y)\\)?Dimension output \\(N(y)\\)?Dimension input \\(\\partial_y N(y)\\)?Dimension output \\(\\partial_y N(y)\\)?B. given function \\(p(u)\\), net profit manufactured good function number units manufactured.Dimension input \\(p(u)\\)?Dimension output \\(p(u)\\)?Dimension input \\(\\partial_u p(u)\\)?Dimension output \\(\\partial_u p(u)\\)?C. given function \\(w(t)\\), amount water leaky bucket time bucket filled.Dimension input \\(w(t)\\)?Dimension output \\(w(t)\\)?Dimension input \\(\\partial_t w(t)\\)?Dimension output \\(\\partial_t w(t)\\)?Question Tanks bulk storage natural gas typically large cylinders cap can . volume tank function position cap. dimension derivative cylinder volume respect cap position?    \\(L^2\\) ✓        \\(L\\) ☹︎        \\(L^3\\) ☹︎        \\(L^3/T\\) ☹︎        \\(T/L^3\\) ☹︎ standard model epidemics used public health planning called SIR model. (SIR stands “Susceptible (S), Infective (), Recovered (R),” sequence person starts , moves , ends (hopefully!) epidemic.)One equations SIR model \n\\[\\frac{dS}{dt} = -S \\]notation \\(dS/dt\\) means “rate change number susceptibles, S, respect time.” dimension “people/T.” dimensions \\([S]\\) \\([]\\) simply “people.”Question \\([]\\)?T ☹︎ T\\(^{-1}\\) ☹︎ people/T ☹︎ \\([S ]\\) people\\(^3\\)/T, ’s \\([dS/dt]\\). people\\(^{-1}\\) T\\(^{-1}\\) ✓ correctly gives \\([S ]\\) people/T, \\([dS/dt]\\). people \\(\\times\\) T ☹︎ None . ☹︎ Exercise 57 refers second equation SIR model\\[\\frac{dI}{dt}  = - S - b \\]\n\\([\\frac{dI}{dt}] =\\) people/T.Question B \\([b]\\)?T ☹︎ T\\(^{-1}\\) ✓ people/T ☹︎ \\([S ]\\) people\\(^3\\)/T, ’s \\([dS/dt]\\). people\\(^{-1}\\) T\\(^{-1}\\) ☹︎ true, \\([bI]\\) T\\(^{-1}\\). \\([bI]\\) \\([dI/dt]\\), people \\(T^{-1}\\). people \\(\\times\\) T ☹︎ None . ☹︎ \n","code":""},{"path":"change-relationships.html","id":"slope-fun-visualization","chapter":"1 Change relationships","heading":"1.5 Visualizing the slope function","text":"function produced differencing operation\n\\[{\\cal D}_x f(x) \\equiv \\frac{f(x+h) - f(x)}{h}\\] every way ordinary function takes input produces output.Ordinarily, visualize functions one variable drawing graph. technique every bit applicable functions produced \\(\\diff{x}\\) function.input slope function \\(\\diff{x} f(x)\\) exactly input mother function \\(f(x)\\). graph slope function horizontal axis graph mother function. However, output \\(\\diff{x} f(x)\\) different kind thing output \\(f(x)\\). 2115Suppose, instance, mother function \\(T(x)\\) giving atmospheric temperature location Earth function altitude \\(x\\). output \\(T(x)\\) , expect, dimension temperature units , say, degrees C. output \\(\\diff{x} T(x)\\) different dimension: temperature divided altitude units , say, degrees C per km. 2120The different dimensions output function output slope fun means vertical axis graphing \\(\\diff{x} f(x)\\) must different vertical axis used graphing \\(f(x)\\). Thus, general, \\(\\diff{x} f(x)\\) \\(f(x)\\) graphed frame. 2125This requirement use different graphics frames \\(f(x)\\) \\(\\diff{x}f(x)\\) makes somewhat difficult visualize relationship \\(f(x)\\) \\(\\diff{x}f(x)\\).Let’s explore non-standard way visualize \\(\\diff{x}f(x)\\) can shown graphics frame graph \\(f(x)\\). Perhaps non-standard visualization give better way understand slope functions. , good. ultimate benefit way show \\(\\diff{x} f(x)\\) \\(f(x)\\) frame come introduce operation anti-differentiation. 2130Recall basic model change Calculus straight-line function \\(\\line(x) \\equiv x + b\\). slope \\(\\) \\(\\line(x)\\) tells output changes unit change input. differentiation, 2135approximate mother function \\(f(x)\\) series local line segments.extract slope line segment value slope function input \\(x\\).Figure 1.3 shows segment segment approximation around several input values (marked green). slope function visualization constructed throwing away vertical offset line segments plotting horizontally adjacent one another. 2140\nFigure 1.3: function \\(f(x)\\) shown along tangent line segment touching \\(f()\\) green points. slope function visualization, tangent line segments moved horizontal axis.\nFigure 1.4 shows several examples slope function visualization.\nFigure 1.4: Slope-function visualizations several naked modeling functions.\n","code":""},{"path":"computing-derivs.html","id":"computing-derivs","chapter":"2 Computing derivatives","heading":"2 Computing derivatives","text":"differentiate function \\(g(x)\\) means simply produce corresponding function \\(\\partial_t g(x)\\). often called “finding derivative,” language resonates high-school algebra task “finding \\(x\\).” Rather conjuring image search high low missing function, ’s realistic say, “compute derivative.” 2150In chapter ’ll introduce two ways computing derivative. simplicity write \\(x\\) -respect--variable, although practice might using \\(t\\) \\(z\\) something else. 2155Symbolic differentiation, uses set re-writing rulesFinite-differencing, based directly differencing operator \\({\\cal D_x}\\)days functions always presented using formulas, symbolic differentiation usually method taught. Nowadays, functions just likely described using data algorithm, finite-differencing provides practical approach. 2160","code":""},{"path":"computing-derivs.html","id":"a-function-from-a-function","chapter":"2 Computing derivatives","heading":"2.1 A function from a function","text":"Recall goal differentiation make function already known function. ’ll call already known function \\(g(x)\\). Chapter (change-relationships) ’ve outlined properties new function gave nice naming convention, \\(\\partial_x g(x)\\) shows new function comes . section ’ll put aside focus question means “make function.” 2165When mathematics done paper pencil, “making function” matter writing formula, \\(x^2 \\sin(x) + 3\\) sometimes giving name formula, e.g. \\(h(x) \\equiv x^2 \\sin(x) + 3\\). essentially writing something make sense viewed another person trained conventions mathematical notation. 2170For computer, hand, function definite kind thing. “make function” creating kind thing , usually, giving name. use (“evaluate”) function using definite syntax, R involves use parentheses, instance name(input). 2175The computer language provides specific means define new function. R/mosaic, first construct tilde expression naming function inputs (right side tilde) specifying algorithm function (left side tilde), formula:, f_description used like function constructed something else: tilde expression. Trying use f_description way one uses function produces error.tilde expression final result—function—software translates tilde-expressions functions:new creation, f() can now used like function, e.g.deep inside, makeFun() uses basic function-creation syntax looks like thisYou can see information tilde description, just arranged differently.Almost every computer language provides something like function. workings advanced technology essentially impossible describe much way workings transistor COVID vaccine known specialists. 2180In spirit makeFun(), translates tilde-expression corresponding function, R/mosaic D() takes tilde expression translates derivative function described. example:common programming pattern R/mosaic calculus commands :Operator(tilde_expression, [optional details])operators: slice_plot(), contour_plot, make_Fun(), D(), antiD(), findZeros()R/mosaic expressions, determine kind thing created. Feel free run expressions SANDBOX.Question AmakeFun(*x - b ~ x)function x ☹︎ Fair enough. function also arguments b function x, , b ✓ tilde expression ☹︎ tilde expression input operator. operator translates tilde expression something else. plot ☹︎ data frame ☹︎ error ☹︎ Question BD(*x - b ~ x)function ☹︎ function x, , b ✓ tilde expression ☹︎ plot ☹︎ data frame ☹︎ error ☹︎ Question CantiD(*x - b ~ x)function ☹︎ function x, , b ✓ tilde expression ☹︎ plot ☹︎ data frame ☹︎ error ☹︎ Question Dslice_plot(*x - b ~ x, domain(x=c(0,5)))function x ☹︎ function x, , b ☹︎ tilde expression ☹︎ plot ☹︎ expression intended make plot, doesn’t work. Specific numerical values need provided b. data frame ☹︎ error ✓ Question Ef <- makeFun(*x + b ~ x, =2, b=-4)slice_plot(f(x) ~ x, domain(x=c(0,5)))function x ☹︎ function x, , b ☹︎ tilde expression ☹︎ plot ✓ works specific values provided b parameters. data frame ☹︎ error ☹︎ Question FfindZeros(*x - b ~ x, domain(x=c(0,5)))function x ☹︎ function x, , b ☹︎ tilde expression ☹︎ plot ☹︎ expression intended make data frame, doesn’t work. Specific numerical values need provided b. data frame ☹︎ error ✓ Question Ga*x - b ~ xa function x ☹︎ function x, , b ☹︎ tilde expression ✓ plot ☹︎ expression intended make plot, doesn’t work. Specific numerical values need provided b. data frame ☹︎ error ☹︎ Question Hf <- makeFun(*x + b ~ x, =2, b=-4)findZeros(f(x) ~ x)function x ☹︎ function x, , b ☹︎ tilde expression ☹︎ plot ☹︎ data frame ✓ error ☹︎ Question Suppose create function usual way, e.g. f <- makeFun(*x + b ~ x, =2, b=-4). following plot straight-line function slope 5.slice_plot(f(x) ~ x, domain(x=c(-5, 5))) ☹︎ default value 2, line slope 2. slice_plot(f(x, b=2), domain(x=c(-5, 5)) ☹︎ ’s slope parameter. slice_plot(f(x, =2), domain(x=c(-5, 5)) ✓ ","code":"\nf_description <- x^2 * sin(x) + 3 ~ x\nf_description(2)## Error in f_description(2): could not find function \"f_description\"\nf <- makeFun(f_description)\nf(2)## [1] 6.63719\nfunction(x) {x^2 * sin(x) + 3}## function(x) {x^2 * sin(x) + 3}\nD(f_description)## function (x) \n## 2 * x * sin(x) + x^2 * cos(x)"},{"path":"computing-derivs.html","id":"finite-differencing","chapter":"2 Computing derivatives","heading":"2.2 Finite differencing","text":"can use definition slope function \\[{\\cal D}_x f(x) = \\frac{f(x+0.1) - f(x)}{0.1}\\]\ncreate approximation derivative function. Like :Whenever calculate derivative function, check mistakes sources error. instance, whenever derivative zero, original function instantaneous slope zero. Figure 2.1 shows suitable plot supporting sort check.\nFigure 2.1: check zero-crossings (blue) derivative function (red) correspond inputs original function flat (black).\nLook closely Figure 2.1, particularly places blue vertical markers cross function \\(g(x)\\) (black). cross exactly flat zone, little shifted left. ’s sense finite-difference approach gives approximation. left-shift stems use 0.1 definition zero function. Use smaller value, say 0.01 0.001, won’t able see shift . 2185In modeling work, ’s nothing wrong approximation long good enough purposes. picked value 0.1 definition slope function works well naked modeling functions. , “well” means can’t easily see graph deviation compared exact derivative. 2190When calculation can done exactly (without outrageous effort) certainly makes sense use exact method. However:’s useful easy, approximate method always hand. lets check results methods possibility blunder mis-conception. slope function approach differentiation certainly easy, think approximation isn’t good enough, instead 0.1 use something smaller. (Chapter 5 discusses small small.)computer makes practical employ slope function useful approximation derivative. many mathematical methods computer made feasible, instance methods machine learning. methods create functions sometimes handled traditional (“exact”) methods differentiation. 2195Exercise 2.2  (check-h)  Put Chapter 5.","code":"\ng <- makeFun(sin(2*x)*(pnorm(x/3)-0.5) ~ x)\ndg <- makeFun((g(x+0.1) - g(x))/0.1 ~ x)\nzeros_of_dg <- findZeros(dg(x) ~ x, xlim=c(-5,5))\nslice_plot(g(x) ~ x, domain(x=c(-5,5)), npts=500) %>%\n  slice_plot(dg(x) ~ x, color=\"red\", npts=500) %>%\n  gf_hline(yintercept = ~ 0, color = \"orange\", size=2, alpha=0.2) %>%\n  gf_vline(xintercept = ~ x, data=zeros_of_dg, color=\"blue\")"},{"path":"computing-derivs.html","id":"the-slope-function-operator","chapter":"2 Computing derivatives","heading":"2.3 The slope-function operator","text":"Take look statement used construct slope function g():’s almost nothing statement anything specifics defined g(); used \\(g()\\). “almost” previous sentence choice 0.1, isn’t guaranteed small enough. 2200It convenient operator automates process constructing slope function. programming task sense beyond scope course. Still, ’s good idea get habit reading programming code. goes … creating slopeFun() operator: 2205Remember function(){} syntax creating operator. (speaking experienced programmers, said “function” instead “operator.” )’re going use tilde expression input slopeFun(). R/mosaic operators work. easier user also give us access operators need writing slopeFun().object returned slopeFun() operator , course, function. ’ve using makeFun() make mathematical functions, expect see code slopeFun().’s nuisance using 0.1 whether small enough. let’s use h argument can change needed.Figure 2.2 shows results quick check whether function works whether h=0.1 small enough.\nFigure 2.2: Checking whether homemade slopeFun() operator works.\n::: {.scaffolding}\ncan decide whether red black curves Figure 2.2 similar enough purposes. Even better, exploring SANDBOX. ’ll copy paste sandbox code defining slopeFun() graphics statements. Start replacing dx_sin(x, h=0.1) dx_sin(x, h=0.0001) 2210On computer (using data), can set \\(h\\) small slope function. become obvious graph \\(h\\) small. Start adding zeros sin(x, h=0.0001) see problem.Question values h smallest can go problems -small h start showing ?h=0.00001 ☹︎ h=0.00000001 ☹︎ h=0.00000000001 ✓ h=0.00000000000001 ☹︎ bad choice, look closely ’ll see little wobbles curve. h=0.000000000000000001 ☹︎ \npractice, won’t need use slopeFun(). ’ll use D() instead, gives “exact” results whenever can.","code":"\ndg <- makeFun((g(x+0.1) - g(x))/0.1 ~ x)\nslopeFun <- function(tilde, h=0.1) { #two arguments, one with a default value\n   g <- makeFun(tilde)  # Turn the tilde expression into a function\n   \n   makeFun((g(x + h) - g(x))/h ~ x, h=h) # just like before, with h instead of 0.1\n}\ndx_sin <- slopeFun(sin(x) ~ x)\nslice_plot(dx_sin(x, h = 0.00000000001) ~ x, domain(x=c(-5,5)), size=2) %>%\n  slice_plot(dx_sin(x, h=0.001) ~ x, color=\"red\")"},{"path":"computing-derivs.html","id":"symbolic-differentiation","chapter":"2 Computing derivatives","heading":"2.4 Symbolic differentiation","text":"Symbolic differentiation process taking formula translating new formula according certain patterns rules. rule ultimately derived definition slope function differencing operator. 2215As recall, differencing operator \\(\\diff{x}\\) turns function slope function\n\\[\\diff{x} f(x) \\equiv \\frac{f(x+h) - f(x)}{h}\\]Let’s look one already know result: straight line function \\(\\line(x) \\equiv x + b\\) slope function constant: \\(\\diff{x}\\line(x) = \\)\\[\\diff{x}\\line(x) = \\frac{(x+h) + b - (x + b)}{h} = \\frac{ah}{h} = \\]\nderivative slope function \\(h\\) made small possible. ’s tempting think \\(h = 0\\), imply dividing zero differencing operator. cautious , write differentiation differencing \\(h \\rightarrow 0\\), 2220\\[\\partial_x \\line(x) \\equiv \\lim_{h\\rightarrow 0} \\frac{\\line(x+h) - \n\\line(x)}{h} = \\lim_{h\\rightarrow 0$ \\frac{h}{h} = \\]\nderivation unarguably correct non-zero \\(h\\).short derivation gives us basic differentiation rule can divide 3 special cases.Line rule: \\(\\partial_x ax + b = \\)\n\\(\\partial_x ax = \\)\n\\(\\partial_x b = 0\\)\n\\(\\partial_x x = 1\\)\n\\(\\partial_x ax = \\)\\(\\partial_x b = 0\\)\\(\\partial_x x = 1\\)Remember \\(\\partial_x f(x)\\) \\(f(x)\\) always function. functions associated line rule constant functions, meaning output doesn’t depend input.\\(\\line()\\) function three special cases derivative constant function. \\(\\line()\\) function \\(h\\) differencing operator disappears . instance, consider \\(g(x) \\equiv x^2\\): 2225\\[\\partial_x [x^2] = \\lim_{h\\rightarrow 0}\\frac{(x+h)^2 - x^2}{h} = \\lim_{h\\rightarrow 0}\\frac{(x^2 + 2 x h + h^2) - x^2}{h} = \\lim_{h\\rightarrow 0}\\frac{2 x h + h^2}{h} = \\lim_{h\\rightarrow 0} [2x + h]\\]\n’s accepted limit sum sum limits. Also, limit something involving \\(h\\) just thing: instance \\(\\lim_{h\\rightarrow 0}2x = 2x\\).\\[\\partial_x [x^2] = 2x + \\lim_{h\\rightarrow 0}h = 2x\\]’ll write another differentiation rule.Quadratic rule: \\(\\partial_x [x^2] = 2x\\)[introducing product rule …] point \\(\\partial_x x^2 \\neq (\\partial_x x)(\\partial_x x) = 1\\)Let’s take \\(h(x) \\equiv e^x\\):\\[\\partial_x e^x = \\lim_{h\\rightarrow 0}\\frac{e^{x+h} - e^x}{h} = e^x \\lim_{h\\rightarrow 0}\\left[\\frac{e^h - 1}{h}\\right]\\]\nglance, can hard know make \\(\\lim_{h\\rightarrow 0} (e^h-1)/h\\). Setting \\(h=0\\) denominator perfectly legitimate gives \\(e^0 - 1 = 0\\). still leaves \\(h\\) numerator. Still, non-zero \\(h\\), division legitimate, let’s see happens \\(h \\longarrow 0\\):Setting \\(h\\) exactly zero, however, won’t work: produces NaN.Since \\(\\lim_{h\\rightarrow 0} (e^h-1)/h = 1\\), haveExponentiation rule: \\(\\partial_x e^x = e^x\\)[taylor series, show \\(\\frac{e^h - 1}{h} \\rightarrow 0\\).]Still another example: reciprocal function, written equivalently \\(1/x\\) \\(x^{-1}\\)\\[\\partial x^{-1} = \\lim_{h\\rightarrow 0}\\frac{1/(x+h) - 1/x}{h} = \\lim_{h\\rightarrow 0}\\frac{x - x+h}{x(x+h)h} = -\\lim_{h\\rightarrow 0}\\frac{h}{x(x+h)h} = -\\lim_{h\\rightarrow 0}\\frac{1}{x^2 + hx}\\]\nlong \\(x \\neq 0\\), divide--zero problem, let’s see computer thinks:Setting \\(h\\) zero last expression gives another differentiation rule:Reciprocal rule: \\(\\partial_x \\frac{1}{x} = -\\frac{1}{x^2}\\)’ll save later derivation derivatives naked modeling functions, note hump function defined derivative sigmoidal function.basic modeling functions, show derivative cosine -sin. Use \\(\\partial_x sin(x) = sin(x + \\pi/2)\\) apply scaling rule .Also, derive \\(\\partial_x x^p = \\partial_x e^{p\\ln(x)} = e^{p\\ln(x)} \\times \\frac{p}{x} = \\frac{p}{x} x^p = p\\, x^{p-1}\\)R command defines new operator named Diff() implements differencing operator \\(\\cal D_x\\) functions one input.Open R sandbox copy definition Diff() .example use Diff(), R code defines function f() finds \\({\\cal D}_x f()\\), calling D_f(). slice plot f() D_f().following functions, write brief comparison function ’s differenced version. can combine phrases “shape,” “different shape. larger amplitude,” “smaller amplitude,” “period,” “shorter period,” “longer period,” whatever seems appropriate. instance, original example sandbox, reasonable comparison might , “f() concave Diff(f) concave .”Essay question tmp-1: . function \\(f(x) \\equiv 3 x\\), compare \\(f()\\) \\(\\cal D_x f\\).Essay question tmp-2: B. function \\(f(x) \\equiv x^2\\), compare \\(f()\\) \\(\\cal D_x f\\).Essay question tmp-3: C. function \\(f(x) \\equiv \\exp(x)\\), compare \\(f()\\) \\(\\cal D_x f\\).Essay question tmp-4: D. function \\(f(x) \\equiv \\exp(-0.3 x)\\), compare \\(f()\\) \\(\\cal D_x f\\).Essay question tmp-5: E. function \\(f(x) \\equiv \\sin(x)\\), compare \\(f()\\) \\(\\cal D_x f\\).Essay question tmp-6: F. function \\(f(x) \\equiv \\sin(2 \\pi x)\\), compare \\(f()\\) \\(\\cal D_x f\\)).Essay question tmp-7: G. function \\(f(x) \\equiv \\sin(\\frac{2 \\pi}{20} x)\\), compare \\(f()\\) \\(\\cal D_x f\\)).","code":"\nf <- makeFun((exp(h) - 1)/h ~ h)\nf(0.1)## [1] 1.051709\nf(0.01)## [1] 1.005017\nf(0.001)## [1] 1.0005\nf(0.0001)## [1] 1.00005\nf(0.0000001)## [1] 1\nf(0.0000000001)## [1] 1\nf(0)## [1] NaN\ng <- makeFun(-1/(x^2 + h*x) ~ h, x=10)\ng(0.1)## [1] -0.00990099\ng(0.01)## [1] -0.00999001\ng(0.001)## [1] -0.009999\ng(0.0001)## [1] -0.0099999\ng(0.0000001)## [1] -0.01\ng(0.0000000001)## [1] -0.01\ng(0)## [1] -0.01\nDiff <- function(f, h=0.001) {\n  function(x) {\n    (f(x + h) - f(x)) / h\n  }\n}\nf   <- makeFun(sqrt(exp(x)) - x^2 ~ x)\nD_f <- Diff(f)\nslice_plot(f(x) ~ x, domain(x=c(0, 5))) %>%\n  slice_plot(D_f(x) ~ x, color = \"red\")"},{"path":"convexity-and-curvature.html","id":"convexity-and-curvature","chapter":"3 Convexity and curvature","heading":"3 Convexity and curvature","text":"Looking locally graph function eyes immediately register slope. glance shows whether slope positive negative. Comparing slopes two locales also automatic visual task: people little difficulty saying slope steeper. One consequence ability perform task visually: 2230Tangent line: can recognize whether line touches graph point tangent graph.Question Glance graph. boxes slope negative?Question B Consider slope function domains marked boxes. order boxes least steep steepest?Question C line segments tangent curve point marked dot?    ☹︎        B ☹︎        C ☹︎        ✓        none ☹︎ Question D line segments tangent curve point marked dot?    ✓        B ☹︎ shallow        C ☹︎ steep        ☹︎        none ☹︎ Finding numerical value slope automatic process. need arithmetic, computing rise run. , language calculus, can calculate slope evaluating derivative function. 2235Other aspects functions also readily discerned glance function graph.Concavity: can tell within locale whether function concave , concave , concave.Curvature: Generalizing tangent line capability bit, can pretty good job eyeballing tangent circle recognizing whether circle much large much small radius..Smoothness: can distinguish smooth functions non-smooth ones. , see, kinds smoothness can discern others apparent eye.chapter quantify properties. turns naturally done calculating derivatives. (case smoothness, continuity derivative function. continuity smoothness.) 2240The following exercises simply meant test visual acuity spotting concavity, tangency, smoothness.Question E boxes function concave ?    E ✓        B D ☹︎        C D ☹︎ Question F boxes function smooth?B ☹︎ B C ☹︎ C ✓ none ☹︎ ☹︎ Question G boxes function smooth?B ☹︎ B C ☹︎ C ☹︎ none ☹︎ ✓ Question H boxes function smooth?","code":""},{"path":"convexity-and-curvature.html","id":"concavity","chapter":"3 Convexity and curvature","heading":"3.1 Concavity","text":"Change slope","code":""},{"path":"convexity-and-curvature.html","id":"curvature","chapter":"3 Convexity and curvature","heading":"3.2 Curvature","text":"Orthogonal tangentTangent circle function.Graphics frame.’re also pretty good eyeballing radius curvature. can calculated first second derivatives. radius curvature operator \\[{\\cal K} f(x) \\equiv \\frac{\\left|\\partial_{xx} f(x)\\right|}{\\left|1 + \\left(\\strut\\partial_x f(x)\\right)^2\\right|^{3/2}}\\] 2245","code":""},{"path":"cont-and-smooth.html","id":"cont-and-smooth","chapter":"4 Continuity and smoothness","heading":"4 Continuity and smoothness","text":"’ve seen various properties functions—whether monotonic, slopes, whether concave (), curvature, etc.—can related first second derivatives function. 2300It’s time introduce two new ways describing functions can useful determining whether given function fit purpose intended . continuity smoothness. 2305","code":""},{"path":"cont-and-smooth.html","id":"continuity","chapter":"4 Continuity and smoothness","heading":"4.1 Continuity","text":"intuition behind continuity simple: can draw graph function without lifting pencil paper, graph continuous.Continuity can important attribute modeling function. Often, modeling phenomena small change input expected produce small change output. instance, income changes one penny, expect lifestyle change much. temperature oven changes 1 degree, don’t expect quality cake baking change noticeable way. 2310All basic modeling functions continuous entire input domain (one exception). illustrate discontinuity ’ll consider piecewise functions, introduced Chapter ??. Heaviside function, graphed Figure ?? discontinuous. 2315Drawing graph Heaviside function \\(H(x)\\) involves lifting pencil \\(x=0\\).contrast, piecewise ramp function (Figure ?? continuous, don’t need lift pencil paper order draw ramp function.Imagine using Heaviside function, say \\(H(W-20)\\), model plant growth function amount water (cc) provided day. model implies provide 20.001 cc water, plant thrive. stingy, provide 19.999 cc water, plant die. words, small change input can lead large change output. 2320Common sense suggests change 0.002 cc amount water—’s small fraction drop, 2 cubic millimeters volume, going lead qualitative change output. might prefer use sigmoidal function model rather Heaviside function. 2325On hand, sometimes small change input lead large change output. instance, model hardness water function temperature sensibly include discontinuity \\(32^\\circ\\)F, temperature water turns ice. 2330One author Charles Dicken’s famous characters, Mr. Macawber, described relationship income, expenditure, happiness way:\"Annual income 20 pounds, annual expenditure 19 [pounds] 19 [shillings] six [pence], result happiness. Annual income 20 pounds, annual expenditure 20 pounds six, result misery.\"Macawber referring common situation pre-20th century England putting debtors prison, regardless size debt. Macawber statement suggests model happiness Heaviside function \\(H(\\text{income}- \\text{expenditure})\\). 2335Whenever output function yes--value, can anticipate model involve discontinuous function.","code":""},{"path":"cont-and-smooth.html","id":"smoothness","chapter":"4 Continuity and smoothness","heading":"4.2 Smoothness","text":"Smoothness different concept continuity, although two related. simply, discontinuous function smooth input discontinuity occurs. even continuous ramp function smooth start ramp. Intuitively, imagine sliding hand along ramp function. feel crease \\(x=0\\). 2340A function smooth derivative function discontinuous. instance, derivative ramp function Heaviside function, ramp smooth \\(x=0\\).basic modeling functions (one exception!) smooth everywhere domain. particular, derivatives basic modeling functions continuous, second derivative, third derivative, line. functions called C-infinity, written \\(C^\\infty\\). superscript \\(\\infty\\) means every order derivative continuous. 2345For piecewise functions, can useful consider orders smoothness. example \\(C^0\\) means function continuous derivative , ramp function. Figure 4.1 shows \\(C^1\\) function, continuous first derivative discontinuous second derivative. 2350\nFigure 4.1: function whose derivative ramp function (hence continous) whose second derivative Heaviside function (discontinous). Since first derivative continuous, function \\(C^1\\) smoothness.\ntell plot second derivative discontinuous. plane flying along trajectory, feel jerk crossed \\(x=0\\).","code":""},{"path":"cont-and-smooth.html","id":"doesnt-exist","chapter":"4 Continuity and smoothness","heading":"4.3 Doesn’t exist?","text":"Recall logical path led us idea derivative function. started differencing operator, takes input function “small” value \\(h\\):\n\\[{\\cal D}_x f(x) \\equiv \\frac{f(x+h) - f(x)}{h}\\]\n, algebraic manipulation numerical experiments found , \\(h\\) small enough, graph \\({\\cal D}_x f(x)\\) depend \\(h\\). defined function \\(\\partial_x f(x)\\) \\(h\\) doesn’t play role, writing \\(\\lim_{h\\rightarrow 0}\\) remember ancestors, now departed scene:\n\\[\\partial_x f(x) \\equiv \\lim_{h\\rightarrow 0} \\frac{f(x+h) - f(x)}{h}\\]\nConveniently, found derivatives naked modeling functions can written terms naked modeling functions without making reference \\(h\\).discontinuous functions, luck. ’s happens compute \\({\\cal D}_x H(x)\\), derivative Heaviside function, smaller smaller \\(h\\).\nDifferencing Heaviside function produces different functions depending value \\(h\\). Since convergence \\(h\\) gets smaller, ’s fair say Heaviside function derivative. Perhaps useful way think “derivative” Heaviside function \\(x=0\\) unaccountably large \\(h\\rightarrow 0\\). 2355We know function large derivative, small difference input make large difference output. brings us back definition discontinuous start chapter. like think “derivative” Heaviside function discontinuous. 2360A strictly logical thinker rebel conflict previous two paragraphs: first saying Heaviside function derivative, second saying derivative discontinuous. resolution point away \\(x=0\\), Heaviside function perfectly sensible derivative: \\(\\partial_x H(x) = 0\\) \\(x\\neq 0\\). derivative \\(x=0\\). 2365[Deriv-3a] Understand physical analogs continuity smoothness.[Deriv-3b] Determine function continuous thinking “pencil stays paper” technique[Deriv-3c] Understand smooth degree 1 “Function continuous, derivative continuous[Deriv-3d] Understand smooth degree “Smooth degree derivative continuous”[Fun-4-b-4e] Identify “division zero” source interruption domain function. [[??? Redefine function avoid disruption.]]Now concept derivative function, can discuss terms used describe functions general.","code":"\nH <- makeFun(ifelse(x >=0, 1, 0) ~ x)\nDH01   <- makeFun((H(x + 0.01) - H(x))/0.01 ~ x)\nDH001  <- makeFun((H(x + 0.001) - H(x))/0.001 ~ x)\nDH0001 <- makeFun((H(x + 0.0001) - H(x))/0.0001 ~ x)\nslice_plot(DH01(x) ~ x, domain(x=c(-0.02, 0.02)), npts=500,\n           color=\"red\") %>%\n  slice_plot(DH001(x) ~ x,\n           color=\"green\", npts=500, alpha=0.5) %>%\n  slice_plot(DH0001(x) ~ x,\n           color=\"blue\", npts=500, alpha=0.5) "},{"path":"cont-and-smooth.html","id":"piecewise-functions","chapter":"4 Continuity and smoothness","heading":"4.4 Piecewise functions","text":"foil showing smoothness continuity.See section Fun-modeling.Rmd connect .","code":""},{"path":"cont-and-smooth.html","id":"continuity-1","chapter":"4 Continuity and smoothness","heading":"4.5 Continuity","text":"Lift pen.","code":""},{"path":"cont-and-smooth.html","id":"differentiability","chapter":"4 Continuity and smoothness","heading":"4.6 Differentiability","text":"want derivative exist matter details define derivative.\\(\\partial_x f(x) \\equiv \\lim_{h\\rightarrow 0} \\frac{f(x+h) - f(x)}{h}\\)\\(\\partial_x f(x) \\equiv \\lim_{h\\rightarrow 0} \\frac{f(x) - f(x-h)}{h}\\)\\(\\partial_x f(x) \\equiv \\lim_{h\\rightarrow 0} \\frac{f(x+h) - f(x-h)}{2 h}\\)Draw graph function imagination domain \\(x \\[-5, 5]\\). function continuous everywhere *except \\(x = -2, 1, 3\\).Draw graph function imagination domain \\(x \\[-5, 5]\\). function continuous everywhere *except \\(x = -2, 1, 3\\).Draw graph function imagination domain \\(x \\[-5,5]\\). function continuous everywhere \\([-5,5]\\). also derivative everywhere except \\(x = -2, 1, 3\\).Draw graph function imagination domain \\(x \\[-5,5]\\). function continuous everywhere \\([-5,5]\\). also derivative everywhere except \\(x = -2, 1, 3\\).sketched functions , decide level smoothness best describes function. (tricks drawings. function looks like ’s broken–, function locally V-shape \\(\\Lambda\\)-shape–take face value.Question ’s smoothness level function (x)? (Hint: quadratic function first derivative changes x second derivative constant x.)    discontinuous ☹︎        \\(C^0\\) ☹︎        \\(C^1\\) ✓        \\(C^2\\) higher ☹︎ Question B ’s smoothness level function B(x)?    discontinuous ✓        \\(C^0\\) ☹︎        \\(C^1\\) ☹︎        \\(C^2\\) higher ☹︎ Question C ’s smoothness level function C(x)?    discontinuous ☹︎        \\(C^0\\) ✓        \\(C^1\\) ☹︎        \\(C^2\\) higher ☹︎ Question D ’s smoothness level function D(x)?    discontinuous ☹︎        \\(C^0\\) ☹︎        \\(C^1\\) ☹︎        \\(C^2\\) higher ✓ ","code":""},{"path":"evanescent-h.html","id":"evanescent-h","chapter":"5 Evanescent h","heading":"5 Evanescent h","text":"goal chapter motivate differentiation rules presented Chapter 2 naked modeling functions. Recall slope-function operator can written ratio rise--run:\n\\[{\\cal D}_t f(t) \\equiv \\frac{f(t+h) - f(t)}{h}\\] \\(h\\) length “run.” idea instantaneous slope function make \\(h\\) small possible.early days calculus, vanishing \\(h\\) described “evanescent.” (Dictionary definition: “tending vanish like vapor.”4) Another good image \\(h\\) becoming small possible comes University Oxford mathematician whose poem Jabberwocky considered earlier. Alice Wonderland, Dodgson introduced character Cheshire Cat. 2370\nFigure 5.1: Vanishing \\(h\\) form Chesire Cat Alice Wonderland.\n“right,” said Cat; time vanished quite slowly, beginning end tail, ending grin, remained time rest gone.“Well! ’ve often seen cat without grin,” thought Alice; “grin without cat! ’s curious thing ever saw life!”Start story two basic modeling functions , like characters Alice Wonderland, considerable “personality”: sinusoid (sin()) sigmoid (pnorm()).\nFigure 5.2: naked sinusoid sigmoidal functions. vertical blue line added mark input \\(t=0\\)\ncomputer can easily construct slope functions sinusoid sigmoid, ’ll call Dsin() Dsigma() respectively.tilde expression handed makeFun(), ’ve identified t name input given “small” default value h parameter. R recognizes Dsin() Dsigma() functions two variables, t h, can see parenthesized argument list functions.nuisance, since using slope functions need always think h, number ’d like describe simply “small,” always need provide numerical value. surprisingly important question development calculus , “can avoid nuisance?” find , let’s look Dsin() Dsigma() range values h, Figure 5.3. 2372\nFigure 5.3: slope functions sinusoid sigmoid. curve shows slope function particular numerical choice h. panels show \\(h=2, 1, 0.5, 0.1, 0.01, 0.001, 0.0001, 0.00001, 0.000001\\).\nobservations numerical experiment:\\(h\\) gets small, slope function doesn’t depend exact value \\(h\\).\nprovide way us, eventually, discard \\(h\\) slope function need \\(h\\) argument.\\(h\\) gets small, slope function doesn’t depend exact value \\(h\\).provide way us, eventually, discard \\(h\\) slope function need \\(h\\) argument.small \\(h\\), \\({\\cal D}_t \\sin(t) = \\sin(t + \\pi/2) = \\cos(t)\\). , taking slope function sinusoid gives another sinusoid, shifted left \\(\\pi/2\\) original. , plain words, small \\(h\\)H cosine slope function sine.small \\(h\\), \\({\\cal D}_t \\sin(t) = \\sin(t + \\pi/2) = \\cos(t)\\). , taking slope function sinusoid gives another sinusoid, shifted left \\(\\pi/2\\) original. , plain words, small \\(h\\)H cosine slope function sine.small \\(h\\), \\({\\cal D}_t \\text{pnorm}(t) = \\text{dnorm(t)}\\). , small \\(h\\) hump function slope function sigmoid function.small \\(h\\), \\({\\cal D}_t \\text{pnorm}(t) = \\text{dnorm(t)}\\). , small \\(h\\) hump function slope function sigmoid function.can confirm last two statements comparison original functions, especially alignment peaks slope functions respect peak sinusoid half-way point sigmoid. 2374Here use \\(t\\) name input \\(\\partial_t\\) notation differentiation. Previously block used \\(x\\) input name \\(\\partial_x\\) differentiation. ? 2376Mathematically, name input makes difference whatsoever. call \\(x\\) \\(t\\) \\(y\\) Josephina. ’s important name used consistently left right sides \\(\\equiv\\), derivative symbol \\(\\partial\\) subscript identifies -respect-input. statement mathematically: 2378\\[\\partial_x\\, x = 1\\ \\ \\ \\ \\partial_t\\, t = 1\\ \\ \\ \\ \\partial_y\\, y = 1\\ \\ \\ \\ \\partial_\\text{Josephina} \\text{Josephina} = 1\\]\nAdmittedly, last one hard read.look derivatives functions multiple variables need thoughtful choice -respect-input. want get used seeing different input names used differentiation. 2380Now consider slope functions logarithm exponential functions.\nFigure 5.4: slope functions logarithm exponential.\nnumerical experiments logarithm exponential functions evidence , \\(h\\) gets small, slope function doesn’t depend \\(h\\). , find :small \\(h\\), slope function logarithm power-law function: \\({\\cal D}_t \\ln(t) = \\frac{1}{t}\\).small \\(h\\), slope function exponential exponential : \\({\\cal D}_t e^x = e^x\\).can confirm evaluating slope function exponential \\(t=0\\) \\(t=1\\), slope function logarithm \\(t= 2, 1, 1/2, 1/4, 1/8.\\)numerical experiments naked modeling functions reveal patterns presented Chapter 2","code":"\nDsin   <- makeFun((  sin(t+h) -   sin(t))/h ~ t, h=0.1)\nDsigma <- makeFun((pnorm(t+h) - pnorm(t))/h ~ t, h=0.1)\nDsin## function (t, h = 0.1) \n## (sin(t + h) - sin(t))/h\nDsigma## function (t, h = 0.1) \n## (pnorm(t + h) - pnorm(t))/h"},{"path":"evanescent-h.html","id":"role-of-h","chapter":"5 Evanescent h","heading":"5.1 Role of h","text":"motivating differentiation naked modeling functions, introduced quantity \\(h\\) ignored , saying doesn’t really matter long “small.” reasonable person might wonder “small” really means, needed introduce \\(h\\) first place eventually going ignore . 2382One reason “small” “zero,” although related, different. example, refering slope functions Dsin() Dsigma() created early example chapter, see setting \\(h\\) zero get us need : 2384In NaN, can hear echo fourth-grade teacher reminding illegal divide zero.Think evanescent \\(h\\) vapor definition “evanescent”: “tending vanish like vapor.” vapor solvent paint. don’t want solvent paint wall; wet paint nuisance. getting paint can wall absolutely needs solvent. 2386We used solvent \\(h\\) earlier chapter numerical experiments led us derivatives naked modeling functions, instance \\(\\partial_x e^x = e^x\\) \\(\\partial_x \\sin(x) = \\cos(x)\\). Eventually, ’ll construct \\(h\\)-free theory differentiation, reducing process set algebraic rules \\(h\\) never appears. goal, let’s continue using \\(h\\) find additional useful facts derivatives. 2388","code":"\nDsin(t=1, h=0)\nDsigma(t=0, h=0)"},{"path":"evanescent-h.html","id":"derivatives-of-linear-combinations","chapter":"5 Evanescent h","heading":"5.2 Derivatives of linear combinations","text":"Linear combination one ways make new functions existing functions. recall, linear combination involves scaling function adding scaled functions. can easily use \\(h\\) show result differentiating linear combination functions. ’ll use \\(f(x)\\) \\(g(x)\\) names stand function whatsoever. ’ll let \\(b\\) name scalar. First, let’s figure \\(\\partial_x\\, b f(x)\\), Going back writing \\(\\partial_x\\) terms slope function:\n\\[\\partial_x\\, b\\,f(x) = \\frac{b\\, f(x + h) - b\\,f(x)}{h}\\\\\n\\ \\\\\n= b \\frac{f(x+h) - f(x)}{h} = b\\, \\partial_x f(x)\\]\nwords, know derivative \\(\\partial_x\\, f(x)\\), can easily find derivative scaled version \\(f()\\).Now consider derivative sum two functions, \\(f(x)\\) \\(g(x)\\):\n\\[\\partial_x\\, \\left[f(x) + g(x)\\right] =\\\\\n\\ \\\\\n=\\frac{\\left[f(x + h) + g(x + h)\\right] - \\left[f(x) + g(x)\\right]}{h} = \\\\\n\\ \\\\\n= \\frac{\\left[f(x+h) -f(x)\\right] + \\left[g(x+h) - g(x)\\right]}{h}\\\\\n\\ \\\\\n= \\frac{\\left[f(x+h) -f(x)\\right]}{h} + \\frac{\\left[g(x+h) - g(x)\\right]}{h}\\\\\n\\ \\\\\n= \\partial_x\\, f(x) + \\partial_x\\, g(x)\\]Using two rules together, can differentiate linear combination functions terms differentiated functions :\\[\\partial_x\\ \\left[\\strut a_1 g_1(x) + a_2 g_2(x) + a_3 g_3(x) + \\cdots\\right] =\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\\n\\ \\\\\n\\ \\ \\ \\ \\ \\ \\ \\ \\ a_1 \\partial_x\\, g_1(x) + a_2 \\partial_x\\, g_2(x) + a_3 \\partial_x\\, g_3(x) + \\cdots\\]way \\(\\partial_x\\) can “passed ” linear combination, mathematicians say differentiation linear operator. Consider new fact differentiation payment eventually become complete theory telling us differentiate product two functions composition two functions. 2390In 1734, famous philosopher George Berkeley (1685-1753) published long-titled book: Analyst: Discourse Addressed Infidel Mathematician: Wherein Examined Whether Object, Principles, Inferences Modern Analysis Distinctly Conceived, Evidently Deduced, Religious Mysteries Points Faith. Analyst, Berkeley took issue arguments time legitimate divide \\(h\\) , ultimately, \\(h\\) replaced zero. Calling \\(h\\) “evanescent increment,” asked, 2392“evanescent Increments? neither finite Quantities Quantities infinitely small, yet nothing. May call ghosts departed quantities?”Interesting, Berkeley believed ghost \\(h\\) yielded correct results. objection framers calculus made two, canceling errors.“[B]y virtue two fold mistake arrive, though science, yet truth.”Berkeley saying calculus yet put solid logical foundation. century Berkeley’s death work accomplished. accomplished, results claimed true along confirmed. 2394","code":""},{"path":"evanescent-h.html","id":"derivatives-of-the-basic-modeling-functions","chapter":"5 Evanescent h","heading":"5.3 Derivatives of the basic modeling functions","text":"basic modeling functions naked modeling functions, bare \\(x\\) replaced \\(\\line(x)\\). convention, different ways writing \\(\\line(x)\\) different naked functions, instance: 2396$$       \\\n \\2 (x-x_0)/P)\\\n(x)      (k x)\\\nx^2       (mx + b)^2\\\n1/x       1/(mx + b)\\\n(x)       (x + b)\\\n$$general rule derivatives basic modeling functions \\[\\partial f(\\line(x)) = \\partial_x \\line(x) \\times [\\partial_x f]\\left(\\strut\\line(x)\\right)\\]illustrate:\\(\\partial_x e^{kx} = k\\, e^{kx}\\)\\(\\partial_x \\sin(2\\pi (x-x_0)/P) = \\frac{2\\pi}{P} \\sin(2\\pi (x-x_0)/P)\\)\\(\\partial_x (mx + b)^2 = m\\, 2 (m x + b) = 2 m^2 x + m^2 b\\)\\(\\partial_x \\frac{1}{mx + b} = - \\frac{m}{(mx + b)^2}\\)\\(\\partial_x \\ln(x + b) = /(ax+b)\\)\\(\\partial_x \\text(dnorm)(x, mn, sd) = - \\frac{x}{sd} \\text(dnorm)(x, mn, sd)\\)notation basic hump sigmoidal functions two equivalent formulations:hump: \\(\\dnorm\\left(\\frac{x-mn}{sd}\\right)\\) \\(\\dnorm(x, mn, sd)\\)sigmoid: \\(\\pnorm\\left(\\frac{x-mn}{sd}\\right)\\) \\(\\pnorm(x, mn, sd)\\)derivative sigmoid can written either two equivalent ways:\\(\\partial_x \\pnorm\\left(\\frac{x-mn}{sd}\\right) = \\frac{1}{sd}\\, \\pnorm\\left(\\frac{x-mn}{sd}\\right)\\)\\(\\partial_x \\pnorm(x, mn, sd) = \\dnorm(x, mn, sd)\\)’s easy get confused .","code":""},{"path":"prod-comp-rules.html","id":"prod-comp-rules","chapter":"6 Differentiation of assembled functions","heading":"6 Differentiation of assembled functions","text":"Chapter ?? introduced three major methods putting two basic modeling functions together order make new function.Linear combinations: e.g. \\(f(x) + b g(x)\\)Products: e.g. \\(f(x) g(x)\\)Composition:, e.g. \\(f(g(x))\\) (usually different function \\(g(f(x))\\).)already looked differentiation linear combinations. chapter, ’ll examine products functions compositions functions.","code":""},{"path":"prod-comp-rules.html","id":"step-1-identify-f-and-g","chapter":"6 Differentiation of assembled functions","heading":"6.1 Step 1: Identify f() and g()","text":"write rules terms two function names, \\(f()\\) \\(g()\\), can stand functions whatsoever. ’s rare see product composition written explicitly \\(f(x)g(x)\\) \\(f(g(x))\\). Instead, given something like \\(e^x \\ln(x)\\). first step differentiating product composition identify \\(f()\\) \\(g()\\) individually. 2400In general, \\(f()\\) \\(g()\\) might complicated functions, involving linear combinations, products, composition. get started, ’ll practice cases simple, naked modeling functions. 2405For following, say whether function composition \\(f(g(x))\\) product \\(f(x) g(x)\\), neither. identify \\(f()\\). product, take \\(f()\\) function left.\\(h_1(x) \\equiv \\ln(x) e^x\\)Question \\(h_1(x)\\)?    product ✓        composition ☹︎        neither ☹︎ \nQuestion B \\(h_1()\\), \\(f(x)\\)?\\(\\sin()\\) ☹︎ \\(\\cos()\\) ☹︎ \\(\\exp()\\) ☹︎ \\(\\ln()\\) ✓ \\(\\recip()\\) ☹︎ \\(\\pnorm()\\) ☹︎ \\(\\dnorm()\\) ☹︎ \\(h_2(x) \\equiv \\sin(x) \\cos(x)\\)Question C \\(h_2(x)\\)?    product ✓        composition ☹︎        neither ☹︎ \nQuestion D \\(h_2()\\), \\(f(x)\\)?\\(\\sin()\\) ✓ \\(\\cos()\\) ☹︎ \\(\\exp()\\) ☹︎ \\(\\ln()\\) ☹︎ \\(\\recip()\\) ☹︎ \\(\\pnorm()\\) ☹︎ \\(\\dnorm()\\) ☹︎ \\(h_3(x) \\equiv \\sin(\\cos(x))\\)Question E \\(h_3(x)\\)?    product ☹︎        composition ✓        neither ☹︎ \nQuestion F \\(h_3()\\), \\(f(x)\\)?\\(\\sin()\\) ✓ \\(\\cos()\\) ☹︎ \\(\\exp()\\) ☹︎ \\(\\ln()\\) ☹︎ \\(\\recip()\\) ☹︎ \\(\\pnorm()\\) ☹︎ \\(\\dnorm()\\) ☹︎ \\(h_4(x) \\equiv e^{\\ln(x)}\\)Question G \\(h_4(x)\\)?    product ☹︎        composition ✓        neither ☹︎ \nQuestion H \\(h_4()\\), \\(f(x)\\)?\\(\\sin()\\) ☹︎ \\(\\cos()\\) ☹︎ \\(\\exp()\\) ✓ \\(\\ln()\\) ☹︎ \\(\\recip()\\) ☹︎ \\(\\pnorm()\\) ☹︎ \\(\\dnorm()\\) ☹︎ \\(h_5(x) \\equiv \\sin(x) - \\cos(x)\\)Question \\(h_5(x)\\)?    product ☹︎        composition ☹︎        neither ✓ \nQuestion J \\(h_5()\\), \\(f(x)\\)?\\(\\sin()\\) ✓ \\(\\cos()\\) ☹︎ \\(\\exp()\\) ☹︎ \\(\\ln()\\) ☹︎ \\(\\recip()\\) ☹︎ \\(\\pnorm()\\) ☹︎ \\(\\dnorm()\\) ☹︎ \\(h_6(x) \\equiv e^{x^2}\\)Question K \\(h_2(x)\\)?    product ☹︎        composition ✓        neither ☹︎ \nQuestion L \\(h_6()\\), \\(f(x)\\)?\\(\\sin()\\) ☹︎ \\(\\cos()\\) ☹︎ \\(\\exp()\\) ✓ \\(\\ln()\\) ☹︎ \\(\\recip()\\) ☹︎ \\(\\pnorm()\\) ☹︎ \\(\\dnorm()\\) ☹︎ \\(h_7(x) \\equiv \\pnorm(x^2)\\)Question M \\(h_7(x)\\)?    product ☹︎        composition ✓        neither ☹︎ \nQuestion N \\(h_7()\\), \\(f(x)\\)?\\(\\sin()\\) ☹︎ \\(\\cos()\\) ☹︎ \\(\\exp()\\) ☹︎ \\(\\ln()\\) ☹︎ \\(\\recip()\\) ☹︎ \\(\\pnorm()\\) ✓ \\(\\dnorm()\\) ☹︎ \\(h_8(x) \\equiv \\pnorm(x) \\dnorm(x)\\)Question O \\(h_8(x)\\)?    product ✓        composition ☹︎        neither ☹︎ \nQuestion P \\(h_8()\\), \\(f(x)\\)?\\(\\sin()\\) ☹︎ \\(\\cos()\\) ☹︎ \\(\\exp()\\) ☹︎ \\(\\ln()\\) ☹︎ \\(\\recip()\\) ☹︎ \\(\\pnorm()\\) ✓ \\(\\dnorm()\\) ☹︎ \\(h_9(x) \\equiv 1/\\sin(x)\\)Question Q \\(h_9(x)\\)?    product ☹︎        composition ✓        neither ☹︎ \nQuestion R \\(h_9()\\), \\(f(x)\\)?\\(\\sin()\\) ☹︎ \\(\\cos()\\) ☹︎ \\(\\exp()\\) ☹︎ \\(\\ln()\\) ☹︎ \\(\\recip()\\) ✓ \\(\\pnorm()\\) ☹︎ \\(\\dnorm()\\) ☹︎ ","code":""},{"path":"prod-comp-rules.html","id":"step-2-find-f-and-g","chapter":"6 Differentiation of assembled functions","heading":"6.2 Step 2: Find f’() and g’()","text":"differentiating either products compositions, need identify \\(f()\\) \\(g()\\) (first step) compute derivatives \\(\\partial_x f()\\) \\(\\partial_x g()\\). , ’ll write four functions. 2410For \\(h_i()\\) previous section, fill row following table. (row \\(h_1()\\) already entered.)","code":""},{"path":"prod-comp-rules.html","id":"product-rule","chapter":"6 Differentiation of assembled functions","heading":"6.3 Product rule","text":"Written terms pronoun functions \\(f()\\) \\(g()\\), product rule isDecide colorizing formulas, following, helpful worthwhile.\\[\\partial_x \\left[\\strut \\color{blue}{f(x)}\\times \\color{green}{g(x)}\\right] = \\color{blue}{[\\partial_x f(x)]} \\times \\color{green}{g(x)}\\ \\  {\\mathbf +}\n\\ \\ \\color{green}{[\\partial_x g(x)]} \\times \\color{blue}{f(x)}\\]\npeople find easier read rule Lagrange shorthand, f g stand \\(f(x)\\) \\(g(x)\\) respectivly, f’ (“f-prime”) g’ (“g-prime”) stand \\(\\partial f()\\) \\(\\partial g()\\). 2415\\[\\text{Lagrange shorthand:}\\ \\   \\partial[f \\times g] = [f \\times g]' = f'g + g'f\\]\nLet’s start simple examples already know answer:\\(\\partial [x \\times x^2] = [\\partial x] \\times x^2 \\ +\\  [\\partial x^2] \\times x =1\\times x^2 + 2x \\times x = 3 x^2\\)\nSince \\([x \\times x^2] = x^3\\), figured directly derivative \\(3 x^2\\)\\(\\partial [x \\times x^2] = [\\partial x] \\times x^2 \\ +\\  [\\partial x^2] \\times x =1\\times x^2 + 2x \\times x = 3 x^2\\)Since \\([x \\times x^2] = x^3\\), figured directly derivative \\(3 x^2\\)\\(partial_x [e^x \\times e^x] = [\\partial_x e^x] \\times e^x \\ + \\ [\\partial_x e^x] \\times e^x = 2 e^x e^x = 2 e^{2x}\\)\nSince \\([e^x \\times e^x] = e^{2x}\\), one basic modeling functions, figured directly derivative \\(2 e^{2x}\\).\\(partial_x [e^x \\times e^x] = [\\partial_x e^x] \\times e^x \\ + \\ [\\partial_x e^x] \\times e^x = 2 e^x e^x = 2 e^{2x}\\)Since \\([e^x \\times e^x] = e^{2x}\\), one basic modeling functions, figured directly derivative \\(2 e^{2x}\\).","code":""},{"path":"prod-comp-rules.html","id":"composition-chain-rule","chapter":"6 Differentiation of assembled functions","heading":"6.4 Composition (“chain”) rule","text":"Written terms functions \\(f()\\) \\(g()\\), rule composition \\(f(g(x))\\) \\[\\partial_x \\left[\\strut \\color{blue}{f\\left(\\right.}\\strut \\color{green}{g(x)}\\color{blue}{\\left.\\right)}\\right] = [\\color{blue}{\\partial_x f}](\\color{green}{g(x)}) \\times [\\color{green}{\\partial_xg(x)}]\\]\n, using Lagrange prime notation\n\\[\\text{Lagrange shorthand:}\\ \\   \\partial[f(g)] = f' (g) \\times g'\\]almost universally called chain rule, presumably result involves chain derivatives., ’ll practice simple examples already know result:\\(\\partial [\\exp\\left(\\ln(x)\\right)] = [\\partial \\exp](\\ln(x)) \\times \\partial_x \\ln(x) = \\exp\\left(\\ln(x)\\right) \\times 1/x\\)\nSince \\(\\exp\\left(\\ln(x)\\right) = x\\) can simplify \\[\\partial [\\exp\\left(\\ln(x)\\right)] = \\exp\\left(\\ln(x)\\right) \\times 1/x = x/x = 1\\] consistent know \\(\\partial_x x\\). 2420\\(\\partial [\\exp\\left(\\ln(x)\\right)] = [\\partial \\exp](\\ln(x)) \\times \\partial_x \\ln(x) = \\exp\\left(\\ln(x)\\right) \\times 1/x\\)Since \\(\\exp\\left(\\ln(x)\\right) = x\\) can simplify \\[\\partial [\\exp\\left(\\ln(x)\\right)] = \\exp\\left(\\ln(x)\\right) \\times 1/x = x/x = 1\\] consistent know \\(\\partial_x x\\). 2420\\(\\partial[ \\recip(x^2)] = [\\partial \\recip](x^2) \\times \\partial_x x^2 = [\\partial\\, \\recip](x^2) \\times 2 x\\)\nSince \\(\\partial_x \\recip(x) = \\partial_x [1/x] = \\partial_x x^{-1} = -x^{-2} = - \\frac{1}{x^2}\\), can simplify \n\\(\\partial[ \\recip(x^2)] = [\\partial_x \\recip](x^2) \\times \\partial_x x^2 = - \\frac{1}{(x^2)^2} \\times 2 x = -2 \\frac{x}{x^4} = -2 x^{-3}\\)\\(\\partial[ \\recip(x^2)] = [\\partial \\recip](x^2) \\times \\partial_x x^2 = [\\partial\\, \\recip](x^2) \\times 2 x\\)Since \\(\\partial_x \\recip(x) = \\partial_x [1/x] = \\partial_x x^{-1} = -x^{-2} = - \\frac{1}{x^2}\\), can simplify \n\\(\\partial[ \\recip(x^2)] = [\\partial_x \\recip](x^2) \\times \\partial_x x^2 = - \\frac{1}{(x^2)^2} \\times 2 x = -2 \\frac{x}{x^4} = -2 x^{-3}\\)derivatives basic modeling functions can shown using chain rule. Remember, basic modeling functions composition naked modeling function \\(\\line(x) \\equiv ax + b\\). 2425\\(\\partial_x [\\sin(x + b)] = [\\partial \\sin](x + b) \\times \\partial_x [ax + b = \\cos(ax + b) \\times \\).","code":""},{"path":"prod-comp-rules.html","id":"step-3-apply-the-relevant-rule","chapter":"6 Differentiation of assembled functions","heading":"6.5 Step 3: Apply the relevant rule","text":"See 141 DD 31 drill problems","code":""},{"path":"prod-comp-rules.html","id":"exponentials-and-logarithms-optional","chapter":"6 Differentiation of assembled functions","heading":"6.6 Exponentials and logarithms (optional)","text":"natural logarithm function, \\(\\ln(x)\\), one basic modeling functions. digit() function, introduced Chapter ?? different, logarithm-base-10, written \\(\\log_{10}(x)\\) log10(x). Ten integer, nice round number boot. practice, ’s “natural” use \\(\\log_10()\\). “natural” “natural logarithm” means something different. 2430The base natural logarithm number called Euler’s constant written \\(e\\). celebrity number, \\(e\\) right \\(\\pi\\) \\(-1\\). Just \\(\\pi\\) decimal expansion infinitely long, familiar \\(\\pi = 3.14159265358979...\\), Euler’s constant infinitely long decimal representation: \\(e = 2.71828182845905...\\) 2435It’s obvious first glance \\(e = 2.71828182845905...\\) called “natural” mathematicians. reason number , butthe derivative \\(\\partial_x \\ln(x)\\) particularly simple form, namely, \\(1/x\\).\\(\\ln(x)\\) inverse \\(e^x\\), nicest derivatives \\(\\partial_x e^x = e^x\\).Let’s look log-base-10 ’s computer-savvy cousin log-base-2. definition logarithms means 10 2 can written \\[10 = e^{\\ln(10)}\\ \\ \\ \\text{}\\ \\ \\ 2 = e^{\\ln(2)}\\]\nimplies base-10 base-2 exponential functions can written\\[10^x = [e^{\\ln(10)}]^x = e^{\\ln(10)x} \\ \\ \\ \\text{}\\ \\ \\ 2^x = [e^{\\ln(2)}]^x = e^{\\ln(2) x}\\]\nCalculating \\(\\partial_x 10^x\\) \\(\\partial_x 2^x\\) matter applying chain rule:\\[\\partial_x [10^x] = \\partial_x [e^{\\ln(10)x}] = e^{\\ln(10)x} \\times \\ln(10) = 2.30258509299405... \\times 10^x\\\\ \n\\ \\text{}\\\\\n\\partial_x [2^x] = \\partial_x [e^{\\ln(2)x}] = e^{\\ln(2)x} \\times \\ln(2) = 0.693147180559945...\\times 2^x\\]\nLike \\(e^x\\), derivatives \\(10^x\\) \\(2^x\\) proportional . \\(e^x\\) constant proportality 1, natural number indeed.","code":""},{"path":"prod-comp-rules.html","id":"checking-your-work","chapter":"6 Differentiation of assembled functions","heading":"6.7 Checking your work","text":"get result derivative, plot along finite-difference approximation. close, ’re good.get result derivative, plot along finite-difference approximation. close, ’re good.Apply antiD() operator derivative graphically confirm constant difference output antiD() original function.Apply antiD() operator derivative graphically confirm constant difference output antiD() original function.","code":""},{"path":"optim-and-shape.html","id":"optim-and-shape","chapter":"7 Optimization","heading":"7 Optimization","text":"“optimize” means make something good possible available resources. Optimization problems common science, logistics, industry, area one seeks best solution problem. everyday examples: 2440How much salt add stew. Stews can salty, can salty enough. Somewhere middle optimum.harvest trees grown lumber. Harvest soon might losing prime growing years. Wait long trees settled slow growth, .Walking steep slope tiring slows ; ’s hiking trails switchbacks. switchbacks shallow, takes long time cover distance. ’s efficient angle enable hikers get hill shortest time. 2445","code":""},{"path":"optim-and-shape.html","id":"structure-of-the-problem","chapter":"7 Optimization","heading":"7.1 Structure of the problem","text":"optimization problem, one input quantity whose value choose. amount salt; years wait planting harvesting tree; angle trail respect slope. ’ll call decision quantity. 2450Similarly, one output quantity value want make good possible. taste stew; income produced selling lumber; time takes walk hill. output quantity called objective. 2455The model relates inputs objective output called objective function. Solving optimization problem—modeling phase complete—amounts finding value decision quantity (input objective function) produces best level objective (output objective function). 2460Sometimes objective something want minimize, make small possible. hiking trail problem, seek minimize amount time takes walk trail. Sometimes want maximize objective, wood-harvest problem objective harvest wood per year. 2465Mathematically, maximization minimization thing. Every minimization problem can turned maximization problem putting negative sign front objective function. simplify discussion, talking finding solution optimization problem ’ll imagine goal maximize. keep mind many circumstances real world, “best” can mean minimization. 2470The solution seek maximization problem called argmax. contraction two words: argument (, input) produces maximum output. (minimization, solution ***argmin.) 2475Once found argmax can plug value objective function find value output. value maximum.People often talk “finding maximum.” misleading. setup optimization problem :Construct (, model) objective function.Now know objective function, find input function—, argmax—produces maximum output.illustrate setup optimization problem, imagine situation contest see can shoot tennis ball farthest field slingshot. contest, adjust vertical angle launch, place ball slingshot’s cradle, pull back far possible, let go. win contest, need optimize launch ball. 2480The objective distance travelled ball. simplicity, ’ll imagine velocity ball release fixed \\(v_0\\). ’ll win lose based angle launch choose. 2485Before head field experiment, let’s bit preparation. ’ll model far ball travel (horizontally) function angle launch \\(\\theta\\) initial velocity \\(v_0\\). 2490The mathematics problems involves area called differential equations, important part calculus ’ll come later course. Since don’t tools yet, ’ll just state simple model long ball stays air.\n\\[\\text{duration}(v_0, \\theta) = 2 v_0 \\sin(\\theta)/g\\] \\(g\\) acceleration due gravity, \\(9.8 \\text{m}\\text{s}^{-2}\\), assuming contest held Earth.horizontal distance travelled tennis ball \\[\\text{hdist}(v_0, \\theta) = \\cos(\\theta) v_0\\, \\text{duration}(v_0, \\theta) = 2 v_0^2 \\cos(\\theta)\\sin(\\theta) / g\\]\nobjective function hdist(), seek find argmax. input \\(v_0\\) (assumed) fixed, decision quantity angle \\(\\theta\\).best choice \\(\\theta\\) make quantity \\(\\cos(\\theta)\\sin(\\theta)\\) large possible. finding argmax, don’t need concerned \\(v_0\\) \\(g\\).Finding argmax can accomplished simply plotting function \\(\\cos(\\theta)\\sin(\\theta)\\). ’ll implement function input units degrees.\nFigure 7.1: distance travelled ball launched angle \\(\\theta\\)$, according simple model duration flight distance travelled.\ngraph, especially zoomed-version, can read argmax \\(\\theta = 45^\\circ\\).Finding argmax solves problem. may also want present solution saying value output hdist() argmax given input. can read graph maximum \\(\\cos(\\theta)\\sin(\\theta)\\) 0.5 \\(\\theta = 45^\\circ\\), overall distance \\(v_0^2 / g\\) 2495Review Exercise: dimension \\(v_0^2 / g\\)?","code":"\nf <- makeFun(cos(pi*theta/180)*sin(pi*theta/180) ~ theta)\nslice_plot(f(theta) ~ theta, domain(theta=c(0,90)))\nslice_plot(f(theta) ~ theta, domain(theta = c(40, 50)))"},{"path":"optim-and-shape.html","id":"interpreting-the-argmax","chapter":"7 Optimization","heading":"7.2 Interpreting the argmax","text":"graphical solution given slingshot problem entirely satisfactory. Whether solution win contest depends course whether model built objective function correct. potentially important things left , air resistence. 2500Solving optimization problem prepared us go field test result. Perhaps ’ll find real-world optimum angle somewhat steeper shallower \\(\\theta = 45^\\circ\\). 2505Besides argmax, another important quantity read graph Figure 7.1 precision argmax. strict mathematical terms, argmax exactly 45 degrees. practical terms, may matter much outcome little away \\(45^\\circ\\). example, according model, angle range \\(40^\\circ < \\theta < 50^\\circ\\) produce output within 1% distance reached argmax. 2510Contests won lost margins less 1%, casually deviate argmax. hand, \\(45^\\circ\\) argmax model. Reality may deviate model. instance, suppose air resistance wind might might effect 1% distance. can expect factors might change optimal angle much \\(\\pm 5^\\circ\\). 2515","code":""},{"path":"optim-and-shape.html","id":"derivatives-and-optimization","chapter":"7 Optimization","heading":"7.3 Derivatives and optimization","text":"’re now going reframe search argmax ’s interpretation terms derivatives objective function respect decision quantity (\\(\\theta\\) slingshot problem). function one variable, improvement look---graph technique find argmax. genuine reason use derivatives set us future solve problems one variable, hard draw interpret graph. Also, describing functions language derivatives can help us think clearly aspects problem, precision argmax. 2520With graph Figure 7.1, ’s easy find argmax; common sense carries day. won’t obvious first going take following approach:Let’s denote argmax objective function \\(f(x)\\) \\(x^\\star\\).\nLet’s look derivative \\(\\partial_x f(x)\\) neighborhood \\(x^\\star\\). Referring Figure 7.1, \\(x^\\star = 45^\\circ\\), may able see \\(\\partial_x f(x^\\star)\\) zero; line tangent function’s graph \\(x^\\star\\) flat. 2525Seen another way, slope \\(f(x)\\) left \\(x^\\star\\) positive; moving tiny bit right (, increasing \\(x\\) small amount, leads increase output \\(f(x)\\). Intuitively, approach peak hill, walking uphill.) Just right \\(x^\\star\\), slope \\(f(x)\\) negative; reach top hill continue , going downhill. derivative function positive one side \\(x^\\star\\) negative , suggesting crosses zero argmax. 2530Inputs \\(x^\\star\\) \\(\\partial_x f(x^\\star) = 0\\) called critical points. call simply argmaxes? slope also zero argmin. ’s even possible slope zero point ’s neither argmin argmax. 2535Question tmp-8: Consider function \\(f(x) \\equiv x^3\\). Confirm value derivative \\(\\partial_x f(x = 0)\\) \\(x^\\star = 0\\) critical point. sort critical point \\(x^\\star=0\\)? (Hint: Draw graph \\(f(x)\\) near \\(x=0\\) see ’s going .)argmax [\\(f(0) < f(x > 0)\\), \\(x^\\star=0\\) can’t argmax.]argmax [\\(f(0) < f(x > 0)\\), \\(x^\\star=0\\) can’t argmax.]argmin [\\(f(x < 0) < f(0)\\), \\(x^\\star=0\\) can’t argmin.]argmin [\\(f(x < 0) < f(0)\\), \\(x^\\star=0\\) can’t argmin.]Neither (+) []Neither (+) []point, know values \\(x^\\star\\) give \\(\\partial_x f(x^\\star) = 0\\) “critical points,” haven’t said figure whether given critical point argmax, argmin, neither. behavior \\(\\partial_x f(x)\\) near x=x^$ important. \\(x^\\star\\) argmax, \\(\\partial_x f(x)\\) positive left \\(x^\\star\\) negative right \\(x^\\star\\); walk hill get \\(x^\\star\\), top hill flat, just past top hill negative slope. 2540For argmin, changing \\(x\\) less \\(x^\\star\\) greater \\(x\\star\\); walking valley, level bottom \\(x=x^\\star\\), back side valley pass \\(x=x^\\star\\). Figure 7.2 shows situation. 2545\nFigure 7.2: Top row: objective function near argmax (left) argmin (right). Bottom row: derivative objective function\nbottom row graphs Figure 7.2 shows derivative objective function \\(f(x)\\), , \\(\\partial_x f(x)\\). can see argmax \\(f(x)\\), derivative \\(\\partial_x f(x)\\) positive left negative right. Similarly, near argmin \\(f(x)\\), derivative \\(\\partial_x f(x)\\) negative left positive right. 2550Stated another way, derivative \\(\\partial_x f(x)\\) positive slope near argmin negative slope near argmax.Just differentiate \\(f(x)\\) find ’s slope, find slope function \\(\\partial_x f(x)\\) can differentiate . result called second derivative. write \\(\\partial_x \\left[\\partial_x f(x)\\right]\\), brevity write \\(\\partial_{xx} f(x)\\). 2555The second derivative objective function \\(f(x)\\) critical point \\(x^\\star\\) tells us whether critical point argmax, argmin, neither.\nCritical point \\(x^\\star\\) | \\(\\partial_x f(x^\\star)\\) | \\(\\partial_{xx} f(x^\\star)\\)\n———————–|———————|——————-\nargmax | 0 | negative\nargmin | 0 | positive\nneither| 0 | 0Question tmp-9: Returning function \\(f(x) \\equiv x^3\\), find value second-derivative \\(\\partial_{xx} f(x^\\star)\\) evaluated critical point \\(x = x^\\star = 0\\). \\(\\partial_{xx} f( x=0\\)?Negative [established previous exercise critical point \\(x^\\star=0\\) neither argmin wan argmax.]Negative [established previous exercise critical point \\(x^\\star=0\\) neither argmin wan argmax.]Positive [established previous exercise critical point \\(x^\\star=0\\) neither argmin wan argmax.]Positive [established previous exercise critical point \\(x^\\star=0\\) neither argmin wan argmax.]Zero (+) []Zero (+) []differentiate function \\(f(x)\\), produce new function can call anything like. help readers follow thread story, ’s nice name new function \\(\\partial_x f(x)\\). signals clearly reader origins new function respect original function \\(f(x)\\). 2560In words, \\(\\partial_x f(x)\\) often called derivative \\(f(x)\\) (respect x). “derive” general term mean just way creating something new something old. calculus, “derivative” always means “created differentiation.” Perhaps better history led us call \\(\\partial_x f(x)\\) name “differentiated \\(f(x)\\)” “differential function \\(f(x)\\).” 2565Graphically, can read second derivative \\(\\partial_{xx} f(x)\\) slope first derivative \\(\\partial_x f(x)\\) concavity function \\(f(x)\\) . \\(\\partial_{xx} f(x) < 0\\), \\(f(x)\\) concave (frown). Likewise, \\(\\partial_{xx} f(x) >0\\) \\(f(x)\\) concave (smile). \\(\\partial_{xx} f(x) = 0\\), \\(f(x)\\) curvature. 2570To point, ’ve translated features functions evident graph language derivatives:slope function \\(f(x)\\) input \\(x\\) value derivative function \\(\\partial_x f(x)\\) \\(x\\).concavity function \\(f(x)\\) input slope derivative function, , \\(\\partial_x f(x)\\).Putting () (ii) together, get concavity function \\(f(x)\\) input \\(x\\) value second derivative function, , \\(\\partial_{xx} f(x)\\).argmax \\(x^\\star\\) \\(f(x)\\), value derivative function \\(\\partial_x f(x^\\star)\\) zero value second derivative function \\(\\partial_{xx} f(x^\\star)\\) negative. (situation argmin similar, derivative objective function zero second derivative positive.) 2575The graph shows three different functions labeled (), (B), (C).Question Function ()     concave ✓        non-concave ☹︎        concave ☹︎ Question B Function (B)     concave ☹︎        non-concave ☹︎        concave ✓ Question C Function (C)     concave ☹︎        non-concave ✓        concave ☹︎ Question D negative function ()     concave ☹︎        non-concave ☹︎        concave ✓ graph shows function \\(\\mbox{wave}(t) \\equiv \\sin(2 \\pi t/4)\\) labels four input values \\(t\\).Question E values input \\(t\\) function concave ?\\(t = \\) \\(t=D\\) ☹︎ \\(t = \\) \\(t=C\\) ☹︎ \\(t = C\\) \\(t = D\\) ✓ none ☹︎ Question F values input \\(t\\) function non-concave?    \\(t = \\) ✓        \\(t=B\\) ☹︎        \\(t=C\\) ☹︎        none ☹︎ Question G function steepest?smooth function marked points. task , point, estimate value derivative, sign second derivative, radius circle nicely match function small region around point. (Remember, ’re asking radius circle, half diameter.)simplify things, table giving seven different combinations quantities estimate. correctly match one labeled points, . need choose correct set quantities labeled point.Question row table best matches function point ?    ☹︎        ii ☹︎        iii ☹︎        iv ☹︎        v ☹︎        vi ☹︎        vii ✓ Question B row table best matches function point B?    ☹︎        ii ✓        iii ☹︎        iv ☹︎        v ☹︎        vi ☹︎        vii ☹︎ Question C row table best matches function point C?    ☹︎        ii ☹︎        iii ☹︎        iv ✓        v ☹︎        vi ☹︎        vii ☹︎ Question D row table best matches function point D?    ✓        ii ☹︎        iii ☹︎        iv ☹︎        v ☹︎        vi ☹︎        vii ☹︎ Question E row table best matches function point E?Pick Lorenz curve {.intheworld} block 1. Compute concavity lorenz function, showing ’s everywhere positive. examine concavity composition lorenz functions determine necessarily everywhere positive. 2580What’s critical point?’re familiar quadratic polynomial: \\[g(x) = a_0 + a_1 x + a_2 x^2\\]\ngraph quadratic polynomial parabola, might concave concave . know, parabola one critical point, might argmin argmax.Let’s find critical point. know critical point \\(x^\\star\\) \\(\\partial_x g(x_0) = 0\\). Since know differentiate power law, can see \n\\[\\partial_x g(x) = a_1 + 2 a_2 x\\] , specifically, critical point \\(x^\\star\\) derivative \n\\[a_1 + 2 a_2 x^\\star = 0\\]\nequation, definition. says whatever \\(x^\\star\\) happens , quantity \\(a_1 + 2 a_2 x^\\star\\) must zero. Using plain old algebra, can find location critical point \\[x^\\star = -\\frac{a_1}{2 a_2}\\] 2585You’re proud pet dog, Swimmer. often go beach walk along water’s edge. throw ball beach, angle lands water. Swimmer goes work. runs beach (fast) plunges water, heading toward ball. can run fast beach: 400 m/minute. swims rather slower: 50 m/min.Suppose threw ball point 50 meters beach 10 meters water. overall distance ball therefore \\(\\sqrt{50^2 + 10^2} = 51\\) meters. Swimmer entered water immediately, take minute reach ball (51 m / 50 m/min). Swimmer can get ball faster running beach big turning water. Swimmer ran 50 meters beach turned swim 10 meters, take (50/400 + 10/50) minutes, one-third minute.Can Swimmer better? can set calculation like . Imagine \\(x\\) distance beach Swimmer runs. time run distance \\(x/400\\). distance remaining ball can found pythagorean theorem. One leg triangle length \\((50-x)\\), length 10 m. \\(x\\) 45, distance swim water \\(\\sqrt{(50-45)^2 + 10^2}\\). Divide distance 50 m/min get time spent water.Time_to_ball() takes one argument, distance \\(x\\) Swimmer runs beach turning water. Use SANDBOX find distance calculus-savvy Swimmer runs beach turning water, Swimmer’s goal get ball fast possible.Question ’s optimal running distance Swimmer?    47.25 ☹︎        47.5 ☹︎        48.25 ☹︎        48.75 ✓        49.25 ☹︎        49.75 ☹︎ ’re skeptical dog might calculus problem running fetch ball, consider path taken photon. “Fermat’s Principle” light takes path least time. illustrate, consider problem photon travelling point point B, diagram. shortest path two points straight line. Along straight-line path, time taken photon distance divided speed light.diagram shows another path consisting two segments, one length \\(l_1\\) \\(l_2\\). Obviously, two-segment path longer straight-line path. Fermat’s principle lead light “prefer” longer path time taken traverse shorter.reason indirect path might shorter speed light differs different physical media. Light traveling vacuum famously speed 300,000 km per second. air, speed smaller factor 1/1.003. water, speed smaller still: factor 1/1.3.Imagine blue zone diagram water clear zone air. time photon travel point B proportional \\(1.003\\ l_1 + 1.3\\ l_2\\).see path actually taken light, let’s imagine point \\((x=0, y=10)\\) point B \\((x=20, y=-10)\\), boundary water air \\(y=0\\). ’ll place point P \\((x, 0)\\). total time taken light traverse path 1.003 dist(P) + 1.3 dist(P B).Question formulas gives total time takes light traverse path P relative speed 1/1.003 path P B relative speed 1/1.3? located \\((0, 10)\\), B located \\((20,-10)\\), P located \\((x, 0)\\)\\(1.003 \\sqrt{(x-0)^2 +(0-10)^2}+ 1.3\\sqrt{(20-x)^2 + (-10 - 0)^2}\\) ✓ \\(\\sqrt{(x-0)^2 +(0-10)^2}/1.003+ \\sqrt{(20-x)^2 + (-10 - 0)^2}/1.3\\) ☹︎ ’s true divide distance speed get time, relative speeds \\(1/1.003\\) \\(1/1.3\\). \\(1.003 \\sqrt{(x-10)^2 +(0-0)^2}+ 1.3\\sqrt{(-10 -x)^2 + (50 - 0)^2}\\) ☹︎ mixes x y coordinates. distance P \\(\\sqrt{(x_P - x_A)^2 + (y_P - y_A)^2}\\). problem, point P \\((50-x, 0)\\). Implement calculation total_time() R, use graph find argmin.Question B ) value \\(x\\) (, argmin) minimizes travel time light points B? (Choose best answer)10.52 ☹︎ 11.02 ☹︎ 11.19 ☹︎ 11.61 ☹︎ 12.07 ☹︎ 12.22 ☹︎ 12.46 ☹︎ 12.50 ✓ 12.95 ☹︎ 13.19 ☹︎ 13.21 ☹︎ 13.34 ☹︎ 13.92 ☹︎ 14.03 ☹︎ 14.14 ☹︎ 14.16 ☹︎ 14.44 ☹︎ 14.5 ☹︎ 14.94 ☹︎ Question C ii) Suppose instead water, blue area glass. speed light glass roughly 1/1.5 times big vacuum. value \\(x\\) minimizes travel time light points B? (Choose best answer)10.13 ☹︎ 11.07 ☹︎ 11.13 ☹︎ 11.5 ☹︎ 11.57 ☹︎ 12 ☹︎ 12.38 ☹︎ 12.62 ☹︎ 12.87 ☹︎ 12.88 ☹︎ 12.95 ☹︎ 13.16 ☹︎ 13.4 ☹︎ 13.60 ✓ 13.71 ☹︎ 13.85 ☹︎ 14.18 ☹︎ 14.25 ☹︎ 14.34 ☹︎ 14.7 ☹︎ \nTurn problem algebra.Later accumulation, figure mile-markers road.tradition mathematics education using geometrical, distance-related problems illustrate optimization. happens, problems can provide valuable insight physical situations.Suppose function \\(f(x)\\) whose graph represents path road jungle. lion coordinates \\((3, 2)\\) jungle. point travel along road closest lion.trick see position road value \\(x\\) \\((x, f(x))\\). distance lion function \\(x\\) \\[ \\text{lion_dist}(x) \\equiv \\sqrt{(x - 3)^2 + (f(x)-2)^2} .\\]road lion graphed sandbox road \\(f(x) \\equiv x^2 e^{-x}\\). can see road comes closest lion roughly \\(x=3\\). implement \\(\\text{lion_dist}(x)\\) function, ’ll able find argmin, , value input \\(x\\) output \\(\\text{lion_dist}(x)\\) minimal. value function \\(\\text{lion_dist}(x)\\) argmin min function.find argmin distance lion precisely, implement \\(\\text{lion_dist}(x)\\) function sandbox. Plot look minimum. Alternatively, find \\(\\partial_x \\text{lion_dist}(x)\\) find \\(x\\) zero crossing.Question Using sandbox , find argmin graph function \\(g(x) \\equiv x^2 \\exp(-x)\\) comes closest point \\((3, 2)\\)? (Choose best answer.)2.03 ☹︎ 2.07 ☹︎ 2.21 ☹︎ 2.27 ☹︎ 2.28 ☹︎ 2.33 ☹︎ 2.37 ☹︎ 2.39 ☹︎ 2.43 ☹︎ 2.48 ☹︎ 2.58 ☹︎ 2.71 ☹︎ 2.80 ✓ 2.94 ☹︎ previous problem, used graphics find argmin function. can, course, successively reset domain graphing window zoom location argmin.find argmin numerically, start (pretty good) guess argmin. Recall function (total_time()) can modeled low-order polynomial. function extreme point polynomial include quadratic term. Suppose guessed \\(x=10\\) good starting guess argmin air--water problem. can compute first second derivatives total_time(x) respect x evaluate derivative functions \\(x=10\\). (Use D() function construct derivatives.) sandbox, use value two derivatives \\(x=10\\) guess find approximation minimum function.help remind , quadratic approximation function \\(t(x)\\) around reference point \\(x_0\\) : \\[q(x) \\equiv t(x_0) + \\partial_x t(x_0) [x - x_0] + \\frac{1}{2} \\partial_{xx} t(x_0) [x - x_0]^2\\]\nFind derivative \\(\\partial_x q(x)\\) set equal zero. Inserting appropriate values \\(x_0\\), \\(\\partial_x t(x_0)\\), \\(\\partial_{xx} t(x_0)\\) enable calculate value \\(x\\) minimum approximating quadratic.Question iii) Letting blue area water (1/1.3 speed factor) starting guess \\(x_0=10\\), find \\(x\\) minimizes approximating quadratic.9.912 ☹︎ 10.748 ☹︎ 11.017 ☹︎ 11.151 ☹︎ 11.267 ☹︎ 11.327 ☹︎ 11.515 ☹︎ 11.713 ☹︎ 11.81 ☹︎ 12.074 ☹︎ 12.276 ☹︎ 12.321 ☹︎ 12.438 ☹︎ 12.461 ☹︎ 12.579 ✓ 12.618 ☹︎ 12.637 ☹︎ 12.993 ☹︎ 13.261 ☹︎ 13.36 ☹︎ 13.527 ☹︎ 13.888 ☹︎ Question B iv) Using correct answer (iii) new \\(x_0\\), find value \\(x\\) minimizes new approximating quadratic.9.912 ☹︎ 10.748 ☹︎ 11.017 ☹︎ 11.151 ☹︎ 11.267 ☹︎ 11.327 ☹︎ 11.515 ☹︎ 11.713 ☹︎ 11.81 ☹︎ 12.074 ☹︎ 12.276 ☹︎ 12.321 ☹︎ 12.438 ☹︎ 12.461 ✓ 12.579 ☹︎ 12.618 ☹︎ 12.637 ☹︎ 12.993 ☹︎ 13.261 ☹︎ 13.36 ☹︎ 13.527 ☹︎ 13.888 ☹︎ ","code":"## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\n\n## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\n\n## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\n\n## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\ndistance_in_water <- makeFun( your_pythagorus_calculation ~ x)\ntime_to_ball <- makeFun(x/400 + distance_in_water/50 ~ x)## Warning in normalizePath(\"www/1200px-Fermat_Snellius.svg.png\"): path[1]=\"www/\n## 1200px-Fermat_Snellius.svg.png\": No such file or directory\ntotal_time <- makeFun( your_formula ~ x)\nslice_plot(total_time(x) ~ x, domain(x=c(0, 20)))\n\n# For the next problem\ndx_time  <- D(total_time(x) ~ x)\ndxx_time <- D(total_time(x) ~ x + x)\nslice_plot(x^2 * exp(-x) ~ x, domain(x=c(0,5))) %>%\n  gf_label(2 ~ 3, label=\"lion\") %>%\n  gf_refine(coord_fixed())"},{"path":"optim-and-shape.html","id":"tree-harvesting","chapter":"7 Optimization","heading":"7.4 Tree harvesting","text":"uncle Bob writing business plan tree farm lumber. heard taking Math 141Z, emails giving information asking numbers. particular, Bob sends report saying , species tree plans plant, amount usable lumber function growth time \\(t\\) looking like function defined sandbox:Bob heard time harvest tree growing fastest.Question C ) value t (years) \\(\\partial_t\\) lumber(t) largest?    15 ☹︎        16 ☹︎        17 ☹︎        18 ☹︎        19 ☹︎        20 ☹︎        21 ☹︎        22 ☹︎        23 ☹︎        24 ☹︎        25 ✓        26 ☹︎        27 ☹︎        28 ☹︎        29 ☹︎        30 ☹︎ patiently explain uncle certainly want harvest trees growing fastest. say, “want wait average growth rate point fastest. little tree reaches adult volume.”Question D B) value t (years) average growth rate, time, fastest.Figure 1 shows lens together source target point. Light passing lens refracted. path followed light one shortest time transit source target.light enters lens point \\(P_{} = (x_{}\\ , \\ -\\mbox{Lens}(x_{}))\\) leaves \\(P_{} = (x_{}\\ ,\\  \\mbox{Lens}(x_{}))\\). don’t know either \\(x_{}\\) \\(x_{}\\). can find optimization., find distance source \\(P_{}\\), \\(P_{}\\) target. two legs route air, time transit leg proportional refractive index 1.03 times distance.course, light also travel lens. ’ll make lens glass high refractive index, transit time distance \\(P_{}\\) \\(P_{}\\) multiplied lens’s refractive index 1.8.objective function sum three legs’ transit times. ’s already programmed sandbox. command make contour plot output objective function domain \\(x_{}\\) \\(x_{}\\). Finally, last line sandbox draws picture lens light path, insert argmins \\(x_{}\\) \\(x_{}\\) pick contour plot objective function. (\\(x_{}\\) \\(x_{}\\) shown initial code sandbox right!)Question index refraction lens 1.80, optimal values \\(x_{}\\) \\(x_{}\\)? (Choose best answer.)\\(x_{} = -22, \\ x_{} = -21\\) ✓ \\(x_{} = -26, \\ x_{} = -20\\) ☹︎ \\(x_{} = -24, \\ x_{} = -21\\) ☹︎ \\(x_{} = -18, \\ x_{} = -17\\) ☹︎ \\(x_{} = -25, \\ x_{} = -20\\) ☹︎ ’s good practice test software situations know right answer. simple situation lens . One way change middle line transit_time() index refraction 1.03, just like surrounding air.Question B index refraction lens 1.03, optimal values \\(x_{}\\) \\(x_{}\\)? (Choose best answer.)\\(x_{} = -17, \\ x_{} = -15\\) ✓ \\(x_{} = -18, \\ x_{} = -14\\) ☹︎ \\(x_{} = -16, \\ x_{} = -16\\) ☹︎ \\(x_{} = -18, \\ x_{} = -18\\) ☹︎ \\(x_{} = -17, \\ x_{} = -18\\) ☹︎ Let’s explore extreme situation. Diamond transparent material highest index refraction, 2.417. Imagine material index refraction 10. means light travel slowly within lens.Exercises involving computing derivativesIn previous discussion, used phrases “every function derivative,” “function can approximated” second-order polynomial. practical purposes, true. next chapter, however, ’ll set mathematical conditions “every” “” let us see can exception. 2590[Deriv-10a] Understand distinguish max (min) argmax (argmin)[Deriv-10b] Visually identify max (min) argmax (argmin) graphs functions one two variables.[Deriv-10c] Find max min quadratic function using calculus algebra[Deriv-11a] Convert word problem Objective function constraint.[Deriv-11b] Convert multivariate objective function univariate objective function using constraint","code":"\nlumber <- makeFun(ifelse(t<10, 0, 100*exp((t-25)/8)/(1 + exp((t-25)/8))) ~ t)\ndt_lumber <- D(lumber(t) ~ t)\nave_growth_rate <- makeFun( your_expression_here ~ t)\nslice_plot(lumber(t) ~ t, domain(t=c(0,100)))\n# Describe the shape of the lens\nLens_top <- makeFun(-90 + sqrt(100^2 - x^2)  ~ x)\nLens_bottom <- makeFun(-Lens_top(x) ~ x)\n\n# Define the objective function\ntransit_time <- makeFun(\n  1.03 * sqrt((x_in - -20)^2 + (Lens_bottom(x_in)- (-30))^2) +\n  1.80 * sqrt((x_out-x_in)^2 + (Lens_top(x_out) - Lens_bottom(x_in))^2) + \n  1.03 * sqrt((x_out - -10)^2 + (Lens_top(x_out)-50)^2) ~\n    x_in + x_out)\n# Graph the objective function\ncontour_plot(transit_time(x_in, x_out) ~ x_in + x_out, \n             domain(x_in = c(-40,40), x_out = c(-40,40)), npts=200)\n# Insert argmax from contour plot\nplot_lens(10, -5, Lens_top, Lens_bottom)"},{"path":"partial-change.html","id":"partial-change","chapter":"8 Partial change","heading":"8 Partial change","text":"good time point something along, likely persistent component mathematics education may realized construction. 2600We two ways represent functions:computational algorithm generating output input(s), typically involving arithmetic .geometrical entity, specifically graph function can curve , functions two inputs, surface.two modes sometimes intertwained, use name “line” refer computational object: \\(\\line(x) \\equiv x + b\\).Unfortunately functions two inputs, surface hard present formats easily hand: piece paper, printed page, computer screen. ’s curved surface naturally 3-dimensional object, paper screens provide two-dimensional images. Consequently, graphics mode prefer presenting functions two variables contour plot, single geometrical object set many objects: contours, labels, colored tiles. 2605We’ve calculus functions one variable easy exploit computational mode graphical mode. might fairly taken basic organizing theme calculus 2610a line segment can good approximation curve choose make .figuring derivative function \\(\\partial_x f(x)\\) graph \\(f(x)\\), find tangent graph many input values, record slope line (throw away intercept) write series slopes function input, typically representing slope position along vertical axis corresponding input position along horizontal axis. Figure 8.1 shows process. 2615\nFigure 8.1: slope function \\(f(x)\\) given input becomes value derivative input.\nConsider top panel (). input \\(x=0\\)—point labeled “L”—value function \\(f(0) \\approx 25\\). practically value “K.” slope short line segment labeled “L” \\(\\partial_x f(0) = -3.4\\) Now look input bottom panel (B). shows \\(\\partial_x f(x)\\) vertical axis. slope \\(f()\\) \\(x=0\\) negative, even though \\(f(0)\\approx 25\\).graph \\(\\partial_x f()\\), position “L” negative territory. ’s quite different position neighbor “K.” 2620","code":""},{"path":"partial-change.html","id":"calculus-on-two-inputs","chapter":"8 Partial change","heading":"8.1 Calculus on two inputs","text":"think derivatives functions two inputs, need way approximate surface point small linear form tangent surface point.applet written Alfredo Sánchez Alberca lets visualize tangent plane surface. (Instructions: Check “tangent plane” rotate view. Move (x,y) coordinate point see tangent plane differs place place.) 2625The tangent plane infinite extent. Let’s use word facet refer little patch tangent plane centered point contact. facet flat. (’s part plane!) Figure 8.2 shows facets tangent curved surface. two oriented way. 2630\nFigure 8.2: melon model curved surface graph function two inputs. tangent facet orientation. (Disregard slight curvature small pieces paper. Summer humidity interfered attempt model flat facet piece Post-paper!\nBetter picture summer melon, pick hardcover book place curved surface ’s convex facing away cover. cover match orientation surface point tangency. Change orientation cover find point tangency change correspondingly. 2635For purposes computation eye, contour graph surface can easier deal . Figure 8.3 shows contour graph smoothly varying function. Three points labeled , B, C. 2640\nFigure 8.3: function 2 inputs 3 specific inputs marked , B, C\nZooming marked points presents simpler picture , although one different point. zoomed-plot contains almost parallel, almost evenly spaced contours. surface exactly planar zoomed-domain, contours exactly parallel exactly evenly spaced. 2645\nFigure 8.4: Zooming neighborhoods , B, C Figure 8.3 shows simple, almost planar, local landscape.\nJust function \\(\\line(x) \\equiv x + b\\) describes straight line, function \\(\\text{plane}(x, y) \\equiv + b x + c y\\) describes plane whose orientation specified value parameters \\(b\\) \\(c\\). 2650In Figure 8.5, facets tangent original surface , B, C displayed. Comparing Figures 8.4 8.5 can see facet orientation surface; contours face way. 2655\nFigure 8.5: facets around points linear functions, aligned contours near point Figure 8.3\nRemember point constructing facets generalize idea derivative function one input \\(f(x)\\) functions two inputs \\(g(x,y)\\). Just derivative \\(\\partial_x f(x_0)\\) reflects slope line tangent graph \\(f(x)\\) \\(x=x_0\\), plan “derivative” \\(g(x_0,y_0)\\) represent orientation facet tangent graph \\(g(x,y)\\) \\((x=x_0, y=y_0)\\). question us now information needed specify orientation. 2660One clue comes formula function whose graph plane oriented particular direction:\\[\\text{plane}(x,y) \\equiv + b x + cy\\]explore roles parameters \\(b\\) \\(c\\) setting orientation line, open SANDBOX. scaffolding code generates particular instance \\(\\text{plane}(x,y)\\) plots two ways: contour plot surface plot. Change numerical values \\(b\\) \\(c\\) observe orientation planar surface changes graphs. can also see value \\(\\) irrelevant orientation plane, just intercept straight-line graph irrelevant slope line. 2665\nalways can difficult extract quantitative information surface plot. example , can see high-point surface \\(x\\) negative \\(y\\) positive. Compare contour plot verify two modes displaying surface. 2670(Note: gf_refine(coord_fixed()) part contour-plot command makes numerical intervals horizontal vertical axes length.)instructive experience pick rigid, flat object, instance smartphone hardcover book. Hold object level pinched fingers mid-point short ends, shown Figure 8.6 (left). 2675\nFigure 8.6: Combining two simple movements can tip plane sorts different orientations.\ncan tip object one direction raising lowering one hand. (middle picture) can tip object coordinate direction rotating object around line joining points grasped left right hands. (right picture) combining two motions, can orient surface object wide range directions. 2680The purpose lesson show two-numbers sufficient dictate orientation plane: amount one hand raised relative angle rotation around hand--hand axis. 2685Similarly, formula plane, orientation set two numbers, \\(b\\) \\(c\\) \\(\\text{plane}(x, y) \\equiv + b x + c y\\).find right \\(b\\) \\(c\\) tangent facet function \\(g(x,y)\\) specific input \\((x_0, y_0)\\)? Taking slices \\(g(x,y)\\) provides answer. particular, two slices:\n\\(\\text{slice}_1(x) \\equiv g(x, y_0) = + b\\, x + c\\, y_0 \\ \\ \\text{}\\ \\ \\text{slice}_2(y) \\equiv g(x_0, y) = + b x_0 + c y\\)Look carefully formulas slices. \\(\\text{slice}_1(x)\\), value \\(y\\) held constant \\(y=y_0\\). Similarly, \\(\\text{slice}_2(y)\\) value \\(x\\) held constant \\(x=x_0\\). 2690The parameters \\(b\\) \\(c\\) can read derivatives respective slices:\\[b = \\partial_x \\text{slice}_1(x)\\left.\\strut\\right|_{x=x_0} \\ \\ \\text{}\\ \\ c=\\partial_y \\text{slice}_2(y)\\left.\\strut\\right|_{y=y_0}\\]\nderivatives slice functions called partial derivatives. word “partial” refers examining just one input time. , ’re evaluating partial derivative functions specific inputs, \\(x=x_0\\) \\(y=y_0\\). 2695You don’t need create slices explicitly order calculate partial derivatives.\nSimply differentiate \\(g(x, y)\\) respect \\(x\\) order get parameter \\(b\\) differentiate \\(g(x, y)\\) respect \\(y\\) get parameter \\(c\\). demonstrate, ’ll make use sum rule:\n\\[\\partial_x g(x, y) = \\underbrace{\\partial_x }_{=0} + \\underbrace{\\partial_x b x}_{=b} + \\underbrace{\\partial_x cy}_{=0} = b\\]\nSimilarly, \\[\\partial_y g(x, y) = \\underbrace{\\partial_y }_{=0} + \\underbrace{\\partial_y b x}_{=0} + \\underbrace{\\partial_y cy}_{=c} = c\\]Get habit noticing subscript differentiation symbol \\(\\partial\\). taking, instance, \\(\\partial_y f(x,y,z, \\ldots)\\), variables \\(y\\) held constant. examples: 2700\\[\\partial_y 3 x^2 = 0\\ \\ \\text{}\\ \\ \\ \n\\partial_x 3 x^2 = 6x\\\\\n\\ \\\\\n\\partial_y 2 x^2 y = 2x^2\\ \\ \\text{}\\ \\ \\\n\\partial_x 2 x^2 y = 4 x y\n\\]","code":"\nplane <- makeFun(a + b*x + c*y ~ x + y, a = 1, b = -2.5, c = 1.6)\ninteractive_plot(plane(x, y) ~ x + y, domain(x=c(-2, 2), y=c(-2, 2)))\ncontour_plot(plane(x, y) ~ x + y, domain(x=c(-2, 2), y=c(-2, 2))) %>%\n  gf_refine(coord_fixed())"},{"path":"partial-change.html","id":"all-other-things-being-equal","chapter":"8 Partial change","heading":"8.2 All other things being equal …","text":"Recall derivative function one variable, say, \\(\\partial_x f(x)\\) tells , possible value input \\(x\\), much output change proportional small change value input. exactly first-order polynomial approximation (, linear approximation), saying: small \\(dx\\), \\[f(x+dx) = f(x) + \\partial_x f(x) \\times dx\\]\nlogic applies functions two inputs:\n\\[g(x + \\color{blue}{dx}, y) = g(x,y) + \\color{blue}{\\partial_x} g(x,y) \\times \\color{blue}{dx}\\\\\n\\text{} \\\\\ng(x, y+\\color{red}{dy}) = g(x,y) + \\color{red}{\\partial_y} g(x,y) \\times \\color{red}{dy}\\]statements changing one input holding input(s) constant. , familiar expression goes, \"effect changing one input things equal. 2705[Deriv-4a] Understand many different slopes point non-constant function 2 variables.[Deriv-4b] Calculate partial derivatives contour plot[Deriv-4c] Understand “partial derivative” “changing one input holding constant inputs.”[Deriv-8b] Calculate partial derivatives “changing one input holding constant inputs.”[Deriv-4d] Know three properties gradient vectorsEverything ’ve said differentiation rules applies just functions one input, \\(f(x)\\), functions two inputs, \\(g(x,y)\\), \\(h(x,y,z)\\) . chapter, ’ll consider interpretation applications derivatives functions multiple inputs. 2710","code":""},{"path":"partial-change.html","id":"gradient-vector","chapter":"8 Partial change","heading":"8.3 Gradient vector","text":"functions two inputs, two partial derivatives. functions three inputs, three partial derivatives. can, course, collect partial derivatives coordinate form. collection called gradient vector. 2715Just notation differences (\\(\\cal D\\)) derivatives (\\(\\partial\\)) involves unusual typography letter “D,” notation gradient involves unusual typography although time \\(\\Delta\\), Greek version “D.” gradient symbol, turn \\(\\Delta\\) head: \\(\\nabla\\). ,\n\\[\\nabla g(x,y) \\equiv \\left(\\stackrel\\strut\\strut\\delta_x g(x,y), \\ \\ \\delta_y g(x,y)\\right)\\]Note \\(\\nabla g(x,y)\\) function \\(x\\) \\(y\\), general gradient vector differs place place function’s domain.graphics convention drawing gradient vector particular input, , \\(\\nabla g(x_0, y_0)\\), puts arrow root \\((x_0, y_0)\\), pointing direction \\(\\nabla g(x_0, y_0)\\), Figure 8.7. 2720\nFigure 8.7: gradient vector \\(\\nabla g(x=1,y=2)\\). vector points steepest uphill direction. Consequently, perpendicular contour passing ’s root.\ngradient field (see Figure 8.8) value gradient vector point function’s domain. Graphically, order prevent -crowding, vectors drawn discrete points. lengths drawn vectors set proportional numerical length \\(\\nabla g(x, y)\\), short vector means surface relatively level, long vector means surface relatively steep. 2725\nFigure 8.8: plot gradient field \\(\\nabla g(x,y)\\).\nSince gradient vector points uphill, start point follow vectors go, get local maximum!Open sandbox use following commands make “surface plot” contour plot function \\(g(x)\\) centered reference point \\((x_0\\!=\\!0,\\, y_0\\!=\\!0)\\).Rotate graphic around feel comfortable controls.making size smaller, can zoom around reference point. Zoom gradually (say, size = 1.0, 0.5, 0.1, 0.05, 0.01) reach point surface plot (practically) pretty simple inclined plane.either surface plot contour plot, zoomed graph shows inclined plane, figure sign \\(\\partial_x g(0,0)\\) \\(\\partial_y g(0,0)\\).Question answer best describes signs partial derivatives \\(g(x,y)\\) reference point \\((x_0=0, y_0=0)\\)?\\(\\partial_x g(0,0)\\) pos, \\(\\partial_y g(0,0)\\) pos  ☹︎ \\(\\partial_x g(0,0)\\) pos, \\(\\partial_y g(0,0)\\) neg  ☹︎ \\(\\partial_x g(0,0)\\) neg, \\(\\partial_y g(0,0)\\) neg  ☹︎ \\(\\partial_x g(0,0)\\) neg, \\(\\partial_y g(0,0)\\) pos. ✓ \\(\\partial_x g(0,0)\\) 0, \\(\\partial_y g(0,0)\\) pos ☹︎ Consider close function around reference point center graph.eye, estimate derivatives function reference point \\((x_0=-2, y_0=-5)\\).Question numerical value \\(\\partial_x g(x,y)\\) reference point?    -1 ☹︎        -0.50 ☹︎        -0.25 ☹︎        0 ☹︎        0.25 ☹︎        0.50 ✓        1 ☹︎ Question B numerical value \\(\\partial_y g(x,y)\\) reference point?    -1 ☹︎        -0.50 ☹︎        -0.25 ☹︎        0 ☹︎        0.25 ☹︎        0.50 ☹︎        1 ✓ next questions ask second-order partial derivatives. know, second derivative first derivative changes x y. Insofar function simple inclined plane, contours straight, parallel, evenly spaced, second derivatives zero. can see plane: contours curve bit.determining second derivatives eye graph, encouraged compare first derivatives opposing edges graph, opposed nearby points.Question C sign \\(\\partial_{xx} g(x,y)\\) reference point?    negative ✓        positive ☹︎ Question D sign \\(\\partial_{yy} g(x,y)\\) reference point?    negative ☹︎        positive ✓ Question E sign \\(\\partial_{xy} g(x,y)\\) reference point?    negative ☹︎        positive ✓ Question F sign \\(\\partial_{yx} g(x,y)\\) reference point?numerous occasions professional life, one positions:decision-maker presented results analysis conducted team unknown reliability, need figure whether telling credible.member analysis team needing demonstrate decision-maker work believed.example, consider one functions presented comedy book, Geek Logic: 50 Foolproof Equations Everyday Life (2006), Garth Sundem. particular function ’ll consider Dr(), intended help answer question, “go doctor?”\\[\\mbox{Dr}(d, c, p,  e,  n, s) = \\frac{\\frac{s^2}{2} + e(n-e)}{100 -  3(d + \\frac{p^3}{70} - c)}\\] \\(d\\) = many days past month incapacitated? \\(d_0 \\equiv 3\\)\\(c\\) = issue seem getting better worse. (-10 10 -10 “circling drain” 10 “dramatic improvement”) \\(c_0 \\equiv -2\\)\\(p\\) = much pain discomfort currently experiencing? (1-10 10 “currently holding detached toe Ziploc bag”) \\(p_0 = 3\\)\\(e\\) = embarrassing issue? (1-10 10 “slipped ice fell 1972 Mercedes-Benz hood ornament, now part body”) \\(e_0 = 4\\)\\(n\\) = noticeable issue? (1-10 10 “fell asleep waffle iron”) \\(n_0 = 5\\)\\(s\\) = serious issue seem? (1-10 10 “may well nail embedded frontal lobe [brain]”) \\(s_0 = 3\\)Although function offered tongue--cheek, let’s examine see even roughly matches common sense. tool use relates low-order polynomial approximation around reference point examining appropriate partial derivatives. save time, stipulate reference point , noted description variables .code creates R implementation function set default values variables given reference point. can use sandbox try different changes input quantities.According instructions book, Dr()\\(> 1\\), go doctor.Essay question tmp-11: 1) value Dr() reference point 0.10, indicating shouldn’t go doctor. don’t yet know whether 0.10 close decision threshold 1 far away. Describe reasonable way figure . Report description results .Essay question tmp-12: six inputs function. Go list six (without thinking hard ) write intuitive sense whether increase one point input raise lower output Dr() reference point. Also write whether think input large small determinant whether go doctor. (don’t need refer Dr() function , just intuitive sense effect inputs.)operator D() can calculate partial derivatives. can calculate value partial derivative easily reference point, using expression like , gives value partial Dr() respect input \\(s\\) reference point:’re now going use partial derivatives compare intuition going doctor function say. course, don’t know yet whether function reasonable, don’t disappointed intuition conflicts function.","code":"\ng <- rfun( ~ x + y, seed = 802, n = 15)\nx0 <-  0\ny0 <-  0\nsize <- 5\ninteractive_plot(g(x, y) ~ x + y,\n             domain(x = x0 + size*c(-1, 1),\n                    y = y0 + size*c(-1, 1)))\ncontour_plot(g(x, y) ~ x + y,\n             domain(x = x0 + size*c(-1, 1),\n                    y = y0 + size*c(-1, 1)))\nD(Dr(s = s) ~ s)()"},{"path":"partial-change.html","id":"gradient-vector-1","chapter":"8 Partial change","heading":"8.4 Gradient vector","text":"contour maps several functions input \\(x\\) \\(y\\). Underneath plots gradient field functions, order. job match contour plot gradient field.Question contour plot matches gradient field 1?    ☹︎        B ☹︎        C ☹︎        D ☹︎        E ☹︎        F ✓ Question B contour plot matches gradient field 2?    ✓        B ☹︎        C ☹︎        D ☹︎        E ☹︎        F ☹︎ \nQuestion C contour plot matches gradient field 3?    ☹︎        B ☹︎        C ☹︎        D ✓        E ☹︎        F ☹︎ \nQuestion D contour plot matches gradient field 4?    ☹︎        B ☹︎        C ✓        D ☹︎        E ☹︎        F ☹︎ \nQuestion E contour plot matches gradient field 5?    ☹︎        B ☹︎        C ☹︎        D ☹︎        E ✓        F ☹︎ \nQuestion F contour plot matches gradient field 6?Question ’s wrong gradient field 1?arrows point hill instead ☹︎ magnitude arrows wrong, direction right ✓ arrows don’t point right direction ☹︎ nothing wrong ☹︎ Question B ’s wrong gradient field 2?arrows point hill instead ✓ magnitude arrows wrong, direction right ☹︎ arrows don’t point right direction ☹︎ nothing wrong ☹︎ Question C ’s wrong gradient field 3?arrows point hill instead ☹︎ magnitude arrows wrong, direction right ☹︎ arrows don’t point right direction ☹︎ nothing wrong ✓ Question D ’s wrong gradient field 4?arrows point hill instead ☹︎ magnitude arrows wrong, direction right ☹︎ arrows don’t point right direction ✓ nothing wrong ☹︎ ’s relatively easy assess partial derivatives know gradient. , gradient vector \\((\\partial_x\\,f(x,y), \\partial_y f(x,y))\\). train eye, ’s contour plot corresponding gradient plot.Question rule determining \\(\\partial_x f(x,y)\\) direction gradient vector?vector component pointing right, \\(\\partial_x f\\) positive. ✓ vector component pointing left, \\(\\partial_x f\\) positive ☹︎ gradient points left, uphill left. function increasing right left. ’s negative partial derivative. vector vertical component pointing , \\(\\partial_x f\\) positive. ☹︎ true partial derivative respect \\(y\\), relevance partial respect \\(x\\). vector component pointing downward, partial derivative \\(\\partial_x f\\) positive. ☹︎ , partial respect \\(y\\) negative. Using gradient field depicted , figure sign partial derivatives labeled points. ’ll use “neg” refer negative partial derivatives, “pos” refer positive partial derivatives, “zero” refer partials small can’t visually distinguish zero.Question B \\(\\partial_y f\\) point ?    neg ✓        zero ☹︎        pos ☹︎ Question C \\(\\partial_x f\\) point ?    neg ☹︎        zero ☹︎        pos ✓ Question D \\(\\partial_x f\\) point B?    neg ☹︎        zero ☹︎        pos ✓ Question E \\(\\partial_x f\\) point C?    neg ☹︎        zero ✓        pos ☹︎ Question F \\(\\partial_y f\\) point E?    neg ☹︎        zero ☹︎        pos ✓ Question G \\(\\partial_x f\\) point E?    neg ✓        zero ☹︎        pos ☹︎ Question H letter partial respect \\(x\\) partial respect \\(y\\) negative.?contour plot marked several colored lines represent slices surface. job match slice plots presented .slice plots, input \\(t\\) reflects position slice. \\(t=0\\), position leftmost point slice, \\(t=1\\) position right terminus slice.Question color line corresponds slice 1?    black ☹︎        gray ☹︎        orange ☹︎        red ✓        yellow ☹︎ Question B color line corresponds slice 2?    black ☹︎        gray ✓        orange ☹︎        red ☹︎        yellow ☹︎ Question C color line corresponds slice 3?    black ✓        gray ☹︎        orange ☹︎        red ☹︎        yellow ☹︎ Question D color line corresponds slice 4?    black ☹︎        gray ☹︎        orange ☹︎        red ☹︎        yellow ✓ contour plot marked several colored lines represent slices surface. job match slice plots presented .slice plots, input \\(t\\) reflects position slice. \\(t=0\\), position leftmost point slice, \\(t=1\\) position right terminus slice.Question color line corresponds slice 1?    black ☹︎        gray ✓        orange ☹︎        red ☹︎        yellow ☹︎ Question B color line corresponds slice 2?    black ☹︎        gray ☹︎        orange ✓        red ☹︎        yellow ☹︎ Question C color line corresponds slice 3?    black ☹︎        gray ☹︎        orange ☹︎        red ☹︎        yellow ✓ Question D color line corresponds slice 4?almost everyone, house expensive buy cash, people need borrow money. usual form loan called “mortgage.” Mortgages extend many years involve paying fixed amount month. amount calculated , paying month duration mortgage, last payment completely repay amount borrowed plus accumulated interest.monthly mortgage payment dollars, \\(P\\), house function three variables, \\[P(, r, N)\\] \\(\\) amount borrowed dollars, \\(r\\) interest rate (per year), \\(N\\) number years mortgage paid .studio apartment selling $220,000. need borrow $184,000 make purchase.Question Suppose \\(P(184000,4,10) = 2180.16\\). tell financial terms?monthly cost borrowing $184,000 10 years 4% interest per year. ✓ monthly cost borrowing $184,000 4 years 10% interest per year. ☹︎ ’ve got order argument wrong. annual cost mortgage 4% interest 10 years. ☹︎ output function \\(P()\\) monthly mortgage payment. annual cost mortgage 10% interest 4 years ☹︎ output function \\(P()\\) monthly mortgage payment. Question B expect quantity \\(\\partial P / \\partial \\)?    ’s positive ✓ borrow money, holding mortgage duration interest rate constant, going pay month.        ’s zero ☹︎        ’s negative ☹︎ Question C expect quantity \\(\\partial P / \\partial N\\)?    ’s positive ☹︎        ’s zero ☹︎        ’s negative ✓ borrow amount money interest rate, years pay back, monthly payment smaller. Question D Suppose \\(\\partial P / \\partial r (184000,4,30) =\\) $145.64. financial significance number $145.65??interest rate \\(r\\) went 4 5, monthly payment increase $145.65. ☹︎ perfectly reasonable answer, … recall derivative gives rate increase output function input changes tiny amount. turns 1 percentage point increase interest rate large amount change. interest rate \\(r\\) went 4 4.001, monthly payment increase $145.65. ☹︎ indeed small change interest rate, value derivative rate increase, increase . interest rate \\(r\\) went 4 4.001, monthly payment increase $0.001 imes $145.65. ✓ might think nobody concerned small increase interest rate. knowing result small increase allows us calculate impact large increase process called integration. economic theory, quantity demand good decreasing function price good increasing function price competing good.classical example apple juice competes orange juice. demand orange juice units thousands liters orange juice. price units dollars per liter.’s graph input variables unlabeled.concept partial derivatives makes much easier think situation. two partial derivative functions relevant function graph. Well denote input variables apple orange, remember prices commodities dollars per liter.\\(\\partial_\\mbox{apple} \\mbox{demand}()\\) – demand changes apple-juice price goes , holding orange-juice price constant. (Another notation verbose perhaps easier read \\(\\frac{\\partial\\, \\mbox{demand}}{\\partial\\,\\mbox{apple}}\\))\\(\\partial_\\mbox{orange} \\mbox{demand}()\\) – demand changes orange-juice price goes , holding apple-juice price constant. (Another notation: \\(\\frac{\\partial\\, \\mbox{demand}}{\\partial\\,\\mbox{orange}}\\))Notice notation names output single input changed–inputs held constant.first paragraph problem gives economic theory amounts saying one partial derivatives positive negative.Question numbers labeling contours?Quantity orange juice. ✓ Price apple juice. ☹︎ prices apple juice orange juice inputs function. Input values displayed position axis. contour labels identify output value input corresponds point contour. Price orange juice. ☹︎ prices apple juice orange juice inputs function. Input values displayed position axis. contour labels identify output value input corresponds point contour. Quantity apple juice. ☹︎ reasonable answer, function output quantity orange juice. Question B proper translation notation \\(\\partial_\\mbox{apple}\\mbox{demand}()\\)?partial derivative orange-juice demand repect apple-juice price ✓ partial derivative apple-juice price repect demand orange juice ☹︎ Derivatives always respect input variable. Demand orange juice output variable. partial derivative apple-juice demand *respect price apple juice ☹︎ problem orange-juice demand, apple-juice demand. partial derivative orange-juice price respect apple-juice price. ☹︎ input variables demand function. partial derivative always change output one inputs changes, change one input another input changes. Question C According economic theory described , one partial derivatives positive negative. positive.\\(\\partial_\\mbox{apple} \\mbox{demand}()\\) ✓ \\(\\partial_\\mbox{orange} \\mbox{demand}()\\) ☹︎ orange juice prices went , drink orange juice? Question D vertical axis measure?Price orange juice ✓ Quantity apple juice ☹︎ Quantity orange juice ☹︎ Price apple juice ☹︎ Question E Consider magnitude (absolute value) partial derivative demand respect orange-juice price. magnitude greater toward top graph bottom?    top ✓        bottom ☹︎ horizontal distance contour lines larger bottom graph top. Far-apart contours mean function flatter.        neither ☹︎ Remember, ’re talking partial derivative respect orange juice price. corresponds slope moving horizontal direction. contour plot function \\(g(y, z)\\) overlaid vectors. black vector correct representation gradient (root vector). vectors also supposed represent gradient, might something wrong (might ). ’re job say ’s wrong vectors.Question ’s wrong red vector?nothing ☹︎ long ✓ red vector located place function almost level. can tell contour lines spaced far apart. magnitude gradient small area. , red vector even longer black vector, even though black steep area (closely spaced contours). short ☹︎ points downhill ☹︎ points uphill ☹︎ Pointing uphill gradient vectors ! problem . wrong direction entirely ☹︎ Question B ’s wrong green vector?nothing ☹︎ long ☹︎ Note vector reflects steepness point root vector drawn. root green vector area contour lines spaced similarly area near root black vector. ’s correct length green vector similar length black vector. short ☹︎ points downhill ✓ root green vector near contour=4, head contour=2. vector incorrectly pointing downhill. Gradients point steepest direction uphill. points uphill ☹︎ Pointing uphill gradient vectors ! problem . wrong direction entirely ☹︎ Question C ’s wrong blue vector?nothing ✓ long ☹︎ short ☹︎ blue vector flat area function. ’s ’s short. points downhill ☹︎ points uphill ☹︎ Pointing uphill gradient vectors ! problem . wrong direction entirely ☹︎ Question D ’s wrong orange vector?nothing ☹︎ long ☹︎ short ☹︎ points downhill ☹︎ points uphill ☹︎ wrong direction entirely ✓ Gradient vectors perpendicular nearby contours point uphill. orange vector neither Question E ’s wrong gray vector?nothing ☹︎ long ☹︎ short ✓ function practically steep root gray vector root black vector. (can tell spacing contour lines.) magnitude gray vector just magnitude black vector. points downhill ☹︎ points uphill ☹︎ ","code":""},{"path":"local-approximations.html","id":"local-approximations","chapter":"9 Local approximations","heading":"9 Local approximations","text":"focused book small set basic modeling functions three operations assembling new functions old ones: linear combination, multiplication, composition. domain whole number line, positive half number line, perhaps whole number line leaving zero isolated point. Consider domains global. 2750We also discussed components piecewise functions. component function defined limited domain, interval \\(\\leq x \\leq b\\). contrast global domains, ’ll call limited domains local. 2755In chapter, ’ll explore simple surprisingly powerful method approximate function locally, , small domain.want approximate function? just use function ?’s often case—fields, usually case—don’t functional form relationship. Instead know relationship data. ’s possible deep introspection colleague construct theory relationship points one basic modeling functions combination . Suppose ? anyone else theory mind approximate function locally using methods chapter. 2760The utility methods can skip theoretical relationship apply methods directly data. skip--theory approach ubiquitous fields.information relationship often takes form data table. row shows records one trial values inputs measured corresponding output value recorded. ’ll discuss methods constructing functions match data Block 4 course. 2765Another common form information relationship derivatives. , know something derivative relationship even though don’t (yet) form function describing relationship. example, think building model sustainable speed bicycle function gear selected grade road—. 2770Consider three questions experienced bicyclist can likely answer:given grade road, optimal gear highest sustained speed? (mind particular rider, perhaps .)Imagine grade road described positive number uphill negative number downhill: , slope road. positive (uphill) grade fixed gear, bike’s sustained speed higher lower function grade? (’s much downhill biking, keep mind shallow downhill higher numerical slope steep downhill. , derivative hill near zero shallow grade far zero (, negative) steep downhill grade.Assuming answered “yes” question (1): optimal gear choice depend grade road? (concrete terms, choose different gears uphill climb level road downhill stretch?) 2775Using methods chapter, answers three questions let choose appropriate form speed(gear, grade) function. , using methods Block 3, can make measurements given rider construct model customized rider. 2780Note three questions derivatives. “optimal gear” gear \\(\\partial_\\text{gear} \\text{speed}(\\text{gear}, \\text{grade}) = 0\\). ride slower higher numerical value slope means \\(\\partial_\\text{grade} \\text{speed}(\\text{gear}, \\text{grade}) < 0\\). know \\(\\partial_\\text{gear} \\text{speed}(\\text{gear}, \\text{grade})\\) depends grade; ’s ’s different optimal gear grade. 2785","code":""},{"path":"local-approximations.html","id":"eight-simple-shapes","chapter":"9 Local approximations","heading":"9.1 Eight simple shapes","text":"many modeling situations single input, can get close good modeling function \\(f(x)\\) selecting one eight simple shapes. ’ve sketched annotated properties examples function forms shape. 2790Straight-line functionsshallow steepsteep shallowlocal extremum\\(\\hump(x)\\) \\(-\\hump(x)\\)choose among shapes, consider modeling context:relationship positive (slopes ) negative (slopes )relationship monotonic notis relationship concave , concave , neitherFor instance, micro-economic theory production functions describe much good produced given price, demand functions describe much good purchased function price. 2795As rule, production increases price demand decreases price. short term, production functions tend concave , since ’s hard squeeze increased production existing facilities. long term, production functions can concave new businesses established meet demand. 2800For demand short term, functions concave group consumers choice buy product. example consumption gasoline versus price: ’s hard short term find another way get work. long term, consumption functions can concave consumers find alternatives high-priced good. example, high prices gasoline may, long term, prompt switch efficient cars, hybrids, electric vehicles. push demand steeply. 2805Cooling water radio-activity functions time concave steep--shallow. incidence --control epidemic versus time concave , shallow--steep. epidemic brought control, decline steep--shallow concave . whole course epidemic, maximum incidence. experience shows epidemics can phase incidence reaches local minimum: decline people practice social distancing followed increase people become complacent. 2810How many minutes can run function speed? Concave shallow--steep; wear faster run high speed. far can walk function time? Steep--shallow concave ; ’re pace slows get tired? much fuel consumed aircraft function distance? long flights function concave shallow--steep; fuel use increases distance, amount fuel carry also increases distance heavy aircraft use fuel per mile. stew taste function saltiness. taste improves amount salt increases … point ’s downhill. 2815All examples scenarios modeler knows derivative concavity relationship modeled. ’s often case knowledge system comes form. 2820As see, often multiple basic modeling functions can used construct model follows appropriate slope curvature pattern. can simplify choice well algebra involved building model. 2825","code":""},{"path":"local-approximations.html","id":"low-order-polynomial","chapter":"9 Local approximations","heading":"9.2 Low-order polynomial","text":"function form can take eight forms, second-order polynomial \\(g(x)\\) \n\\[g(x) \\equiv + b x + c x^2\\]\nknow, graph \\(g(x)\\) parabola.parabola opens upward \\(0 < c\\). ’s shape local minimum.parabola opens downward \\(c < 0\\). ’s shape local maximumConsider happens \\(c = 0\\). function becomes simply \\(+ bx\\), straight-line function.\\(0 < b\\) line slopes upward.\\(b < 0\\) line slopes downward.form \\(+ bx + cx^2\\) easily capable representing four eight simple shapes. four? can see done looking graphs parabolas \\(0 < c\\) \\(c < 0\\), Figure ??. 2830\nFigure 9.1: Four eight simple shapes correspond sides parabola.\n\nFigure 9.2: Four eight simple shapes correspond sides parabola.\n","code":""},{"path":"local-approximations.html","id":"the-low-order-polynomial-with-two-inputs","chapter":"9 Local approximations","heading":"9.3 The low-order polynomial with two inputs","text":"functions two inputs, low-order polynomial approximation looks like :\\[g(x, y) \\equiv a_0 + a_x x + a_y y + a_{xy} x y + a_{yy} y^2 + a_{xx} x^2\\]\nreading form, note system used name polynomial’s coefficients. First, ’ve used \\(\\) root name coefficients. Sometimes might want compare two low-order polynomials, ’s convenient able use \\(\\) one, \\(b\\) another, . 2835The subscripts coefficients describes exactly term polynomial involves coefficient. instance, \\(a_{yy}\\) coefficient applies \\(y^2\\) term, \\(a_x\\) applies \\(x\\) term. 2840Each \\(a_0, a_x,\\) \\(a_y,\\) \\(a_{xy}, a_{yy}\\), \\(a_{xx}\\) , final model, constant quantity. Don’t confused use \\(x\\) \\(y\\) name coefficient function inputs. ’s always constant, may know exactly value constant later process modeling setting interest. 2845It helps different names various terms. ’s bad say something like, “\\(a_{xy}\\) term.” (Pronounciation: “sub x y”) proper names : linear terms, quadratic terms, interaction term. (shout \\(a_0\\), constant term.) 2850\\[g(x, y) \\equiv a_0 + \\underbrace{a_x x + a_y y}_\\text{linear terms} \\ \\ \\ + \n\\underbrace{a_{xy} x y}_\\text{interaction term} +\\ \\ \\  \\underbrace{a_{yy} y^2 + a_{xx} x^2}_\\text{quadratic terms}\\]\nFigure 9.3: saddle\n\nFigure 9.3: saddle\n","code":"show_poly2(111)\nshow_poly2(112)\nshow_poly2(113)\nshow_poly2(115)\nshow_poly2(116)\nshow_poly2(120)\nshow_poly2(121)"},{"path":"local-approximations.html","id":"derivatives-of-polynomials","chapter":"9 Local approximations","heading":"9.4 Derivatives of polynomials","text":"Consider function \\(h(t) \\equiv e^{kt} + B\\). linear combination two functions, can call \\(f(t) \\equiv e^{kt}\\) \\(g(t) \\equiv 1\\).course, \\(f(t)\\) \\(g(t)\\) basic modeling functions memorized derivatives: \\(f'(t) = k e^{kt}\\) \\(g'(t) = 0\\).Putting together gives \\[\\partial_t h(t) = \\, k\\, e^{kt} + B\\times 0= \\, k\\, e^{kt}\\]derivative polynomial follows linear combination rule. ’s polynomials linear combination monomials, \\(x^0\\), \\(x^1\\), \\(x^2\\), .consequence derivative polynomial another polynomial, term reduced one order.\\(\\partial_x x^0 = 0\\)\\(\\partial_x x^1 = x^0 = 1\\)\\(\\partial_x x^2 = 2 x^1 = 2x\\).Example: \\(f(x) \\equiv + b x + c x^2\\  \\  \\implies\\ \\ \\partial_x f(x) \\equiv b + 2 c x\\)","code":""},{"path":"local-approximations.html","id":"approximations-around-xstar","chapter":"9 Local approximations","heading":"9.5 Approximations around \\(x^\\star\\)","text":"Starting just naked modeling functions (e.g. \\(e^t\\)), small rich set mathematical operations enables make huge variety functions suit big range modeling needs: 2855input scaling, turns naked modeling functions directly useful basic modeling functions.linear combinations functions, e.g. \\(+ B e^{-kt}\\)compositions functions, e.g. \\(e^{-kt^2}\\) can recognize composition exponential power-law function.products functions, e.g., \\(\\sin\\left(\\frac{2\\pi}{P}x\\right) e^{-kt}\\)Now want tame profusion possibilities consider way construct stand-ins function, using universal format needs minimum information can used many purposes place original function. ’s helpful name stand-ins reminds us stand-ins . original function \\(f(x)\\), ’ll write names stand-ins tilde, \\(\\widetilde{\\,f\\ }(x)\\). 2860The stand-functions intended much simpler original useable substitute original. catch stand-warranteed good substitute within small neighborhood domain origin. 2865The information need construct stand-ins limited. First, need specify warranteed neighborhood . ’ll tend use \\(x_0\\) identifying center neighborhood. ’ll also need \\(f(x_0)\\), output original function input \\(x_0\\), \\(\\partial_x f(x_0)\\) \\(\\partial_{xx} f(x_0)\\). 2870This good time remind notation conventions using write functions evaluating functions.function individual characteristics idiosyncracies written \\(f(x)\\): function name name input inputs. name function \\(f()\\). name input \\(f()\\) \\(x\\), whatever input name given parentheses following name. 2875Every function derivative function. call derivative function anything like, ’s sensible give name states explicitly comes . ’re using \\(\\partial_x f(x)\\) purpose. Similarly, name use second derivative \\(\\partial_{xx} f(x)\\). 2880Evaluating function means specify particular value input. use several ways making clear talking particular value input, e.g.\n\\[\\mbox{function output:}\\ \\ \\ f(x = 3)\\ \\ \\ \\text{}\\ \\ f(3)\\ \\ \\ \\text{}\\ \\ \\left.f(x)\\strut\\right|_{x=3}\\]\noutput evaluated function quantity.Sometimes want refer output particular input, don’t specific quantity pinned yet. preferred style writing use name similar input name, subscript \\(x_0\\), \\(x_1\\), \\(x_i\\), \\(x_\\star\\) , occasionally, superscript \\(x^\\star\\). output function written like :\n\\[\\mbox{function output:}\\ \\ \\ f(x = x_0)\\ \\ \\ \\text{}\\ \\ f(x_0)\\ \\ \\ \\text{}\\ \\ \\left.f(x)\\strut\\right|_{x=x_0}\\]\nstyle applies function name like \\(\\partial_x f()\\) \\(\\partial_{xx} f()\\), instance\\[\\mbox{function output:}\\ \\ \\ \\partial_x f(x = x_0)\\ \\ \\ \\text{}\\ \\ \\partial_x f(x_0)\\ \\ \\ \\text{}\\ \\ \\left.\\partial_x f(x)\\strut\\right|_{x=x_0}\\]two universal formats can used construct stand-function near particular input \\(x_0\\). Since ’s useful name stand-, ’ll use tilde top original function name: 2885First-order approximation: \\(\\widetilde{f_1}(x) \\equiv f(x_0) + \\partial_x f(x_0) (x-x_0)\\)Second-order approximation: \\(\\widetilde{f_2}(x) \\equiv f(x_0) + \\partial_x f(x_0) [x-x_0] + \\frac{1}{2} \\partial_{xx} f(x_0) [x - x_0]^2\\)Notice first two terms \\(\\widetilde{f_2}(x)\\) identical \\(\\widetilde{f_1}(x)\\), write second-order approximation \n\\[\\widetilde{f_2}(x) \\equiv \\widetilde{f_1}(x) +\\frac{1}{2} \\partial_{xx} f(x_0) [x-x_0]^2\\]first-order approximation \\(\\widetilde{f_1}(x)\\) nothing straight-line function whose graph tangent graph \\(f(x)\\) input \\(x=x_0\\).second-order approximation quadratic polynomial. quadratic, graph familiar parabola. graph \\(\\widetilde{f_2}(x)\\) parabola tangent graph \\(f(x)\\).Consider function \\(g(x)\\) whose graph shown Figure ??.\nhaven’t given formula \\(g(x)\\), can see isn’t basic modeling functions something complicated. ’re going construct first-order second-order approximation \\(g(x)\\) neighborhood \\(x_0 = -1\\) marked blue shaded area. 2890Note \\(x_0\\) argmin \\(g(x)\\). can see argmin little right \\(x_0\\).“facts” \\(g(x)\\) needed construct approximations, beyond specification location neighborhood \\(x_0\\), values \\(g(x_0)\\), \\(\\partial_x g(x_0)\\), \\(\\partial_{xx} g(x_0)\\). : 2895With facts, can construct first- second-order approximations:Figure 9.4 shows \\(\\widetilde{g_1}(x)\\) \\(\\widetilde{g_2}(x)\\), zooming around \\(x_0 = -1\\).\nFigure 9.4: first-order (green) second-order (red) approximations \\(g(x)\\) near \\(x_0=-1\\).\ncan see \\(\\widetilde{g_2}(x)\\) good approximation \\(g(x)\\). particular, argmin \\(\\widetilde{g_2}(x)\\) close \\(g(x)\\).previous example, showed argmin parabolic function \\(a_0 + a_1 x + a_2 x^2\\) \\(x^\\star = -\\frac{a_1}{2 a_2}\\). Using formula, argmin \\(\\widetilde{g_2}(x)\\) -2.3493/(7.8077/2) = -0.602. 2900","code":"## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\n\n## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\nx0 <- -1\ng(x0)## [1] -23.992\ndx_g <- D(g(x) ~ x)\ndxx_g <- D(g(x) ~ x + x)\ndx_g(x0)## [1] -2.3493\ndxx_g(x0)## [1] 7.8077\ntilde1_g <- makeFun(-23.992 - 2.3493*(x-x0) ~ x)\ntilde2_g <- makeFun(tilde1_g(x) + (7.8077/2) * (x-x0)^2 ~ x)## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\n\n## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided."},{"path":"local-approximations.html","id":"solving-computationally","chapter":"9 Local approximations","heading":"9.6 Solving computationally","text":"find zeros derivative function evaluate second derivative zeros find kind critical point .cubic bifurcation. Start cubic argmax followed argmin. move parameter see two critical points coalesce single point disappear., maybe, “problem polynomials.” Linear function always 1 root critical points. Quadratic function always one critical point (subject constant may two roots generically). cubic might 1 3 solutions behavior depends constant. might one three critical points. 2905","code":""},{"path":"local-approximations.html","id":"from-an-earlier-draft","chapter":"9 Local approximations","heading":"9.7 From an earlier draft","text":"facing modeling problem, ’s nice framework provides checklist approach:output quantity input quantities thought important connection output?input (1), aAn important framework simple models involves\nfunction form often employed models low-order polynomial. usual situation, region domain particular interest, \\(x_0\\) point region. approximating polynomial starts \\[p(x) \\equiv \\frac{1}{2} [x-x_0]^2 + b [x - x_0] + c\\] 2910\\(f(x) = c\\), constant function, appropriate output \\(f()\\) doesn’t depend input.\\(f(x) = b x + c\\), straight-line function, simplest form output depends input.\\(f(x) = \\frac{1}{2}x^2 + b x + c\\), quadratic function, appropriate form input \\(x\\) output local maximum minimum.many modeling situations, construction model function can reduced short series questions:approximate output input fixed neighborhood interest?output increase monotonically maximum minimum?2 1.5, 1, .5, log(), -.5,[Deriv-5a] Understand strategy looking behavior function \\(f(x)\\) around point \\(x_0\\) considering new, possibly simpler function terms \\(x\\).[Deriv-5b] able construct straight-line function (Linear Approximation) approximates \\(f(x)\\) around \\(x_0\\)[Deriv-5c] able construct 2nd-order polynomial (Quadratic Approximation) whose value derivatives match functionExample modeling walkingThere’s exercise DailyDigitals/ 141 DD-35 narrativeand project DD-37Harvest shiny app materials DailyDigital/daily-digital-38.Rmd.Consider model presented class energy expenditure walking distance \\(d\\) grade \\(g\\): \\[E(d,g) = (a_0 + a_1 g)d\\] \\(d\\) (horizontal equivalent) distance walked \\(g\\) grade slope (, rise run).want \\(E\\) measured Joules.Question dimension Joules?dimensionless ☹︎ \\(L/T^2\\) ☹︎ \\(T/L^2\\) ☹︎ \\(M/T^2\\) ☹︎ \\(M L/T^2\\) ☹︎ \\(M/L^2\\) ☹︎ \\(M/(L^2 T^2)\\) ☹︎ \\(M L^2 / T^2\\) ✓ Question B dimension parameter \\(a_0\\)?dimensionless ☹︎ \\(L/T^2\\) ☹︎ \\(T/L^2\\) ☹︎ \\(M/T^2\\) ☹︎ \\(M L/T^2\\) ✓ \\(M/L^2\\) ☹︎ \\(M/(L^2 T^2)\\) ☹︎ \\(M L^2 / T^2\\) ☹︎ Question C dimension \\(g\\)?dimensionless ✓ \\(L/T^2\\) ☹︎ \\(T/L^2\\) ☹︎ \\(M/T^2\\) ☹︎ \\(M L/T^2\\) ☹︎ \\(M/L^2\\) ☹︎ \\(M/(L^2 T^2)\\) ☹︎ \\(M L^2 / T^2\\) ☹︎ Question D dimension parameter \\(a_1\\)?dimensionless ☹︎ \\(L/T^2\\) ☹︎ \\(T/L^2\\) ☹︎ \\(M/T^2\\) ☹︎ \\(M L/T^2\\) ✓ \\(M/L^2\\) ☹︎ \\(M/(L^2 T^2)\\) ☹︎ \\(M L^2 / T^2\\) ☹︎ \nSuppose describe spread infection terms three variables:\\(N\\) infection rate respect time: number new infections per day\\(\\) current number people infectious, , currently capable spreading infection\\(S\\) number people susceptible, , currently capable becoming infectious exposed infection.three variables functions time. News reports 2020 routinely one gave graph \\(N\\) versus time Covid-19.November 15, 2020, \\(N\\) 135,187 people per day. (number positive tests. true value \\(N\\) 5-10 times greater.) news reports don’t usually report \\(S\\) day--day basis.basic strategy modeling calculus take snapshot: Given \\(\\) \\(S\\) today, model \\(N\\) today. (Next semester, ’ll study “differential equations,” provide way assembling snapshot model time course pandemic look like.)low-order polynomial \\(N(S, )\\) \\[N(S,) = a_0 + a_1 S + a_2 + a_{12} S.\\] don’t include quadratic terms local maximum \\(N(S, )\\)—common sense suggests \\(\\partial_S N() \\geq 0\\) \\(\\partial_I N() \\geq 0\\), whereas local maximum requires least one derivatives negative near max.job figure , , terms can safely deleted low-order polynomial. good way approach figure , using common sense, \\(N\\) either \\(S=0\\) \\(=0\\). (Note previous restricted \\(S = = 0\\). one needs zero produce relevant result.)Question sufficiently complete low-order polynomial given behavior \\(N\\) \\(S=0\\) \\(=0\\)?\\(N(S,) = a_0 + a_1 S + a_2 + a_{12} S\\) ☹︎ don’t need four terms. Think ! \\(N(S,) = a_0 + a_1 S + a_2 \\) ☹︎ \\(S\\) \\(\\) zero, \\(N\\) non-zero. \\(N(S,) = a_1 S + a_2 + a_{12} S\\) ☹︎ \\(N(S,) = a_2 + a_{12} S\\) ☹︎ \\(N(S,) = a_1 S + a_{12} S\\) ☹︎ \\(N(S,) = a_{12} S\\) ✓ \\(N(S,) = a_1 S + a_2 \\) ☹︎ \noften happens decision making multiple criteria. instance, selecting cadets pilot training, two obvious criteria cadet’s demonstrated flying aptitude leadership potential cadet. Let’s assume merit \\(M\\) candidate function flying aptitude \\(F\\) leadership potential \\(L\\). simple model decision making candidates ordered highest \\(M\\) lowest. , depending many pilot trainees required, threshold set \\(M\\) candidates \\(M\\) greater threshold accepted.’ve tasked develop formula use pilot-training selection process.low-order polynomial model \\[M(F, L) = d_0 + d_1 F + d_2 L + d_{12} F L ,\\] \\(d_1\\) \\(d_2\\) positive. (Think minute coefficients must positive make sense way combining \\(F\\) \\(L\\) measure merit.)trying decide whether \\(d_{12}\\) positive, negative, zero. guide decision, statement general charge program: “rather good pilot good leader great pilot poor leader poor pilot great leader.” (might reasonably agree disagree point view, remember commanding .)Take minutes now think decide whether \\(d_{12}\\) positive negative zero implement general’s view. rest problem guide solution, ’ll understand better try , first.Using low-order polynomial model, find algebraically two partial derivatives\\(\\partial_F M(F, L)\\) \\(\\partial_L M(F, L)\\)Question possibilities true \\(\\partial_F M\\) function \\(F\\)?Increases F ☹︎ Decreases F ☹︎ function F. ✓ Question B possibilities true \\(\\partial_L M\\) function \\(L\\)?Increasing ☹︎ Decreasing ☹︎ function L. ✓ Question C one describes relationship \\(\\partial_F M()\\) function \\(L\\) \\(\\partial_L M()\\) function \\(F\\)? (Hint: Remember \\(d_1\\) \\(d_2\\) specified positive.)\\(\\partial_F M()\\) increasing function \\(L\\), \\(\\partial_L M()\\) must decreasing function \\(F\\). ☹︎ Notice partials involve \\(d_{12}\\) coefficient. \\(\\partial_F M()\\) increasing function \\(L\\), \\(\\partial_L M()\\) must increasing function \\(F\\). ✓ Neither needs true. ☹︎ Notice partials involve \\(d_{12}\\) coefficient. Think now general’s statement translate mathematical terms. ’s hint: Imagine Drew high \\(F\\) score low \\(L\\) score. Consider another cadet, Blake, scores \\(F-\\epsilon\\) \\(L + \\epsilon\\). Blake’s flying leadership scores closer together Drew’s. Drew Blake exactly average \\(F\\) \\(L\\). general find Blake superior inferior Drew? superior, want \\(\\partial_L M > \\partial_F M\\). inferior, model \\(\\partial_L M < \\partial_F M\\). general indifferent Drew Blake, two partial derivatives equal.Question D Based general’s statement, want \\(d_{12}\\) positive, negative, zero?Positive ✓ Zero ☹︎ Negative ☹︎ nothing general’s statement. ☹︎ \nexercise, ’re going looking shape contour lines close reference point. graph shows function ’ll examining. contours unlabeled, avoid distracting numbers; ’re interested shapes. Four different reference points marked, coordinatesFor reference points D, job zoom region around point. graphing expression sandbox written way allows specify exactly coordinates reference point, size region around reference point plotted. initial example sandbox reference point region size 0.5. reference point always exactly center plot.consider sequence region sizes\\[\\mbox{size}: 0.5,\\ 0.1,\\  0.05,\\  0.01,\\  0.005,\\ 0.001,\\ 0.0005,\\  0.0001\\]Start largest size try successively smaller sizes find size shape contour lines simple similar shape previous size. (Ignore contour labels: just look shape.)Question 1a) reference point small size shape contours differ substantially shape previous size.    0.1 ☹︎        0.01 ✓        0.001 ☹︎        1e-04 ☹︎ Question B 1b) reference point phrase best describes shape contours size found question (1a).contours straight almost exactly parallel evenly spaced ✓ contours straight, almost exactly parallel, unevenly spaced. ☹︎ contours straight, fan bit ☹︎ contours curved concentric evenly spaced ☹︎ contours curved concentric, unevenly spaced. ☹︎ Question C 2a) reference point B small size shape contours differ substantially shape previous size.    0.1 ☹︎        0.01 ✓        0.001 ☹︎        1e-04 ☹︎ Question D 2b) reference point B phrase best describes shape contours size found question (2a).contours straight almost exactly parallel evenly spaced ✓ contours straight, almost exactly parallel, unevenly spaced. ☹︎ contours straight, fan bit ☹︎ contours curved concentric evenly spaced ☹︎ contours curved concentric, unevenly spaced. ☹︎ Question E 3a) reference point C small size shape contours differ substantially shape previous size.    0.1 ☹︎        0.01 ☹︎        0.001 ✓        1e-04 ☹︎ Question F 3b) reference point C phrase best describes shape contours size found question (3a).contours straight almost exactly parallel evenly spaced ✓ contours straight, almost exactly parallel, unevenly spaced. ☹︎ contours straight, fan bit ☹︎ contours curved concentric evenly spaced ☹︎ contours curved concentric, unevenly spaced. ☹︎ Question G 4a) reference point D small size shape contours differ substantially shape previous size.    0.1 ☹︎        0.01 ☹︎        0.001 ☹︎        0.0001 ✓ Question H 4b) reference point D phrase best describes shape contours size found question (4a).contours straight almost exactly parallel evenly spaced ✓ Almost always, zoom enough, contours straight, almost parallel, evenly spaced. exceptions reference point exactly local maximum minimum (point C close, exactly maximum) exactly saddle point (point D close, exactly saddle point). contours straight, almost exactly parallel, unevenly spaced. ☹︎ contours straight, fan bit ☹︎ contours curved concentric evenly spaced ☹︎ contours curved concentric, unevenly spaced. ☹︎ \nConsider road descent summarized sign …“grade” road defined rise--run. Since rise run dimension \\(L\\), ratio dimensionless. grade percent 100 times rise--run. 100% grade corresponds \\(45^\\circ\\) angle.Question Taking “run” 5 miles indicated sign, ’s “rise?” (can find unit conversion data internet.)0.91 miles ☹︎ Close, 18% times 5 miles 0.9 miles. 4752 feet ✓ 1.5 km ☹︎ 0.932 miles. 292 rods ☹︎ 0.9125 miles. 7.36 furlongs ☹︎ 0.92 miles. 22.64 \\(\\sqrt{\\mbox{acre}}\\) ☹︎ square-root acre unconventional unit length. One acre 43560 ft\\(^2\\), square root acre 208.71 feet 0.03953 miles. 22.64 \\(\\sqrt{\\mbox{acre}}\\) 0.895 miles. Since vehicle’s odometer measures distance along road surface rather along horizontal “run,” ’s likely sign-makers mind 5 miles length hypotenuse triangle rather horizontal leg.Question B expressions gives horizontal run rise \\(y\\) miles?\\(\\sqrt{5 - y^2}\\)  ☹︎ \\(\\sqrt{25 - y^2}\\) ✓ \\(\\sqrt{y^2 + 25}\\) ☹︎ \\(\\sqrt{y^2+5}\\) ☹︎ Question C Given grade 18% length road surface 5 miles, “rise?”0.85 miles ☹︎ 1.40 km ☹︎ 283.5 rods ✓ 6.8 furlongs ☹︎ 22.01 \\(\\sqrt{\\mbox{acre}}\\) ☹︎ \n[Deriv-9a] Eliminate terms possible model considering simple inputs result known.[Deriv-9b] Understand concept grade relates elevation change.[Deriv-9c] Use dimensional analysis determine units terms within model.","code":"\nslice_plot((x+1)^0.5 ~ x, domain(x=c(0,1))) %>% \n  slice_plot(2*log(x+1) ~ x, color=\"red\") %>%\n  slice_plot(.2*exp(x+1) ~ x, color=\"green\") %>%\n  slice_plot(2*exp(-(x+1)) ~ x, color=\"orange\") %>%\n  slice_plot(1/(x+2) ~ x, color=\"blue\")\nx0 <- -2.100\ny0 <-  3.000\nsize <- 1.0\ncontour_plot(g(x, y) ~ x + y,\n             domain(x = x0 + size*c(-1, 1),\n                    y = y0 + size*c(-1, 1)))"},{"path":"approximation-near-a-reference-input.html","id":"approximation-near-a-reference-input","chapter":"10 Approximation near a reference input","heading":"10 Approximation near a reference input","text":"Back Chapter 9 considered eight simple shapes functions one input:\nFigure 10.1: eight simple shapes, locally, functions one input. (See Chapter 9.)\nsimple shapes can generated function formula appropriate values parameters \\(\\), \\(b\\), \\(c\\).\\[g(x) \\equiv a_0 + a_1 x + a_2 x^2\\]\nchapter examines possibilities extending formula bit, include higher-order terms, e.g. \\[h(x) \\equiv a_0 + a_1 x + a_2 x^2 + a_3 x^3 + a_4 x^4 + \\cdots\\]’ll consider two possible applications:Creating arithmetically simple approximation function whose formula already known. approximations known Taylor polynomials.Creating function capture patterns data, Chapter 9. turns dubious practice. discuss reasons can know avoid using high-order polynomials fit data. 2915","code":""},{"path":"approximation-near-a-reference-input.html","id":"the-reference-point","chapter":"10 Approximation near a reference input","heading":"10.1 The reference point","text":"Since approximations, need way specify neighborhood function domain approximation intended good enough use. can use approach turned naked modeling functions (e.g., \\(x\\), \\(x^2\\), …) basic modeling functions: replacing \\(x\\) polynomial \\(\\line(x)\\). unlike basic modeling functions, useful form \\(\\line()\\) usually \\(ax + b\\), , ’ll use just shift form line, slope 1: 2920\\[\\text{shift}(x) \\equiv \\left[\\strut x - x_0\\right]\\]\nparameter \\(x_0\\) called reference point. power-law function, \\[\\left[\\strut\\text{shift}(x)\\right]^n =  \\left[\\strut x - x_0\\right]^n\\]\noutput always zero \\(x=x_0\\), matter considerable importance go . Also, note ’re using square braces \\(\\left[\\ \\ \\right]\\) simply make completely unambiguous exponentiated. 2925Here graphs three power-law functions (, \\(\\left[x-x_0\\right]^n\\)) different values \\(x_0\\):Question blue function, \\(x_0\\)?    -2 ☹︎        -1 ☹︎        0 ☹︎        1 ☹︎        2 ☹︎        3 ☹︎        4 ✓        5 ☹︎ Question B blue function, order polynomial?    0 ☹︎        1 ✓        2 ☹︎        3 ☹︎        4 ☹︎        5 ☹︎ Question C red function, \\(x_0\\)?    -2 ☹︎        -1 ☹︎        0 ☹︎        1 ☹︎        2 ✓        3 ☹︎        4 ☹︎        5 ☹︎ Question D red function, order polynomial?    0 ☹︎        1 ✓        2 ☹︎        3 ☹︎        4 ☹︎        5 ☹︎ Question E green function, \\(x_0\\)?    -2 ☹︎        -1 ☹︎        0 ☹︎        1 ☹︎        2 ☹︎        3 ☹︎        4 ✓        5 ☹︎ Question F green function, order polynomial?reference point \\(x_0\\) re-write approximating polynomial \n\\[h(x) \\equiv a_0 + a_1 [x-x_0] + a_2 [x - x_0]^2 + a_3 [x - x_0]^3 + \\cdots\\]\nformat convenient finding \\(a_0\\), \\(a_1\\), \\(\\ldots\\) approximating function \\(f(x)\\) neighborhood \\(x_0\\), way calculate quickly value \\(a_0\\). Note \\(x=x_0\\), terms polynomial go zero except first, know \\(a_0 = f(x_0)\\). 2930Now consider derivative approximating polynomial. \n\\[\\partial_x h(x) = a_1 + 2 \\times a_2 [x-x_0] + 3 \\times a_3 [x-x_0] + \\cdots\\]\n, \\(x=x_0\\) terms except first go zero. \\(h(x)\\) approximation \\(f(x)\\) ’ll \\(a_1 = \\partial_x f(x_0)\\).can many times want. ’s second derivative \\(\\partial_{xx} h(x)\\):\n\\[\\partial_{xx} h(x) = 2 a_2  + 2 \\times 3 \\times a_3 [x-x_0] + \\cdots\\]\nthird\n\\[\\partial_{xxx} h(x) =  2 \\times 3 \\times a_3 + \\cdots\\], terms \\(\\partial_{xx} h()\\) \\(\\partial_{xxx} h()\\) except first go zero \\(x=x_0\\). implies\n\\[a_2 = \\frac{1}{2} \\partial_{xx} f(x_0) \\ \\ \\ \\text{}\\ \\ \\ a_3 = \\frac{1}{2\\times 3} \\partial_{xxx}f(x_0)\\]\nJust following pattern, can guess \\(a_4 = \\frac{1}{2 \\times 3 \\times 4} \\partial_{xxxx} f(x_0)\\) , general nth term\n\\[a_n = \\frac{1}{1\\times 2 \\times 3 \\times \\cdots \\times n} \\partial^n f(x_0)\\]\n’re writing \\[{\\huge \\partial^n} \\ \\text{stand }\\ \\ \\stackrel{\\Huge \\partial}{\\ } \\underbrace{xx...x}_\\text{n times}\\]quantity \\(1\\times 2 \\times 3 \\times \\cdots \\times n\\) called factorial written \\[\\huge n! =  1\\times 2 \\times 3 \\times \\cdots \\times n\\]case ’re already familiar factorials, note following:\n\\[1! = 1\\\\\n2! = 2\\\\\n3! = 6\\\\\n4! = 24\\\\\n5! = 120\\\\\n\\text{... }\n\\]R, use factorial() function calculate \\(n!\\) instance:","code":"\nfactorial(5)## [1] 120\nfactorial(6)## [1] 720\nfactorial(7)## [1] 5040\nfactorial(10)## [1] 3628800\nfactorial(15)## [1] 1.3077e+12"},{"path":"approximation-near-a-reference-input.html","id":"taylor-polynomials","chapter":"10 Approximation near a reference input","heading":"10.2 Taylor polynomials","text":"Putting together everything previous sections, arrive remarkable formula polynomial approximate smooth, continuous function \\(f(x)\\) neighborhood selected input \\(x_0\\). overall formula daunting first glance, terms pattern:\n\\[f(x) \\approx f(x_0) + \\frac{\\partial_x f(x_0)}{1!} [x - x_0]^1\n+ \\frac{\\partial_{xx} f(x_0)}{2!} [x - x_0]^2\n+ \\frac{\\partial_{xxx} f(x_0)}{3!} [x - x_0]^3\n+ \\ldots\n\\]\nTaylor polynomial. Taylor polynomial terminates \\([x-x_0]^2\\) term second-order Taylor polynomial, one terminates \\([x-x_0]^3\\) term third-order Taylor polynomial. Mathematicians particularly interested \\(n\\)th-order Taylor polynomial \\(n \\rightarrow \\infty\\). 2935Construction Taylor polynomial involves finding various orders derivatives. cases simple, especially felicitous choice \\(x_0\\) can made.Example: successive derivatives \\(\\sin(x)\\) \\(cos(x)\\), \\(-\\sin(x)\\), \\(-\\cos(x)\\), back \\(\\sin(x)\\) onward order derivative like. select \\(x_0=0\\), derivatives evaluated \\(x_0\\) zero, \\(-1\\), \\(1\\). Taylor polynomial (5th order) \\(\\sin(x)\\) :\n\\[\\sin(x) \\approx 0 + \\frac{1}{1!}[x] + \\frac{0}{2!} [x]^2 - \\frac{1}{3!} [x]^3 + \\frac{0}{4!} [x]^4 + \\frac{1}{5!} [x]^5 = x - \\frac{x^3}{3!} + \\frac{x^5}{5!}\\]say “smooth, continuous function” instead just function talking kinds functions Taylor polynomials can approximate?Keep mind terms polynomial form \\(a_n [x-x_0]^n\\) \\(n=1,2,3, \\ldots\\). power-law function therefore smooth continuous. polynomial—sum individual terms—always smooth continous. \\(f()\\) , promises can given quality approximation. 2940","code":""},{"path":"approximation-near-a-reference-input.html","id":"polynomials-and-data","chapter":"10 Approximation near a reference input","heading":"10.3 Polynomials and data","text":"’ll show high-order polynomials trouble.data ’s close straight line, look stability polynomials.show sensitive high-order polynomial slight changes data.following graph shows function \\(f(x)\\). Five values \\(x\\) labelled , B, …. possible values \\(x_0\\) questions.graphs follow show approximation \\(f(x)\\) one points , B, …. graph. approximations either constant (“order 0” approximation), linear (“order 1” approximation), quadratic (“order 2” approximation), something else. graph, say order approximation used.Question order approximation graph ()?    constant ✓        linear ☹︎ linear approximation exactly slope \\(f()\\) reference point \\(x_0\\).        quadratic ☹︎        none ☹︎ Question B reference position \\(x_0\\) approximation graph ()?    ☹︎ bad choice, notice constant approximation value little lower f().        B ✓ ’re right. correct value f(B).        C ☹︎        D ☹︎        E ☹︎        None ☹︎ Question C order approximation graph (II)?    constant ☹︎        linear ☹︎        quadratic ✓        none ☹︎ Question D reference position \\(x_0\\) approximation graph (II)?    ☹︎        B ☹︎        C ✓        D ☹︎ reference position, value approximation always \\(f(x_0)\\). ’s case .        E ☹︎        None ☹︎ Question E order approximation graph (III)?    constant ☹︎        linear ☹︎        quadratic ☹︎        none ✓ can’t two bends linear quadratic function. Question F reference position \\(x_0\\) approximation graph (III)?    ☹︎        B ☹︎        C ☹︎        D ☹︎ reference position, value approximation always \\(f(x_0)\\). ’s case .        E ☹︎        None ✓ ’s polynomial approximation points. Question G order approximation graph (IV)?    constant ☹︎        linear ✓        quadratic ☹︎        none ☹︎ Question H reference position \\(x_0\\) approximation graph (IV)?    ✓        B ☹︎        C ☹︎        D ☹︎        E ☹︎        None ☹︎ Question order approximation graph (V)?    constant ☹︎        linear ☹︎        quadratic ✓        none ☹︎ Question J reference position \\(x_0\\) approximation graph (V)?somewhat complex function two variables. labels , B, C, D mark possible reference points \\((x_0, y_0)\\) around polynomial approximations made.following graphs, say kind two-variable polynomial approximation made reference point approximation centered .Question order approximation graph ()?    constant ☹︎        linear ☹︎ contours straight approximation linear        bilinear ✓ Right. turns quadratic approximation similar, presumably \\(d_{xx}f(x_0, y_0)\\) \\(d_{yy} f(x_0, y_0)\\) small make difference.        quadratic ☹︎ bad answer. case, bilinear approximation looks lot like quadratic. Question B reference position \\((x_0, y_0)\\) approximation graph ()?    ✓        B ☹︎        C ☹︎        D ☹︎ Question C order approximation graph (II)?    constant ☹︎        linear ☹︎ contours straight approximation linear        bilinear ✓ Right. turns quadratic approximation similar, presumably \\(d_{xx}f(x_0, y_0)\\) \\(d_{yy} f(x_0, y_0)\\) small make difference.        quadratic ☹︎ circular (elliptical) contours hallmark quadratic approximation near maximum minimum. Question D reference position \\((x_0, y_0)\\) approximation graph (II)?    ☹︎        B ✓ Practically bullseye B!        C ☹︎        D ☹︎ Question E order approximation graph (III)?    constant ☹︎        linear ✓ linear approximation always produces straight, parallel, evenly spaced contours.        bilinear ☹︎        quadratic ☹︎ Question F reference position \\((x_0, y_0)\\) approximation graph (III)?    ☹︎        B ☹︎        C ☹︎        D ✓ Question G order approximation graph (IV)?    constant ☹︎        linear ☹︎ contours straight approximation linear        bilinear ☹︎ bad answer. curvature bilinear approximations always one direction.        quadratic ✓ Sometimes quadratic approximations produce elliptical contours, previous problem. sometimes produce X-shaped contours seen . cases, contours curve opposing ways different parts domain. way, contour pattern seen upper right graph corresponds shape saddle: curving along one line along perpendicular line. place right middle saddle called ‘saddle point.’ Question H reference position \\((x_0, y_0)\\) approximation graph (IV)?","code":""}]
