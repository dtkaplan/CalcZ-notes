[{"path":"index.html","id":"welcome-to-calculus","chapter":"Welcome to calculus","heading":"Welcome to calculus","text":"Calculus set concepts techniques provide main mathematical basis dealing motion, growth, decay, oscillation. phenomena can simple ball arcing air complex airflow wing generates lift. Calculus used biology business, chemistry, physics engineering. basis weather prediction, understanding climate change, algorithms heart rate blood oxygen measurement wristwatches. major part language science, logistics. electron orbitals chemistry, stresses bones beams, business cycle recession rebound understood primarily calculus.Calculus central science beginnings. coincidence scientific method introduced language calculus invented small group people historical period known enlightenment. Learning calculus always badge honor entry ticket professions. Millions students career ambitions enhanced passing calculus course thwarted lack access one.1880s, hit musical featured man “model modern major general.” One claims modernity “’m good integral differential calculus.” Watch hereOf course, modern 1880 modern anymore. Yet, amazingly, calculus today every bit central science technology ever , much important logistics, economics myriad fields every .\nlast 20 years, calculus become even important. ’s concrete reason . Science, engineering, society now fully adopted computer almost aspects work, study, life. amount data collected used exploded. Machine learning become way human decision makers interact data.Think means become “computerized.” take everyday example, consider video. span human life moved system involved people going theaters watch shadows recorded cellulose film distribution airwaves low-resolution television, introduction high-def broadcast video, demand streaming huge libraries movies. Just anyone can record, edit, distribute video. range topics (including calculus) can access video tutorial demonstration incredibly vast. recent progress owed computers.“stuff” computers operate , transform transmit always mathematical representations stored bits. creation mathematical representations objects events real world essential every task sort computer performs. Calculus key component inventing using representations.may scratching head. calculus important, many friends took calculus came away wondering ? ’s important “slopes” “areas” come high-school teacher couldn’t tell calculus ?disconnect enthusiasm expressed preceding paragraphs lived experience students real. two major reasons disconnect, tackle head-book.First, teachers mathematics deep respect tradition. respect merits result almost calculus taught using methods appropriate era paper pencil, computer era. see, book express concepts calculus way carries directly uses calculus computers genuine work.Second, uses calculus enabled topics Calc Calc II, courses /II preliminary: linear algebra dynamics. small fraction students start Calc ever reach parts calculus useful.Fortunately, large amount bloat standard textbook topics Calc /II can removed make room genuinely important topics.","code":""},{"path":"index.html","id":"computing-and-apps","chapter":"Welcome to calculus","heading":"Computing and apps","text":"text provides two complementary ways access computing. intuitive designed purely exercise visualize mathematical concepts mouse-driven, graphical apps. illustrate, app ’ll use Block 6. can click snapshot open app browser.fundamentally, carrying computing composing computer commands text computer carry commands. One good way sandbox, kind app provides safe place enter commands. ’ll open sandbox (click image ) browser.Update image link new version sandbox app.’ve entered computer commands, press button commands carried .may prefer install R RStudio software laptop. usually provides faster response lowers load sandbox cloud servers used students.Experienced R users may even prefer skip sandbox entirely use standard resources RStudio edit evaluate computer commands. ’d use exactly R commands regardless whether use cloud server laptop.important technique teaching learning computing present scaffolding computer commands. first, scaffolding may complete, correct commands can cut--paste sandbox calculation carried . times left student fill part ’s left scaffolding. example, introduce drawing graphs functions choice domain, might see scaffold blanks filled :can hardly expected point make sense part command, soon .","code":"slice_plot( exp(-3*t) ~ t, domain( --fill in domain-- ))"},{"path":"index.html","id":"exercises-and-feedback","chapter":"Welcome to calculus","heading":"Exercises and feedback","text":"Learning facilitated rapid, formative feedback. Many exercises book arranged give .Short answer exercises often arranged give immediate feedback goes beyond right--wrong. words, answer incorrect, try tell incorrect provide hint guide correct answer. frivolous example:Q-1: word calculus mean literally?small stone (+) [stones part apparatus numerical calculations, back days pencil invented.]small stone (+) [stones part apparatus numerical calculations, back days pencil invented.]source trouble students. [Calculus sometimes reputation, say, “pain, gain.”. Find better answer.]source trouble students. [Calculus sometimes reputation, say, “pain, gain.”. Find better answer.]element calcium. [, get right answer ’ll realize two related cases.]element calcium. [, get right answer ’ll realize two related cases.]exercises meant drill, provide right--wrong feedback. Still exercises provide feedback . Typically, intended raise stakes graded work, encouraging think carefully choosing answer.","code":""},{"path":"index.html","id":"taken-out.-is-there-any-use-for-it","chapter":"Welcome to calculus","heading":"0.1 [[Taken out. Is there any use for it?]]","text":"’s mathematics … ’s real world. term mathematical modeling constructing representations situations phenomena real world terms mathematical objects. advantage able construct models models easy study, explore, take apart, experiments , deduce implications .use computers interact world, whether record-keeping, communications, media displays, . “things” computers work always mathematical representations real world: models. Computers carry operations models. instance, sound real-world phenomenon resides somewhere vibrations air psycho-acoustics brain. simple computer representation sound constructed using mathematical stuff: long series numbers. Suppose want slow sound (say, someone learning foreign language) speed (get slow-paced video) translate text. technologies things almost always implemented arithmetic complicated mathematical procedures mathematical stuff.major theme course make mathematical representations real-world phenomena work representations extract results want. particular, focus representations form mathematical functions. (mathematical representations, functions special importance ubiquitous scientific work computing.)","code":""},{"path":"calcz-project-development-plan.html","id":"calcz-project-development-plan","chapter":"CalcZ Project Development Plan","heading":"CalcZ Project Development Plan","text":"document reflects developing text Math141Z/142Z AY 2021-2022 US Air Force Academy. section describes prospective instructors project collaborators planned schedule book links materials developed AY 2020-2021.Note nothing book necessarily reflects official policy US Air Force Academy US government generally.","code":""},{"path":"calcz-project-development-plan.html","id":"development-schedule","chapter":"CalcZ Project Development Plan","heading":"Development schedule","text":"1 June 2021: Complete usable draft Block 1 (Functions)7 June 2021: Deployment CalcZ R sandbox15 June 2021: Complete usable draft Block 2 (Differencing)30 June 2021: Complete usable draft Block 3 (Accumulation)15 July 2021: Re-organization relevant mosaicCalc {CalcZ} R packages.1 August 2021: Deployment Shiny apps Blocks 1-3.1 August 2021: Revisions Blocks 1, 2, 3 deployment student-facing form31 September 2021: Complete usable draft Block 4 (Applications calculus)30 October 2021: Complete usable draft Block 5 (Linear combinations)31 November 2021: Complete usable draft Block 6 (Dynamics)1 December 2021: Student-facing form entire book deployed.","code":""},{"path":"calcz-project-development-plan.html","id":"resources-from-ay-2020-2021","chapter":"CalcZ Project Development Plan","heading":"Resources from AY 2020-2021","text":"","code":""},{"path":"calcz-project-development-plan.html","id":"software","chapter":"CalcZ Project Development Plan","heading":"Software","text":"Note book multiple-choice questions feedback included book, require browser. software needs installed.Computational exercises can handled “sandbox” app , similarly, requires browser.R Command Guide AY 2020-2021 integrated book.Daily Digitals AY 2020-2021 integrated R consoles sufficient computations course.can also use RStudio directly. installing R RStudio, install Rtools .need run following commands install following packages:Collaborators wish compile book need use RStudio interface install several additional packages.volunteer identify packages! Start fresh installation R RStudio work Danny get comprehensive list. (’s hard since packages installed computers use don’t want start brand-new installation make sure ’ve got .)","code":"\nwriteLines('PATH=\"${RTOOLS40_HOME}\\\\usr\\\\bin;${PATH}\"', con = \"~/.Renviron\")\ninstall.packages(c(\"mosaic\", \"ggplot2\", \"ggformula\", \"MMAC\",\"tidyverse\", \"remotes\"))\nremotes::install_github(\"ProjectMosaic/mosaicCalc\", ref=\"beta\", upgrade = \"always\")\nremotes::install_github(\"dtkaplan/math141Z\", ref=\"master\", upgrade = \"always\")\nremotes::install_github(\"rundel/learnrhash\")\nremotes::install_github(\"dtkaplan/etude2\",ref = \"main\")\ninstall.packages(c(\"bookdown\",\"bslib\", \"downlit\", \"here\", \"DT\", \"kableExtra\", \"palmerpenguins\"))"},{"path":"calcz-project-development-plan.html","id":"exercises","chapter":"CalcZ Project Development Plan","heading":"Exercises","text":"Daily digitals containing student exercises. contain narrative folded book.[NOTE: quick pass links. broken lead different topic]Functions DD-01, DD-02, DD-03, DD-04, DD-05, DD-06, DD-07, DD-08, DD-09, DD-10, DD-11, DD-12Linear Combinations DD-13, DD-14, DD-15, DD-16, DD-17, DD-18, DD-19, DD-20, DD-21, DD-22, DD-23, DD-24, DD-25Differencing DD-26, DD-27, DD-28, DD-29, DD-30, DD-31, DD-32, DD-33, DD-34, DD-35, DD-36, DD-37, DD-38Accumulation DD-01, DD-02, DD-03, DD-04, DD-05, DD-06, DD-07, DD-08, DD-09, DD-10, DD-11, DD-12Dynamics DD-13, DD-14, DD-15, DD-16, DD-17, DD-18, DD-19, DD-20, DD-21, DD-22, DD-23, DD-24, DD-25Decision-making DD-26, DD-27, DD-28, DD-29, DD-30, DD-31, DD-32, DD-33, DD-34, DD-35, DD-36, DD-37, DD-38","code":""},{"path":"calcz-project-development-plan.html","id":"projects-from-ay-2020-2021","chapter":"CalcZ Project Development Plan","heading":"Projects from AY 2020-2021","text":"Spread ebola (sigmoidal functions)Engines big small (dimensions, linear combinations)Walking gradient (derivatives, optimization, modeling)Gears gradesDriving integrals (accumulation, function composition)Intervening epidemic (dynamics)Security life (decision making)","code":""},{"path":"calcz-project-development-plan.html","id":"apps","chapter":"CalcZ Project Development Plan","heading":"Apps","text":"used part Daily Digital assignments, used. also apps integrated Daily Digitals. provided stand-alone apps.Numerics search optimization, zero finding yet included.Average vs marginalInterpolation explorerEuler DEBalancing functions solve DEEigenflowsMatrix iterationUsing SIR modelSome apps aren’t graphic:Instructor sandbox containing blank sandboxes use outside Daily Digitals. (revised AY 2021-2022.)Instructor sandbox containing blank sandboxes use outside Daily Digitals. (revised AY 2021-2022.)Student sandbox like instructor sandbox. also revised AY 2021. revised version, deployed main computational resource students using RStudio. beefed handle hundreds students simultaneously. AY 2021-2022 using MAA-StatPREP server, open everyone. Thereafter, switch servers. ’re sure set , several arrangement can already used schools students.\nSchools can deploy Shiny/RStudio servers use service like shinyapps.io.\nSmall groups students can handled “free tier” account shinyapps.io.\nStudents can install RStudio laptops run sandbox . Note: tablet version RStudio.\nStudents can set RStudio.cloud account (free) run sandbox .\nStudents instructors can use RStudio console (better) Rmd document run commands needed exercises projects. work either RStudio desktop, institution’s RStudio server, rstudio.cloud\nStudent sandbox like instructor sandbox. also revised AY 2021. revised version, deployed main computational resource students using RStudio. beefed handle hundreds students simultaneously. AY 2021-2022 using MAA-StatPREP server, open everyone. Thereafter, switch servers. ’re sure set , several arrangement can already used schools students.Schools can deploy Shiny/RStudio servers use service like shinyapps.io.Small groups students can handled “free tier” account shinyapps.io.Students can install RStudio laptops run sandbox . Note: tablet version RStudio.Students can set RStudio.cloud account (free) run sandbox .Students instructors can use RStudio console (better) Rmd document run commands needed exercises projects. work either RStudio desktop, institution’s RStudio server, rstudio.cloudThe applies apps, apps consume relatively little way computer resources, try available web setup. Performance won’t optimal, least access easy.\n#. Basic R syntax. just homework assignment fell outside Daily Digital organization.\n#. Swimming records. just single exercise wasn’t integrated Daily Digitals.","code":""},{"path":"outline-of-block-1.html","id":"outline-of-block-1","chapter":"Outline of Block 1","heading":"Outline of Block 1","text":"section development purposes . included released text.outline established May 17-19, 2021 working sessions USAFA. ’s copied directly Teams document. ’ve made modifications noted [[square brackets]] deletions bold face additions..Block 1 Functions Mathematical ModelingIntro course\nNTI\ncan make point Linear Function model change drawing pictures discussing certain quantities change two points time\ndiscussion Calc Z “Z different”, “Z new Calculus USAFA transitioning; may see differences course traditional course peers taking.”\nOveall goal day 1 build cadet’s confidence can successful. requires us show systems, resources, philosophy, expectations (e.g., college \\(\\neq\\) high school) behind course.\n\nLecture Topics\nCalculus Z overview trajectory\nCourse resources systems\nCalculus study change\nLinear Function model “change” “slope”\n\nOutcomes\nUnderstand equation relates quantities, function maps inputs outputs\nUnderstand difference \\(\\equiv\\) \\(=\\)\nable identify function’s input\n\nReadings (assigned M1, skim , read )\nChapter 1\n\nAdditional Resources\nNone\n\nAssignments\nHW01\nFeedback01\nDD01\n\nIntro courseNTI\ncan make point Linear Function model change drawing pictures discussing certain quantities change two points time\ndiscussion Calc Z “Z different”, “Z new Calculus USAFA transitioning; may see differences course traditional course peers taking.”\nOveall goal day 1 build cadet’s confidence can successful. requires us show systems, resources, philosophy, expectations (e.g., college \\(\\neq\\) high school) behind course.\ncan make point Linear Function model change drawing pictures discussing certain quantities change two points timeThe discussion Calc Z “Z different”, “Z new Calculus USAFA transitioning; may see differences course traditional course peers taking.”Oveall goal day 1 build cadet’s confidence can successful. requires us show systems, resources, philosophy, expectations (e.g., college \\(\\neq\\) high school) behind course.Lecture Topics\nCalculus Z overview trajectory\nCourse resources systems\nCalculus study change\nLinear Function model “change” “slope”\nCalculus Z overview trajectoryCourse resources systemsCalculus study changeLinear Function model “change” “slope”Outcomes\nUnderstand equation relates quantities, function maps inputs outputs\nUnderstand difference \\(\\equiv\\) \\(=\\)\nable identify function’s input\nUnderstand equation relates quantities, function maps inputs outputsUnderstand difference \\(\\equiv\\) \\(=\\)able identify function’s inputReadings (assigned M1, skim , read )\nChapter 1\nChapter 1Additional Resources\nNone\nNoneAssignments\nHW01\nFeedback01\nDD01\nHW01Feedback01DD01Basics modeling functions\nNTI\nEmphasize functions map inputs outputs, naked functions () flexible enough circumstances\nShow students graph 5 naked functions, pick \nPoints truly naked straight-line just \\(x\\), use introduction parameterization\nShow scatter plot \\(f(x)\\equiv -x+2\\) explain \\(f(x)\\equiv x\\) good model motivate basic modeling function\n\nLecture Topics\nNaked modeling functions\nBasic Modeling functions behaviors based parameters\n\nOutcomes\nKnow graphs, domains, ranges, horizonal/veritcal intercepts & asymptotes () naked modeling functions\nRecognize functions way modeling relationship real-world\nGiven parameters, describe parameters affect shape function\n\nReadings: Section 1.3 Chapter 2\nAdditional Resources\nPDF - Exponential Functions Deep Dive\nMath Insight - Logarithm basics\nKhan Academy - Properties Logarithms\nRESOURCE TRIG VALUES (TRIG TABLE)\n\nAssignments\nDD02\n\nBasics modeling functionsNTI\nEmphasize functions map inputs outputs, naked functions () flexible enough circumstances\nShow students graph 5 naked functions, pick \nPoints truly naked straight-line just \\(x\\), use introduction parameterization\nShow scatter plot \\(f(x)\\equiv -x+2\\) explain \\(f(x)\\equiv x\\) good model motivate basic modeling function\nEmphasize functions map inputs outputs, naked functions () flexible enough circumstancesShow students graph 5 naked functions, pick whichPoints truly naked straight-line just \\(x\\), use introduction parameterizationShow scatter plot \\(f(x)\\equiv -x+2\\) explain \\(f(x)\\equiv x\\) good model motivate basic modeling functionLecture Topics\nNaked modeling functions\nBasic Modeling functions behaviors based parameters\nNaked modeling functionsBasic Modeling functions behaviors based parametersOutcomes\nKnow graphs, domains, ranges, horizonal/veritcal intercepts & asymptotes () naked modeling functions\nRecognize functions way modeling relationship real-world\nGiven parameters, describe parameters affect shape function\nKnow graphs, domains, ranges, horizonal/veritcal intercepts & asymptotes () naked modeling functionsRecognize functions way modeling relationship real-worldGiven parameters, describe parameters affect shape functionReadings: Section 1.3 Chapter 2Additional Resources\nPDF - Exponential Functions Deep Dive\nMath Insight - Logarithm basics\nKhan Academy - Properties Logarithms\nRESOURCE TRIG VALUES (TRIG TABLE)\nPDF - Exponential Functions Deep DiveMath Insight - Logarithm basicsKhan Academy - Properties LogarithmsRESOURCE TRIG VALUES (TRIG TABLE)Assignments\nDD02\nDD02Functions /O Notational Structure functions (R<>Math)\nNTI\nRewrite \\(y=mx+b\\) \\(mx-y+b=0\\) show function notation eliminates ambiguity IO\nBreak student habit using “x-axis” “y-axis”; describe “horizontal” “vertical” axes\nBreak student habit using “x” “y”; instead say “input” “output”\nExplain parameters scale shift inputs/outputs. Ex: \\(C\\) \\(Ce^{kt}\\) scales output \\(k\\) scales input\nExample function without formula: \\(f:Cadet\\RoomNumber\\)\n\nTopics\nFunctions Input Ouptut (IO)\nIntroduce Multi-input functions\nFunction Representations\nNotation Conventions\nDistinguish mathematical symbols: \\(=\\), \\(\\equiv\\), $, <- See Secton 4.8\n\nOutcomes\nUnderstand function maps inputs outputs\nGiven input, able find output function one five standard forms:\nGraphs functions (including contour plots)\nTables inputs outputs\nWord descriptions\nComputer function name\nMathematical notation\n\nable translate traditional math notation R expressions\n\nReading: Chapter 4 & 5\n:\nProvide glossary notation across 6-blocks (+alternate forms)\n\nAssignments\nDD03\n\nFunctions /O Notational Structure functions (R<>Math)NTI\nRewrite \\(y=mx+b\\) \\(mx-y+b=0\\) show function notation eliminates ambiguity IO\nBreak student habit using “x-axis” “y-axis”; describe “horizontal” “vertical” axes\nBreak student habit using “x” “y”; instead say “input” “output”\nExplain parameters scale shift inputs/outputs. Ex: \\(C\\) \\(Ce^{kt}\\) scales output \\(k\\) scales input\nExample function without formula: \\(f:Cadet\\RoomNumber\\)\nRewrite \\(y=mx+b\\) \\(mx-y+b=0\\) show function notation eliminates ambiguity IOBreak student habit using “x-axis” “y-axis”; describe “horizontal” “vertical” axesBreak student habit using “x” “y”; instead say “input” “output”Explain parameters scale shift inputs/outputs. Ex: \\(C\\) \\(Ce^{kt}\\) scales output \\(k\\) scales inputExample function without formula: \\(f:Cadet\\RoomNumber\\)Topics\nFunctions Input Ouptut (IO)\nIntroduce Multi-input functions\nFunction Representations\nNotation Conventions\nDistinguish mathematical symbols: \\(=\\), \\(\\equiv\\), $, <- See Secton 4.8\nFunctions Input Ouptut (IO)Introduce Multi-input functionsFunction RepresentationsNotation ConventionsDistinguish mathematical symbols: \\(=\\), \\(\\equiv\\), $, <- See Secton 4.8Outcomes\nUnderstand function maps inputs outputs\nGiven input, able find output function one five standard forms:\nGraphs functions (including contour plots)\nTables inputs outputs\nWord descriptions\nComputer function name\nMathematical notation\n\nable translate traditional math notation R expressions\nUnderstand function maps inputs outputsGiven input, able find output function one five standard forms:\nGraphs functions (including contour plots)\nTables inputs outputs\nWord descriptions\nComputer function name\nMathematical notation\nGraphs functions (including contour plots)Tables inputs outputsWord descriptionsComputer function nameMathematical notationBe able translate traditional math notation R expressionsReading: Chapter 4 & 5To :\nProvide glossary notation across 6-blocks (+alternate forms)\nProvide glossary notation across 6-blocks (+alternate forms)Assignments\nDD03\nDD03Parameterized functions models\nNTI\nIntroduce idea input meaning, output meaning relative input\nGive students function. change units input different unit (e.g. feet go Meters)\nLogarithms necessarily used end model; lever seperate power exponential functions\nTODO: Think physical phenomenon appropriately modeled Logarithmic function power \\(p<1\\)\n\nFocus lesson entirely finding parameters Sine, Power, Exponential\n\nLecture Topics:\nModeling phenomenon basic modeling functions\nfind parameters basic modeling functions\nLinear\nSine\nPower\nExponential\nLogarithmic (note)\n\n\nObjectives\nGiven description real-world scenario, able identify appropriate basic modeling function\nGiven data, select parameters basic modeling functions “fit” data\n\nReading: Chapter 6\nParameterized functions modelsNTI\nIntroduce idea input meaning, output meaning relative input\nGive students function. change units input different unit (e.g. feet go Meters)\nLogarithms necessarily used end model; lever seperate power exponential functions\nTODO: Think physical phenomenon appropriately modeled Logarithmic function power \\(p<1\\)\n\nFocus lesson entirely finding parameters Sine, Power, Exponential\nIntroduce idea input meaning, output meaning relative inputGive students function. change units input different unit (e.g. feet go Meters)Logarithms necessarily used end model; lever seperate power exponential functions\nTODO: Think physical phenomenon appropriately modeled Logarithmic function power \\(p<1\\)\nTODO: Think physical phenomenon appropriately modeled Logarithmic function power \\(p<1\\)Focus lesson entirely finding parameters Sine, Power, ExponentialLecture Topics:\nModeling phenomenon basic modeling functions\nfind parameters basic modeling functions\nLinear\nSine\nPower\nExponential\nLogarithmic (note)\n\nModeling phenomenon basic modeling functionsHow find parameters basic modeling functions\nLinear\nSine\nPower\nExponential\nLogarithmic (note)\nLinearSinePowerExponentialLogarithmic (note)Objectives\nGiven description real-world scenario, able identify appropriate basic modeling function\nGiven data, select parameters basic modeling functions “fit” data\nGiven description real-world scenario, able identify appropriate basic modeling functionGiven data, select parameters basic modeling functions “fit” dataReading: Chapter 6[[Combining 2+ functions]] ’ve integrated “Parameterized function” chapter.\nExamples\nNTIs\nTopics\nLinear Combination (ex: Polynomial)\nComposition scaling function (\\(e^{kt}) 1. Gallons/\\) Liters/Euros\nComposition (affine shift)\n1. Fahrenheit <> Celsius\n\n[[Combining 2+ functions]] ’ve integrated “Parameterized function” chapter.ExamplesNTIsTopics\nLinear Combination (ex: Polynomial)\nComposition scaling function (\\(e^{kt}) 1. Gallons/\\) Liters/Euros\nComposition (affine shift)\n1. Fahrenheit <> Celsius\nLinear Combination (ex: Polynomial)Composition scaling function (\\(e^{kt}) 1. Gallons/\\) Liters/EurosComposition (affine shift)\n1. Fahrenheit <> CelsiusThe modeling processThe modeling processSlope function\nNTI:\nbroaden idea describing slope line general function?\n\\(h\\) point\nslope function function \\(s()\\) built function \\(f()\\)\n\nTopics\nAverage rate change. (Example: Quarterly return stocks. HW tree harvesting.) (Example 2: Sine wave difference around 1 period. maybe becomes low-pass filter example accumulation.)\n\\(s(x) \\equiv \\frac{f(x + 0.1) - f(x)}{0.1}\\)\nExcept linear function, slope function depends big \\(h\\) . let’s fix \\(h\\) figure things .\nEvery function slope function.\n’s helpful name functions know come . ’re going use \\(f'()\\) stand slope function \\(f()\\)\n\nReading: Chapter 8\nSlope functionNTI:\nbroaden idea describing slope line general function?\n\\(h\\) point\nslope function function \\(s()\\) built function \\(f()\\)\nbroaden idea describing slope line general function?\\(h\\) pointThe slope function function \\(s()\\) built function \\(f()\\)Topics\nAverage rate change. (Example: Quarterly return stocks. HW tree harvesting.) (Example 2: Sine wave difference around 1 period. maybe becomes low-pass filter example accumulation.)\n\\(s(x) \\equiv \\frac{f(x + 0.1) - f(x)}{0.1}\\)\nExcept linear function, slope function depends big \\(h\\) . let’s fix \\(h\\) figure things .\nEvery function slope function.\n’s helpful name functions know come . ’re going use \\(f'()\\) stand slope function \\(f()\\)\nAverage rate change. (Example: Quarterly return stocks. HW tree harvesting.) (Example 2: Sine wave difference around 1 period. maybe becomes low-pass filter example accumulation.)\\(s(x) \\equiv \\frac{f(x + 0.1) - f(x)}{0.1}\\)Except linear function, slope function depends big \\(h\\) . let’s fix \\(h\\) figure things .Every function slope function.’s helpful name functions know come . ’re going use \\(f'()\\) stand slope function \\(f()\\)Reading: Chapter 8Composition Generally\nNTI:\ntemperature driving mountain?\nProblem calculating slope sigmoid\n\nTopics:\nFormula Hump (exponential quadratic)\nDriving mountain temperature vs altitude, altitude vs road position, road position vs time\nHump slope function Sigmoid\n\nReading: Chapter 9\nComposition GenerallyNTI:\ntemperature driving mountain?\nProblem calculating slope sigmoid\ntemperature driving mountain?Problem calculating slope sigmoidTopics:\nFormula Hump (exponential quadratic)\nDriving mountain temperature vs altitude, altitude vs road position, road position vs time\nHump slope function Sigmoid\nFormula Hump (exponential quadratic)Driving mountain temperature vs altitude, altitude vs road position, road position vs timeHump slope function SigmoidReading: Chapter 9Multiplication functions\nNTIs:\nMultiplication Sines, exponential, hump, sigmoid\n\nTopics:\nMultiplying functions inputs gives function inputs.\nMultiplying functions different inputs gives function whose inputs union inputs multiplicands.\n\nable reverse engineer products: sinexp, sinhump, sinsigmoid\nReading: Chapter 9\nMultiplication functionsNTIs:\nMultiplication Sines, exponential, hump, sigmoid\nMultiplication Sines, exponential, hump, sigmoidTopics:\nMultiplying functions inputs gives function inputs.\nMultiplying functions different inputs gives function whose inputs union inputs multiplicands.\nMultiplying functions inputs gives function inputs.Multiplying functions different inputs gives function whose inputs union inputs multiplicands.able reverse engineer products: sinexp, sinhump, sinsigmoidReading: Chapter 9Multivariate functions\nNTIs:\nAsk students compute slope multi-input function best can imagine (homework?) Build imagined function (slope) plot function\n\nOutcomes:\nable read & construct (R) Contour Plots\nable read & construct (R) Surface Plots\nable read table w/ 2 inputs\n\nReading: Chapter ??\nMultivariate functionsNTIs:\nAsk students compute slope multi-input function best can imagine (homework?) Build imagined function (slope) plot function\nAsk students compute slope multi-input function best can imagine (homework?) Build imagined function (slope) plot functionOutcomes:\nable read & construct (R) Contour Plots\nable read & construct (R) Surface Plots\nable read table w/ 2 inputs\nable read & construct (R) Contour PlotsBe able read & construct (R) Surface PlotsBe able read table w/ 2 inputsReading: Chapter ??Piecewise functions [jettison needed favor homework]\nTopics\nConstruct evaluate piecewise functions\nDemonstrate implement R\n\nOutcomes:\nable identify break(s) piecewise function\nable evaluate piecewise function given input\nable implement piecewise function R\n\nReading: Chapter ??\nPiecewise functions [jettison needed favor homework]Topics\nConstruct evaluate piecewise functions\nDemonstrate implement R\nConstruct evaluate piecewise functionsDemonstrate implement ROutcomes:\nable identify break(s) piecewise function\nable evaluate piecewise function given input\nable implement piecewise function R\nable identify break(s) piecewise functionBe able evaluate piecewise function given inputBe able implement piecewise function RReading: Chapter ??Iterative Modeling\nNTI:\nExamples:\nTides\nCooling Water\n\nObjectives:\nDescribe differences two models model data\nIdentify disagreements model data\nd: Reading: NEED LINK CHAPTER\n::: {.workedexample}\nReview, GR, Project Days\n:::\n\nIterative ModelingNTI:Examples:\nTides\nCooling Water\nTidesCooling WaterObjectives:\nDescribe differences two models model data\nIdentify disagreements model data\nd: Reading: NEED LINK CHAPTER\n::: {.workedexample}\nReview, GR, Project Days\n:::\nDescribe differences two models model dataIdentify disagreements model data\nd: Reading: NEED LINK CHAPTER\n::: {.workedexample}\nReview, GR, Project Days\n:::[[Semi-log Log-log plots]] Magnitude log\nTopics:\nIntroduce idea using logarithms converts number order magnitude\n\nOutcomes:\nReading: Chapter ??\n::: {.workedexample}\nFlexible catchup day\n:::\n[[Semi-log Log-log plots]] Magnitude logTopics:\nIntroduce idea using logarithms converts number order magnitude\nIntroduce idea using logarithms converts number order magnitudeOutcomes:Reading: Chapter ??\n::: {.workedexample}\nFlexible catchup day\n:::Dimensional Analysis\nReading: Chapter ??\n1.5 class daysDimensional AnalysisReading: Chapter ??1.5 class daysOne highlighting formats, called ::: {.takenote} used clear statement basic skills students master. might good tie quizzes vice versa.","code":""},{"path":"change.html","id":"change","chapter":"1 Change","heading":"1 Change","text":"Calculus change, change relationships. changing climate relationship , say, global average temperature time. ’s also changing levels CO2 methane, production elimination atmospheric geological processes. ’s burning oil (change configuration atoms hydrocarbons) contributes ocean acidification (process change ocean pH). ’s whole complex intricate network relationships change one component provokes change others.book presents calculus terms two simple central concepts: functions quantities. words everyday meanings , happily, close specific mathematical concepts using . Close … identical. pay careful attention brief descriptions follow.","code":""},{"path":"change.html","id":"quantity-vs-number","chapter":"1 Change","heading":"1.1 Quantity vs number","text":"mathematical quantity amount “stuff.” real-world stuff might mass time length. equally well can velocity volume momentum corn yield per acre. live world stuff, tangible (e.g., corn, mass, force) harder get hands minds around (acceleration, crop yield, fuel economy). important use calculus helping us conceptualize abstract kinds stuff mathematical compositions simpler stuff. example, crop yield incorporates mass length time. Later, ’ll see us using scientific-sounding term dimension instead “stuff.” fact, Chapter @ref{dimensions} entirely dedicated topic dimensions, now ’s sufficient understand numbers alone quantities.people inclined think “quantity” “number”; conflate two. understandable misguided. number meaningless. meaning number 5 without context? simply arithmetic value. Quantity, hand, combines number appropriate context describe amount stuff. , first thing need know quantity kind stuff describes. “mile” kind stuff: length. meter kind stuff: length. liter different kind stuff: volume. gallon acre-foot kind stuff: volume.“Stuff,” mean , measure. know, measure units. units appropriate depends kind stuff. Meters, miles, microns appropriate units length, even though actual lengths units differ markedly. (mile roughly million microns.)know dimension units number meaning. Thus, number part specifying quantity.’s salient difference number quantity comes calculus: sorts arithmetic mathematical operations can performed combine numbers: addition, multiplication, square roots, etc. performing mathematics quantities, multiplication division universally allowed. addition, square roots, , operation makes sense dimensions suitable.mathematics units dimension equivalent technical world common sense everyday world. instance (may make sense point), someone tells taking square root 10 liters, know immediately either just mistaken haven’t told essential elements situation. ’s just someone said, “swam across tennis court.” know either used wrong verb—walk run work—wasn’t tennis court, something important unstated, perhaps, “flood, swam across tennis court.”","code":""},{"path":"change.html","id":"functions","chapter":"1 Change","heading":"1.2 Functions","text":"central concept book functions mathematical computing sense; primary topic Block 1. function something takes one inputs returns output. calculus, ’ll deal mainly functions take one quantities inputs returns another quantity output. sometimes ’ll work functions take functions input return quantity output. even functions take function inputs return function output.’ve almost certainly seen functions expressed general form \\(f(x)\\). function \\(f()\\), input \\(x\\). Perhaps ’s obvious point \\(x\\) quantity. \\(f(x)\\) operation performed quantity. computing, definite, widely used, notation1 identify output function. Strangely, mathematics . major source confusion students learning calculus professionals using computers work calculus.’s possible present calculus without functions. instance, Isaac Newton, inventor calculus, spoke “flowing quantities.”2It’s practically impossible (generally unwise) computing without functions. basic building block every mainstream modern computer language. Since operations calculus actual practice performed computer, common sense suggests describe calculus terms functions. ’s book., may take bit getting used . reason notation used high-school algebra almost calculus texts notation functions. example, almost students seen mathematical expression form: \\[y = m x + b\\]\nUsing language math classes, can say expression “describes relationship two variables.” experience, know variables \\(x\\) \\(y\\). letters, \\(m\\) \\(b\\), something else. Many students reflexively call “slope” “intercept” “line.”used probably don’t see huge ambiguity involved. instance, kind mathematical thing referred \\(y = m x + b\\)? ’s equation, sure. ’s straight line. straight line thing equation. vice versa. might say, “equation describing straight line.”’ve studied calculus , may seen equation like \\(y' = m\\) perhaps \\(dy/dx = m\\) another way describing straight line.notation equations poor substitute notation functions. instance, input output? ’s explicitly stated left reader wonder. re-arrange \\[y = m x + b \\ \\ \\text{}\\ \\ \\ 0 = m x + b - y\\] using allowed manipulations algebra still function? , function \\(m x + b\\)? \\(x\\) input \\(x\\) \\(y\\) inputs? \\(mx + b - y\\) function, output always zero?engineers mathematicians invented computer languages realized decade explicit identifying input, output, function . ? computers need given unambiguous instructions.3 Sorting difficult process even mathematically talented skilled pioneers notation. , can forgiven occasional confusion dealing notation pre-dates computing.book ’ll explicit consistent ways denote functions can always figure inputs translated output. good start learning read function notation see equivalent \\(y=m x + b\\) notation: \\[g(x) \\equiv m x + b\\]\nNotice ’re using \\(\\equiv\\) (three parallel bars) rather \\(=\\). don’t need \\(y\\). \\(x\\) appears sides \\(\\equiv\\) place state name function, case \\(g()\\), can refer function unambiguously operations .","code":""},{"path":"change.html","id":"naked-intro","chapter":"1 Change","heading":"1.3 The naked modeling functions","text":"Experience allows us make short list mathematical functions provide large majority tools representing real world mathematical object. Think list different actors, skilled portraying archetypical character: hero, outlaw, lover, fool, comic. play brings together different characters, costumes , builds dialog.mathematical modeler kind playwright. combines mathematical character types tell story relationships. handful archetypical mathematical functions, analog character actors drama comedy. calling naked modeling functions. writing mathematical model, clothe actors suit era location assemble together harmony discord.list basic, unadorned functions, naked model function,Exponential \\(e^x\\)Logarithm \\(\\ln(x)\\)Power-law \\(x^p\\)Sinusoid \\(\\sin(x)\\)Straight-line \\(m x + b\\)Hump \\(\\text{dnorm}(x)\\)Sigmoid \\(\\text{pnorm}(x)\\)’ve written traditional notation can see connections math ’ve already studied. ’ve used \\(x\\) stand single input functions just ’s traditional.’s good refer functions word name—exponential, logarithm, power-law, sinusoid, straight-line, etc. helps avoid source common confusion. example, mathematical expressions \\(e^x\\) \\(x^e\\) easily confused, notation utterly different patterns. won’t easily mistake “exponential” “power-law.”One important point make short list. memorize names able easily associate name traditional notation.next several chapters, introduce several features functions. basic modeling functions features, don’t. features include:monotonicity downconcavity downhorizontal asymptotesvertical asymptotesperiodicityBy end Block 1, able list seven basic modeling functions say features relevant .also use see computer names functions. names can differ somewhat one computer language another, names language use, R, easily recognized programmers use language.ease reference, ’s tableWe’ve left traditional notation hump sigmoid isn’t standard one. Surprisingly, specific name R Power law Straight-Line functions, ’s easy implement needed using code .noticed section heading “naked modeling functions.” mean “naked” metaphorical sense, chose metaphor make easy remember. Think list seven functions celebrities world calculus. Unlike human celebrities appear wane years, marry divorce frequently, celebrities us generations maintain intimate connections one another reflect nature mathematics rather fads fancies celebrities. (Mastering calculus largely matter becoming familiar mathematical connections. ’ll see due time.)(basic) celebrity functions appear many mathematical settings, just human celebrity strives maintain public image. human celebrity human organism organism naturally naked. public appearance, however, celebrity always clothed one way another. (OK … Rarely appear unclothed true mathematics.) words, order interact world large, celebrities need attire.Similarly, mathematical functions appear real-world applications—opposed math textbooks—always wear clothes, adorned call parameters. Parameters help deal units dimension quantities. just standard elements clothing: shirt, skirt, trousers, … standard ways clothing naked modeling function. process decorating basic modeling functions called parameterization function, often multiple ways paremeterizing function.dress naked functions—, parameterize —become superheroes calculus. ’ll call league superheroes basic modeling functions.","code":""},{"path":"structure-of-a-function.html","id":"structure-of-a-function","chapter":"2 Structure of a function","heading":"2 Structure of a function","text":"[F-10] Objective Original: Understand relationship inputs outputs functions one two input variables, include functions defined piecewise.\nObjective Revised: Recognize functions way representing (storing) know able use properly basic nomenclature functions).’re used mathematical functions stated formulas, expressions composed addition, multiplication, square roots, . expression \\(m x + b\\) uses multiplication addition. \\(\\sqrt{\\strut 1 - x^2}\\) uses exponentiation (\\(x^2\\)), subtraction square root.’s nothing mathematical concept “function” requires formula. computer functions general based formula. (word used describe internals computer function algorithm, generalization “formula” includes many non-arithmetic operations looping branching).using formulas extensively, best can visualize functions generally something ’s necessarily formula. section gives another perspective describe think function. remember, functions take inputs return corresponding output. arrangement accomplishes function, even arithmetic nowhere sight.People many ways organizing know. Often rely intuitive abilities memory, also constructed frameworks make storage accessible reliable. One frameworks table, generally set array rows columns. instance, table range internal combustion engines various sizes:row table reports one, specific engine. column one attribute engine. Using tables can easy. example, asked report fast engine named “Enya 60-4C” spins, go Enya 60-4C row “RPM” column read answer: 11,800 revolutions per minute (RPM).table like can said describe raw numbers general relationships various engine attributes. instance, might want understand relationship () RPM engine mass, relate number diameter (, “bore”) depth (, “stroke”) cylinders power generated engine. single entry table doesn’t tell us general relationships; need consider rows columns whole.examined relationship engine power cylinder number, diameter, depth, find (rule) larger number, diameter, depth, powerful engine. ’s qualitative description relationship. educated people able understand quantitative description. Even don’t know exactly “power” means, rough conception . almost everyone knows diameter, depth, number mean.Often, ’re interested quantitative description relationship one (number, diameter, depth) \\(\\rightarrow\\) power. Remarkably, many educated people uncomfortable idea using quantitative descriptions relationship: sort language description written ; perform calculations use description; translate data (table) quantitative description; translate quantitative description address particular question make decision.course constructing using quantitative descriptions: , mathematical modeling. Skills modeling essential work engineering science, highly valued many fields commerce, management, government. Often, work applying quantitative skills called calculation. name calculus used describe methods widely used undertaking calculations.Functions fundamental way organizing mathematical models calculations. undoubtedly seen previous mathematics education, ’s worth reviewing basics can share vocabulary communicating .function transformation one inputs output.keep things simple now ’ll focus inputs outputs numeric, later ’ll need nuanced view “numeric” takes account different kinds things represented numbers, e.g. length, power, RPM.Functions bureaucracyTo see functions work, imagine long corridor sequence offices, identified room number. input function room number. evaluate function input, knock appropriate door , response, ’ll receive piece paper number take away . number output function.sound first simple true, … mathematical function office gives exactly number every time someone knocks door. Obviously, worker office highly tedious requires special skill. Every time someone knocks worker’s door, writes number piece paper hands person knocking. person number absolutely concern office worker.utility functions depends artistry insight person creates : modeler. important point course teach artistry. Hopefully learn artistry translate insight creation functions useful work. even just use functions created others, knowing functions built helpful using properly.sort function just described, offices along single corridor. functions said one input, , equivalently, functions one variable. operate function, just need one number: address office ’ll collect output.Many functions one input: two, three, four, … tens, hundreds, thousands, millions, …. course, ’ll work mainly functions two inputs, skills develop applicable functions two inputs.function two inputs look like office metaphor? Imagine office building many parallel corridors, numeric ID. evaluate function, need two numeric inputs: number corridor number door along corridor. two numbers hand, locate appropriate door, knock receive output number return.Three inputs? Think building many floors, floor many parallel corridors, corridor many offices sequence. Now need three numbers identify particular office: floor, corridor, door.Four inputs? street many three-input functions along . Five inputs? city many parallel four-input streets. .Applying inputs function order receive output small part calculations. Calculations usually organized algorithms, just say algorithms descriptions calculation. calculation … function!calculation work? Think business. People come business one inputs. take inputs , following carefully designed protocol, hand staff, perhaps duplicating simple arithmetic create new number. Thus equipped relevant numbers, member staff goes evaluate particular function numbers. (, staff member goes appropriate street, building, floor, corridor, door, returning number provided office.) staff re-assembles roadside stand, sorting numbers returned , following strict protocol. Perhaps combine new numbers ones originally given inputs. event, send staff new instructions—person’s instructions consist simply set inputs head evaluate return . point, perhaps many cycles, perhaps just one, able combine numbers ’ve assembled single result: number return person came business first place.calculation might involve just one function evaluation, involve chain sends workers buzzing around city visiting businesses turn activate staff add urban tumult.reader familiar floors corridors office doors may note addresses discrete. , office 321 offices 320 322 neighbors. Calculus continuous functions, need way accept, say, 321.487… input. office.slight modification procedure produce continuous function. works like : input 321.487… messenger goes office 321 322 collects respective outputs. Let’s imagine -14.3 12.5 respectively. ’s needed small calculation, case look like \\[-14.3 \\times (1 - 0.487...)   + 12.5 \\times 0.487...\\] called linear interpolation lets us construct continuous functions discrete data.Blocks 2 5 ’ll discuss widely used ways produce just continuous functions smooth functions. Understanding difference continuous smooth wait introduce couple calculus concepts: derivatives limits.","code":"\nDT::datatable(Engines)"},{"path":"structure-of-a-function.html","id":"domain-input-space","chapter":"2 Structure of a function","heading":"2.1 Domain: input space","text":"know, powerful way thinking numbers terms space geometry. instance, single number corresponds point line: -called number line. pair inputs, say, (x, y) corresponds point plane, often called Cartesian coordinate plane. Three numbers corresponds point space, perhaps organized (x, y, z) Cartesian space. higher-dimensional spaces, usually special training needed become comfortable . discomfort, might prefer work office metaphor. Just fun, ’s can think 10-dimensional space: 10 numbers, one telling planet, next specifying continent planet, country, state, city, street, building, floor, corridor, door.set inputs function can evaluated called domain function. Sometimes describe domain space, e.g. number line, plane, . Sometimes domains including restrictions. instance, particular input might meaningfully positive, offices corresponding negative values input. , input might restricted interval 0 1. Sometimes calculus, domain excludes isolated point. instance, may office door marked 0 neighboring doors open working offices.range function set outputs can produced. Since stage ’re working functions return single number output, ’s common describe range part number line. instance, functions positive outputs. functions’ outputs always interval 0 1. (case, instance, function returns probability output.)Weather forecasting numerical processWeather forecasting numerical process highly influential book, 1922, Lewis Fry Richardson. envisioned calculation weather forecast kind function. domain forecast latitude longitude point globe, rather rectilinear organization corridor.One fantastic illustration idea shows building constructed form inside-globe. many points globe, business. (can see clearly foreground, shows several boxes workers.)\nFigure 2.1: artist’s depiction organization calculations weather forecasting Richardson’s system. Source\nbusiness might work way: business person report current air pressure point globe, another person reports temperature, another reporting humidity, . compute predicted weather next day, business staff assigned visit neighboring businesses find pressure, temperature, humidity, etc. Still staffers take collected output neighbors carry arithmetic translate outputs forecast tomorrow. instance, knowing pressure neighboring points enables direction wind calculated, thus humidity temperature air coming region business handles. today’s numerical weather prediction models, globe divided finely latitude, longitude, altitude, software handles storage present conditions calculation future minutes later. Repeating process using forecast enables prediction made minutes , .important concepts calculus relate process collecting outputs neighboring points combining : instance finding difference sum. illustrate, first set equations Richardson’s Weather forecasting … written notation calculus:can hardly expected point understand calculations described equations, involve physics air flow, coriolis force, etc. ’s worth pointing notation:equations momentum column air particular latitude (\\(\\phi\\)) longitude.\\(M_E\\) \\(M_N\\) east-west north-south components momentum.\\(\\partial M_E /\\partial t\\) amount east-west momentum change next small interval time (\\(\\partial t\\)).\\(p_G\\) air pressure ground level column air.\\(\\partial p_G / \\partial n\\) difference air pressure column air columns north south.Calculus provides notation describing physics climate means translate physics arithmetic calculation.section linear combinations, sidebar explains -called “straight-line” function really just linear combination fundamental functions \\(\\text{identity}(x) \\equiv x\\) (exactly thing power-law function \\(x^p\\) \\(p=1\\)) \\(\\text{constant}(x) \\equiv 1\\) pretty much power-law function \\(x^0\\).limits section exercise, ask \\(x^0\\)? 1? \\(x=0\\). Zero raised positive power 0. positive number raised 0 1. two ways thinking give different answers.computer handles question ease:computer results don’t always agree mathematical results.case, mathematicians looking question lens limits, agree computer looking function \\(g(x) \\equiv x^0\\). disagree function \\(h(x) \\equiv 0^x\\) \\(f(x) \\equiv x^x\\). three functions comes limits.Remember \\(\\lim_{x\\rightarrow 0}\\) replacing \\(x\\) zero, process examining result non-zero \\(x\\) \\(x\\) approaches zero. “zero raised positive power” ’re talking \\(0^{\\lim_{x\\rightarrow 0}}\\), \\(\\lim_{x\\rightarrow 0} \\left[x^x\\right]\\). Similarly, \\(\\left[\\lim_{x\\rightarrow 0}\\right]^0\\) different ","code":"\n0^0## [1] 1"},{"path":"fun-describing.html","id":"fun-describing","chapter":"3 Describing functions","heading":"3 Describing functions","text":"need communicate functions fellow humans computers. Important modes communication include:Graphs functions show “shape”Tables inputs outputsWord descriptionsComputer function nameMathematical notationIn chapter, ’ll illustrate five different modes using naked modeling functions. ’s important become proficient five.","code":""},{"path":"fun-describing.html","id":"computer-commands","chapter":"3 Describing functions","heading":"3.1 Computer commands","text":"’ll start simple computer commands enable us draw graphs.make graph function one input, use slice_plot() command, like :can simply copy--paste command sandbox create graph. let’s take apart command ’s components see R commands structured.slice_plot( ... ) Commands usually start name operation perform. name always followed pair parentheses. parentheses contain arguments operation, can think specifying details done. slice_plot() operator draws graphs functions single input.exp(x) ~ x given first argument slice_plot() operator. ’ll defer detailed explanation, just pointing specifying computer want plot exponential function going use x name input.domain(x = c(-3,3)) Functions mathematical domains: set valid inputs function. exponential function entire number line domain. draw function graph need specify graphical domain, , part function domain show graph.","code":"\nslice_plot(exp(x) ~ x, domain(x=c(-2,2)))"},{"path":"fun-describing.html","id":"tables-of-inputs-and-outputs","chapter":"3 Describing functions","heading":"3.2 Tables of inputs and outputs","text":"Another way describing function give table inputs outputs. Like graphics, table can show possible inputs.modern computing, tables one primary means describe functions. People working calculus needed reference collection books containing tables functions used.computers, better faster ways get output function input. Still, modelers often use recorded data construct functions. Tables perhaps widely used method storing accessing data, although electronic spreadsheets used today instead printed tables.Even today, table can nice way describe function interested output handful possible inputs.Conceptually, ’s helpful keep mind every naked modeling function just way organizing information stored table.Exercise: give seven tables naked modeling functions. Use sandbox determine table function.","code":""},{"path":"fun-describing.html","id":"word-descriptions","chapter":"3 Describing functions","heading":"3.3 Word descriptions","text":"Knowing correctly using handful phrases goes long way able communicate people functions single input. Often, words make sense everyday speech (“steep”, “growing”, “decaying”, “goes ”, “goes ”, \"flat).Sometimes words used everyday speech casual person isn’t sure exactly mean. instance, often hear phrase “growing exponentially.” graph exponential function illustrates exactly sort growth: flat small \\(x\\) growing steadily steeper steeper \\(x\\) increases.Still words best understood learn calculus. “Concave ,” “concave ”, “approaching 0 asymptotically,” “continuous”, “discontinuous”, “smooth”, “minimum …,” “minimum …”, “approaching \\(\\infty\\) asymptotically,” “vertical asymptote.”Exercise: Show graphs naked modeling functions. Ask phrases apply.Exercise: Show graph ask questions asymptotes. Use phrases “input gets small” (meaning \\(x \\rightarrow -\\infty\\)), “\\(x\\) goes zero” (meaning $x 0)\"","code":""},{"path":"fun-describing.html","id":"computer-function-names","chapter":"3 Describing functions","heading":"3.4 Computer function names","text":"might expect, computer programmers language developers written software implementing several naked modeling functions: exp(), log(), sin(), dnorm(), pnorm(). functions, name tells everying, far computer concerned, needed calculate output given input.Computer notation power-law straight-line functions different. much easier understand seen create name functions. reason difference power-law straight-line functions quite naked. parameters: exponent power-law function slope intercept straight-line function.include power-law straight-line functions list naked modeling functions naked?’re using “naked modeling function” list accomplish two things time:emphasize modeling real-world situations always expect functions parameters.point large fraction modeling situations can handled just function “shapes.”make list shapes (ii) comprehensive, ’ve stretch “naked” metaphor bit.","code":""},{"path":"fun-describing.html","id":"mathematical-notation","chapter":"3 Describing functions","heading":"3.5 Mathematical notation","text":"grown traditional mathematical notation likely familiar notation several naked modeling functions: \\(\\ln x\\), \\(\\sin x\\), \\(e^x\\), \\(x^p\\) (\\(x^2\\) \\(p=2\\) \\(\\sqrt{x}\\) \\(p=1/2\\)).Traditional notation mixes several things computer notation sensibly keeps separate. computer programmer’s point view, traditional notation idiosyncratic rather systematic.interested things, three concepts computing may help appreciate differences:Functional notation computing, notation function name followed parentheses4 inputs inside parentheses called “functional notation.” functional notation part traditional mathematical notation, although often parentheses left .Functional notation computing, notation function name followed parentheses4 inputs inside parentheses called “functional notation.” functional notation part traditional mathematical notation, although often parentheses left .Infix notation functions two inputs, computing languages often support different arrangement function name inputs name comes arguments. ’ve seen parts traditional arithmetic notation, instance, \\(3 + 5\\) \\(8/2\\). Infix notation sometimes used place functional notation 3^2 x^3.Infix notation functions two inputs, computing languages often support different arrangement function name inputs name comes arguments. ’ve seen parts traditional arithmetic notation, instance, \\(3 + 5\\) \\(8/2\\). Infix notation sometimes used place functional notation 3^2 x^3.Markup notation undoubtedly familar word processing , particularly, style word processing called --see----get (WYSIWYG). WYSIWYG, can enter plain text just using keyboard, want make something boldface italics, use mouse select text involved select style menu. Typically, WYSIWYG mathematical content involves similar mouse-based process. contrast, mainstream computer languages, mouse needed . computer commands constructed plain, linear sequences letters characters.\nComputer programmers helpfully observed word-processing process can constructed simple plain text input computer program interprets input well-defined ways carries typesetting. illustrate, consider next couple lines. first shows ordinary looking word-processor formatted sentence. second shows way encoded typesetter can produce formatted content.\n\n\\(e^x\\), \\(\\sqrt{x^2}\\) \\(\\int_0^\\infty \\frac{1}{x^2} dx\\) examples traditional notation.5\n\n\n$e^x$, $\\sqrt{x^2}$ $\\int_0^\\infty \\frac{1}{x^2} dx$ examples *traditional* notation.^[footnote]\nMarkup notation undoubtedly familar word processing , particularly, style word processing called --see----get (WYSIWYG). WYSIWYG, can enter plain text just using keyboard, want make something boldface italics, use mouse select text involved select style menu. Typically, WYSIWYG mathematical content involves similar mouse-based process. contrast, mainstream computer languages, mouse needed . computer commands constructed plain, linear sequences letters characters.Computer programmers helpfully observed word-processing process can constructed simple plain text input computer program interprets input well-defined ways carries typesetting. illustrate, consider next couple lines. first shows ordinary looking word-processor formatted sentence. second shows way encoded typesetter can produce formatted content.\\(e^x\\), \\(\\sqrt{x^2}\\) \\(\\int_0^\\infty \\frac{1}{x^2} dx\\) examples traditional notation.5$e^x$, $\\sqrt{x^2}$ $\\int_0^\\infty \\frac{1}{x^2} dx$ examples *traditional* notation.^[footnote]Traditional mathematical notation includes features superscripts special symbols easily written pencil hand. Often notation beautiful aesthetically cherished mathematicians. computer commands computer languages straight sequences characters using function infix notation.6","code":""},{"path":"fun-describing.html","id":"exercises-1","chapter":"3 Describing functions","heading":"3.6 Exercises","text":"","code":""},{"path":"fun-notation.html","id":"fun-notation","chapter":"4 Notation for functions","heading":"4 Notation for functions","text":"Part difficulty mathematics many people making sense nomenclature notation. taught high school highly idiomatic system can mastered experience. Mathematicians undoubtedly skilled logic, mathematics ancient history littered language synonyms, near synonyms, inconsistencies, diacritical marks, letters unfamiliar alphabets. Oxford mathematician wrote poem become famous nonsense:’Twas brillig, slithy toves\n       gyre gimble wabe:\nmimsy borogoves,\n       mome raths outgrabe.words commonly encountered traditional mathematics notation.equation, formula, function, variable, unknown, rootAnd mathematical sentences.\\(y = x\\)\\(y = \\sqrt{x}\\)\\(y^2 = x\\)\\(x^2 = x\\)\\(x = \\sqrt{x}\\)five sentences equations. ’s easy, equal sign two sides. formulas? functions? ’re used calling \\(x\\) \\(y\\) variables. become unknowns? Sentence (iv) might interpreted describing roots. sentence (v) says thing (iv) related roots.","code":""},{"path":"fun-notation.html","id":"a-notation-for-computing","chapter":"4 Notation for functions","heading":"4.1 A notation for computing","text":"traditional notation practically useless computing. programmer deep understanding notation intended mean given circumstance can construct computer expression carry meaning computer’s work.illustrate, similar-looking sentences. math notation, can mean something. R, one valid others invalid. Read one try guess one valid others .’ve made guesses, open sandbox see got right.Produce MC exercise addresses ’s .student knows make sense math notation find much help writing computer notation. ’s like well educated foreigner trying make sense sentences meaningful others .“Chair meeting,” “seat meeting.”\n“Seat guest,” “chair guest.”\n“Bush ,” “tree .”\n“Tree cat,” “bush cat.”\n“Table motion,” “desk motion.”\n“Bench player,” “couch player.”\n“Couch meaning” “bench meaning.”book, ’re going use mathematical notation corresponds usable computer notation. first step stop using \\(=\\) mean many different things.","code":"\ny = x\ny = sqrt(x)\ny^2 = 3\ny = sqrt(3)\ny - x = 0\n0 = (x+3)(x-2)"},{"path":"fun-notation.html","id":"objects-and-actions","chapter":"4 Notation for functions","heading":"4.2 Objects and actions","text":"[F-30] Identify structure function notation function defined formula.’re going give names mathematical “objects” actions. introduction, ’ll use boldface objects italics actions.function mathematical object gives instructions transform one inputs output. Typically, always, give names functions can refer . can think function like recipe: tells inputs create output. ’re used functions recipe written formula using arithmetic operators. general term recipe function algorithm. (Sectin ?? gives definition “algorithm” shows examples formulas.)function mathematical object gives instructions transform one inputs output. Typically, always, give names functions can refer . can think function like recipe: tells inputs create output. ’re used functions recipe written formula using arithmetic operators. general term recipe function algorithm. (Sectin ?? gives definition “algorithm” shows examples formulas.)argument symbol stands input algorithm.argument symbol stands input algorithm.Applying function inputs means carry steps function’s algorithm, inserting appropriate quantity place symbol. Recipes use symbols like “rice” describe algorithm. cooking, apply recipe incredients. recipe says, “Add rice boiling water” use physical rice physical boiling water, instead symbols. Applying function inputs fundamental computing, ’ll often hear words “apply”: run function evaluate function execute function.Applying function inputs means carry steps function’s algorithm, inserting appropriate quantity place symbol. Recipes use symbols like “rice” describe algorithm. cooking, apply recipe incredients. recipe says, “Add rice boiling water” use physical rice physical boiling water, instead symbols. Applying function inputs fundamental computing, ’ll often hear words “apply”: run function evaluate function execute function.define function mathematical notation write something like : \\[g(x) \\equiv 4 x^2 - 7\\]\\(g()\\) name function.function takes just one argument, written symbol \\(x\\) definition. make double sure human reader sees symbol used argument, putting list symbols parentheses following function name. definition function two inputs looks like \\(h(x, y) \\equiv 3y - 5 x^2 + x\\) functions two inputs follow pattern.algorithm \\(g()\\) presented formula. formula example, \\(4 x^2 - 7\\) says, \"Take input quantity. Multiply 4 input multiply input . Subtract \\(7\\) produce output function.use \\(\\equiv\\) punctuation distinguish function name (argument list) algorithm. algorithm always right \\(\\equiv\\), name function argument list left.command g(3), applies function named \\(g()\\) value 3. replacing \\(x\\) algorithm \\(3\\) carry calculations algorithm. \\(g(3)\\), output 29.R, function defined using similar expression. \\(g()\\) defined , R definition beThe name function, without parentheses, left side assignment operator <-.use name g refer anything, function . , can see g name function looking object right side <-. R/mosaic operator makeFun() constructs functions.text parentheses makeFun also R expression. call sort expression tilde expression. (symbol ~ called “tilde.”) tilde character simply punctuation separate expression left side, 4*x^2 - 7, expression right side. right side tilde expression identifies symbols arguments. (case, x argument.) left side tilde expression describes algorithm function, using argument names specified right side.apply function \\(g()\\) argument, write R expression value argument given parentheses. instance, apply \\(g()\\) value 3, write:","code":"\ng <- makeFun(4*x^2 - 7 ~ x)\ng(3)## [1] 29"},{"path":"fun-notation.html","id":"algorithms","chapter":"4 Notation for functions","heading":"4.3 Formulas and algorithms","text":"function algorithms previous section involves arithmetic. generally, formula involve invocation another function. example: \\(\\sqrt{\\strut m x + b}\\) \\(\\sin(m x) + \\ln(b)\\).idea “algorithm” generalizes formulas. starter definition :algorithm set instructions performing computation.High-school math typically involves presenting algorithms formula. learned, maybe middle school, follow arithmetic steps involved algorithms described formulas. also likely used calculator perform arithmetic evaluate functions \\(\\sin()\\) \\(\\ln()\\) \\(\\sqrt{\\strut}\\) don’t know evaluate using simple arithmetic. calculator implementing algorithm programmed enable calculation \\(\\sin()\\) \\(\\ln()\\) .slightly detailed definition “algorithm” highlights algorithms written terms , simpler algorithms.algorithm set instructions performing computation written terms algorithms already know perform.purposes, “algorithms already know perform” taken arithmetic—addition, subtraction, multiplication, division—well evaluation naked modeling functions. Admittedly, people compute logarithms fluently can add numbers, already R implementations basic modeling functions: exp(), log(), sin(), power-law, dnorm(), cnorm().\nvast majority functions see book (mathematical modeling general) can constructed basic arithmetic application naked modeling functions.","code":""},{"path":"fun-notation.html","id":"algorithms-without-formulas","chapter":"4 Notation for functions","heading":"4.4 Algorithms without formulas","text":"Many functions described algorithms use concepts common computer programming unknown traditional mathematical notation. names like iteration branching many refer stored lists fixed numbers (like office workers street, building, floor, corridor, door image function). ’ll deal things later, now …going use word algorithm name kind expression right \\(\\equiv\\) function definition. formula specific kind algorithm generally written traditional math notation.Algorithms, including ones formulas, written terms set symbols stand inputs. high-fallutin’ way saying something simple: \\(mx + b\\), \\(x\\), \\(m\\), \\(b\\) names give quantities used calculation.notation using function definition lists names two places, others one place. , look \\[g(x) \\equiv m x + b\\]\n\\(x\\) appears algorithm list input name \\((x)\\) left \\(\\equiv\\).\\(m\\) \\(b\\) different; appear algorithm. word quantities mathematics parameter. Eventually, algorithm followed, ’re going put specific numerical values place parameter.parameter values come ? subject mathematical notation silent. figure context experience. potentially confusing, especially human around sort things .","code":""},{"path":"fun-notation.html","id":"computer-notation","chapter":"4 Notation for functions","heading":"4.5 Computer notation","text":"notation used computer programming lets us explicit symbols refer function inputs parameters function.\nDepending computer language things can handled one way another. experienced computer programmers: issue scope can complex right.software used CalcZ (R, mosaic package extensions, ’ll refer R/mosaic), take simple--use approach. works like :modeling functions construct R/mosaic list parameters formally arguments function.wrote traditional notation \\[g(x, m, b) \\equiv m x + b\\]also way give default numerical values parameters can write \\(g(3.5)\\) computer know find parameter values. writing formulas using math notation, ’ll extend traditional notation write, instance, \\(g(x, m=2, b=3) \\equiv m x + b\\).R/mosaic, construct mathematical function like \\(g()\\) using makeFun() function:also writebut notation means give specific numerical values m b inputs whenever evaluate g(). won’t default values “parameters--inputs” m b.[F-31-R] Identify create R versions mathematical functions using makeFun() tilde expressions.[F-33] Master conventions used CalcZ giving names functions referring functions “pronouns.”","code":"\ng <- makeFun(m*x + b ~ x, m=2, b=3)\ng <- makeFun(m*x + b ~ x)"},{"path":"fun-notation.html","id":"calcz-naming-conventions","chapter":"4 Notation for functions","heading":"4.6 CalcZ naming conventions","text":"’re going using lot functions CalcZ. functions proper names, usually written using short sequences letters: instance naked modeling functions \\(\\sin()\\), \\(\\ln()\\), \\(\\exp()\\).functions needed just sentence paragraph section, perhaps used example lay steps algorithm. natural languages English, often use pronouns purposes: , , , , , , …. also use pronouns identifying functions. policy :pronoun function named \\(f()\\) \\(g()\\) \\(h()\\) corresponding upper-case letters \\(F()\\), \\(G()\\), \\(H()\\). particular choice letter f, g, h significance whatsoever. just way give unambiguous handle function going using little .occasion, use subscripts superscripts pronoun letters, instance \\(f_1()\\) \\(g^\\star()\\). way give us many possible pronouns need . Perhaps analogous words like “sister,” “parent,” “husband,” “cousin,” etc. allow us refer, without proper name, specific person.occasions, function relates specific quantity position velocity, use names \\(x()\\), \\(y()\\), \\(z()\\), \\(u()\\), \\(v()\\), \\(w()\\), . letters , course, ones frequently use name inputs functions. know whether letter meant refer input rather function? parentheses provide clue: \\(x()\\) function name, \\(x\\) input name.can become tedious give name every function, even ’s used . Consider sentence example:“functions \\(g(x) \\equiv \\sqrt{\\strut x}\\) \\(h(x) \\equiv x^3\\) examples power-law functions.”Long awkward. ’ll feel free write instead,“\\(\\sqrt{\\strut x}\\) \\(x^3\\) examples power-law functions.”Without formality provided “\\(g(x) \\equiv\\)” can hard know whether \\(\\sqrt{\\strut x}\\) means “square-root function” \"take square root specific number \\(x\\). convention use based name used expression. standard argument names end alphabet used without subscript (e.g. \\(x_0\\)) special symbol subscript (e.g. \\(t^\\star\\)), intend expression function. However, want apply function specific values inputs write following styles:\\[f(x^\\star) \\ \\ \\mbox{}\\ \\ \\sqrt{\\strut x^\\star}\\ \\ \\mbox{}\\ \\ \\sqrt{\\strut x=3}\\ \\ \\mbox{}\\ \\ \\left.\\sqrt{\\strut x}\\right|_{x=3}\\ \\ \\mbox{}\\ \\ \\left.g(x)\\strut \\right|_{x=3}\\]One important techniques calculus take something often think number turn function whose output number. take time get used calculus notation able tell glance whether something function number.’s illustration make sense already studied calculus:\\[\\int_0^3\\!\\! f(x) dx\\ \\ \\text{number, }\\int_0^x\\!\\! f(x) dx \\ \\ \\text{function.}\\ \\ \\]high-school math notation, can hard tell expression intended function number. Careful attention CalcZ conventions make much easier figure whether expression resolves function number. first read mathematical expression, good first question ask , “kind thing ? function? number?”","code":""},{"path":"fun-notation.html","id":"functions-in-r","chapter":"4 Notation for functions","heading":"4.7 Functions in R","text":"name R language can refer sort object. use CalcZ naming conventions use R, ability develop read math notation help reading R vice versa.R/mosaic provides additional clues distinguish numbers functions.Almost time create function using makeFun(). see R expression starting name <- makeFun(tilde expression) know sure name refers function.get deeper calculus, meet additional R operators generate functions. ’ll introduce good time, someone reviewing course, include D(), antiD(), compose() iterate().readers may encountered R previously statistics data science course. readers wondering makeFun(). Experienced programmers know way make functions R using function keyword. instance:’s completely correct legitimate way define function R settings universal practice.developed makeFun() handle situation computers, insistence avoiding ambiguity, something person familiar math notation likely suspect. problem comes something simple asIn traditional math notation, \\(g(x) \\equiv m x + b\\), usually silent parameters like \\(m\\) \\(b\\) coming . , honest, don’t worry try evaluate function.evaluate, say, command \\(g(3)\\), R system knows find right values \\(m\\) \\(b\\). objects appropriate places R system, error message generated. rules computer languages follow tracking symbols aren’t argument list called scoping rules. Scoping advanced programming concept different languages use different rules. ’s recipe trouble confusion newbies. (even experts!)makeFun() arranged impose scoping system, one dead easy essentially every computer language. makeFun() add parameters function algorithm argument list. makeFun() command creates function 3 arguments.point ~ x part tilde expression simply name arguments come first. evaluate function, ’ll provide values m b. operations function—differentiation anti-differentiation, particular—can done without specify parameter values. know differentiation anti-differentiation , example:Sometimes particular numerical values mind parameters. instance, modeling trajectory ball, undoubtedly need make use gravitational acceleration Earth’s surface, \\(9.8 \\text{m}/\\text{s}^2\\). might prefer include specific number 9.8 function definitions can use functions model ball’s trajectory Mars. since balls thrown Earth, maybe ’s worthwhile insist value 9.8 specified every time function used. can ways using g parameter name instruct R set g 9.8 unless otherwise specified. function look like :","code":"\nf <- function(x) { 3 + 2*x }\ng <- function(x) { m*x + b }\nmakeFun(m*x + b ~ x)## function (x, m, b) \n## m * x + b\nD(m*x + b ~ x)## function (x, m, b) \n## m\nantiD(m*x + b ~ x)## function (x, C = 0, m, b) \n## m * 1/2 * x^2 + b * x + C\nball_velocity <- makeFun(g*t + t0 ~ t, g = 9.8, t0 = 0)\n# For Earth: falling 3 seconds from a standstill\nball_velocity(3)## [1] 29.4\n# For Earth when the ball has an initial upward velocity of 10 m/s\nball_velocity(3, t0 = -10)## [1] 19.4\n# For Mars ...\nball_velocity(3, t0 = -10, g = 3.711)## [1] 1.133"},{"path":"fun-notation.html","id":"foursigns","chapter":"4 Notation for functions","heading":"4.8 E unibus plurum: \\(=\\), \\(\\equiv\\), \\(\\rightarrow\\), <-","text":"\\(=\\) sign carries lot weight high-school notation. much weight. used several different meanings. leads confusion error.Meaning 1: “defined …”use \\(\\equiv\\) mathematical notation <- R. notation R bit simpler mathematical notation: way giving something name.“something” function, see left side <-, instance use makeFun() operator qw h <- makeFun(x^2 ~ x). left side simply name.math notation, equivalent written \\(h(x) \\equiv x^2\\). left side isn’t exactly name. ’s name followed parentheses names used algorithm.Keep mind writing functions, generally provide hint name refers function, writing \\(h()\\) h(). parentheses aren’t part name; name \\(h\\). parentheses remind us \\(h\\) function.Meaning 2: “Happens …”acceleration due gravity often given name \\(g\\). Earth’s surface, happens \\(9.8 \\text{m}/\\text{s}^2\\). math notation, use equal sign narrow meaning, \\(g=9.8\\text{m}/\\text{s}^2\\). R use =.Meaning 3: “Gets closer closer …”Calculus relationships: connection two () things. hear phrases like, “\\(x\\) increases, \\(f(x)\\) decreases.” , everyday experience, “gets humid, weather becomes uncomfortable.” , “slower safer,” “spicier better” “heavier blanket, warmer ’ll .” (One important uses derivatives calculus represent statements quantitatively. ’s subject next Block.)calculus, sometimes distinguish “\\(x\\) zero” “\\(x\\) gets closer closer zero.” ’ll need want say, “gets smaller smaller, doesn’t disappear entirely.” symbol “gets closer closer ” \\(\\rightarrow\\), \\(x \\rightarrow 0\\)reading math, take care notice \\(=\\), \\(\\rightarrow\\), \\(\\equiv\\) used. sign something important say intended help make sense read.\n:::According notation style use CalcZ, things function? number?Q-2: kind thing \\(\\sqrt{z}\\)?function (+) []function (+) []number [\\(z\\) one standard names use input function. given function name, instance \\(g(z) \\equiv \\sqrt{z}\\), able tell \\((z)\\) \\(g()\\) function. whenever use standard input name, expression function.]number [\\(z\\) one standard names use input function. given function name, instance \\(g(z) \\equiv \\sqrt{z}\\), able tell \\((z)\\) \\(g()\\) function. whenever use standard input name, expression function.]Q-3: kind thing \\(\\sqrt{y^\\star}\\)?function [According convention, name \\(y^\\star\\) refers particular value opposed name function input.]function [According convention, name \\(y^\\star\\) refers particular value opposed name function input.]number (+) []number (+) []Q-4: kind thing \\(e^{k t}\\)?function (+) []function (+) []number [letter \\(t\\) one standard letters input names. \\(k\\) letter, since end alphabet, hint intended parameter, symbol representing specific numerical quantity.]number [letter \\(t\\) one standard letters input names. \\(k\\) letter, since end alphabet, hint intended parameter, symbol representing specific numerical quantity.]Q-5: kind thing \\(g(k) \\equiv e^k\\)?function [Notwithstanding convention \\(k\\) name used inputs, use full function-definition style, anything parentheses following function name explicitly stated input name.]function [Notwithstanding convention \\(k\\) name used inputs, use full function-definition style, anything parentheses following function name explicitly stated input name.]number (+) []number (+) []","code":"\nname <- something"},{"path":"graphs-and-graphics.html","id":"graphs-and-graphics","chapter":"5 Graphics & function graphs","heading":"5 Graphics & function graphs","text":"[F-20] Understand mathematical graph consists points composite space: input \\(\\times\\) output.Scientific statistical graphics visual depictions information data. displaying function single input, mathematicians favor particular style graphics. favored style called function graph, specific technical meaning mathematics. Notice ’re writing “function graph” rather “function graphic.” function graph particular sort graphic: many types graphics ’ll use display data features functions.","code":""},{"path":"graphs-and-graphics.html","id":"the-graphics-frame","chapter":"5 Graphics & function graphs","heading":"5.1 The graphics frame","text":"Technical graphs usually drawn graphics frame\nseveral components:frame region piece paper computer screen marked horizontal vertical axis.horizontal axis stands one quantity.vertical axis stands another quantity.horizontal vertical axes drawn scale enables translate numerical value position.\nFigure 5.1: empty graphics frame scales horizontal vertical axes.\n","code":""},{"path":"graphs-and-graphics.html","id":"data-graphics-the-point-plot","chapter":"5 Graphics & function graphs","heading":"5.2 Data graphics: the point plot","text":"One common uses graphics frame display visually two columns table containing data. instance, small part table size penguins Palmer Archipelago Antarctica.point plot displays two columns table. row table represented one point graphic. instance:penguin specific mass flipper length. look penguins mass around 4 kg, can see different penguins variety flipper lengths. ’s typical natural variability.function graph can constructed way. Start table reporting output function variety inputs, like :make point plot two columns table:\nFigure 5.2: point plot table.\ngraph shows shape sigmoid function, one naked modeling functions. Except … domain sigmoid entire number line \\(-\\infty\\) \\(\\infty\\).** Working data**Instructions accessing data R .data frames: names(), head(), gf_point()graphical layers piping: Combining gf_point() slice_plot()","code":"\nlibrary(palmerpenguins)\nset.seed(101)\nknitr::kable(\n  penguins %>% sample_n(10) %>%\n    select(species, body_mass_g, flipper_length_mm, \n           bill_length_mm) %>%\n    rename(body_mass = \"body_mass_g\", \n           flipper_length = \"flipper_length_mm\",\n           bill_length = \"bill_length_mm\") %>%\n    mutate(body_mass = body_mass/1000,\n           flipper_length=flipper_length/10,\n           bill_length = bill_length/10)\n) %>% \n    kableExtra::kable_styling()"},{"path":"graphs-and-graphics.html","id":"asymptotes-of-functions","chapter":"5 Graphics & function graphs","heading":"5.2.1 Asymptotes of functions","text":"’s need plot entire domain. know “action” happening near zero inputs left function value heads toward zero. Similarly, inputs far right, function value heads toward zero. particular mathematical notation sort “far left” idea. mathematical notation, write situation sigmoid way:\\[\\lim_{x \\rightarrow -\\infty} \\text{dnorm}(x) = 0\\ \\ \\ \\mbox{}\\ \\ \\ \\lim_{x \\rightarrow -\\infty}\\text{dnorm}(x) = 1\\]\ninformation function output called horizontal asymptotes function. ’s expected mathematically literate person know heart asymptotes basic modeling functions, just geographically literate person knows Africa continent Ghana country Africa. ’ll say horizontal asymptotes later. now, note expected knowledge enables us convey shape function plotting just limited, well chosen, part domain.graph drawn data table incomplete. domain sigmoid function entire number line—numbers—graphic shows handful input values.’s perhaps common sense can find function output input isn’t shown point plot interpolating points shown. instance, put straight-line betwen consecutive points:\nFigure 5.3: Interpolating data points\ngaps points filled interpolation, can use graphic read output corresponding every input graphic domain. (vice versa: can find input corresponds given output range function.)Typically function’s graph drawn using many points, closely spaced can’t see gap. Since can’t see gaps, won’t misled sharp angles consecutive line segments connecting points. Like :traditional, mathematical definition function graph set coordinate pairs legitimate input/output pairs function. Placing ink legitimate pairs displays graph.data point plot penguin flipper length vs body mass, generally multiple penguins body mass different flipper lengths. mathematics, part definition term “function” function one output given input. Thus, graph function one input always consist single curve, opposed cloud points often seen data.","code":""},{"path":"graphs-and-graphics.html","id":"function-shapes","chapter":"5 Graphics & function graphs","heading":"5.3 Graphs of the basic functions","text":"One helpful way get know naked modeling functions individually graph . People natural talent remember shapes distinguish one another; job associate shape ’s name.\nshape power-law function \\(x^p\\) depends exponent \\(p\\).\\(p\\) integer, \\(p \\neq \\ldots,-2, -1, 0, 1, 2, 3, ...\\) domain \\(0 leq x\\), positive side number line.\npositive \\(p\\), function increasing.\nnegative \\(p\\), function decreasing.\npositive \\(p\\), function increasing.negative \\(p\\), function decreasing.\\(p\\) integer, domain entire number line, \\(-\\infty < x < \\inft\\)\np even, \\(p = 2, 4, 6, ...\\) output positive.\np odd, output negative.\np even, \\(p = 2, 4, 6, ...\\) output positive.p odd, output negative.practice, able sketch roughly naked modeling functions memory. can , ’ll easier time envisioning function might best suit situation.addition shape, facts naked modeling functions let sketch accurately.[, think function anchored one input. ]Exponential\n\\(x=0 \\implies e^x=1\\)\n\\(x=3 \\implies e^x\\approx 20\\)\n\\(x=0 \\implies e^x=1\\)\\(x=3 \\implies e^x\\approx 20\\)Logarithm\n\\(x=1 \\implies log(x)=0\\)\n\\(x=3 \\implies e^x\\approx 20\\)\n\\(x=1 \\implies log(x)=0\\)\\(x=3 \\implies e^x\\approx 20\\)Hump\n\\(x=0 \\implies\\) peak hump: dnorm(0) \\(\\approx 0.4\\)\n\\(x=\\pm 1 \\implies\\) output \\(\\approx 0.25\\)\n\\(x=0 \\implies\\) peak hump: dnorm(0) \\(\\approx 0.4\\)\\(x=\\pm 1 \\implies\\) output \\(\\approx 0.25\\)Sigmoid\n\\(x=0 \\implies\\) mid-way hill: pnorm(0) \\(= 0.5\\)\n\\(x=2 \\implies\\) output \\(\\approx 0.975\\)\n\\(x = -2 \\implies\\) output \\(\\approx 0.025\\)\n\\(x=0 \\implies\\) mid-way hill: pnorm(0) \\(= 0.5\\)\\(x=2 \\implies\\) output \\(\\approx 0.975\\)\\(x = -2 \\implies\\) output \\(\\approx 0.025\\)Sinusoid\nPeaks always 1, valleys \\(-1\\)\n\\(x=0, \\pm \\pi, \\pm 2\\pi, \\pm 3\\pi, \\ldots\\) gives output 0.\nPeaks always 1, valleys \\(-1\\)\\(x=0, \\pm \\pi, \\pm 2\\pi, \\pm 3\\pi, \\ldots\\) gives output 0.","code":""},{"path":"graphs-and-graphics.html","id":"exercises-in-draft","chapter":"5 Graphics & function graphs","heading":"5.4 EXERCISES in draft","text":"Show graphs, ask ones mathematical functions, ones unique inverse, output corresponding given input, input given output, range function, ….","code":""},{"path":"graphs-and-graphics.html","id":"inputs-to-output","chapter":"5 Graphics & function graphs","heading":"5.5 Inputs to output","text":"can easily evaluate function given input graph. know, just put finger horizontal coordinate input. move finger upward reach point curve directly horizontal coordinate. read value function input reference scale vertical axis.’s possible show graph whole function whose domain \\(-\\infty\\) \\(\\infty\\). Consequently, drawing graph choose show part domain expect relevant needs.Sometimes, graphic’s domain includes parts domain function drawn. cases, function’s graph extend invalid part graphic domain, plot function whose domain positive numbers.function range runs \\(-\\infty\\) \\(\\infty\\), limits paper display mean can show part range. experience, ’ll learn read hints graph underlying function might range larger one shown graphic.","code":""},{"path":"graphs-and-graphics.html","id":"outputs-to-inputs","chapter":"5 Graphics & function graphs","heading":"5.6 Outputs to inputs","text":"Graphs relatively modern, coming mainstream use 1700s. Much mathematics developed graphs invented. One consequence function tasks easy using graph might hard previous ways implementing functions. analogous way arithmetic pretty easy Arabic numerals, really hard Roman numerals.function graph makes easy evaluate function inverse. basic modeling functions way calculate numerically output given input (function’s domain).Often, working function goes another way: know output want find corresponding input. ’s easy graph. Pick position vertical axis represents given input. trace horizontally ink . , trace vertically read value input produce given output.Mathematicians careful distinguish functions unique input generates given output, functions can one input generates output. Functions one--one relationship output input called “invertible.”Invertible , common procedure working functions find input corresponding specific, given output. high-school algebra, called “solving \\(x\\).” special case solving finding roots polynomial. name give procedure zero finding, correctly points trying find input.","code":""},{"path":"graphs-and-graphics.html","id":"graphs-of-functions-with-two-inputs","chapter":"5 Graphics & function graphs","heading":"5.7 Graphs of functions with two inputs","text":"can draw graphs functions two inputs. Now points need marked 3-dimensional space: one axis two inputs another axis output. Like :\nFigure 5.4: (Figure Fun-1b-1.2)\nhard read graph function two inputs. Think graph kind tent suspended domain ground. graph surface. show graph display, tricks trade used: color give additional scale output; computer graphics let us rotate surface look various perspectives, added grid lines marks surface help us read numerical value.","code":""},{"path":"graphs-and-graphics.html","id":"contour-plots","chapter":"5 Graphics & function graphs","heading":"5.8 Contour plots","text":"[F-21] Interpret contour plot function two input variables, include estimating function values locations peaks valleys.mathematical graph just one way draw picture function two inputs. ways. One helpful mode picture called contour plot, familiar many non-mathematicians form topgraphical maps showing landscape elevation function latitude longitude. ’s contour plot function shown previous graph:\nFigure 5.5: (Fig-1b-2.1)\ncontour plot topographical map mathematical graph Figure Figure (Fun-1b-1.2)may take practice learn read contour plots fluently skill ’s worthwhile . Note graphics frame Cartesian space two inputs. output presented contour lines. contour line label giving numerical value function output. input value pairs given contour line corresponds output level labeling contour line. find output input pair contour line, interpolate contours either side point.example, input pair (0, 0)—bottom frame, midway left right—falls contours labeled “20” “22.” means output corresponding input (0, 0) somewhere 20 22. point much closer contour labeled “20”, ’s reasonable see output value 20.5. , course, approximation, ’s nature reading numbers graphs.Often, specific numerical value point primary interest. Instead, may interested steep function point, indicated spacing contours. contours closely spaced, hillside steep. contours far apart, hillside steep, perhaps even flat.Another common task interpreting contour plots locate input pair ’s local high point low point: top hill bottom hollow. points called local argmax local argmin respectively. output function local argmax called local maximum; similarly local argmin, output called local minimum. (word “argmax” contraction “argument maximum.” tend use word “input” instead “argument”, means exactly thing say “inputs function” says “arguments function.”)Still common tasks reading contour plots start given input pair figure 1) direction move steeply uphill, 2) direction move keep function output .can helpful look contour map interpret contours representing geographical features: hills, valleys, crests, coves, hollows, ., (Fun-1c) translate contour plot graph function one input. (can think function two inputs, hold one inputs constant, , always . )","code":""},{"path":"graphs-and-graphics.html","id":"slice-plots","chapter":"5 Graphics & function graphs","heading":"5.9 Slice plots","text":"[F-23] Know meant slice function two variables. able determine function increasing, decreasing, constant moving horizontally vertically contour plot.mentioned , mathematical modeling process constructing mathematical representations situations phenomena interest. CalcZ, primarily interested using functions representations.Almost always, mathematically modeling real-world situation phenomenon, try capture every nuance every relationship might exist real world. leave things . simplifications make modeling problems tractable encourage us identify important features important relationships.hand, ’s easy go wrong leave something ’s important. mitigate risk, many modeling projects involve modeling cycle propose candidate model, examine consequence model see corresponds well parts reality important us task, modify model needed produce new better candidate.spirit, ’s useful always assume models leaving something complete model involves function inputs present candidate. present candidate model considered slice complete model. slice leaves one variables complete model.illustrate , suppose “complete model” form function two inputs, shown contour plot .become practiced reading contour plots, might prefer read one hilltop (shaded yellow) side--side hollow bowl (shaded purple), green, almost level flanks left right edges frame.common forms slice involve constructing simpler function one input . example, simpler function might ignore input #2. different ways collapsing function two inputs function one input. especially useful way calculus take two-input function set one inputs constant value.instance, suppose set input #2 constant value 1.5. means can consider value input #1, input #2 replaced 1.5. Figure Fig-1c.2, ’ve marked red points contour plot give output simplified function.point along red line corresponds specific value input #1. contours, can read output corresponding values input #1. relationship, output versus input #1 can drawn mathematical graph (right contour plot). Study graph can see rising falling parts graph correspond contours crossed red line.Slices can taken direction even along curved path! blue line slice constructed letting input #2 vary holding input #1 constant value 0.","code":""},{"path":"graphs-and-graphics.html","id":"creating-graphics","chapter":"5 Graphics & function graphs","heading":"5.10 Creating graphics","text":"[F-32-R] Use slice_plot(), contour_plot(), domain() functions R/mosaic.CONTENT YETWe’ve created function named \\(\\mbox{twins}(x,y)\\) help practice making contour plots. ’ll need open sandbox draw plot.scaffolding command:Q-6: domain plot large enough show mountain next deep hole. domains job?domain(x=c(-5, 5), y=c(-5, 5) (+) []domain(x=c(-5, 5), y=c(-5, 5) (+) []domain(x=c(1, 5), y=c(1, 5) [shows mountain, hole.]domain(x=c(1, 5), y=c(1, 5) [shows mountain, hole.]domain(x=c(1,1), y=c(-1,1))) [hole shown, none mountain.]domain(x=c(1,1), y=c(-1,1))) [hole shown, none mountain.]domain(x=c(5,10), y=c(0,10))) [’s hardly anything going domain. function pretty flat except dip lower left.]domain(x=c(5,10), y=c(0,10))) [’s hardly anything going domain. function pretty flat except dip lower left.]different sandbox (can still see contour plot first sandbox), draw slice function along line \\(y=0\\). Use \\(x\\)-domain correct answer previous question.Q-7: expressions accomplish task?slice_plot(twins(x, y=0) ~ x, domain(x=c(-5,5))) (+) []slice_plot(twins(x, y=0) ~ x, domain(x=c(-5,5))) (+) []slice_plot(twins(x) ~ x, domain(y=c(-5, 5))) [domain \\(x\\), \\(y\\). twins() takes two inputs, even one fixed zero.]slice_plot(twins(x) ~ x, domain(y=c(-5, 5))) [domain \\(x\\), \\(y\\). twins() takes two inputs, even one fixed zero.]slice_plot(twins(x, y=0) ~ x, domain(x=c(-5, 5), y=c(-5, 5))) [slice plot domain includes one input.]slice_plot(twins(x, y=0) ~ x, domain(x=c(-5, 5), y=c(-5, 5))) [slice plot domain includes one input.]slice_plot(twins(x, y=0) ~ x + y, domain(x=c(-5, 5), y=c(-5, 5))) [slice plot one input right side tilde expression.]slice_plot(twins(x, y=0) ~ x + y, domain(x=c(-5, 5), y=c(-5, 5))) [slice plot one input right side tilde expression.]","code":"\ntwins <- mosaic::rfun(~ x + y, seed = 302, n=5)\ncontour_plot(twins(x, y) ~ x + y, domain(x=c(0,1), y=c(-1,1)))twins <- mosaic::rfun(~ x + y, seed = 302, n=5)\nslice_plot(__tilde-expression__, __domain__)"},{"path":"params-intro.html","id":"params-intro","chapter":"6 Parameters for functions","heading":"6 Parameters for functions","text":"naked modeling functions provide modeler collection shapes. yet fully suited represent real-world phenomena. illustrate, consider Figure 6.1 shows number officially confirmed cases March 2020.outbreak widely described “exponential,” alongside data Figure 6.1 shows function \\(e^x\\).\nFigure 6.1: Cumulative confirmed COVID-19 cases month March, 2020. red curve \\(e^x\\)\n’s obvious mismatch data function \\(e^x\\). mean COVID pattern exponential?hint comes formula \\(e^x\\). \\(x\\)? Plotted graph, \\(x\\) calender day March. shouldn’t \\(x\\) given hours minutes weeks?want input \\(\\exp()\\) hours, can multiply \\(x\\) 24. input weeks, multiplier \\(\\frac{1}{7} = 0.1429\\). cases, function \\(e^{kx}\\), \\(k\\) 24 hours 0.1429 weeks. Exploring bit, found \\(0.3 \\leq k < 0.5\\) produce functions graphs match data much better naked \\(e^x\\).\nFigure 6.2: COVID-19 data compared exponential functions \\(e^{kt}\\). variety possible numerical values \\(k\\) shown.\nmultiplier \\(k\\) \\(e^{kx}\\) called parameter function: number can use set scale input. use exponential function model COVID, ’ve stretch red curve Figure 6.2 clothing naked \\(x\\) \\(k x\\). Perhaps ’s matter personal choice size \\(k\\) best suited model data.personal choice \\(k=0.30\\). reasoning? orange curve parallels COVID data. flaw \\(k=0.30\\) curve lags several data several days. can fix pulling \\(k=0.30\\) curve left. Mathematically can accomplished subtracting days \\(x\\) multiplying \\(k\\), , using function \\[f(x) \\equiv e^{k(x-s)}\\] \\(s\\) stands shift.Figure 6.3 shows orange curve pulling 10 days left. ’s now pretty good match data.\nFigure 6.3: COVID-19 data compared exponential functions \\(e^{k(t-s)}\\).\nNote ’ve aligned orange curve horizontally, seems curve much. green curve much better. much gentler curve, \\(k=0.19\\) pulled little month left.parameterizing exponential function \\(e^{k(x-s)}\\) finding suitable values \\(k\\) \\(s\\), get good match March data. models can sometimes tell us . green curve Figure 6.3 value \\(s\\) -32 days. 32 days March 1 late January. even though didn’t January February data base green curve , late January 2020 regarded beginning outbreak.","code":""},{"path":"params-intro.html","id":"parallel-scales","chapter":"6 Parameters for functions","heading":"6.1 Parallel scales","text":"graphical format using display functions one variable places input horizontal axis output vertical axis. way draw function. Consider everyday objects: thermometer ruler.     object presents read-’s measured—temperature length—two different scales. time, objects provide way convert one scale another.function gives output given input. represent input value position number line—call “axis”—output position another output line, almost always drawn perpendicular one another. two number lines can just well parallel one another. evaluate function, find input value input scale read corresponding output. inverse function can evaluated just easily: switch roles input output scales.Taking traditional unit scale input metric scale output, two functions implemented objects :\n\\[\\underbrace{C(F) = \\frac{5}{9}(F-32)}_\\mbox{Fahrenheit Celcius}\\ \\ \\ \\text{}\\ \\ \\ \\ \\underbrace{\\text{cm(inches)} = 2.54 \\times (\\text{inches}-0}_\\mbox{inches cm})\\]\nsimple, straight-line functions, play important role modeling.conversion function can written form \\(h(x) \\equiv m (x - x_0)\\). course, multiply \\(m\\) terms parentheses, get \\(h(x) = m x - m x_0\\) can written even simply \\(mx + b\\) setting \\(b\\equiv m x_0\\). conversion function simply straight-line function.\\(m\\) \\(x_0\\) parameters straight-line function. terms graph straight-line function, slope x-intercept respectively.Often, functions can parameterized ways. instance, likely learned parameterization \\(m x + b\\), \\(m\\) (still) slope graph \\(b\\) now y-intercept.can call \\(m(x - x_0)\\) “x-intercept parameterization” \\(m x + b\\) \"y-intercept parameterization. equivalent equally good ways parameterizing straight line. still ways parameterizing, style reflecting format specifying two points make line.turn naked modeling function basic modeling function use \\(h()\\) convert input applying naked function.can see, straight-line function fundamental part modeling.illustrate link basic modeling functions naked progenitors, Figure 6.4 shows model fit COVID-19 data:\nFigure 6.4: graph naked modeling exponential additional scale displayed (red) match COVID-19 data\nfunction drawn simply \\(e^x\\): naked. black horizontal scale shows \\(x\\). match function data, , show basic modeling function, simply add new scale translates \\(x\\) “day March.” ’s red scale. , March 22, 25,000 COVID cases date.naked modeling function give good model COVID case numbers. scale input applying naked function, effectively laying new axis, stretched shifted original, let’s us read number cases.Input scaling empowers naked modeling functions model huge variety phenomena. ’s just one exponential function always looks exactly . huge variety ways scale input. input scaling, naked modeling function puts clothes becomes one basic modeling functions.\n\\[\\underbrace{e^x}_\\mbox{naked modeling function}\\ \\ \\ \\underbrace{e^{k(x-x_0)}}_\\mbox{basic modeling function}\\]\nstraight-line function \\(h()\\) written \\(k(x-x_0)\\) rather \\(m(x-x_0)\\). ’s traditional write basic modeling functions\nmay noticed uses \\(k\\) instead \\(m\\) multiplier straight-line function exponent. course, can use whatever name wish parameter. idiom mathematical notation several conventions. Knowing help read mathematics fluently.table shows . Often, multiple parameterizations.","code":""},{"path":"params-intro.html","id":"scale-the-output","chapter":"6 Parameters for functions","heading":"6.2 Scale the output","text":"Just natural input usually needs scaled reaches naked modeling function, output naked function may need scaled presents result suited interpreting real world.\nFigure 6.5: Natural quantities must scaled pure numbers suited naked modeling functions. output pure number scaled natural quantity interest.\noverall result input output scaling smartly dressed modeling function ready engage real world.parameter \\(C\\) often called baseline offset. Statisticians call “intercept,” plays role \\(b\\) straight-line function.working sinusoids, parameter \\(\\) called amplitude.course, ’re already familiar \\(\\) \\(b\\): slope intercept straight line.\nFigure 6.6: Baseline (blue), amplitude (red), period (green) sinusoid.\n\nFigure 6.7: baseline exponential horizontal asymptote.\nstraight-line function like penguin: even ’s naked, ’s still fully dressed!Now can let little secret. along, straight-line function dressed, naked. actual naked form simple can confusing:\\[\\text{identity}(x) \\equiv x\\]\nClothing identity function scaling looks like :\\[ x \\underbrace{\\longrightarrow}_\\mbox{input scaling} k x + c \\underbrace{\\longrightarrow}_\\mbox{output scaling} (kx + c) + C\\]\nlittle bit algebra transforms scaled function concise form:\\[(kx + c) + C \\longrightarrow \\underbrace{Ak}_ax + \\underbrace{Ac + C}_b \\longrightarrow ax + b\\]\nstudents thoroughly explored straight-line function high-school studies, thought ill-advised start identity function.","code":""},{"path":"params-intro.html","id":"exercises-2","chapter":"6 Parameters for functions","heading":"Exercises","text":"Exercise 1: graphs shows two horizontal scales one basic modeling functions. horizontal scale (black red) corresponds naked modeling function?Exercise 2: Find straight-line function give value red scale point black scale.Exercise 3Each graph shows basic modeling function written style: \\(\\sin(r(t-t_0))\\). job estimate \\(t_0\\) \\(r\\).Exercise 4Find scaling function translates","code":"\nadd_scale(dnorm(x) ~ x, domain(x=c(-3,3)), 0.25, 10) %>%\n  gf_labs(y=\"output\", x=\"input\", title=\"Graph (A)\")\nadd_scale(pnorm(x, -3, .5) ~ x, domain(x=c(-6,0)), .5, -3) %>%\n  gf_labs(y=\"output\", x=\"input\", title=\"Graph (B)\")\nadd_scale(sin(2*pi*x/3+1) ~ x, domain(x=c(-2,10)), (2*pi)/3, 16/(2*pi)) %>%\n  gf_labs(y=\"output\", x=\"input\", title=\"Graph (C)\")\nadd_scale(exp(x) ~ x, domain(x=c(-2,2)), 3, 0)\nadd_scale(pnorm(x) ~ x, domain(x=c(-3, 3)), -1.5, 0)\nadd_scale(dnorm(x) ~ x, domain(x=c(-3, 3)), 2, -1)\nadd_scale(pnorm(x) ~ x, domain(x=c(-3, 3)), 1.5, 2)"},{"path":"process-of-modeling.html","id":"process-of-modeling","chapter":"7 Process of modeling","heading":"7 Process of modeling","text":"Seen abstractly, mathematical model, using term, set functions represent relationships inputs outputs.simple level, building model can short process:Develop understanding relationship want model. Often, part “understanding” pattern seen data.Choose function type—e.g. exponential, sinusoidal, sigmoid—think good match relationship.Find parameters scales function able accept real-world inputs generate real-world outputs.’s important distinguish two basic types model:Empirical models rooted observation data.Mechanistic models created applying fundamental laws physics, chemistry, .going put mechanistic models , two reasons. First, “fundamental laws physics, chemistry, ” often expressed concepts methods calculus. heading , point don’t yet know core concepts methods calculus. Second, students don’t make careful study “fundamental laws physics, chemistry, ” studied calculus. examples mechanistic models bit hollow point.process constructing model good match data called curve fitting, , generally, fitting model.","code":""},{"path":"process-of-modeling.html","id":"variations-from-scaling","chapter":"7 Process of modeling","heading":"7.1 Variations from scaling","text":"good place start building model pick one basic modeling functions. works surprisingly often. remind , seven basic modeling functions:straight-lineexponentialpower-lawlogarithmsinusoidhumpsigmoidIt helps making selection ready mind basic shape function families. review, revisit Section 5.3.Remember also , general, scale inputs scale output. means choose model family, don’t worry first numbers axes. (course, numbers critically important later process!) scaling , however, allow us consider variations shapes modeling functions. particular, input scaling lets us flip shape right--left. output scaling lets us flip shape top--bottom.\\(f(t)\\), basic shape\\(f(-t)\\), flipped right--left\\(-f(t)\\), flipped top--bottom\\(-f(-t)\\), flipped top--bottom right--leftFor functions sinusoid, flipping much use, since flipped sinusoid curve still sinusoid. Similarly, right--left flipped hump function shape original. straight-line function, flipping either sort accomplishes thing: changing sign slope.exponential function, two possible types flipping—right--left top--bottom—produce four different curves, exponential, shown Figure ??.\nFigure 7.1: Four variations exponential functions.\n\nFigure 7.2: Four variations exponential functions.\n\nFigure 7.3: Four variations exponential functions.\n\nFigure 7.4: Four variations exponential functions.\n","code":""},{"path":"process-of-modeling.html","id":"curve-fitting-an-exponential-function","chapter":"7 Process of modeling","heading":"7.2 Curve fitting an exponential function","text":"Figure 7.5 shows data collected Prof. Stan Wagon support making detailed mechanistic model everyday phenomenon: cooling mug hot beverage room temperature. mug started room temperature, measured 26 degrees C. time 0 poured boiling water kettle measured temperature water next hours.\nFigure 7.5: Stan’s data\ntask translate data form function takes time input returns temperature output. model useful , say, filling gaps data. instance, might want find temperature water immediately poured kettle mug.Looking data, one sees temperature decreases along curve: cooling fast first slowly. pattern flipped right--left exponential. (Figure ??(B)) can imagine exponential, \\(e^{kt} + C\\) suitable model form cooling water.remains find parameters \\(\\), \\(k\\), \\(C\\). general process curve-fitting exponential. Later, ’ll apply process specifically water-cooling situation.General process curve-fitting exponentialStep 0: Check data show exponential pattern one variations, namely smooth increase decrease leveling beyond value \\(t\\). isn’t true, reconsider whether using exponential function first place.Step 1 data show exponential growth exponential decay? ’s exponential growth, flat region Step 0 left \\(k\\) positive. exponential decay, flat region right \\(k\\) negative.Notice question “growth decay” depends sign parameter \\(k\\). can exponentially decaying process ’s increasing. Consider, instance, speed car merges onto highway slow speed entrance ramp. car’s velocity increasing, approach highway speed rate increase gets smaller. ’s exponential decay.Step 2 baseline? ’re going put aside \\(k\\) moment find value output approached asymptotically, , height level zone data. height coefficient \\(\\) linear combination.Step 3 know baseline, ’re set find numerical value parameter \\(k\\).Pick point data far baseline. Call input \\(t_1\\).Scan forward backward time find point data ’s vertically half way original point toward baseline. Call input point \\(t_{1/2}\\). difference , \\(t_1 - t_{1/2}\\) called half-life halving-time ’s negative doubling time ’s positive.parameter \\(k\\) \\(0.693 / (t_1 - t_{1/2})\\). Double check sign \\(k\\) make sure ’s consistent saw Step 1. (Incidently, \\(0.693 = \\ln(2)\\). 2 2 doubling halving.)Step 4 Now numerical values baseline \\(\\) parameter \\(k\\), calculating value \\(B\\) straightforward.\n. Pick \\(t_0\\) ’s reasonably well represented data. Find vertical coordinate represented data near \\(t_0\\). Call \\({\\cal D}\\).\nii. Solve respect \\(B\\) equation \\(+ B e^{k t_0} = {\\cal D}\\). Things particularly easy can use \\(t_0 = 0\\). just straight calculate \\(B = {\\cal D} - \\).Step 5 Plot function \\(+ B e^{k t}\\) using values \\(\\), \\(B\\), \\(t\\) just found. satisfied, tweak parameters bit .Exponential curve fitting applied water-cooling dataLet’s illustrate general process water-cooling data, redrawn Figure 7.6.\nFigure 7.6: cooling-water data, repeated convenience.\nStep 0: data indicate smooth curve. \\(t\\) gets large, curve approaches constant. exponential model reasonable.Step 1: flat zone data right. ’ve got exponential decay \\(k < 0\\).Step 2: curve looks like ’s leveling temperature 25 degrees C large \\(t\\). \\(\\approx 25^{\\circ} \\text{C}\\).Step 3:point furthest baseline located \\(t_1 = 15 \\text{sec}\\) value \\({\\cal D} \\approx 80^\\circ\\text{C}\\).\\(55^\\circ\\text{C}\\) baseline. want find value \\(t_1\\) temperature half way 80 baseline. ’s temperature \\(80 - 55/2 = 53.5\\). Scanning right, function can imagine going data crossed \\(53^\\circ\\) \\(t_{1/2} = 40\\). Thus, half-life estimated 25s.parameter \\(k\\) therefore $k\\(0.693 / \\mbox{half-life}) = - 0.63 / 25 = -0.0277\\). Since identified Step 1 exponential decay involved, expect \\(k\\) negative. .Step 4.know \\(\\approx 25\\) \\(k \\approx -0.0277\\). also now \\(t=15\\) function output \\({\\cal D} = 80^\\circ\\).means \\(25^\\circ + B e^{- 0.0277 \\times 15} \\approx 80^\\circ = 25 + 0.66 B\\). Solving \\(B\\) gives \\(B = (80 - 25)/0.66 = 83.3\\)Step 5. Graph function data.\nFigure 7.7: exponential function roughly aligns data.\n","code":""},{"path":"process-of-modeling.html","id":"curve-fitting-a-periodic-function","chapter":"7 Process of modeling","heading":"7.3 Curve fitting a periodic function","text":"","code":""},{"path":"process-of-modeling.html","id":"modeling-periodicity","chapter":"7 Process of modeling","heading":"7.4 Modeling periodicity","text":"[Fun-7a] Know parameter values sinusoidal function affect amplitude, period, phase shift, vertical shift (table page 185)[Fun-7b] Given sinusoidal graph, able estimate amplitude, period, phase shift, vertical shift (table page 185)[Fun-7c] Recognize sinusoidal model appropriate.Figure ?? shows tide level Providence, Rhode Island, starting midnight April 1, 2020 recorded every minute four half days. (data collected US National Oceanic Atmospheric Administration. Link)\nFigure 7.8: four days tide-level data Providence, Rhode Island\n’s hard see ’s going . tide rises falls every 12 hours. difference high tide low tide little one meter. tide gauge calibrated typical reading 1 meter, although don’t know respect . (Certainly sea level, since typical reading around zero.)simple description tells almost everything needed construct /B model tide level using sinusoid, , function form \\[+ B \\sin(2\\pi t/P)\\] procedure straightforward:Step 0: Determine whether sinusoid model appropriate. know, sinusoids oscillate repeatedly steady period. certainly seems case . sinusoids also steady peak trough values cycle. ’s approximately true Providence data. Models inevitably involve approximation. ’ll keep eye whether fixed amplitude feature sinusoidsStep 1: Choose sensible value represent low point repeatedly reached. 0.5 m seems appropriate , obviously exact position trough cycle varies 4.5 day duration data. Similarly, peak near 1.6 m. Parameter \\(\\) mean peak trough values: \\(\\frac{1.6 + 0.5}{2} = 1.05\\) m . Parameter \\(B\\) half difference peak trough values: \\(\\frac{1.6 - 0.5}{2} = 0.55\\). Parameter \\(\\) called baseline sinusoid. Paramter \\(B\\) amplitude. (Note convention, amplitude always half high--low range sinusoid.)Step 2: Estimate period \\(P\\) sinusoid. can done ruler: horizontal duration complete cycle. like use time peaks, time troughs work just well. Another good choice time positive sloping crossings baseline. (careful. time successive baseline crossings, one positive sloping negative, give just half period.)scale plot, ’s hard read time first peak. , zoom becomes obvious.\nFigure 7.9: Zooming start data (left) last part data (right).\nleft panel Figure 7.9 shows 24 hours start record. first peak 7 hours, second 18 hours. indicates period 18 - 7 = 11 hours.Step 3 Plot model data. Replacing symbols \\(\\), \\(B\\), \\(P\\) estimates, model \\[\\require{color}\n{\\color{green}\\mbox{tide}(t) \\equiv 1.05 + 0.55 \\sin(2\\pi t/11)}\\]Figure 7.10 shows model \\(\\color{green}\\mbox{green}\\).\nFigure 7.10: sinusoid fails align timing peaks troughs.\n","code":""},{"path":"process-of-modeling.html","id":"the-modeling-cycle","chapter":"7 Process of modeling","heading":"7.5 The modeling cycle","text":"Need intro explaining cycle","code":""},{"path":"process-of-modeling.html","id":"example-cooling-water","chapter":"7 Process of modeling","heading":"7.5.1 Example: Cooling water","text":"looks like estimate half-life bit small; data doesn’t seem decay rate implied \\(k = -0.0277\\). Perhaps try \\(k = -0.2\\) go .EXERCISE: try \\(k=0.02\\) iterate get something like.Later CalcZ, ’ll study optimization. optimization techniques directing computer refine parameters best match data. Just illustrate, ’s get:\nFigure 7.11: Polishing fit using rough model starting point.\nrefined parameters give much better fit data original rough estimates eye.two rounds modeling cycle. First, choice /B expontential model rough estimate parameters , B, \\(k\\). Second, refinement parameters using computer.Looking results second round, experienced modeler can see disturbing discrepancies. First, estimated baseline appears high. Related, initial decay model function doesn’t seem fast enough decay model function large \\(t\\) appears slow. Prof. Stan Wagon noticed . used additional data fill gaps small \\(t\\) refined model changing basis functions linear combination. hypothesized least two different cooling processes. First, newly poured water raises temperature mug . Since water mug direct contact, fast process. , complete water/mug unit comes slowly equilibrium room temperature.newly refined model even better match data. nothing’s perfect Prof. Wagon saw opportunity additional refinement based idea third physical mechanism cooling: evaporation surface hot water. Prof. Wagon’s additional circuits modeling cycle appropriate purpose, develop detailed understanding process cooling. purposes, demonstrating appropriateness exponential process interpolating data points, earlier cycles might sufficed.’s graph model Prof. Wagon constructed match data.\nFigure 7.12: model combines three exponentials provides excellent fit.\nexcellent match data. … matching data isn’t always goal modeling. Prof. Wagon wanted make sure model physically plausible. looking refined parameters, include two exponential processes parameters \\(k_1\\) \\(k_2\\), saw something wrong:can make \\(k_1\\), whose [positive value] violates laws thermodynamics suggesting water gets hotter virtue presence cool air? likely problem simple model (proportionality assumption) adequate near boiling point. many complicated factors affect heat transportation, air movement, boundary layer dissipation, diffusion, use single linear relationship appears inadequate. next section [paper] suggest experiments, also hope experiments might inspire readers come better mathematical model.modeling cycle can go round round!","code":"\nrefined_params <- \n  fitModel(temp ~ A + B*exp(k*time), data = Stans_data, \n           start = list(A = 25, B = 83.3, k = -0.0277))\ncoef(refined_params)##           A           B           k \n## 25.92628463 60.69255269 -0.01892572\nnew_f <- makeFun(refined_params)\ngf_point(temp ~ time, data = Stans_data) %>%\n  slice_plot(new_f(time) ~ time, color=\"blue\")"},{"path":"process-of-modeling.html","id":"example-the-tides","chapter":"7 Process of modeling","heading":"7.5.2 Example: The tides","text":"Step 4: Evaluate refine. green model make poor predictions. model says “high tide” data say otherwise. ’s missing phase sinusoid. model incorporates phase \\[{\\color{blue}\\mbox{tide}(t) \\equiv 1.05 + 0.55 \\sin(2\\pi (t - t_0)/11)}\\]new parameter, \\(t_0\\), set time positive-going crossing baseline. ’s crossing time = 17. Happily, changing phase necessitate re-estimating parameters: baseline, amplitude, period. model, incorporating phase, graphed \\(\\color{blue}\\mbox{blue}\\).\nFigure 7.13: Shifting phase sinusoid gives flexibility needed align peaks troughs model data. Performing alignment one peak makes clear period wrong.\nmodeling purposes, prediction future tides, phase information impossible. others, say, description amplitude tides, . getting phase roughly right can help point problems. instance, blue sinusoid comparison makes clear estimated period 11 hours short. Maybe 13 hours better. Better still, since \\(t=t_0 = 17\\) model close match data, let’s use estimate start cycle. , let’s move much along data find another baseline crossing. judge right panel, baseline crossing \\(t=103\\). difference two times \\(103 - 17 = 86\\) hours. course, period 86 hours. Looking back whole set data can see 7 complete cycles \\(t=17\\) \\(t=103\\). new estimate period \\(86/7 = 12.3\\) hours.refinement model \n\\[{\\color{violet}\\mbox{tide}(t) \\equiv 1.05 + 0.55 \\sin(2\\pi (t - 17)/12.3)}\\]\nFigure 7.14: phase right, better estimate can made period: 12.3 hours.\n’s pretty good match data! might call quits . First, let’s polish parameter estimates, letting computer tedious work trying little tweaks see can improve fit.\nFigure 7.15: Polishing parameters sinusoid\nlast model seems capable making reasonable predictions, collected --date data might able fit new model predict tide level pretty accurately days ahead time. Also, excellent alignment model peaks data tell us cyclic tide period constant, least far well can tell.period estimate \\(P=12.56\\) hours, can go looking phenomena might account tides. period day-night cycle , course 24 hours. tides Providence come twice day. exactly. Something else must going .Isaac Newton first propose tides caused gravitational attraction Moon. complete cycle Moon—moon rise moon rise—takes 50 minutes longer full day: Earth revolves every 24 hours, time Moon moved bit orbit Earth. Moon’s period, seen fixed place Earth 24.8 hours. Half , 12.4 hours, awfully close estimate tidal period: 12.56 hours. difference periods, 8 minutes day, might hard observe 4 days. Maybe data ’d get better match tides moon.modeling cycle work: Propose model form (/B model sinusoid), adjust parameters match know (Providence tide record), compare model data, observe discrepancies, propose refined model. can stop model giving need. period 12.56 hour model seems good enough make prediction tide level days ahead, certainly better “two tides day” model. model yet able implicate precisely Moon’s orbit tidal oscillations.Discrepancies model data play two roles: help us decide model fit purpose mind can point way improved models. tidal data deviates steady amplitude model can clue look next. ’s always obvious lead.Historically, careful analysis tides led highly detailed, highly accurate model: linear combination sinusoids diurnal periods 12.42, 12.00, 12.66, 11.97 hours well components period 23.93, 25.82, 24.07, 26.87, 24.00 hours. tide-prediction model constructed finding coefficients linear combination; differ locale locale.","code":"\ntide_mod <- \n  fitModel(level ~ A + B*sin(2*pi*(hour-hzero)/P),\n  data = RI_tide,\n  start=list(A=1.05, B=0.55, hzero=17, P=12.3))\ncoef(tide_mod)##          A          B      hzero          P \n##  1.0220540  0.4998367 15.3899905 12.5593556"},{"path":"fun-slopes.html","id":"fun-slopes","chapter":"8 Slope function","heading":"8 Slope function","text":"purposes, definition calculus isThe use functions model explore continuous changeThe agenda chapter give specific mathematical meaning word “change.”","code":""},{"path":"fun-slopes.html","id":"change-and-slope","chapter":"8 Slope function","heading":"8.1 Change and slope","text":"solid, intuitive sense “change” means. mathematics, especially mathematics functions, change simple meaning already touched previous math education.word encapsulates “change” high-school math slope. instance, ’ve undoubtedly calculate slope straight line graph. learned “rise” “run” read graph formula. slope ratio: rise run.Slope lovely metaphor change, since everyone intuitive sense slope road hillside. learned apply intuition reading graphs slope line. ’ll exploit intuitive ability read landscape order introduce abstract mathematical ideas --earth setting. ’s effective pedagogical strategy.everything changes “slope.” instance, population country can change, can number new cases epidemic disease, temperature cup coffee, distance Earth spacecraft. major part learning calculus generalizing abstracting mathematical concept “slope” example becoming proficient mathematical procedures working change.","code":""},{"path":"fun-slopes.html","id":"continuous-change","chapter":"8 Slope function","heading":"8.2 Continuous change","text":"people comfortable ideas daily changes temperature monthly changes credit-card debt quarterly changes unemployment rate annual changes height child. things easy record , say, spreadsheet. example, write, weather forecast next several days (southeastern Colorado mid-May) isSuch data said discrete. day listed, time day. high temperature forecast, time high. “description” also discrete, one several words used summarize quality weather, opposed quantity rain.Calculus continuous change. instance, weather bureau provide web interface let enter date time nearest fraction second, giving way track change continuously. Many physical processes intrinsically continuous, instance motion (change position) spacecraft height tide stress tree function wind velocity.Finding language describe continuous change—famously, position moon planets orbit, speed ball rolling ramp—central emergence historians call “Age Enlightenment” “modern scientific method.” first complete presentation language published Isaac Newton based work 1660s. might guess, name language “calculus.”","code":""},{"path":"fun-slopes.html","id":"slope","chapter":"8 Slope function","heading":"8.3 Slope","text":"already know pretty much everything know straight-line function,Formula: \\(f(x) \\equiv x + b\\). parameters \\(\\) \\(b\\) “slope” “intercept” respectively. (precisely, \\(b\\) “y-intercept.” statistics modeling, ’s just “intercept.”)Formula: \\(f(x) \\equiv x + b\\). parameters \\(\\) \\(b\\) “slope” “intercept” respectively. (precisely, \\(b\\) “y-intercept.” statistics modeling, ’s just “intercept.”)Reading parameters graph: learned several ways equivalent. Maybe easiest read y-intercept graph. ’s \\(b\\). choose non-zero \\(x_1\\) read graph value \\(f(x_1)\\). slope simply \\[\\frac{f(x_1) - b}{x_0}\\]\ny-intercept method special case general method, two-point method, can use even y-intercept isn’t shown graph. Pick two specific values \\(x\\), ’ll call \\(x_0\\) \\(x_1\\). Evalate function input values compute rise run: \\[\\mbox{rise run} \\equiv \\frac{f(x_1) - f(x_0)}{x_1 - x_0}\\]\nrise run slope straight line.\ny-intercept method exactly two-point method \\(x_0 = 0\\).Reading parameters graph: learned several ways equivalent. Maybe easiest read y-intercept graph. ’s \\(b\\). choose non-zero \\(x_1\\) read graph value \\(f(x_1)\\). slope simply \\[\\frac{f(x_1) - b}{x_0}\\]y-intercept method special case general method, two-point method, can use even y-intercept isn’t shown graph. Pick two specific values \\(x\\), ’ll call \\(x_0\\) \\(x_1\\). Evalate function input values compute rise run: \\[\\mbox{rise run} \\equiv \\frac{f(x_1) - f(x_0)}{x_1 - x_0}\\]\nrise run slope straight line.y-intercept method exactly two-point method \\(x_0 = 0\\).Matching straight-line function data: might taught formally, basic process easy imitate. process called line fitting , statistics fields, linear regression.Matching straight-line function data: might taught formally, basic process easy imitate. process called line fitting , statistics fields, linear regression.","code":""},{"path":"fun-slopes.html","id":"the-fitted-line","chapter":"8 Slope function","heading":"8.4 The fitted line","text":"[Fun-4--1] Construct straight-line model fits data.illustrate line fitting, let’s return cooling mug water. Figure 8.1 shows data along dozen candidate straight line functions, one drawn color.\nFigure 8.1: candidate straight-line function models plotted top cooling water data. one(s) pick good matches data?\nstraight-line models much better match data others. blue-shaded functions pretty good fits, greenish functions maybe OK little sketchy, purple-shaded functions just horrible.Now know reasonable straight-line model looks like, find pretty easy draw one data graphics even remotely show straight-line pattern.Step 1: Draw reasonable straight-line data points.Step 2: Find parameters correspond line drew.","code":""},{"path":"fun-slopes.html","id":"average-rate-of-change","chapter":"8 Slope function","heading":"8.5 Average rate of change","text":"Since slope standard way representing relationship change, often use way summarizing function. illustrate, consider exponential model constructed match cooling-water data:\nFigure 8.2: exponential function previously matched cooling-water data. slope straight line connecting two points function graph average rate change interval.\ninterval \\([t_0, t_1]\\) rate water cools higher first lower end. average rate change single number summarizes whole interval.except straight-line models, average rate change depends interval chosen.working extensively change output value function input value changes.change output value function \\(f()\\) input changes \\(x = \\) \\(x = b\\) \\[f(x=b) - f(x=)\\] Notice talk change \\(x=\\) \\(x=b\\) subtract \\(f(x=)\\) \\(f(x=b)\\). change sometimes called rise value function. Rise always compares (subtraction) two output values corresponding two specific input values. Remember \\(\\) \\(b\\) stand specific numbers.change output value function \\(f()\\) input changes \\(x = \\) \\(x = b\\) \\[f(x=b) - f(x=)\\] Notice talk change \\(x=\\) \\(x=b\\) subtract \\(f(x=)\\) \\(f(x=b)\\). change sometimes called rise value function. Rise always compares (subtraction) two output values corresponding two specific input values. Remember \\(\\) \\(b\\) stand specific numbers.Corresponding idea change output \\(f(x=b) - f(x=)\\) change input value function \\(b - \\). often called run value input.Corresponding idea change output \\(f(x=b) - f(x=)\\) change input value function \\(b - \\). often called run value input.point graph function Cartesian coordinates \\((, f(x=))\\). example, graph function \\(f()\\) shown Graph includes points \\((1.0, 4.0)\\), \\((3.5, 3.0)\\). second coordinate output value provide first coordinate input value. nature \\(f()\\) function (defined graph) \\(f(x=1) \\equiv 4\\) \\(f(x=3.5) \\equiv 3\\).Q-8: True false: Graph , rise b positive.TRUE [\\(f(x=) > f(x=b)\\), rise \\(f(x=b) - f(x=)\\) negative.]TRUE [\\(f(x=) > f(x=b)\\), rise \\(f(x=b) - f(x=)\\) negative.]FALSE (+) []FALSE (+) []Q-9: True false: Graph , run \\(x=\\) \\(x=b\\) positive.TRUE (+) []TRUE (+) []FALSE [run relative positions \\(x=\\) \\(x=b\\) x-axis. Since \\(< b\\), run \\(x=\\) \\(x=b\\) positive.]FALSE [run relative positions \\(x=\\) \\(x=b\\) x-axis. Since \\(< b\\), run \\(x=\\) \\(x=b\\) positive.]Q-10: True false: Graph II, run b positive.TRUE (+) []TRUE (+) []FALSE [run relative positions b x-axis. Since left b, run b positive.]FALSE [run relative positions b x-axis. Since left b, run b positive.]Q-11: True false: Graph II, rise b positive.TRUE [Remember, rise \\(x=\\) \\(x=b\\) \\(f(x=b) - f(x=)\\)]TRUE [Remember, rise \\(x=\\) \\(x=b\\) \\(f(x=b) - f(x=)\\)]FALSE (+) []FALSE (+) []Q-12: True false: Graph II, run b c positive.TRUE [run \\(x=b\\) \\(x=c\\) \\(c - b\\). Since \\(b>c\\) b c negative.]TRUE [run \\(x=b\\) \\(x=c\\) \\(c - b\\). Since \\(b>c\\) b c negative.]FALSE (+) []FALSE (+) []Q-13: True false: Graph II, rise b c positive.TRUE (+) []TRUE (+) []FALSE [rise \\(x=b\\) \\(x=c\\) \\(f(x = c) - f(x = b)\\). Since \\(f(x=c) > f(x=b)\\), rise positive.]FALSE [rise \\(x=b\\) \\(x=c\\) \\(f(x = c) - f(x = b)\\). Since \\(f(x=c) > f(x=b)\\), rise positive.]Q-14: interval [2, 6] value run? (answer independent particular graph/function.)4 (+) [run always second number interval minus first number. ’s \\(6 - 2\\) .]4 (+) [run always second number interval minus first number. ’s \\(6 - 2\\) .]-4 [got backwards! second number interval, 6, numerically right 2, run positive.]-4 [got backwards! second number interval, 6, numerically right 2, run positive.]Q-15: run interval [6, 2]? (, answer independent particular graph/function.)4 [Sorry. run \\(x=6\\) \\(x=2\\) \\(2 - 6\\) \\(-4\\).]4 [Sorry. run \\(x=6\\) \\(x=2\\) \\(2 - 6\\) \\(-4\\).]-4 (+) [run \\(2 - 6\\), second number interval minus first number.]-4 (+) [run \\(2 - 6\\), second number interval minus first number.]graph Figure 8.2, compute average rate change interval \\(10 \\leq t \\leq 200\\). compare average rate change interval \\(10 \\leq t \\leq 125\\)?Open R sandbox. can use function definitions help calculations.Using R, compute average rate change function given interval. Choose closest answer problem.Q-16: \\(f(x) \\equiv 2 e^{x+1}\\) [-2, 2]-2.99 []-2.99 []1.54 []1.54 []2.72 []2.72 []4.68 []4.68 []9.85 (+) []9.85 (+) []11.32 []11.32 []Q-17: \\(g(x) \\equiv 3 e^{-x}\\) [-1, 1.5]-2.99 (+) []-2.99 (+) []1.54 []1.54 []2.72 []2.72 []4.68 []4.68 []9.85 []9.85 []11.32 []11.32 []Q-18: \\(h(x) \\equiv x e^x\\) [0, 1]-3 []-3 []1.54 []1.54 []2.72 (+) []2.72 (+) []4.68 []4.68 []9.85 []9.85 []11.32 []11.32 []’s much less work use R function c() define interval, R function diff() calculate differences. next sandbox contains example asking compute average rate change \\(f(x) \\equiv e^x\\) interval [0, 4]. need lines 1, 3, 5. lines show intermediate results help understand diff() .Q-19: MMAC 4.1.61: True false: average rate change \\(f(x) \\equiv e^{x^2}\\) [0.0, 0.1] 0.1005017TRUE (+) []TRUE (+) []FALSE []FALSE []Q-20: MMAC 4.1.62: True false: average rate change \\(f(x) \\equiv \\log(x)\\) [2, 3] 0.5062353.\n(Hint: Change code interval variable goes 2 3 f becomes function \\(f(x) \\equiv \\log(x)\\))TRUE []TRUE []FALSE (+) []FALSE (+) []Q-21: MMAC 4.1.61: True false: average rate change \\(f(x) \\equiv \\sin(x)\\) [0.0, 0.5] 0.9588511TRUE (+) []TRUE (+) []FALSE []FALSE []Consider sinusoid function, graphed .Q-22: average rate change interval \\(0 < x < \\frac{1}{2}\\)? (Choose closest value.)0 [true, function output need two endpoints interval.]0 [true, function output need two endpoints interval.]0.5 [forget divide rise run?]0.5 [forget divide rise run?]1 (+) [Right. interval run 1/2. rise interval 0 1/2, rise 1/2. ]1 (+) [Right. interval run 1/2. rise interval 0 1/2, rise 1/2. ]:::Q-23: average rate change interval \\(0 < x < 6.25\\)? (Choose closest value.)-0.5 []-0.5 []0 (+) [Right. function output zero endpoints interval, rise zero. Hence, run zero.]0 (+) [Right. function output zero endpoints interval, rise zero. Hence, run zero.]0.5 []0.5 []Q-24: average rate change interval \\(0 < x < 10\\)? (Choose closest value.)-0.05 (+) [Right. rise -0.5 run 10.]-0.05 (+) [Right. rise -0.5 run 10.]-0.5 [“rise” interval, ’s average rate change. ’ll need divide rise another quantity get average rate change.]-0.5 [“rise” interval, ’s average rate change. ’ll need divide rise another quantity get average rate change.]0 []0 []0.5 [rise \\(f(10) - f(0) pprox -0.5 - 0 = -0.5\\). ’ve got sign wrong.]0.5 [rise \\(f(10) - f(0) pprox -0.5 - 0 = -0.5\\). ’ve got sign wrong.]following, compute average rate change function given interval.Q-25: average rate change \\(f(x) \\equiv x + 5\\) [3, 5] -2 [Remember, difference \\(x=3\\) 5 \\(f(5) - f(3)\\), way around. average rate change difference divided length interval.]-2 [Remember, difference \\(x=3\\) 5 \\(f(5) - f(3)\\), way around. average rate change difference divided length interval.]-1 [Remember, difference \\(x=3\\) 5 \\(f(5) - f(3)\\), way around. Similarly, length interval \\(x=3\\) 5 \\(5-3\\), \\(3-5\\).]-1 [Remember, difference \\(x=3\\) 5 \\(f(5) - f(3)\\), way around. Similarly, length interval \\(x=3\\) 5 \\(5-3\\), \\(3-5\\).]1 (+) [\\(f(x=5) = 10\\) \\(f(x=3) = 8\\), difference values 2. Since difference occurs interval length 2 (, #x=3$ 5), average rate change 2/2.]1 (+) [\\(f(x=5) = 10\\) \\(f(x=3) = 8\\), difference values 2. Since difference occurs interval length 2 (, #x=3$ 5), average rate change 2/2.]2 [sure took rate change rather simply change?]2 [sure took rate change rather simply change?]Q-26: average rate change \\(f(x) \\equiv 3 - 2 x\\) [-4, -2] -4 [total difference interval, rate change.]-4 [total difference interval, rate change.]-2 (+) [difference \\(x=-4\\) \\(-2\\) \\(f(-2) - f(-4) = (7) - (11) = -4\\). length interval \\((-2) - (-4) = 2\\). rate -4/2, just got.]-2 (+) [difference \\(x=-4\\) \\(-2\\) \\(f(-2) - f(-4) = (7) - (11) = -4\\). length interval \\((-2) - (-4) = 2\\). rate -4/2, just got.]0 []0 []1 [\\(x\\) changes two units, \\(f(x)\\) changes 4. rate change 4/2 = -2.]1 [\\(x\\) changes two units, \\(f(x)\\) changes 4. rate change 4/2 = -2.]2 [Check +/- signs.]2 [Check +/- signs.]4 [negative total difference interval, rate change. Also check +/- signs.]4 [negative total difference interval, rate change. Also check +/- signs.]Q-27: average rate change \\(f(x) \\equiv -3 x^2\\) [0, 4] -24 [Perhaps looking derivative \\(x=4\\) average rate change \\(x=0\\) 4.]-24 [Perhaps looking derivative \\(x=4\\) average rate change \\(x=0\\) 4.]-12 (+) [difference \\(f()\\) interval \\(f(4) - f(2) = (-48) - 0 = -48\\). length interval \\(4-0\\), average rate change interval \\((-48)/4 = -12\\).]-12 (+) [difference \\(f()\\) interval \\(f(4) - f(2) = (-48) - 0 = -48\\). length interval \\(4-0\\), average rate change interval \\((-48)/4 = -12\\).]0 [Perhaps looking derivative \\(x=0\\) average rate change \\(x=0\\) 4.]0 [Perhaps looking derivative \\(x=0\\) average rate change \\(x=0\\) 4.]1 []1 []2 []2 []12 [Check signs arithmetic.]12 [Check signs arithmetic.]24 []24 []Q-28: average rate change \\(f(x) \\equiv x^3 - 2 x + 1\\) [0, 2] -2 [Either check +/- signs perhaps looking derivative \\(x=0\\) average rate change \\(x=0\\) 2.]-2 [Either check +/- signs perhaps looking derivative \\(x=0\\) average rate change \\(x=0\\) 2.]1.5 []1.5 []2 (+) [difference \\(f()\\) interval \\(f(2) - f(0) = 5 - 1 = 4\\). length interval \\(2 - 0\\) average rate change \\(4/2 = 2\\). ]2 (+) [difference \\(f()\\) interval \\(f(2) - f(0) = 5 - 1 = 4\\). length interval \\(2 - 0\\) average rate change \\(4/2 = 2\\). ]7 []7 []10 [think looking derivative \\(x=2\\) rather average rate change 0 2.]10 [think looking derivative \\(x=2\\) rather average rate change 0 2.]","code":"\nwater <- makeFun(60.7*exp(-0.019*t) + 25.93 ~ t)\nf <- makeFun(2*exp(x+1) ~ x)\ng <- makeFun(3*exp(-x) ~ x)\nh <- makeFun(x*exp(x) ~ x)\ninterval <- c(0, 4)  # creates the interval\ndiff(interval)       # calculate the run\nf <- makeFun(exp(x) ~ x)   #  create the function\nf(interval)     # evaluate  function at the endpoints of  the interval\ndiff(f(interval)) / diff(interval)  # complete answer"},{"path":"fun-slopes.html","id":"instantaneous-rate-of-change","chapter":"8 Slope function","heading":"8.6 Instantaneous rate of change","text":"water cooling continuously. Sometimes ’ll interested rate change given instant \\(t_0\\). choose small interval, say \\([t_0, t_0 + 0.1]\\), ’ll get good approximation instantaneous rate change.\n\\[\\text{instantaneous rate change} = \\frac{f(t_0 + 0.1) - f(t_0)}{0.1}\\]graph, instantaneous rate change slope tangent line point, shown Figure 8.3.\nFigure 8.3: Instantaneous rate change slope line tangent curve single point.\nBlock 2, ’ll see good way define instantaneous rate change \\(t_0\\) average rate change interval \\(t_0 \\leq t \\leq t_1\\) proviso interval length \\(t_1 - t_0\\) goes closely can zero.Figure 8.4 shows fitted rate change average rate change interval \\(10 \\leq t \\leq 125\\) well instantaneous rate change \\(t_0 = 50\\). can see, different one another.\nFigure 8.4: Comparing average rate change (red) interval \\(10 \\leq t \\leq 125\\), instantaneous rate change \\(x_0 =25\\), fitted linear model (orange). exponential model shown gray.\n","code":""},{"path":"fun-slopes.html","id":"the-slope-function","chapter":"8 Slope function","heading":"8.7 The slope function","text":"way estimate instantaneous rate change function given input \\(t_0\\):\n\\[\\text{instantaneous_rate_of_change} \\equiv \\frac{f(t_0 + 0.1) - f(t_0)}{0.1}\\]\nNow ’ll let notation work us re-write instantaneous-rate--change function, ’ll call slope function.\n\\[\\text{slope}(t) \\equiv \\frac{f(t + 0.1) - f(t)}{0.1}\\]\n’ve merely made clear \\(\\text{slope}(t)\\) function written formula terms input \\(t\\) rather fixed number \\(t_0\\). course, “instantaneous rate change \\(t_0\\)” simply \\(\\text{slope}(t)\\).Let’s look slope function corresponds naked modeling functions: \\(e^x\\), \\(\\sin(x)\\), \\(x^{-1}\\) \\(\\ln(x)\\). Recall input naked functions always number. output number well. Thus can display function corresponding slope function coordinate frame. (true input quantity output another quantity.)\nFigure 8.5: Comparing naked modeling function (blue) ’s slope function (red)\nEXERCISE: web connections naked modeling functions slopes.Q-29: 1. naked modeling function slope function simply input-shifted version ?exponential []exponential []sinusoid (+) []sinusoid (+) []logarithm []logarithm []power-law \\(x^{-1}\\) []power-law \\(x^{-1}\\) []Q-30: 2. naked modeling function slope function identical ?exponential (+) []exponential (+) []sinusoid []sinusoid []logarithm []logarithm []power-law \\(x^{-1}\\) []power-law \\(x^{-1}\\) []Q-31: 3. naked modeling function slope function another naked modeling function? (Hint: function also shown set graphs.)exponential []exponential []sinusoid []sinusoid []logarithm (+) []logarithm (+) []power-law \\(x^{-1}\\)+ []power-law \\(x^{-1}\\)+ []defined “slope function” \n\\[\\text{slope}(t) \\equiv \\frac{f(t + 0.1) - f(t)}{0.1}\\]0.1 definition slope function definitely kluge. 0.1 minutes may small comes cooling water, might small contexts. ’ll fix Block 2 define derivative operator replaces 0.1 something small every context.","code":""},{"path":"fun-slopes.html","id":"to-be-turned-into-exercises","chapter":"8 Slope function","heading":"8.8 To be turned into exercises","text":"“Slope” natural metaphor thinking function graph. general way describe concept rate change output respect input. change output one end interval \\(f(x_1) - f(x_0)\\), change input \\(x_1 - x_0\\). input time (hours), output position car (miles), rate change miles-per-hour: car’s velocity.straight-line function—think car driving constant speed highway—doesn’t matter choose \\(x_1\\) \\(x_0\\) (long identical). functions, choice matter.Imagine graph position car along road Figure @ref{fig:stop--go}. course hour, car travelled 25 miles. words, average speed 25 miles/hour: slope red line segment. Given traffic, sometimes car stopped (time C), sometimes crawling (time D) sometimes much faster average (time B).interval B C, car travelling relatively fast. slope brown segment connecting position times B C average rate change times B C. ’s easy see average rate change B C larger overall average \\(t=0\\) \\(t=1\\). Calculating slope matter evaluating position endpoints dividing length interval.average rate change car’s position interval \\(t_B = 0.40\\) \\(t_C=0.54\\)?length interval \\(t_C - t_B = 0.54-0.40=0.14\\).Evaluating function gives \\(x(t_C) = 18\\) \\(x(t_B) = 12.6\\).Rise \\(x(t_C) - x(t_B) = 18 - 12.6 = 5.4\\).Run \\(t_C - t_B = 0.54-0.40=0.14\\).average rate change interval $5.4/0.14 = 38.6 $ miles/hour.graph shows simplified model amount usable wood can harvested typical tree managed forest Ponderosa Pine. (can see actual forestry research models .)writing business plan proposed pine forest. Among things, forecast revenue generated salable product.say “time money.” Every year wait harvest another year don’t money. hand, every year wait means wood end. decide harvest?tree continues grow year 50, seems reached equilibrium: perhaps growth goes zero, rot balances growth . ’s point waiting year 50.year 25, tree growing fast ever . ’ll get 600 board-feet lumber. harvest year 25? ! tree growing fast means lot wood year 26, 27, . time harvest growth getting smaller, ’s worth waiting extra year.quantity interest average rate growth seedling harvest. Harvesting year 25 give total change 600 board feet 25 years, giving average rate change \\(600 \\div 25 = 24 \\mbox{board-feet-per-year}\\). wait year 35, ’ll 900 board feet, giving average rate change \\(900 \\div 35 = 25.7 \\mbox{board-feet-per-year}\\).’ve presenting average rate change number: \\[\\frac{f(t_B) - f(t_A)}{t_B - t_A}\\]’s helpful think function takes two inputs, can call \\(t_A\\) \\(t_B\\):\n\\[\\text{ave_rate_of_change}(t_A, t_B) \\equiv \\frac{f(t_B) - f(t_A)}{t_B - t_A}\\]\nsubtle maneuver. formula exactly , writing quantities \\(t_A\\) \\(t_B\\) inputs (putting parentheses left side), turn formula function.Sometimes average-rate--change function presents information clear way.Back forest … ’s graph average-rate-change function. function two inputs, botany dictates can growing word time seedling planted. ’ll set \\(t_A = 0\\) look corresponding slice function:","code":""},{"path":"fun-assembling.html","id":"fun-assembling","chapter":"9 Assembling functions","heading":"9 Assembling functions","text":"need new function purpose, practically always build existing functions. instance, parameterized function like \\[\\sin\\left(\\frac{2 \\pi}{P}x\\right) + C\\] built assempling together straight-line input scaling, naked \\(\\sin()\\) function, another straight-line function scaling output \\(\\sin()\\).chapter, ’ll introduce three general frameworks combining functions: linear combination, composition, multiplication.","code":""},{"path":"fun-assembling.html","id":"linear-combination","chapter":"9 Assembling functions","heading":"9.1 Linear combination","text":"One widely used sorts combination called linear combination. mathematics linear combination , happens, core use math applications, whether constructing Google-like search engine analyzing medical data see treatment positive effect.’ve worked many years one kind linear combination: polynomials. doubt ’ve seen functions11 like \\[f(x) \\equiv 3 x^2 + 5 x - 2\\]three modeling functions polynomial. case, polynomials generally, power-law functions: \\(g_0(x) \\equiv 1\\), \\(g_1(x) \\equiv x\\), \\(g_2(x) \\equiv x^2\\). functions defined, can write polynomial \\(f(x)\\) \\[f(x) \\equiv 3 g_2(x) + 5 g_1(x) - 2 g_0(x)\\]\nfunctions scaled quantity—3, 5, -2 example—scaled functions added . ’s linear combination; scale add. (Later, ’ll see scalars generally come units. might well metric polynomial equivalent traditional-unit polynomial. Just wait.)Notice said \\(g_0(x) \\equiv 1\\) power-law function. ? Since \\(x^0=1\\) \\(x\\), might equally well written \\(g_0(x) \\equiv x^0\\) visibly power-law function.’re just trying emphasize polynomial linear combination power-law functions, particular power-law functions whole-number, positive exponents. individual functions, say, \\(x^2\\) \\(x^5\\) called monomials. polynomial combination monomials, just like chemical polymer combination monomers.places seen linear combinations:parameterized sinusoid \\[\\sin\\left(\\frac{2 \\pi}{P}t\\right) + C\\] linear combination functions \\(h_1(t) \\equiv \\sin\\left(\\frac{2 \\pi}{P} t\\right)\\) \\(g_0(t) \\equiv 1\\). scalars \\(\\) \\(C\\).parameterized exponential \\[e^{kt} + C\\] functions combined \\(e^{kt}\\) \\(g_0(t) \\equiv 1\\). scalars , , \\(\\) \\(C\\).straight line function \\(x + b\\). functions combined \\(x\\) \\(1\\), scalars \\(\\) \\(b\\).Note neither parameterized exponential parameterized sinusoid polynomial.reasons us introducing linear combinations .see linear combinations everywhere know look .highly refined mathematical theory linear combinations gives us powerful ways think well computer software can quickly find best scalars use match input-output data.concept linear combination generalizes simple idea calling “scaling output.” now , ’ll use linear-combination terminology avoid narrower idea “scaling output.”Many physical systems described linear combinations. instance, motion vibrating molecule helicopter flight building shaken earthquake described terms simple “modes” linearly combined make entire motion. Earth, timbre musical instrument set scalars linear combination pure tones.Many modeling tasks can put framework choosing appropriate set simple functions combine (letting computer) figure best scalars use combination.Even better, automatic, reliable, fast algorithm finding scalars set functions combined match data closely possible. modeler just select functions used, computer can find coefficients. (’ll explore mathematics methods linear combinations, usually called linear algebra, Block 5.)Example: tides linear combination sinusoids.Example: Models inequalityLorenz curve: Connects (0,0) (1,1) never concave .power-law exponent 1 greater.linear combination power-laws scalars adding 1.Product two Lorenz curves Lorenz curve.\\((1 - (1-p)^\\alpha)\\)\\(p^\\beta\\left(1 - (1-p)^\\alpha\\right)\\)","code":""},{"path":"fun-assembling.html","id":"function-composition","chapter":"9 Assembling functions","heading":"9.2 Function composition","text":"compose two functions, \\(f(x)\\) \\(g(x)\\), means apply one functions output . “\\(f()\\) composed \\(g()\\)” means \\(f(g(x))\\). generally different “\\(g()\\) composed \\(f()\\)” means \\(g(f(x))\\).instance, suppose recorded outdoor temperature course day packaged function \\(\\mbox{AirTemp}(t)\\): temperature function time \\(t\\). digital thermometer uses degrees Celsius, want output units degrees Kelvin. conversion function \\[\\mbox{CtoK}(C) \\equiv C + 273.15\\]\nNotice CtoK() takes temperature input. , can write “Kelvin function time” \\[\\mbox{CtoK}\\left(\\mbox{AirTemp}(t)\\right)\\]\n’s important distinguish time \\(\\rightarrow\\) Kelvin function something looks much utterly different: \\(\\mbox{AirTemp}\\left(\\mbox{CtoK}(t)\\right)\\). matter arithmetic, can put time input CtoK(). completely different meaning terms real world. time measured hours, CtoK\\((t)\\) looking temperature eleven half days ago, instead temperature time \\(t\\).used \\(C\\) name input CtoK(). Shouldn’t something like \\(x\\) \\(y\\)?Keep mind names inputs function can anything whatsoever, long used consistently function algorithm. wanted, call first input function \\(x\\), matter \\(y\\) giraffe.point notation \\(\\mbox{CtoK}(C) \\equiv C + 273.15\\) make utterly clear \\(C\\) name ’re using input listing parentheses follow function name CtoK(). , unlike high-school notation, allows us great freedom choice names.can use freedom make easier communicate people. (remember, one people “future .”) used name \\(C\\) reinforce message CtoK() converts celsius kelvin, vice versa.simple, approximate formula length day (hours) function latitude \\(L\\) declination angle \\(\\delta\\) sun.\\[\\text{day_length}(L, \\delta) \\equiv \\frac{2}{15} \\arccos\\left(-\\tan(L)*\\tan(δ)\\right)\\]\ndeclination angle latitude point earth’s surface pierced imagined line connecting centers earth sun. summer solstice, \\(23.44^\\circ\\), longest day year.computer implement must look different, since \\(L\\) \\(\\delta\\) typically provided degrees tan() trigonometric functions computer languages expect units radians. conversion easy: \\(\\text{deg2rad}(d) \\equiv \\frac{\\pi}{180} d\\). conversion way \\(\\text{rad2deg}(r) \\equiv \\frac{180}{\\pi} r\\).order get day-length formula work computer, compose \\(\\tan()\\) function deg2rad(). output acos() radians, convert back degrees. Like :Q-32: Using R sandbox, calculate length day latitude \\(39^\\circ\\) longest day year, declination sun \\(23.44^\\circ\\). long ?13.9 hours []13.9 hours []14.7 hours (+) []14.7 hours (+) []14.9 hours []14.9 hours []15.1 hours []15.1 hours []Now make plot day length function day year. course, day_length(L, d) take day year account. ’s missing know declination sun function calendar day.’ll represent calendar day number \\(n\\) runs 0 start January 1st 365 end December 31. Given convention, declination sun isComposing day_length() delta_sun() (d argument ) get function day year n:Q-33: long day April Fools (\\(n=90\\)) Latitude 39N? (Use sandbox calculation.)12.38 hours (+) []12.38 hours (+) []12.59 hours []12.59 hours []12.64 hours []12.64 hours []12.74 hours []12.74 hours []","code":"\nday_length <- makeFun(\n  (2/15)*rad2deg(\n    acos(\n      -tan(deg2rad(L))*tan(deg2rad(d))\n    )\n  ) ~ L+d)\ndelta_sun <- makeFun(-23.44*cos((2*pi/365)*(n+10) ) ~ n)\nslice_plot(\n  day_length(39, delta_sun(n)) ~ n, \n  domain(n=c(0,365))\n  )"},{"path":"fun-assembling.html","id":"modeling-polynomial-1","chapter":"9 Assembling functions","heading":"9.3 The modeling polynomial","text":"Sometimes, order model simple relationship need build function whose graph simple, curving shape.simple surprisingly powerful approach use low-order polynomial. order polynomial highest exponent input. example, straight-line function, \\(g_1(x) \\equiv a_0 + a_1 x\\), first-order polynomial. quadratic, \\(g_2(x) \\equiv b_0 + b_1 x + b_2 x^2\\) second-order polynomial.Many modelers tempted extend technique third-, fourth-, fifth-order even higher. rarely worthwhile since second-, fourth-, sixth- higher-even-order monomials basically U-shape, like referee signalling touch-. Similarly, first-, third-, fifth- higher odd-order monomial similar  shapes.ofttimes better approach compose polynomial curved monotonic function, logarithm.Explain now using subscripts names scalars.","code":""},{"path":"fun-assembling.html","id":"tukeys-ladder-optional","chapter":"9 Assembling functions","heading":"9.4 Tukey’s ladder (optional)","text":"[[Tukey’s ladder]] Using simple straight line input composition /output composition. can get variety curve shapes using linear function.“Rule 72”quantitatively literate, systems showing exponential growth decay encountered almost every day usually presented “percent per year” rates. examples:Money. Credit card interest rates, bank interest rates, student loans. credit card might charge 18% per year, bank might pay 0.3% savings account, “subsidized” student loans often around 7%.Population. Statistics often given “growth rates” percent. instance, 2016-17, Colorado’s population grew estimated 1.39% Idaho 2.2%. Illinois’s population shrank 0.26%, Wyoming’s 0.47%.Prices. Inflation rates usually presented percent.Home prices medical costs. largest expenses encountered families typically grow. might hear statistic like, “Regional median home prices increased 10% last year,” “Health insurance rates increasing 7% year.”understanding long-term consequences growth decay, can helpful frame rate growth percentage, doubling time (halving time decay).Happily, formula calculating doubling (halving) time directly percentage growth (decay) rate. \\[n = \\frac{\\ln(2)}{\\ln(1 + r/100)}\\] \\(r\\) percent per year growth rate \\(n\\) number years doubling (halving).calculation head? Perhaps carry around card graph looking answer:Clearly, straight-line calculation going match doubling-time curve well. quadratic approximation? Let’s make one centered \\(r = 5\\). formula, quadratic approximations \\[n(r) \\approx + b (r - r_0) + c (r-r_0)^2/2\\]centering \\(r_0=5\\) value \\(\\) doubling_time(5), value \\(b\\) dr_doubling_time(5), value \\(c\\) drr_doubling_time(5).Q-34: 1) ’s numerical value \\(\\)?10.2 []10.2 []11 []11 []11.9 []11.9 []12.9 []12.9 []14.2 (+) []14.2 (+) []15.7 []15.7 []17.7 []17.7 []Q-35: 2) Just looking graph doubling_time(r) figure signs \\(b\\) \\(c\\). ?\\(b\\) positive \\(c\\) positive []\\(b\\) positive \\(c\\) positive []\\(b\\) negative \\(c\\) positive (+) []\\(b\\) negative \\(c\\) positive (+) []\\(b\\) negative \\(c\\) negative []\\(b\\) negative \\(c\\) negative []\\(b\\) positive \\(c\\) negative []\\(b\\) positive \\(c\\) negative []Q-36: 3) ’s numerical value \\(b\\)? (Hint: Use D() operator calculate derivative doubling_time() respect r. evaluate function \\(r=5\\).)-3.4 []-3.4 []-2.8 (+) []-2.8 (+) []-2.3 []-2.3 []2.3 []2.3 []2.8 []2.8 []3.4 []3.4 []Q-37: 4) ’s numerical value \\(c\\)? (Hint: , use D() find 2nd derivative respect r. evaluate function \\(r=5\\).-1.11 []-1.11 []-0.83 []-0.83 []-0.64 []-0.64 []0.64 []0.64 []0.83 []0.83 []1.11 (+) []1.11 (+) []Using numerical values \\(\\), \\(b\\) \\(c\\) just calculated, construct quadratic approximation function plot red top \\(n(r)\\) function. (Hint: Connect two slice_plot() commands pipe %>%. can give slice_plot() color = \"red\" argument.)Q-38: 5) Comparing actual \\(n(r)\\) quadratic approximation, domain \\(r\\) functions match pretty well? Choose best answers.\\(r \\[3,7]\\) (+) []\\(r \\[3,7]\\) (+) []\\(r \\[1,6]\\) []\\(r \\[1,6]\\) []\\(r \\[2, 10]\\) []\\(r \\[2, 10]\\) []\\(r \\[4, 10]\\) []\\(r \\[4, 10]\\) []’ve got quadratic approximation constructed derivatives \\(n(r)\\) hardly usable. couldn’t calculations head even , result limited domain relevance.Occasionally, simple functions give good approximation. one interest rates called “Rule 72”. function \\[n(r) \\approx 72 / r\\]. Plot Rule 72 function top actual \\(n(r)\\).Q-39: 6) Comparing actual \\(n(r)\\) Rule 72 function, domain \\(r\\) functions match pretty well? Choose best answers.\\(r \\[1,25]\\) (+) []\\(r \\[1,25]\\) (+) []\\(r \\[3,9]\\) []\\(r \\[3,9]\\) []\\(r \\[4, 15]\\) []\\(r \\[4, 15]\\) []\\(r \\[8, 30]\\) []\\(r \\[8, 30]\\) []Q-40: 6) Compare numerically actual \\(n(r)\\) Rule 72 function interest rate \\(r = 10\\) (per year). many years different two answers.0.007 years []0.007 years []0.07 years (+) []0.07 years (+) []0.7 years []0.7 years []7 years []7 years []exercises?Log transformation used car prices[[Perceived brightness loudness]] log scale.","code":"\ndoubling_time <- makeFun(log(2) / log(1 + r/100) ~ r)\nslice_plot(doubling_time(r) ~ r, domain(r = c(1,30))) "},{"path":"fun-assembling.html","id":"function-multiplication","chapter":"9 Assembling functions","heading":"9.5 Function multiplication","text":"third repertoire methods making new function old plain old multiplication. two functions \\(f(x)\\) \\(g(x)\\), product simply \\(f(x)g(x)\\).’s essential distinguish function multiplication function composition:\\[\\underbrace{f(x) g(x)}_\\mbox{multiplication}\\ \\ \\ \\ \\underbrace{f(g(x)) \\ \\ \\mbox{}\\ \\ \\ g(f(x))}_\\mbox{composition}\\]function composition, one functions—interior function applied overall input, \\(x\\) example. function gets input output partner.multiplication, functions applied input individually. outputs multiplied produce overall output.function composition, order functions matters: \\(f(g(x))\\) \\(g(f(x))\\) general completely different functions.function multiplication, order doesn’t matter multiplication commutative, , \\(\\) \\(b\\) quantities, \\(\\times b = b \\times \\).Transient vibrationA guitar string plucked produce note. note , course, vibrations air created vibrations string.plucking, note fades away. important model sinusoid (correct period correspond frequency note) times exponential.Function multiplication used often modeling ’ll see many modeling situations. ’s one example important physics communication: wave packet. Overall, wave packet localized oscillation Figure @ref{fig:wave-packet}.\nFigure 9.1: wave packet constructed multiplying sinusoid hump function.\nproduct two simple functions: hump times sinusoid.\nFigure 9.2: two components wave packet Figure 9.1\nEXERCISES: Say two kinds functions multiplied .Q-41: two basic modeling functions multiplied?sinusoid another sinusoid faster period. (+) []sinusoid another sinusoid faster period. (+) []hump sinusoid. []hump sinusoid. []sigmoidal function sinusoid. []sigmoidal function sinusoid. [][][]:::Q-42: period envelope?10 [’s true broad peaks overall function occur every 10 time units. sine wave two excursions zero every cycle, one positive one negative. period envelope 10, see amplitude faster sinusoid near zero every 5 time units.]10 [’s true broad peaks overall function occur every 10 time units. sine wave two excursions zero every cycle, one positive one negative. period envelope 10, see amplitude faster sinusoid near zero every 5 time units.]20 (+) []20 (+) []30 [, dips amplitude faster sign occur every 15 time units.]30 [, dips amplitude faster sign occur every 15 time units.]examples along lines.EXERCISE: Provide sigmoid series humps. Ask student sketch product.","code":""},{"path":"fun-assembling.html","id":"all-together-now","chapter":"9 Assembling functions","heading":"9.6 All together now!","text":"Two three techniques combining functions—linear combinations, function composition, function multiplication—can used function.Consider function length day\n\\[\\text{day_length}(L, \\delta) \\equiv \\frac{2}{15} \\arccos\\left(-\\tan(L)*\\tan(δ)\\right)\\]\n2/15 scaling output \\(\\arccos()\\). \\(\\arcos()\\) composed interior function scaled product two functions.","code":""},{"path":"fun-assembling.html","id":"exercises-3","chapter":"9 Assembling functions","heading":"9.7 Exercises","text":"’s common communications systems signal sine-wave carrier modulated another function. , carrier multiplied function: waveform(t) = modulator(t) \\(\\times\\) carrier(t).four examples sine period 2 units modulated another function, one modeling functions studied.Q-45: () sort function modulating carrier?exponential (+) []exponential (+) []hump []hump []sigmoid []sigmoid []sine []sine []Q-46: (B) sort function modulating carrier?exponential []exponential []hump (+) []hump (+) []sigmoid []sigmoid []sine []sine []:::Q-47: (C) sort function modulating carrier?exponential []exponential []hump []hump []sigmoid (+) []sigmoid (+) []sine []sine []Q-48: (D) sort function modulating carrier?exponential []exponential []hump []hump []sigmoid []sigmoid []sine (+) []sine (+) []One common measure quality life “life expectancy birth.” measure availability health care number physicians per 1000 people.question going examine whether life expectancy function availability health care , , kind function .data frame LifeExpectancyPhysicians contains official 2010 figures many countries life expectancy number physicians per 1000 population.Graph LifeExpectancy versus Physicians. Use linear axes, semi-log axes, log-log axes determine reasonable functional form. (Recall giving scale_y_log10() argument gf_refine() set y axis log scale, similarly x axis.)Using fitModel(), instructor found following model life-expectancy (’ll call L, years) function physicians-per-1000 people. (’ll call “doctor-density” short, D.)instructor’s model :\\[L(D) \\equiv 70.9 \\times D^{0.0683}\\]\nDefine function R graph data. Confirm reasonable match data. (, ’ve copied parameters wrong.)Q-49: kind function instructor’s proposed model?linear [straight line linear axes?]linear [straight line linear axes?]exponential [straight line semi-log axes?]exponential [straight line semi-log axes?]power-law (+) [C consonant, Chub]power-law (+) [C consonant, Chub]sigmoidal [S-shaped]sigmoidal [S-shaped]Q-50: According instructor’s model, ’s life expectancy physicians ?0 years (+) [believable, since (living) people physicians. power-law functional form always forces zero input zero output. maybe taken seriously.]0 years (+) [believable, since (living) people physicians. power-law functional form always forces zero input zero output. maybe taken seriously.]35 years []35 years []50 years []50 years []70 years []70 years []100 years []100 years []115 years []115 years []Q-51: According instructor’s model, life expectancy every person world physician? (Hint: Translate physicians/1000-people.)0 years []0 years []35 years []35 years []50 years []50 years []70 years []70 years []100 years []100 years []110 years+ (+) [probably starve death everybody physician! also unreasonable extrapolation.]110 years+ (+) [probably starve death everybody physician! also unreasonable extrapolation.]argued doctor-density function life expectancy rather way around. (seniors consume lot medical care.)Q-52: models agrees reasonably well data? (Hint: can plot model data.)\\(D(L) \\equiv 7.24\\times 10^{-19} \\times L^9.8\\) (+) []\\(D(L) \\equiv 7.24\\times 10^{-19} \\times L^9.8\\) (+) []\\(D(L) \\equiv 3.19 \\times L^{3.1}\\) []\\(D(L) \\equiv 3.19 \\times L^{3.1}\\) []\\(D(L) \\equiv 8.64 \\times L^{6.3}\\) []\\(D(L) \\equiv 8.64 \\times L^{6.3}\\) []\\(D(L) \\equiv 5.50 \\times L^{2.4}\\) []\\(D(L) \\equiv 5.50 \\times L^{2.4}\\) []question now whether function \\(D(L)\\) (previous question) good match data, equivalent function \\(L(D)\\) instructor first proposed.order compare , make functions input. Let’s say take \\(D(L)\\) algebraically find inverse ’ll call \\(D^{inv}(D)\\). inverse function takes input form D produces output form L.Using algebra, confirm \\[D^{inv}(D) \\equiv  70.9 \\times D^{1/9.8}\\]\nsandbox, plot instructor’s proposed model \\(L(D)\\) model \\(D^{inv}(D)\\) axes, along data. (’ll decide variable put horizontal axis, notation \\(L(D)\\) \\(D^{inv}(D)\\) give good clue.)Q-53: model, \\(L(D)\\) \\(D^{inv}(D)\\) better match data \\(D < 1\\)?\\(L(D)\\) (+) []\\(L(D)\\) (+) []\\(D^{inv}(D)\\) []\\(D^{inv}(D)\\) []function. []function. []Complex social phenomena, like life expectancy, … well, complex. Life expectancy depends many factors health care: nutrition, war, automobile safety, etc.Notice data countries highest life expectancies \\(D \\approx 3\\). yet, many countries \\(D \\approx 3\\) relatively low life expectancy. One reason inequality. many countries, urbanites live high standard people countryside little access health care reliably good nutrition, civil order, .EXERCISE: algebra composition hump function \\(e^{-\\frac{x^2}{2}}\\). Parabola nice starting point. want go zero asymptotically, \\(-\\infty\\). might seem tall order, exponential function .","code":"\ngf_point(LifeExpectancy ~ Physicians,\n         data = LifeExpectancyPhysicians) %>%\n  gf_refine()"},{"path":"outline-of-block-2.html","id":"outline-of-block-2","chapter":"Outline of Block 2","heading":"Outline of Block 2","text":"section development purposes . included released text.outline established May 17-19, 2021 working sessions USAFA. ’s copied directly Teams document. ’ve made modifications noted [[square brackets]] deletions bold face additions..Revisiting Calculating slope\nNTI:\nAdmin:\nSizeable quiz interlude\n\nOutcomes:\nCalculate slope given two points\nGiven graph function, identify graph slope function \\(s(x)\\)\nGiven graph slope function, identify features original function\n\nReadings: Chapter @ref{difference--change}\nRevisiting Calculating slopeNTI:Admin:\nSizeable quiz interlude\nSizeable quiz interludeOutcomes:\nCalculate slope given two points\nGiven graph function, identify graph slope function \\(s(x)\\)\nGiven graph slope function, identify features original function\nCalculate slope given two pointsGiven graph function, identify graph slope function \\(s(x)\\)Given graph slope function, identify features original functionReadings: Chapter @ref{difference--change}Derivatives\nNTI:\nExplain limits solution problem arbitrary \\(h\\) slope function\n\nTopics:\nShow different definitions slope function \\(s(x)\\) depend \\(h\\) selected\nDescribe derivative limit \\(h \\rightarrow 0\\)\nDerivatives basic modeling functions\nLinear properties derivatives\n[[Derivative number; differentiation operator]] **need introduce operators earlier.\nFunctions arguments R\nIntroduce notation: \\(f'\\), \\(\\frac{df}{dx}\\), \\(\\partial_x f(x)\\), [[$D_x f]]$\nIntroduce NaN Inf\n\nOutcomes:\nFind derivatives basic modeling functions\nKnow basic properties differentiation\nContinue working graphing derivative\n\nReadings: Chapter 11\nDerivativesNTI:\nExplain limits solution problem arbitrary \\(h\\) slope function\nExplain limits solution problem arbitrary \\(h\\) slope functionTopics:\nShow different definitions slope function \\(s(x)\\) depend \\(h\\) selected\nDescribe derivative limit \\(h \\rightarrow 0\\)\nDerivatives basic modeling functions\nLinear properties derivatives\n[[Derivative number; differentiation operator]] **need introduce operators earlier.\nFunctions arguments R\nIntroduce notation: \\(f'\\), \\(\\frac{df}{dx}\\), \\(\\partial_x f(x)\\), [[$D_x f]]$\nIntroduce NaN Inf\nShow different definitions slope function \\(s(x)\\) depend \\(h\\) selectedDescribe derivative limit \\(h \\rightarrow 0\\)Derivatives basic modeling functionsLinear properties derivatives[[Derivative number; differentiation operator]] **need introduce operators earlier.Functions arguments RIntroduce notation: \\(f'\\), \\(\\frac{df}{dx}\\), \\(\\partial_x f(x)\\), [[$D_x f]]$Introduce NaN InfOutcomes:\nFind derivatives basic modeling functions\nKnow basic properties differentiation\nContinue working graphing derivative\nFind derivatives basic modeling functionsKnow basic properties differentiationContinue working graphing derivativeReadings: Chapter 11Relationships functions derivatives Part \nNTIs:\nSplit students /B pairs. graph derivative. B can’t see graph, can talk . B sketch original function based information , can see B’s sketch. reveal answer.\n\nTopics:\nArgmax/Argmin\nMax/min\nCritical points\n\nOutcomes:\nDetermine function’s critical points graphically algebraically\nDetermine whether critical point max min\n\nReadings: 12. doesn’t take much introduce max min graphs, argmax argmin, critical points. reading can quite small.\nRelationships functions derivatives Part INTIs:\nSplit students /B pairs. graph derivative. B can’t see graph, can talk . B sketch original function based information , can see B’s sketch. reveal answer.\nSplit students /B pairs. graph derivative. B can’t see graph, can talk . B sketch original function based information , can see B’s sketch. reveal answer.Topics:\nArgmax/Argmin\nMax/min\nCritical points\nArgmax/ArgminMax/minCritical pointsOutcomes:\nDetermine function’s critical points graphically algebraically\nDetermine whether critical point max min\nDetermine function’s critical points graphically algebraicallyDetermine whether critical point max minReadings: 12. doesn’t take much introduce max min graphs, argmax argmin, critical points. reading can quite small.Relationships functions derivatives Part II\nNTI:\nCurvature. like cup, like frown\n2nd derivative indicates curvature\n\nTopics:\nSecond derivatives slope slope\nConcavity slope slope\n\nReadings: Chapter 12 previous days reading. Maybe add section chains derivatives, especially polynomials, showing eventually go zero.\nRelationships functions derivatives Part IINTI:\nCurvature. like cup, like frown\n2nd derivative indicates curvature\nCurvature. like cup, like frown2nd derivative indicates curvatureTopics:\nSecond derivatives slope slope\nConcavity slope slope\nSecond derivatives slope slopeConcavity slope slopeReadings: Chapter 12 previous days reading. Maybe add section chains derivatives, especially polynomials, showing eventually go zero.Relationships functions derivatives Part III\nTopics:\nKnowing \\(f'(x_0) = 0\\) tells min/max/saddle \\(x_0\\)\n2nd derivative distinguish three\nChain derivatives\n\nOutcomes:\nable find max/min, argmax/argmin given functions graphically.\n**Construct derivative function use findZeros() locate argmax evaluate function get corresponding max\n\nReadings Chapter 12 Still previous two days.\nRelationships functions derivatives Part IIITopics:\nKnowing \\(f'(x_0) = 0\\) tells min/max/saddle \\(x_0\\)\n2nd derivative distinguish three\nChain derivatives\nKnowing \\(f'(x_0) = 0\\) tells min/max/saddle \\(x_0\\)2nd derivative distinguish threeChain derivativesOutcomes:\nable find max/min, argmax/argmin given functions graphically.\n**Construct derivative function use findZeros() locate argmax evaluate function get corresponding max\nable find max/min, argmax/argmin given functions graphically.**Construct derivative function use findZeros() locate argmax evaluate function get corresponding maxReadings Chapter 12 Still previous two days.Continuity, Differentiability, Smoothness, Splines\nTopics:\nSpline piecewise function\nOrder continuity\nDetermine graphically whether function continuous \nDetermine order continuity function\n\nOutcomes\nable determine first derivative function continuous graph function\nable determine second derivative function continuous graph function (taking 1st derivative plotting )\nable demonstrate discontinuities 3rd derivative spline\n\nReadings\nContinuity, Differentiability, Smoothness, SplinesTopics:\nSpline piecewise function\nOrder continuity\nDetermine graphically whether function continuous \nDetermine order continuity function\nSpline piecewise functionOrder continuityDetermine graphically whether function continuous notDetermine order continuity functionOutcomes\nable determine first derivative function continuous graph function\nable determine second derivative function continuous graph function (taking 1st derivative plotting )\nable demonstrate discontinuities 3rd derivative spline\nable determine first derivative function continuous graph functionBe able determine second derivative function continuous graph function (taking 1st derivative plotting )able demonstrate discontinuities 3rd derivative splineReadingsDifferentiation Products Functions\nOutcomes\nIdentify necessary differentiate product rule\nFind derivative using product rule\n\nReadings\nDifferentiation Products FunctionsOutcomes\nIdentify necessary differentiate product rule\nFind derivative using product rule\nIdentify necessary differentiate product ruleFind derivative using product ruleReadingsDifferentiation Composite Functions\nTopics\nIdentifying composite function\nChain rule\n\nHomework: Save quotient rule HW\nOutcomes:\nIdentify necessary differentiate chain rule\nFind derivative using chain rule\n\nReadings\nDifferentiation Composite FunctionsTopics\nIdentifying composite function\nChain rule\nIdentifying composite functionChain ruleHomework: Save quotient rule HWOutcomes:\nIdentify necessary differentiate chain rule\nFind derivative using chain rule\nIdentify necessary differentiate chain ruleFind derivative using chain ruleReadingsPartial derivativesPartial derivativesLocal Polynomial Approximation\nNTI:\nKiller application Taylor polynomials Brook Taylor figured tools Newton developed\n\nTopics:\nList benefits approximation specifically benefits quadratic approximation opposed linear approximation\n[Average rate change] moved Block 1 slope function\nTangent Lines\nQuadratic equations\nFactorials\n\nReadings\nLocal Polynomial ApproximationNTI:\nKiller application Taylor polynomials Brook Taylor figured tools Newton developed\nKiller application Taylor polynomials Brook Taylor figured tools Newton developedTopics:\nList benefits approximation specifically benefits quadratic approximation opposed linear approximation\n[Average rate change] moved Block 1 slope function\nTangent Lines\nQuadratic equations\nFactorials\nList benefits approximation specifically benefits quadratic approximation opposed linear approximation[Average rate change] moved Block 1 slope functionTangent LinesQuadratic equationsFactorialsReadingsApproximation point\nNTI:\nR exercise constructing Taylor polynomial computationally\n\nOutcomes:\nCalculate Taylor polynomial\nUse Taylor polynomials simplify mathematical operations (derivatives, limits, etc.)\n\nApproximation pointNTI:\nR exercise constructing Taylor polynomial computationally\nR exercise constructing Taylor polynomial computationallyOutcomes:\nCalculate Taylor polynomial\nUse Taylor polynomials simplify mathematical operations (derivatives, limits, etc.)\nCalculate Taylor polynomialUse Taylor polynomials simplify mathematical operations (derivatives, limits, etc.)Note: don’t touch gradient . Provisionally, ’m moving gradients Block linear algebra.","code":""},{"path":"change-relationships.html","id":"change-relationships","chapter":"10 Change relationships","heading":"10 Change relationships","text":"questions started motion. words describe speed: fast slow. words describe force: strong weak, heavy light. words describe location: far near, long short. relationships among things? time fit , intangible quantity aspects location (long short) speed (quick slow)?Galileo (1564-1642) started ball rolling. son musician music theorist, sense musical time, steady beat intervals. student medicine Pisa, noted swinging pendulums kept reliable time, regardless amplitude swing. accidentally attending lecture geometry, turned mathematics natural philosophy. Inventing telescope, observations put collision course accepted classical truth nature planets. Seeking understand gravity, built apparatus enabled measure accurately position time ball rolling straight ramp. belled gates set mark ball’s passage spaced arithmetically musical time: 1, 2, 3, 4, …. distance gates geometric: 1, 4, 9, 16, …. Thus established mathematical relationship increments time increments position. Time advanced 1, 1, 1, 1, … position 1, 3, 5, 7, …. observed second increments position, increments increments 1, 3, 5, 7, …, evenly spaced: 2, 2, 2, ….Putting observations tabular form, adding columns thefirst increment \\(y(t) \\equiv x(t+1) - x(t)\\) thesecond increment \\(y(t+1) - y(t)\\)Galileo neither mathematics equipment measure motion continuously time. might obvious us now, position function time \\(x(t)\\), little practical significance . discover first increments \\(x\\) something much like slope function.\\[{\\cal D}_t\\, x(t) \\equiv \\frac{x(t + 1) - x(t)}{1}\\]\ndata, observed \\({\\cal D}_t\\, x(t)\\) increases linearly \\(t\\): \\[{\\cal D}_t x(t) = 2 t + 1\\]Calculating second increments \\(x\\) done “slope function slope function,” can call \\({\\cal D}_{tt}\\):\n\\[{\\cal D}_{tt} x \\equiv {\\cal D}_t \\left[{\\cal D}_t x(t)\\right] = 2(t+1) + 1 - (2 t + 1) = 2\\]Newton considered problem continuous time rather Galileo’s discrete time. reframed slope function big increments slope operator \\({\\cal D}_t\\) imagined vanishingly small increments operator shall denote \\(\\partial_t\\) call differentiation.kind question Newton wanted able calculate answer , “find function \\(x(t)\\) whose second increment, \\(\\partial_{tt} x(t) = 2\\)?” approach, called “method fluxions,” became important name became, simply, “Calculus.”next three centuries, calculus evolved set techniques describing motion general-purpose mathematics change. Applying calculus real world involves understanding change relationships quantities. give examples:Electrical power change respect time electrical energy.Birth rate one component change respect time population.Interest, bank interest credit card interest, change repect time assets.Inflation change respect time prices.Disease incidence one component change respect time disease prevalence.Force change respect position energy.question involves pair quantities function time might might quantity/rate--change pair. , say quantity . Feel free look dictionary definition words uncertain .Q-54: Deficit debtDeficit rate change debt respect time. (+) []Deficit rate change debt respect time. (+) []Debt rate change deficit respect time. []Debt rate change deficit respect time. []rate change pair. []rate change pair. []Q-55: water contained flowFlow rate change water contained respect time. (+) []Flow rate change water contained respect time. (+) []Water contained rate change flow respect time. []Water contained rate change flow respect time. []rate change pair. []rate change pair. []Q-56: Interest rate debt owed credit cardInterest rate rate change credit card debut respect time. (+) []Interest rate rate change credit card debut respect time. (+) []Credit card debut rate change interest rate respect time. []Credit card debut rate change interest rate respect time. []rate change pair. []rate change pair. []Q-57: Rain intensity total rainfallRain intensity rate change total rainfall respect time. (+) []Rain intensity rate change total rainfall respect time. (+) []Total rainfall rate change rain intensity respect time. []Total rainfall rate change rain intensity respect time. []rate change pair. []rate change pair. []Q-58: Force accelerationForce rate change acceleration respect time. []Force rate change acceleration respect time. []Acceleration rate change force respect time. []Acceleration rate change force respect time. []rate change pair. (+) [dimension force \\(ML/T^2\\). dimension acceleration \\(L/T^2\\). rate change respect time extra T denominator dimensions.]rate change pair. (+) [dimension force \\(ML/T^2\\). dimension acceleration \\(L/T^2\\). rate change respect time extra T denominator dimensions.]Q-59: Position accelerationPosition rate change acceleration repect time. []Position rate change acceleration repect time. []Acceleration rate change position respect time. []Acceleration rate change position respect time. []rate change pair. (+) [dimension position \\(L\\). dimension acceleration \\(L/T^2\\). rate change position dimension \\(L/T\\). ’s called ‘velocity’.]rate change pair. (+) [dimension position \\(L\\). dimension acceleration \\(L/T^2\\). rate change position dimension \\(L/T\\). ’s called ‘velocity’.]Q-60: Velocity air resistenceVelocity rate change air resistence repect time. []Velocity rate change air resistence repect time. []Air resistence rate change velocity respect time. []Air resistence rate change velocity respect time. []rate change pair. (+) [Air resistence force, dimension \\(M L/T^2\\). Velocity dimension \\(L/T\\). rate change velocity respect time acceleration, dimension \\(L/T^2\\).]rate change pair. (+) [Air resistence force, dimension \\(M L/T^2\\). Velocity dimension \\(L/T\\). rate change velocity respect time acceleration, dimension \\(L/T^2\\).]","code":""},{"path":"change-relationships.html","id":"slopes-and-increments.","chapter":"10 Change relationships","heading":"10.1 Slopes and increments.","text":"mathematical tools Newton’s day basis today’s conventional high-school curriculum.12 today completely different tools based ability arithmetic function evaluation quickly computers. ’re going use new tools explore problem relating slope-function operator \\({\\cal D}_t\\) differential operator \\(\\partial_t\\). great advantage able look backwards can focus functions experience reveals widely useful: basic modeling functions.goal section discover slope functions basic modeling functions. Recall slope-function operator can written ratio rise--run:\n\\[{\\cal D}_t x(t) \\equiv \\frac{x(t+h) - x(t)}{h}\\] \\(h\\) length “run.” ’ll start two basic modeling functions considerable “personality”: sinusoid (sin()) sigmoid (pnorm()).\nFigure 10.1: naked sinusoid sigmoidal functions. vertical blue line added mark input \\(t=0\\)\n’ll use computer construct slope functions sinusoid sigmoid, ’ll call Dsin() Dsigma() respectively.tilde expression handed makeFun(), ’ve identified t name input given “small” default value h parameter. R recognizes Dsin() Dsigma() functions two variables, t h, can see parenthesized argument list functions.nuisance, since using slope functions need always think h, number ’d like describe simply “small,” always need provide numerical value. Let’s look Dsin() Dsigma() range values h, Figure 10.2.\nFigure 10.2: slope functions sinusoid sigmoid. curve shows slope function particular numerical choice h. panels show \\(h=2, 1, 0.5, 0.1, 0.01, 0.001, 0.0001, 0.00001, 0.000001\\).\nobservations numerical experiment:\\(h\\) gets small, slope function doesn’t depend exact value \\(h\\).\nprovide way us, eventually, discard \\(h\\) slope function need \\(h\\) argument.\\(h\\) gets small, slope function doesn’t depend exact value \\(h\\).provide way us, eventually, discard \\(h\\) slope function need \\(h\\) argument.small \\(h\\), \\({\\cal D}_t \\sin(t) = \\sin(t + \\pi/2) = \\cos(t)\\). , taking slope function sinusoid gives another sinusoid, shifted left \\(\\pi/2\\) original. , plain words, cosine slope function sine.small \\(h\\), \\({\\cal D}_t \\sin(t) = \\sin(t + \\pi/2) = \\cos(t)\\). , taking slope function sinusoid gives another sinusoid, shifted left \\(\\pi/2\\) original. , plain words, cosine slope function sine.small \\(h\\), \\({\\cal D}_t \\text{pnorm}(t) = \\text{dnorm(t)}\\). , hump function slope function sigmoid function.small \\(h\\), \\({\\cal D}_t \\text{pnorm}(t) = \\text{dnorm(t)}\\). , hump function slope function sigmoid function.can confirm last two statements comparison original functions, especially alignment peaks slope functions respect peak sinusoid half-way point sigmoid.Now consider slope functions logarithm exponential functions.\nFigure 10.3: slope functions logarithm exponential.\nnumerical experiments logarithm exponential functions evidence , \\(h\\) gets small, slope function doesn’t depend \\(x\\). , find :small \\(h\\), slope function logarithm power-law function: \\({\\cal D}_t \\ln(t) = \\frac{1}{t}\\).small \\(h\\), slope function exponential exponential : \\({\\cal D}_t e^x = e^x\\).can confirm evaluating slope function exponential \\(t=0\\) \\(t=1\\), slope function logarithm \\(t= 2, 1, 1/2, 1/4, 1/8.\\)numerical experiments naked modeling functions reveal pattern: slope function naked modeling functions tend similar naked modeling functions.list experimentally determined slope functions (small \\(h\\)) ’re ready start using slope functions without use left-shift combinations like \\(f(t+h) - f(t)\\).exercise, given series intervals get smaller smaller. job calculate average rate change function \\(f(x) \\equiv x^2\\) intervals. width intervals approach zero, average rates change become better approximations instantaneous rates change. use results calculate make informed estimate instantaneous rate change.. Use three intervals estimate instantaneous rate change \\(\\partial_x f(x=3)\\)\n- [3, 3.1]\n- [3, 3.01]\n- [3, 3.001]B. Use three intervals estimate instantaneous rate change \\(\\partial_x f(x=5)\\)\n- [4.9, 5]\n- [4.99, 5]\n- [4.999, 5]C. Use three intervals estimate instantaneous rate change \\(\\partial_x f(x=-2)\\)\n- [-2, -1.9]\n- [-2, -1.99]\n- [-2, -1.999]","code":"\nDsin   <- makeFun((  sin(t+h) -   sin(t))/h ~ t, h=0.1)\nDsigma <- makeFun((pnorm(t+h) - pnorm(t))/h ~ t, h=0.1)\nDsin## function (t, h = 0.1) \n## (sin(t + h) - sin(t))/h\nDsigma## function (t, h = 0.1) \n## (pnorm(t + h) - pnorm(t))/hinterval <- c(__start__ , __end__ )\nf <- makeFun(x^2 ~ x)\ndiff(f(interval)) / diff(interval)"},{"path":"change-relationships.html","id":"slopes-and-motion","chapter":"10 Change relationships","heading":"10.2 Slopes and motion","text":"worked theory slope functions, Newton ready express laws motion continuous time. expressing position \\(x(t)\\), familiar concepts velocity force terms slope functions position “quantity matter,” call “mass.”Velocity slope function position: \\(v(t) \\equiv {\\cal D}_t x(t)\\).Net force slope function velocity times mass: \\(F(t) \\equiv m {\\cal D}_t v(t)\\)take mass formulation, give name specifically slope function velocity; call acceleration.Acceleration slope function velocity: \\((t) \\equiv {\\cal D}_t v(t)\\).acceleration concept, can define net force mass times acceleration.used net force quantity related mass slope function velocity. different sources forces add can cancel . Famously, Newton formulated law universal gravitation ascribed force masses proportional product two masses inversely proportional square distance . mass table net force , since table pushes back (push = force) mass cancel force due gravity. “Net force” takes cancellation account.","code":""},{"path":"change-relationships.html","id":"differentiation","chapter":"10 Change relationships","heading":"10.3 Differentiation","text":"Differentiation process transforming function produce another function. several traditional notations differentiation function named \\(f()\\), instance:Leibnitz: \\(\\frac{df}{dx}\\)Partial: \\(\\frac{\\partial f}{\\partial x}\\)Euler: \\(D_x f\\)One-line: \\(\\partial_x f\\) (hybrid partial Euler notation)Newton (“dot”): \\(\\dot{f}\\)Lagrange (“prime”): \\(f'\\)book, mainly use one-line notation, \\(\\partial_x f\\), means exactly Leibnitz Partial notations, much widely used textbooks.’ve studied calculus , likely seen \\(f'\\) notation. admirably concise viable narrow circumstance: functions take single input. \\(f'\\) leaves means specify crucial aspect differentiation, -respect-variable. general situation differentiation involves functions one variables, example, \\(g(x, y, z)\\). functions, need specify -respect-variable. instance, can differentiate \\(g()\\) three different ways, way incrementing one another three inputs:\\[\\partial_z g(x, y, z) \\equiv \\frac{g(x, y, z+h) - g(x, y, z)}{h}\\\\ \n\\ \\\\\n\\partial_x g(x, y, z) \\equiv \\frac{g(x+h, y, z) - g(x, y, z)}{h}\\\\ \n\\ \\\\\n\\partial_y g(x, y, z) \\equiv \\frac{g(x, y+h, z) - g(x, y, z)}{h}\\]point studies, haven’t seen might choose differentiate function respect one variable another. come time. want set notation won’t narrow options.Leibnitz Partial notations explicit identifying function -respect--variable. example, using Partial differentiation notation, three ways differentiating example function \\(g(x, y, z)\\) labeled :\\[\\frac{\\partial f}{\\partial x},\\ \\ \\ \\frac{\\partial f}{\\partial y},\\ \\ \\text{}\\ \\ \\frac{\\partial f}{\\partial z}\\]R/mosaic computer differentiation longer explicit:Notice R/mosaic operator named D() function. follows pattern makeFun() slice_plot() contour_plot(): first argument tilde expression, instance g(x, y, z) ~ x, identifies mathematical function work (g()) name -respect-input function. R/mosaic notation makes clear differentiation operation function. D() operator takes function input produces output another function. ’ve seen similar behavior , say, slice_plot(), takes function input produces graphics output. D() slice_plot() need know identity -respect-variable well function work . ’s pieces input packaged tilde expression.’re calling D() operator rather function. reason purely communication people. many “functions” calculus course thought helpful distinguish kinds functions take quantities input produce quantity output, functions take function input produce function output. sorts called “functions” R terminology. sentence like, “Differentiation function takes function input produces function output,” true though , dizzying.fact mathematical scientific life variety notations used differentiation. extent, reflects historical precedence , honest, nationalistic European politics 18th century. make sense mathematical writing many areas calculus used, recognize . skill enhanced also memorize names different styles. ’s different pattern English multiple words sort object, instance: car, automobile, junker, ride, wheels, crate, jalopy, limo, motor car, horseless carriage.days carriages pulled horses, phrase “horseless carriage” made useful distinction. Today, horses rarely seen road, make sense trim notation essentials: horseless cariage. Think \\(\\partial_x\\) sort minification.13Recall function monotonically increasing given domain function’s slope positive everywhere domain. monotonically decreasing function, similarly, negative slope everywhere domain. slope zero, positive places negative others, function neither monotonically increasing decreasing.following graphs shows derivative function \\(f(x)\\). (Note: graph doesn’t show \\(f()\\) rather function \\(\\partial_x f()\\) derivative \\(f()\\).) graph, say whether function \\(f()\\) monotonically increasing, monotonically decreasing, neither. (Note horizontal scale every graph, vertical scale can different one scale another.)Q-61: Function …monotonically increasing (+) [monotonically increasing function function everywhere \\(> 0\\)]monotonically increasing (+) [monotonically increasing function function everywhere \\(> 0\\)]monotonically decreasing [monotonically increasing function function everywhere \\(> 0\\)]monotonically decreasing [monotonically increasing function function everywhere \\(> 0\\)]constant [constant function derivative everywhere 0.]constant [constant function derivative everywhere 0.]non-monotonic [non-monotonic function goes , hence derivative positive places negative others.]non-monotonic [non-monotonic function goes , hence derivative positive places negative others.]Can’t tell info provided [case tell derivative positive negative.]Can’t tell info provided [case tell derivative positive negative.]Q-62: Function B …monotonically increasing [monotonically increasing function function everywhere \\(> 0\\)]monotonically increasing [monotonically increasing function function everywhere \\(> 0\\)]monotonically decreasing (+) [monotonically increasing function function everywhere \\(> 0\\)]monotonically decreasing (+) [monotonically increasing function function everywhere \\(> 0\\)]constant [constant function derivative everywhere 0.]constant [constant function derivative everywhere 0.]non-monotonic [non-monotonic function goes , hence derivative positive places negative others.]non-monotonic [non-monotonic function goes , hence derivative positive places negative others.]Can’t tell info provided [case tell derivative positive negative.]Can’t tell info provided [case tell derivative positive negative.]Q-63: Function C …monotonically increasing [monotonically increasing function function everywhere \\(> 0\\)]monotonically increasing [monotonically increasing function function everywhere \\(> 0\\)]monotonically decreasing [monotonically increasing function function everywhere \\(> 0\\)]monotonically decreasing [monotonically increasing function function everywhere \\(> 0\\)]constant [constant function derivative everywhere 0.]constant [constant function derivative everywhere 0.]non-monotonic (+) [non-monotonic function goes , hence derivative positive places negative others.]non-monotonic (+) [non-monotonic function goes , hence derivative positive places negative others.]Can’t tell info provided [case tell derivative positive negative.]Can’t tell info provided [case tell derivative positive negative.]Q-64: Function D …monotonically increasing (+) [monotonically increasing function function everywhere \\(> 0\\)]monotonically increasing (+) [monotonically increasing function function everywhere \\(> 0\\)]monotonically decreasing [monotonically increasing function function everywhere \\(> 0\\)]monotonically decreasing [monotonically increasing function function everywhere \\(> 0\\)]constant [constant function derivative everywhere 0.]constant [constant function derivative everywhere 0.]non-monotonic [non-monotonic function goes , hence derivative positive places negative others.]non-monotonic [non-monotonic function goes , hence derivative positive places negative others.]Can’t tell info provided [case tell derivative positive negative.]Can’t tell info provided [case tell derivative positive negative.]Q-65: Function E …monotonically increasing [monotonically increasing function function everywhere \\(> 0\\)]monotonically increasing [monotonically increasing function function everywhere \\(> 0\\)]monotonically decreasing [monotonically increasing function function everywhere \\(> 0\\)]monotonically decreasing [monotonically increasing function function everywhere \\(> 0\\)]constant [constant function derivative everywhere 0.]constant [constant function derivative everywhere 0.]non-monotonic [non-monotonic function goes , hence derivative positive places negative others.]non-monotonic [non-monotonic function goes , hence derivative positive places negative others.]Can’t tell info provided (+) [case tell derivative positive negative.]Can’t tell info provided (+) [case tell derivative positive negative.]::: {.etude-question}Q-66: Function F …monotonically increasing (+) [monotonically increasing function function everywhere \\(> 0\\)]monotonically increasing (+) [monotonically increasing function function everywhere \\(> 0\\)]monotonically decreasing [monotonically increasing function function everywhere \\(> 0\\)]monotonically decreasing [monotonically increasing function function everywhere \\(> 0\\)]constant [constant function derivative everywhere 0.]constant [constant function derivative everywhere 0.]non-monotonic [non-monotonic function goes , hence derivative positive places negative others.]non-monotonic [non-monotonic function goes , hence derivative positive places negative others.]Can’t tell info provided [case tell derivative positive negative.]Can’t tell info provided [case tell derivative positive negative.]graphs various functions. right column shows functions named \\(f_1()\\), \\(f_2()\\), . left column shows functions \\(()\\), \\(B()\\), \\(C()\\), . functions right derivative function left, functions left corresponding derivative right. task: Match function left ’s derivative right.Q-67: derivative Function () following:f1() []f1() []f2() (+) []f2() (+) []f3() []f3() []f4() []f4() []shown []shown []Q-68: derivative Function B() following:f1() (+) []f1() (+) []f2() []f2() []f3() []f3() []f4() []f4() []shown []shown []Q-69: derivative Function C() following:f1() []f1() []f2() []f2() []f3() []f3() []f4() (+) []f4() (+) []shown []shown []Q-70: derivative Function D() following:f1() []f1() []f2() []f2() []f3() []f3() []f4() []f4() []shown (+) []shown (+) []left column graphs shows functions (), B(), C(), D(). right column shows functions dd1(), dd2(), . Find function () right column corresponds 2nd derivative function left column.Remember concepts “concave ” (smile!) “concave ” (frown). values \\(x\\) 2nd derivative given function positive, given function concave . 2nd derivative negative, given function concave .Q-71: second derivative Function () following:dd1() []dd1() []dd2() []dd2() []dd3() []dd3() []dd4() (+) []dd4() (+) []shown []shown []Q-72: second derivative Function B() following:dd1() []dd1() []dd2() (+) []dd2() (+) []dd3() []dd3() []dd4() []dd4() []shown []shown []Q-73: second derivative Function C() following:dd1() []dd1() []dd2() []dd2() []dd3() []dd3() []dd4() []dd4() []shown (+) []shown (+) []Q-74: second derivative Function D() following:dd1() (+) []dd1() (+) []dd2() []dd2() []dd3() []dd3() []dd4() []dd4() []shown []shown []TITLE GO : Start content .","code":"\nD(g(x, y, z) ~ x)\nD(g(x, y, z) ~ y)\nD(g(x, y, z) ~ z)"},{"path":"change-relationships.html","id":"dimension-of-derivatives","chapter":"10 Change relationships","heading":"10.4 Dimension of derivatives","text":"Recall differencing operator takes input function returns output another function takes kind input, produces different kind output.instance, suppose function pressure() takes altitude input (km) returns pressure (kPA–air pressure sea level 100 kiloPascal).derivative function, let’s call d_pressure(), also takes input km, produces output kPA per km: rate.can see examining differencing operator :\\[{\\cal D}_x f(x) \\equiv \\frac{f(x+h) - f(x)}{h}\\]Remember notation dimensions. quantity \\(x\\) dimensions denoted \\([x]\\). (nothing saying, “Pronounce ‘\\([x]\\)’ ‘dimensions \\(x\\)’.”)\ninput \\(f()\\) dimension \\([x]\\). output \\(f()\\) dimension \\([f(x)]\\).dimension \\(h\\)? (write question simply, \"\\([h]\\)?) Since operator adds \\(x + h\\), must \\([h] = [x]\\).dimension \\(f(x + h) - f(x)\\)? (, ask simply, “\\([f(x+h) - f(x)]\\)?”) Since ’re subtracting two quantities, two quantities must dimension result also dimension. \\([f(x+h) - f(x)] = [f(x)]\\).output function \\(df(x)\\) produced \\(\\mbox{Diff}(f)\\) therefore dimension \\([f(x)] / [x]\\).. given function \\(N(y)\\), population Netherlands year \\(y\\).Dimension input \\(N(y)\\)?Dimension output \\(N(y)\\)?Dimension input \\(\\partial_y N(y)\\)?Dimension output \\(\\partial_y N(y)\\)?B. given function \\(p(u)\\), net profit manufactured good function number units manufactured.Dimension input \\(p(u)\\)?Dimension output \\(p(u)\\)?Dimension input \\(\\partial_u p(u)\\)?Dimension output \\(\\partial_u p(u)\\)?C. given function \\(w(t)\\), amount water leaky bucket time bucket filled.Dimension input \\(w(t)\\)?Dimension output \\(w(t)\\)?Dimension input \\(\\partial_t w(t)\\)?Dimension output \\(\\partial_t w(t)\\)?Q-75: Tanks bulk storage natural gas typically large cylinders cap can . volume tank function position cap. dimension derivative cylinder volume respect cap position?\\(L^2\\) (+) []\\(L^2\\) (+) []\\(L\\) []\\(L\\) []\\(L^3\\) []\\(L^3\\) []\\(L^3/T\\) []\\(L^3/T\\) []\\(T/L^3\\) []\\(T/L^3\\) []","code":""},{"path":"change-relationships.html","id":"using-h","chapter":"10 Change relationships","heading":"10.5 Using h","text":"working differentiation, introduced quantity \\(h\\) ignored , saying doesn’t really matter long “small.” reasonable person might wonder “small” really means, needed introduce \\(h\\) first place eventually going ignore .One reason “small” “zero,” although related, different. example, refering slope functions Dsin() Dsigma() created early example chapter, see setting \\(h\\) zero get us need :NaN, can hear echo fourth-grade teacher reminding illegal divide zero.Think \\(h\\) solvent paint. don’t want solvent paint wall; wet paint nuisance. getting paint can wall absolutely needs solvent.used solvent \\(h\\) earlier chapter numerical experiments led us derivatives naked modeling functions, instance \\(\\partial_x e^x = e^x\\) \\(\\partial_x \\sin(x) = \\cos(x)\\). Eventually, ’ll construct \\(h\\)-free theory differentiation, reducing process set algebraic rules \\(h\\) never appears. goal, let’s continue using \\(h\\) find additional useful facts derivatives.Linear combination one ways make new functions existing functions. recall, linear combination involves scaling function adding scaled functions. can easily use \\(h\\) show result differentiating linear combination functions. ’ll use \\(f(x)\\) \\(g(x)\\) names stand function whatsoever. ’ll let \\(b\\) name scalar. First, let’s figure \\(\\partial_x\\, b f(x)\\), Going back writing \\(\\partial_x\\) terms slope function:\n\\[\\partial_x\\, b\\,f(x) = \\frac{b\\, f(x + h) - b\\,f(x)}{h}\\\\\n\\ \\\\\n= b \\frac{f(x+h) - f(x)}{h} = b\\, \\partial_x f(x)\\]\nwords, know derivative \\(\\partial_x\\, f(x)\\), can easily find derivative scaled version \\(f()\\).Now consider derivative sum two functions, \\(f(x)\\) \\(g(x)\\):\n\\[\\partial_x\\, \\left[f(x) + g(x)\\right] =\\\\\n\\ \\\\\n=\\frac{\\left[f(x + h) + g(x + h)\\right] - \\left[f(x) + g(x)\\right]}{h} = \\\\\n\\ \\\\\n= \\frac{\\left[f(x+h) -f(x)\\right] + \\left[g(x+h) - g(x)\\right]}{h}\\\\\n\\ \\\\\n= \\frac{\\left[f(x+h) -f(x)\\right]}{h} + \\frac{\\left[g(x+h) - g(x)\\right]}{h}\\\\\n\\ \\\\\n= \\partial_x\\, f(x) + \\partial_x\\, g(x)\\]Using two rules together, can differentiate linear combination functions terms differentiated functions :\\[\\partial_x\\ \\left[\\strut a_1 g_1(x) + a_2 g_2(x) + a_3 g_3(x) + \\cdots\\right] =\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\\n\\ \\\\\n\\ \\ \\ \\ \\ \\ \\ \\ \\ a_1 \\partial_x\\, g_1(x) + a_2 \\partial_x\\, g_2(x) + a_3 \\partial_x\\, g_3(x) + \\cdots\\]way \\(\\partial_x\\) can “passed ” linear combination, mathematicians say differentiation linear operator. Consider new fact differentiation payment eventually become complete theory telling us differentiate product two functions composition two functions.EXERCISES: Simple drill ","code":"\nDsin(t=1, h=0)## [1] NaN\nDsigma(t=0, h=0)## [1] NaN"},{"path":"change-relationships.html","id":"differencing","chapter":"10 Change relationships","heading":"10.6 Differencing","text":"basic tool showing difference slope remarkably simple operator takes function input. function one input, operator \\({\\cal D}()\\) defined \n\\[{\\cal D}(f) \\equiv \\frac{f(x + 0.1) - f(x)}{0.1}\\]\nNotice \\({\\cal D}()\\) operator returns function. output linear combination input function \\(f()\\) shifted version \\(f()\\).function two inputs, two versions \\({\\cal D}\\):\n\\[{\\cal D}_x(f) \\equiv \\frac{f(x+0.1, y) - f(x, y)}{0.1}\\]\\[{\\cal D}_y(f) \\equiv \\frac{f(x, y+0.1) - f(x, y)}{0.1}\\]Suppose \\(f(x)\\equiv x^2\\). function \\({\\cal D}(f)\\)?\\[\n{\\cal D}(f) \\equiv \\frac{f(x+0.1) - f(x)}{0.1}\\\\ =\n10\\left((x+0.1)^2 - x^2\\right)\\\\\n=10 x^2 + 2x + 0.1 - 10x^2\\\\ = 2 x + 0.1\\]Suppose \\(f(x) \\equiv 2 x + y\\). Find function \\({\\cal D_x(f)}\\).linear combination \n\\[\\frac{1}{0.1}\\left(\\left[2 (x + 0.1) + y\\right] - \\left[2 x + y\\right]\\right) =\\\\ \\\\\n20 x + 2 + 10y - \\left[20 x - 10y\\right] = 2\\]","code":"\nf <- makeFun(2 *x * y ~ x + y)\nD(f(x, y) ~ x)## function (x, y) \n## 2 * (y)"},{"path":"change-relationships.html","id":"instantaneous-rate-of-change-1","chapter":"10 Change relationships","heading":"10.7 Instantaneous rate of change","text":"[Deriv-2b] Distinguish “average rate change” “instantaneous rate change”.Imagine graph position car along road Figure @ref{fig:stop--go2}.graph appears exercise Fun-slopes. intend prompt note. Perhaps link Fun-slopes.course hour, car travelled 25 miles. words, average speed 25 miles/hour: slope red line segment. Given traffic, sometimes car stopped (time C), sometimes crawling (time D) sometimes much faster average (time B).car’s speedometer shows speed moment—instant—trip. can see Figure @ref{fig:stop--go}, speed varies sometimes less average speed, sometimes greater, occasionally equal average speed trip. general term kind quantity presented speedometer instantaneous rate change position function respect input function.Figure @ref{fig:instant-speed} shows instantaneous rate change position respect time.Recall interval \\(t_B\\) \\(t_C\\) average rate change 39 miles-per-hour. Looking instantaneous rate change tells story differently: time \\(t_B\\) car accelerating 60 miles-per-hour. gradually slowed, coming stop just time \\(t_C\\).Figure @ref{fig:stop--go} shows function \\(\\mbox{position}(t)\\). Figure @ref{fig:instant-speed} shows different function, \\(\\mbox{speed}(t)\\). Although two functions different, intimately related: \\(\\mbox{speed}(t)\\) instantaneous rate change \\(\\mbox{position}(t)\\).Two central operations calculus :Given function \\(f(t)\\), find function \\(g(t)\\) giving instantaneous rate change \\(f()\\). process deriving \\(g(t)\\) \\(f(t)\\) called differentiation.Given function \\(g(t)\\), find \\(f(t)\\) \\(g(t)\\) instantaneous rate change. process finding \\(f()\\) given \\(g()\\) called anti-differentiation.context situation modeled determines whether ’s appropriate look average rate change instantaneous rate change. Figure @ref{fig:instant-tree} shows instantaneous rate change volume wood.\n’s tempting look year growth rate highest optimal harvest year. mistake. volume wood harvested accumulated growth instantaneous growth. Even though instantaneous growth higher year 23 year 30, ’s still pretty high year 30 waiting (later) accumates years higher--average growth. ’s average rate growth better thing look determine optimal harvest time. Still, right thing look ?year 30 32, hardly change value average-rate--change function. ’s increasing little, really worthwhile wait? One argument year 29 already valuable resource: wood money bank. money bank, invest earn money time get new seedling ground start growth. ’re two things . Efficient!know best year harvest point view, want calculate effective “interest rate” present amount wood earn form new wood. interest rate ratio instantaneous rate growth new wood divided amount existing wood. Figure @ref{fig:tree-interest} shows function:best time harvest annual “interest rate” paid growing tree falls level next best available investment. Suppose investment pay 10% per year. harvest tree year 24. next best investment paid 5% (blue horizontal line), harvest made year 29.","code":""},{"path":"h-and-derivatives.html","id":"h-and-derivatives","chapter":"11 h and derivatives","heading":"11 h and derivatives","text":"already established, numerical experiment, result differentiating naked modelings functions. summarize,mathematician might prefer replace word “established” first sentence table weaker word “motivated” “proposed.” entirely fair. Indeed, let’s another experiment cause us wonder just solid conclusions presented table .Recall can easily define slope function \\(f(x)\\), example slope function \\(\\sin(x)\\):justifying entry \\(\\sin()\\) table, plotted Dsin() using small h, instance, h=0.000001. comforting continue experiment even smaller h. , discover problem.\nFigure 11.1: Graphing slope function \\(\\sin(x)\\) small enough \\(h\\) produces result inconsistent table naked modeling functions. Instead producing \\(\\cos(x)\\), get ragged function.\nThings get even worse smaller \\(h\\) still, can confirm using computing sandbox.turns reason behavior way computer arithmetic engineered. demonstrate non-mathematical behavior computer arithmetic, consider happens add subtract using 1 number small compared 1.Using technical computing successfully professional level requires understanding ways computer arithmetic differs mathematical arithmetic, R/mosaic D() operator constructed considerations mind. purpose push computer beyond ’s arithmetic limits demonstrate differentiation table naked modeling functions correct.","code":"\nDsin <- makeFun((sin(x+h) - sin(x))/h  ~ x)\noptions(digits=20)\n0.000000000000000000000001## [1] 9.999999999999999237e-25\n1 + 0.000000000000000000000001## [1] 1\n1 - 0.000000000000000000000001## [1] 1\n1 + 0.000000000000000000000001 - 1## [1] 0"},{"path":"h-and-derivatives.html","id":"the-h-framework","chapter":"11 h and derivatives","heading":"11.1 The \\(h\\) framework","text":"end, work ’re going \\(h\\) simple result: confirming facts presented differentiation table. court law, confirmation established appeal established authority. instance, look calculus textbook ’ll see facts table. (find exception, can sure ’s typographical error!)people, mathematical proof much different appealing established authority. everyone skilled following deductive steps proof almost everyone tricked accepting step logically valid. everyone makes mistakes.benefit people, rather proving facts differentiation table, ’re going reconstruct, hopefully fun way, framework developed mathematics community roughly two centuries enabled mathematicians satisfy methods used pioneers justified beyond doubt.basic problem, everyone always agreed , ’s proper set \\(h\\) zero. dispute handle \\(h\\) way can held non-zero yet give results \\(h\\) evaporated never .illustrate can done, consider algebra slope function \\(g(x) \\equiv x\\):\\[{\\cal D}_x g(x) \\equiv \\frac{g(x+h) - g(x)}{h} = \\frac{(x+h) - x}{h} = \\frac{h}{h} = 1\\]\nsteps completely justified \\(h\\) whatsoever, long \\(h \\neq 0\\). formula \\({\\cal D}_x\\, x = 1\\) correct matter whether \\(h\\) big small.contrast, consider slope function \\(f(x) \\equiv x^2\\):\n\\[{\\cal D}_x f(x) \\equiv \\frac{f(x+h) - f(x)}{h} = \\frac{(x+h)^2 -x^2}{h} = \\\\\n\\ \\\\\n= \\frac{x^2 + 2hx + h^2 - x^2}{h} = \\frac{2 h x + h^2}{h} = 2 x + h\\]\n, formula correct \\(h\\) whatsoever, long \\(h\\) zero. Unfortunately, \\(h\\) still present formula. differentiating \\(x^2\\) want make \\(h\\) go away.like think \\(h\\) kind tire iron, small tool used stretch bead bicycle tire order pull wheel rim.\nFigure 11.2: tire iron use\ntire iron done job, removed never know ever (except tire now successfully mounted wheel).calculus, bicycle mechanics. know removing tire iron isn’t damaging mathematical wheel?Still spirit fun, let’s try serious metaphor… imagining \\(h\\) actually central character calculus play. character \\(h\\) middle story never appears play, like missing character Godot famous play Waiting Godot.said \\(h\\) slope function \\({\\cal D}_x x^2 = 2 x + h\\), long \\(h\\) small, plays central role hardly effect. economizing director re-writes play take \\(h\\) , setting \\(h=0\\) formula \\(2 x + h\\): non-speaking, offstage role.’ve already seen using legitimate algebra \\[{\\cal D}_x g(x) = 2 x + h\\] Re-writing replacing \\(h\\) 0 streamlines play, turning \\({\\cal D}_x x^2 = 2x +h\\) dialog involving \\(x\\) \\(h\\) monologue \\(h\\) absent: \\[\\partial_x x^2 = 2 x\\] Simple.yet … director gets letter Bit Players Union.observe eliminated role \\(h\\) final production version \\(\\partial_x g(x)\\). violation Union regulations. Recall basis \\(\\partial_x g(x)\\) slope function \\({\\cal D}_x g(x)\\). slope function defined ratio: \\[{\\cal D}_x g(x) \\equiv \\frac{g(x+h) - g(x)}{h}\\] Eliminating \\(h\\) entirely replacing zero division zero error forbidden Article 3.16§B¶2 Unified Laws Arithmetic. ask comply Article re-instating role \\(h\\) evaluations \\({\\cal D} g(x)\\).Reading , director calls lawyer. loophole removing \\(h\\) without breaking mathematical prohibition dividing zero?1734, famous philosopher George Berkeley (1685-1753) published long-titled book: Analyst: Discourse Addressed Infidel Mathematician: Wherein Examined Whether Object, Principles, Inferences Modern Analysis Distinctly Conceived, Evidently Deduced, Religious Mysteries Points Faith. Analyst, Berkeley took issue arguments time legitimate divide \\(h\\) , ultimately, \\(h\\) replaced zero. Calling \\(h\\) “evanescent increment,” asked,“evanescent Increments? neither finite Quantities Quantities infinitely small, yet nothing. May call ghosts departed quantities?”Interesting, Berkeley believed ghost \\(h\\) yielded correct results. objection framers calculus made two, canceling errors.“[B]y virtue two fold mistake arrive, though science, yet truth.”Berkeley saying calculus yet put solid logical foundation. century Berkeley’s death work accomplished. accomplished, results claimed true along confirmed.loophole involves bit legalistic cover, something like corporation. may know, corporation legal structure makes feasible people invest without subject unlimited liability. bought stock company later accidentally caused catastrophe? company go business stock worthless. legally obliged fix damage: liability limited. companies identify legal suffix “Inc.” beholden state certain ways, requirement pay taxes profits.calculus, equivalent “Inc” \\(\\lim_{h \\rightarrow 0}\\). prepending calculation, allowed carry arithmetic operations dividing \\(h\\) without concern liability dividing zero. can perform algebraic operations long legitimate \\(h \\neq 0\\). instance, taken entirely correct say:\\[\\lim_{h\\rightarrow 0}\\frac{h}{h} = 1\\]\nAnother privilege users \\(\\lim_{h\\rightarrow 0}\\) , end algebraic derivation, entitled replace \\(h\\) zero long divide zero required. endpoint 1, \\(h\\) doesn’t even appear. consider\n\\[\\lim_{h \\rightarrow 0} \\frac{(x + h)^2 - x^2}{h} = \\\\\n\\ \\\\\n= \\lim{h \\rightarrow 0} 2 x + h\\]last step, \\(h\\) appears. entitled take result derivation, \\(2 x + h\\), replace \\(h\\) zero. doesn’t entail illegitimate operation dividing zero.’s basic, ’re entitled state \\[\\lim_{h\\rightarrow 0} h = 0\\] , honest, looks like nothing common sense.","code":""},{"path":"h-and-derivatives.html","id":"approximations-to-naked-modeling-functions","chapter":"11 h and derivatives","heading":"11.2 Approximations to naked modeling functions","text":"Let’s take close look two naked modeling functions: \\(e^x\\) \\(\\sin(x)\\). “close” mean near \\(x=0\\). already know \\(e^0 = 1\\) \\(\\sin(0) = 0\\). consider “small” \\(x\\), spirit \\(\\lim_{x\\rightarrow 0}\\).fundamental approximations :\\[e^x \\approx 1 + x\\\\\n\\ \\\\\n\\sin(x) \\approx x\\\\\n\\ \\\\\n\\cos(x) \\approx 1 - x^2\\]Figure @ref(fig:small-x-naked} shows naked functions along approximations. ’re interested “small” \\(x\\). left panel shows functions \\(-1 \\leq x \\leq 1\\) right panel zooms small \\(x\\), taking “small” arbitrary everyday sense , say, less 0.01.\nFigure 11.3: Comparing naked modeling functions exp(x), sin(x), cos(x) simple approximations small x. functions drawn broad gray line; approximations thin blue line.\nNear \\(x=0\\), graph approximation dead center corresponding naked modeling function.approximations break small \\(x\\) none approximations involve dividing \\(x\\). remember approximations good \\(x\\) small!Consider result differentiating \\(e^x\\). slope function \\[{\\cal D}_x e^x \\equiv \\frac{e^{x+h} - e^x}{h} = e^x \\left[\\frac{e^h - 1}{h}\\right]\\]\nLet’s examine \\(\\frac{e^h - 1}{h}\\) small \\(h\\). use approximation \\(e^x\\), ’ll write \\(h\\) argument: \\(e^h \\approx 1 + h\\). Plugging bracketed quantity, \\[\\lim_{h \\rightarrow 0}\\frac{e^h - 1}{h} = \\lim_{h\\rightarrow 0}\\frac{1 + h - 1}{h} = 1\\] Overall, means \\[\\partial_x e^x = \\lim_{h\\rightarrow 0}{\\cal D}_x e^x = e^x\\]Now demonstrate \\(\\partial_x \\sin(x) = \\cos(x)\\) fact often used calculus. calculus teachers need know perform demonstration, following just FYI:.demonstration builds formula sine sum two quantities:\\[\\sin(x + h) = \\sin(x)\\cos(h) + \\cos(x)\\sin(h)\\], can simplify slope function \\(\\sin\\):\n\\[{\\cal D}_x \\sin(x) \\equiv \\frac{\\sin(x+h) - \\sin(x)}{h} =\\\\\n\\ \\\\\n= \\frac{1}{h} \\left[\\strut\\sin(x)\\cos(h) + \\cos(x)\\sin(h) - \\sin(x) \\right]\\\\\n\\ \\\\\n= \\frac{1}{h} \\left[\\strut \\sin(x) \\left[\\cos(h) -1\\right] + \\cos(x)\\sin(h)\\right]\\]\nPlugging approximations \\(\\sin(h) = h\\) \\(\\cos(h) = 1 - h^2\\) get\n\\[{\\cal D}_x \\sin(x) = \\frac{1}{h} \\left[\\strut\\sin(x)(- h^2)  +\\cos(x)h\\right] = \\\\\n\\ \\\\\n= \\cos(x) - h \\sin(x)\\]\ndivision \\(h\\) safely removed, cn now apply limit:\n\\[\\partial_x \\sin(x) = \\lim_{h\\rightarrow 0} \\left[\\strut \\cos(x) - h \\sin(x)\\right] = \\cos(x) - \\sin(x) \\left[\\lim_{h\\rightarrow 0}h\\right] = \\cos(x)\\]write differentiation operator (respect input \\(x\\)) \\(\\partial_x\\). wrote slope-function operator (, respect \\(x\\)) \\({\\cal D}_x\\).slope-function operator \\({\\cal D}_x\\) stepping stone path toward real destination: differentiation. ’re defining differentiation limit:\\[\\partial_x\\, f(x) \\equiv \\lim_{h\\rightarrow 0} {\\cal D}_x\\, f(x)\\]\npractice, however, perform differentiation whenever possible limit definition, consequences limit definition, \\(\\partial_x e^x = e^x\\) \\(\\partial_x \\sin(x) = \\cos(x)\\). Sometimes consequences called rules differentiation. rules important particularly carrying differentiation using paper pencil, computer available, rules mastered software. Since software widely available, ’re going step away bit. next chapters present uses differentiation contexts differentiation used constructing new modeling functions.Suppose want borrow \\(L=\\) $10,000 buy car. ’ll make equal monthly payments \\(P\\) five years (60 months) pay loan. interest rate \\(r\\) per month, payment : \\[P(L, r) = L r \\frac{(1+r)^{60}}{(1+r)^{60} - 1}\\]example, interest rate 0.005 per month (roughly 6% = 0.06 per year), monthly payment ::: {.scaffolding}Essay question Q-79: Explain options(digits=20) statement . can experiments changing 20 something much smaller.Q-80: statements true successive values x_sequence?approaches 3 . (+) []approaches 3 . (+) []approaches 3 . []approaches 3 . []oscillates, getting nearer farther 3. []oscillates, getting nearer farther 3. []Q-81: statements true successive values f(x_sequence)?approaches 1 . []approaches 1 . []approaches 1 . []approaches 1 . []value constant 1. (+) []value constant 1. (+) []Essay question Q-82: Explain output function \\(g()\\) qualifies numerically ‘naughty’ near \\(x=3\\).’s simple enough say elementary-school pupil “division zero error.” computer , whatever reason, divides amount zero generated -erroneous early computation? many computer languages (including R) programmer can arrange unacceptable situation causes error message “thrown.” generally causes program stop. See account USS Yorktown (“Smart ship testbed”) example stopping program always acceptable practice.Modern computer arithmetic systems, implemented hardware, take different approach division zero. Rather error, divide--zero calculations return definite value called “number” printed NaN. Rather stopping program, calculations can continue . calculation involving NaN, 3 +  NaN NaN/NaN produces NaN. clever design allows system-level programmer determine whether division zero needs dealt .Q-83: Warm : Using sandbox, determine one arithmetic expressions produce NaN output.1/0 []1/0 []0/0 []0/0 []0*NaN []0*NaN []NaN/NaN []NaN/NaN []5e20 + NaN*1e-50 []5e20 + NaN*1e-50 []NaN - NaN []NaN - NaN []NaN * Inf []NaN * Inf []sin(NaN) []sin(NaN) []sqrt(NaN) []sqrt(NaN) []Inf/Inf []Inf/Inf []1/Inf (+) []1/Inf (+) []NaN strategy effective plotting. Programs slice_plot() simply ignore points whose value NaN. result, shape graph determined points nearby, , singularity. overall effect graph clearly indicates whether singularity removable without user juggling NaN.following functions \\(x\\), use following procedure:Plug indicated value \\(x = x^\\star\\) find computer returns NaN. , function singularity \\(x^\\star\\).Draw graph function region close \\(x^\\star\\) see function behaves smoothly close \\(x^\\star\\). , find function’s limit \\(x \\rightarrow x^\\star\\). (Pay attention vertical axis scale.)Look formula function see equal terms numerator denominator can cancel create new function , everywhere \\(x^\\star\\), original.Example: \\(f(x) \\equiv \\frac{x^2 + 2x}{x^3 + 4x}\\) \\(x^\\star = 0\\). sandbox code set steps (1) (2). ’ll step (3) hand, using algebra. Notice f(xstar) returns NaN, indicating singularity xstar. graph, however, perfectly smooth value 0.5 xstar. limit \\(\\lim_{x\\rightarrow 0} f(x) = 0.5\\). Using algebra, can rewrite \\(f(x)\\)\\[f(x) = \\frac{x^2 +  2x}{x^3 + 4x} = \\frac{x}{x} \\frac{x + 2}{x^2 + 4}.\\] Eliminating \\(\\frac{x}{x}\\), remainder expression evaluates 1/2 \\(x=0\\) without problematic division zero. agrees perfectly graph.Q-84: 1) True false: \\[f(x)\\equiv \\frac{x^2 + 2x}{x^3 - 4x}\\] behaves nicely near \\(x^{\\star} = 0\\).TRUE (+) []TRUE (+) []FALSE []FALSE []Q-85: 2) True false: \\[f(x)\\equiv \\frac{x^2 + 2x}{x^3 - 4x}\\] behaves nicely near \\(x^{\\star} = -2\\).TRUE (+) []TRUE (+) []FALSE []FALSE []Q-86: 3) True false: \\[f(x)\\equiv \\frac{x^2 + 2x}{x^3 - 4x}\\] behaves nicely near \\(x^{\\star} = 2\\).TRUE []TRUE []FALSE (+) []FALSE (+) []Q-87: 4) True false: \\[f(x)\\equiv \\frac{x^2 + x}{x + \\sqrt{x + 3}}\\] behaves nicely near \\(x^{\\star} = -2\\).TRUE (+) []TRUE (+) []FALSE []FALSE []Q-88: 5) True false: \\[f(x)\\equiv x \\log(x)\\] behaves nicely approaching \\(x^{\\star} = 0\\) .TRUE (+) []TRUE (+) []FALSE []FALSE []","code":"\nPayment <- function(L, r, m=60) {\n  L*r*((1+r)^m) / ((1+r)^m - 1)\n}\nPayment(10000, 0.005)## [1] 193.33\nYou are a good negotiator and are trying to talk the car dealer down to a zero-percent loan. The dealer plugs $r=0$  into the mortgage calculator. His response to you: \"Sorry, but our system can't handle zero-percent loans.\"\n\n::: {.etude-question}\n\n**Essay question Q-76**: Explain what about the output of the calculator supports the dealer's response.\n\n:::\n\nYou press the point. \"Excuse me, Sir, but I'm in Math 141Z. That `NaN` appearing  on your screen is the result  of  a division by  zero  in the formula. But there's no reason to do that division. At zero percent interest, the monthly payment will  simply be the amount borrowed divided by the number of months of the loan, so  $10,000 divided by 60, giving a monthly payment of $166.6666... .\" \n\n\"I'm sure you're very  good at math,\" the dealer says, \"and I'm willing to agree to a monthly payment of $166.67, but I can't process any loan without going through this computer system. And zero percent won't fly.\"\n\nHaving studied limits, you have an idea. \"Suppose we agree on a non-zero interest rate--which your loan system can handle--that produces a monthly payment of $166.67? Can we write up the loan that way?\"\n\nDealer: \"I'd be happy to do that, but obviously it's impossible to find an interest rate greater than zero that gives the same result as your calculation  for zero interest.\"\n\nYou: \"Let's try. Instead of 0.005 for the monthly interest rate, put in $r = 0.0005$. You're computer can work with that, right?\"\n\nDealer: \"OK, let's see. ... Yes, the payment amount is $169.22. That'll work.\"\n\nYou: \"We're making progress. But my sense of mathematical honor insists that we find  an interest rate that gives $166.67,  as close as we can practically get to the exact  answer of $166.6666... .\"\n\n::: {.etude-question}\n\n**Q-77**: Work through  the sequence $r = 0.005$,  $r = 0.0005$, $r  = 0.00005$, making $r$ smaller and smaller. Is there a non-zero $r$ that brings the payment to the agreed-upon goal of $166.67? If so, what's the largest $r$ that will bring you there.\n\n\n#. 5e-04 []\n\n#. 5e-05 []\n\n#. 5e-06 []\n\n#. 0.0000005  (+) []\n\n#. 5e-08 []\n\n#. 5e-09 []\n\n#. 5e-10 []\n\n#. no such $r$ []\n\n:::\n\nLater in the day, you tell  the story to your roommate, who is a computer science major. She says that you were lucky. \"Computer arithmetic isn't exactly the same as mathematical arithmetic. Computer calculations with very small numbers sometimes give different results than you would expect mathematically. I bet if  you tried an even smaller $r$, you would have gotten different answers or even just nonsense.\"\n\n::: {.etude-question}\n\n**Q-78**: Work through smaller and smaller $r$ in the mortgage calculator. What happens as you continue the sequence from the  previous question, adding in  more zeros before the 5?\n\n\n#. The  result steadily gets closer  to  166.6666.... []\n\n#. At first, the result gets closer to 166.6666, but then as $r$ gets smaller the result stays at the same answer. []\n\n#. The result falls below 166.666 and stays there. []\n\n#. The computer output shows a result of infinity.  (+) [Surprising, huh? These sorts of problems do arise. In the 1991 Gulf war, one Iraqi missile got through the Patriot missile  defense system due to a problem like this. There are special mathematical/programming techniques to help avoid these situations, but the Patriot system was not designed with  them. [News story here](https://www.nytimes.com/1991/06/06/world/us-details-flaw-in-patriot-missile.html).]\n\n:::\n<\/details>\n\n\\BeginKnitrBlock{exercise}\\iffalse{-91-115-105-110-103-117-108-97-114-105-116-121-45-110-117-109-101-114-105-99-115-93-}\\fi{}<div class=\"exercise\"><span class=\"exercise\" id=\"exr:unnamed-chunk-97\"><strong>(\\#exr:unnamed-chunk-97)  \\iffalse (singularity-numerics) \\fi{} <\/strong><\/span><\/div>\\EndKnitrBlock{exercise}\n<details>\n\n\n\n\n\n\n\n\n\nConsider the function $f(x)  \\equiv  \\frac{x-3}{x-3}$. Simple algebra suggests that  the  output will be 1 for any $x$ value input, but the rules are division mean that the output is undefined for input $x=3$. We say,  the  function has a \"singularity\" at $x=3$. We want to test whether this singularity is removable, that is, whether  the function has  a  limit as $x \\rightarrow 3$. The computer can help us out.  The basic idea is to try inputs closer  and closer to $x=3$  and see if the output behaves nicely. To help you distinguish between removable and  non-removable singularities (or, in the words of the song \"Santa Claus is Coming to Town\", to know \"who's naughty or nice\"), the sandbox defines the function $f()$ and  a similar function $g()$. Try out both $f()$ and $g()$ for a sequence of inputs that get closer and closer to $x=3$ but are not *exactly*  3.\n\n\n```r\nf <- function(x) { (x-3) / (x-3)}\ng <- function(x) { (x-2.5) / (x-3)}\nx_sequence <- 3 - 10^-(1:15)\noptions(digits=20)\nx_sequence##  [1] 2.8999999999999999112 2.9900000000000002132 2.9990000000000001101\n##  [4] 2.9998999999999997890 2.9999899999999999345 2.9999989999999998602\n##  [7] 2.9999999000000001637 2.9999999900000000608 2.9999999989999999173\n## [10] 2.9999999998999999917 2.9999999999899999992 2.9999999999989999111\n## [13] 2.9999999999999000799 2.9999999999999897859 2.9999999999999991118\nf(x_sequence)##  [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\ng(x_sequence)##  [1] -3.9999999999999955591e+00 -4.9000000000001065814e+01\n##  [3] -4.9900000000005508127e+02 -4.9989999999894480425e+03\n##  [5] -4.9998999999672436388e+04 -4.9999899993011099286e+05\n##  [7] -4.9999990081828944385e+06 -4.9999999303873553872e+07\n##  [9] -4.9999995762981790304e+08 -4.9999995852981796265e+09\n## [11] -4.9999995861981788635e+10 -4.9995555365913500977e+11\n## [13] -5.0039995859662177734e+12 -4.8952169862721781250e+13\n## [15] -5.6294995342131100000e+14\nf <- function(x) {(x^2 + 2*x) / (x^3 + 4*x)}\nxstar <- 0\nf(xstar)\n\nslice_plot(f(x) ~  x, domain(x =  xstar + 0.001*c(-1,  1)))"},{"path":"optim-and-shape.html","id":"optim-and-shape","chapter":"12 Optimization","heading":"12 Optimization","text":"“optimize” means make something good possible available resources. Optimization problems common science, logistics, industry, area one seeks best solution problem. everyday examples:much salt add stew. Stews can salty, can salty enough. Somewhere middle optimum.harvest trees grown lumber. Harvest soon might losing prime growing years. Wait long trees settled slow growth, .Walking steep slope tiring slows ; ’s hiking trails switchbacks. switchbacks shallow, takes long time cover distance. ’s efficient angle enable hikers get hill shortest time.","code":""},{"path":"optim-and-shape.html","id":"structure-of-the-problem","chapter":"12 Optimization","heading":"12.1 Structure of the problem","text":"optimization problem, one input quantity whose value choose. amount salt; years wait planting harvesting tree; angle trail respect slope. ’ll call decision quantity.Similarly, one output quantity value want make good possible. taste stew; income produced selling lumber; time takes walk hill. output quantity called objective.model relates inputs objective output called objective function. Solving optimization problem—modeling phase complete—amounts finding value decision quantity (input objective function) produces best level objective (output objective function).Sometimes objective something want minimize, make small possible. hiking trail problem, seek minimize amount time takes walk trail. Sometimes want maximize objective, wood-harvest problem objective harvest wood per year.Mathematically, maximization minimization thing. Every minimization problem can turned maximization problem putting negative sign front objective function. simplify discussion, talking finding solution optimization problem ’ll imagine goal maximize. keep mind many circumstances real world, “best” can mean minimization.solution seek maximization problem called argmax. contraction two words: argument (, input) produces maximum output. (minimization, solution ***argmin.)found argmax can plug value objective function find value output. value maximum.People often talk “finding maximum.” misleading. setup optimization problem :Construct (, model) objective function.Now know objective function, find input function—, argmax—produces maximum output.illustrate setup optimization problem, imagine situation contest see can shoot tennis ball farthest field slingshot. contest, adjust vertical angle launch, place ball slingshot’s cradle, pull back far possible, let go. win contest, need optimize launch ball.objective distance travelled ball. simplicity, ’ll imagine velocity ball release fixed \\(v_0\\). ’ll win lose based angle launch choose.head field experiment, let’s bit preparation. ’ll model far ball travel (horizontally) function angle launch \\(\\theta\\) initial velocity \\(v_0\\).mathematics problems involves area called differential equations, important part calculus ’ll come later course. Since don’t tools yet, ’ll just state simple model long ball stays air.\n\\[\\text{duration}(v_0, \\theta) = 2 v_0 \\sin(\\theta)/g\\] \\(g\\) acceleration due gravity, \\(9.8 \\text{m}\\text{s}^{-2}\\), assuming contest held Earth.horizontal distance travelled tennis ball \\[\\text{hdist}(v_0, \\theta) = \\cos(\\theta) v_0\\, \\text{duration}(v_0, \\theta) = 2 v_0^2 \\cos(\\theta)\\sin(\\theta) / g\\]\nobjective function hdist(), seek find argmax. input \\(v_0\\) (assumed) fixed, decision quantity angle \\(\\theta\\).best choice \\(\\theta\\) make quantity \\(\\cos(\\theta)\\sin(\\theta)\\) large possible. finding argmax, don’t need concerned \\(v_0\\) \\(g\\).Finding argmax can accomplished simply plotting function \\(\\cos(\\theta)\\sin(\\theta)\\). ’ll implement function input units degrees.\nFigure 12.1: distance travelled ball launched angle \\(\\theta\\)$, according simple model duration flight distance travelled.\ngraph, especially zoomed-version, can read argmax \\(\\theta = 45^\\circ\\).Finding argmax solves problem. may also want present solution saying value output hdist() argmax given input. can read graph maximum \\(\\cos(\\theta)\\sin(\\theta)\\) 0.5 \\(\\theta = 45^\\circ\\), overall distance \\(v_0^2 / g\\)Review Exercise: dimension \\(v_0^2 / g\\)?","code":"\nf <- makeFun(cos(pi*theta/180)*sin(pi*theta/180) ~ theta)\nslice_plot(f(theta) ~ theta, domain(theta=c(0,90)))\nslice_plot(f(theta) ~ theta, domain(theta = c(40, 50)))"},{"path":"optim-and-shape.html","id":"interpreting-the-argmax","chapter":"12 Optimization","heading":"12.2 Interpreting the argmax","text":"graphical solution given slingshot problem entirely satisfactory. Whether solution win contest depends course whether model built objective function correct. potentially important things left , air resistence.Solving optimization problem prepared us go field test result. Perhaps ’ll find real-world optimum angle somewhat steeper shallower \\(\\theta = 45^\\circ\\).Besides argmax, another important quantity read graph Figure 12.1 precision argmax. strict mathematical terms, argmax exactly 45 degrees. practical terms, may matter much outcome little away \\(45^\\circ\\). example, according model, angle range \\(40^\\circ < \\theta < 50^\\circ\\) produce output within 1% distance reached argmax.Contests won lost margins less 1%, casually deviate argmax. hand, \\(45^\\circ\\) argmax model. Reality may deviate model. instance, suppose air resistance wind might might effect 1% distance. can expect factors might change optimal angle much \\(\\pm 5^\\circ\\).","code":""},{"path":"optim-and-shape.html","id":"derivatives-and-optimization","chapter":"12 Optimization","heading":"12.3 Derivatives and optimization","text":"’re now going reframe search argmax ’s interpretation terms derivatives objective function respect decision quantity (\\(\\theta\\) slingshot problem). function one variable, improvement look---graph technique find argmax. genuine reason use derivatives set us future solve problems one variable, hard draw interpret graph. Also, describing functions language derivatives can help us think clearly aspects problem, precision argmax.graph Figure 12.1, ’s easy find argmax; common sense carries day. won’t obvious first going take following approach:Let’s denote argmax objective function \\(f(x)\\) \\(x^\\star\\).\nLet’s look derivative \\(\\partial_x f(x)\\) neighborhood \\(x^\\star\\). Referring Figure 12.1, \\(x^\\star = 45^\\circ\\), may able see \\(\\partial_x f(x^\\star)\\) zero; line tangent function’s graph \\(x^\\star\\) flat.Seen another way, slope \\(f(x)\\) left \\(x^\\star\\) positive; moving tiny bit right (, increasing \\(x\\) small amount, leads increase output \\(f(x)\\). Intuitively, approach peak hill, walking uphill.) Just right \\(x^\\star\\), slope \\(f(x)\\) negative; reach top hill continue , going downhill. derivative function positive one side \\(x^\\star\\) negative , suggesting crosses zero argmax.Inputs \\(x^\\star\\) \\(\\partial_x f(x^\\star) = 0\\) called critical points. call simply argmaxes? slope also zero argmin. ’s even possible slope zero point ’s neither argmin argmax.Q-89: Consider function \\(f(x) \\equiv x^3\\). Confirm value derivative \\(\\partial_x f(x = 0)\\) \\(x^\\star = 0\\) critical point. sort critical point \\(x^\\star=0\\)? (Hint: Draw graph \\(f(x)\\) near \\(x=0\\) see ’s going .)argmax [\\(f(0) < f(x > 0)\\), \\(x^\\star=0\\) can’t argmax.]argmax [\\(f(0) < f(x > 0)\\), \\(x^\\star=0\\) can’t argmax.]argmin [\\(f(x < 0) < f(0)\\), \\(x^\\star=0\\) can’t argmin.]argmin [\\(f(x < 0) < f(0)\\), \\(x^\\star=0\\) can’t argmin.]Neither (+) []Neither (+) []point, know values \\(x^\\star\\) give \\(\\partial_x f(x^\\star) = 0\\) “critical points,” haven’t said figure whether given critical point argmax, argmin, neither. behavior \\(\\partial_x f(x)\\) near x=x^$ important. \\(x^\\star\\) argmax, \\(\\partial_x f(x)\\) positive left \\(x^\\star\\) negative right \\(x^\\star\\); walk hill get \\(x^\\star\\), top hill flat, just past top hill negative slope.argmin, changing \\(x\\) less \\(x^\\star\\) greater \\(x\\star\\); walking valley, level bottom \\(x=x^\\star\\), back side valley pass \\(x=x^\\star\\). Figure 12.2 shows situation.\nFigure 12.2: Top row: objective function near argmax (left) argmin (right). Bottom row: derivative objective function\nbottom row graphs Figure 12.2 shows derivative objective function \\(f(x)\\), , \\(\\partial_x f(x)\\). can see argmax \\(f(x)\\), derivative \\(\\partial_x f(x)\\) positive left negative right. Similarly, near argmin \\(f(x)\\), derivative \\(\\partial_x f(x)\\) negative left positive right.Stated another way, derivative \\(\\partial_x f(x)\\) positive slope near argmin negative slope near argmax.Just differentiate \\(f(x)\\) find ’s slope, find slope function \\(\\partial_x f(x)\\) can differentiate . result called second derivative. write \\(\\partial_x \\left[\\partial_x f(x)\\right]\\), brevity write \\(\\partial_{xx} f(x)\\).second derivative objective function \\(f(x)\\) critical point \\(x^\\star\\) tells us whether critical point argmax, argmin, neither.\nCritical point \\(x^\\star\\) | \\(\\partial_x f(x^\\star)\\) | \\(\\partial_{xx} f(x^\\star)\\)\n———————–|———————|——————-\nargmax | 0 | negative\nargmin | 0 | positive\nneither| 0 | 0Q-90: Returning function \\(f(x) \\equiv x^3\\), find value second-derivative \\(\\partial_{xx} f(x^\\star)\\) evaluated critical point \\(x = x^\\star = 0\\). \\(\\partial_{xx} f( x=0\\)?Negative [established previous exercise critical point \\(x^\\star=0\\) neither argmin wan argmax.]Negative [established previous exercise critical point \\(x^\\star=0\\) neither argmin wan argmax.]Positive [established previous exercise critical point \\(x^\\star=0\\) neither argmin wan argmax.]Positive [established previous exercise critical point \\(x^\\star=0\\) neither argmin wan argmax.]Zero (+) []Zero (+) []differentiate function \\(f(x)\\), produce new function can call anything like. help readers follow thread story, ’s nice name new function \\(\\partial_x f(x)\\). signals clearly reader origins new function respect original function \\(f(x)\\).words, \\(\\partial_x f(x)\\) often called derivative \\(f(x)\\) (respect x). “derive” general term mean just way creating something new something old. calculus, “derivative” always means “created differentiation.” Perhaps better history led us call \\(\\partial_x f(x)\\) name “differentiated \\(f(x)\\)” “differential function \\(f(x)\\).”Graphically, can read second derivative \\(\\partial_{xx} f(x)\\) slope first derivative \\(\\partial_x f(x)\\) concavity function \\(f(x)\\) . \\(\\partial_{xx} f(x) < 0\\), \\(f(x)\\) concave (frown). Likewise, \\(\\partial_{xx} f(x) >0\\) \\(f(x)\\) concave (smile). \\(\\partial_{xx} f(x) = 0\\), \\(f(x)\\) curvature.point, ’ve translated features functions evident graph language derivatives:slope function \\(f(x)\\) input \\(x\\) value derivative function \\(\\partial_x f(x)\\) \\(x\\).concavity function \\(f(x)\\) input slope derivative function, , \\(\\partial_x f(x)\\).Putting () (ii) together, get concavity function \\(f(x)\\) input \\(x\\) value second derivative function, , \\(\\partial_{xx} f(x)\\).argmax \\(x^\\star\\) \\(f(x)\\), value derivative function \\(\\partial_x f(x^\\star)\\) zero value second derivative function \\(\\partial_{xx} f(x^\\star)\\) negative. (situation argmin similar, derivative objective function zero second derivative positive.)smooth function marked points. task , point, estimate value derivative, sign second derivative, radius circle nicely match function small region around point. (Remember, ’re asking radius circle, half diameter.)simplify things, table giving seven different combinations quantities estimate. correctly match one labeled points, . need choose correct set quantities labeled point.Q-91: row table best matches function point ?[][]ii []ii []iii []iii []iv []iv []v []v []vi []vi []vii (+) []vii (+) []Q-92: row table best matches function point B?[][]ii (+) []ii (+) []iii []iii []iv []iv []v []v []vi []vi []vii []vii []Q-93: row table best matches function point C?[][]ii []ii []iii []iii []iv (+) []iv (+) []v []v []vi []vi []vii []vii []Q-94: row table best matches function point D?(+) [](+) []ii []ii []iii []iii []iv []iv []v []v []vi []vi []vii []vii []Q-95: row table best matches function point E?[][]ii []ii []iii []iii []iv []iv []v []v []vi (+) []vi (+) []vii []vii []’s critical point?’re familiar quadratic polynomial: \\[g(x) = a_0 + a_1 x + a_2 x^2\\]\ngraph quadratic polynomial parabola, might concave concave . know, parabola one critical point, might argmin argmax.Let’s find critical point. know critical point \\(x^\\star\\) \\(\\partial_x g(x_0) = 0\\). Since know differentiate power law, can see \n\\[\\partial_x g(x) = a_1 + 2 a_2 x\\] , specifically, critical point \\(x^\\star\\) derivative \n\\[a_1 + 2 a_2 x^\\star = 0\\]\nequation, definition. says whatever \\(x^\\star\\) happens , quantity \\(a_1 + 2 a_2 x^\\star\\) must zero. Using plain old algebra, can find location critical point \\[x^\\star = -\\frac{a_1}{2 a_2}\\]Exercises involving computing derivatives","code":"## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\n\n## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\n\n## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\n\n## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided."},{"path":"optim-and-shape.html","id":"approximations-around-xstar","chapter":"12 Optimization","heading":"12.4 Approximations around \\(x^\\star\\)","text":"Starting just naked modeling functions (e.g. \\(e^t\\)), small rich set mathematical operations enables make huge variety functions suit big range modeling needs:input scaling, turns naked modeling functions directly useful basic modeling functions.linear combinations functions, e.g. \\(+ B e^{-kt}\\)compositions functions, e.g. \\(e^{-kt^2}\\) can recognize composition exponential power-law function.products functions, e.g., \\(\\sin\\left(\\frac{2\\pi}{P}x\\right) e^{-kt}\\)Now want tame profusion possibilities consider way construct stand-ins function, using universal format needs minimum information can used many purposes place original function. ’s helpful name stand-ins reminds us stand-ins . original function \\(f(x)\\), ’ll write names stand-ins tilde, \\(\\widetilde{\\,f\\ }(x)\\).stand-functions intended much simpler original useable substitute original. catch stand-warranteed good substitute within small neighborhood domain origin.information need construct stand-ins limited. First, need specify warranteed neighborhood . ’ll tend use \\(x_0\\) identifying center neighborhood. ’ll also need \\(f(x_0)\\), output original function input \\(x_0\\), \\(\\partial_x f(x_0)\\) \\(\\partial_{xx} f(x_0)\\).good time remind notation conventions using write functions evaluating functions.function individual characteristics idiosyncracies written \\(f(x)\\): function name name input inputs. name function \\(f()\\). name input \\(f()\\) \\(x\\), whatever input name given parentheses following name.Every function derivative function. call derivative function anything like, ’s sensible give name states explicitly comes . ’re using \\(\\partial_x f(x)\\) purpose. Similarly, name use second derivative \\(\\partial_{xx} f(x)\\).Evaluating function means specify particular value input. use several ways making clear talking particular value input, e.g.\n\\[\\mbox{function output:}\\ \\ \\ f(x = 3)\\ \\ \\ \\text{}\\ \\ f(3)\\ \\ \\ \\text{}\\ \\ \\left.f(x)\\strut\\right|_{x=3}\\]\noutput evaluated function quantity.Sometimes want refer output particular input, don’t specific quantity pinned yet. preferred style writing use name similar input name, subscript \\(x_0\\), \\(x_1\\), \\(x_i\\), \\(x_\\star\\) , occasionally, superscript \\(x^\\star\\). output function written like :\n\\[\\mbox{function output:}\\ \\ \\ f(x = x_0)\\ \\ \\ \\text{}\\ \\ f(x_0)\\ \\ \\ \\text{}\\ \\ \\left.f(x)\\strut\\right|_{x=x_0}\\]\nstyle applies function name like \\(\\partial_x f()\\) \\(\\partial_{xx} f()\\), instance\\[\\mbox{function output:}\\ \\ \\ \\partial_x f(x = x_0)\\ \\ \\ \\text{}\\ \\ \\partial_x f(x_0)\\ \\ \\ \\text{}\\ \\ \\left.\\partial_x f(x)\\strut\\right|_{x=x_0}\\]two universal formats can used construct stand-function near particular input \\(x_0\\). Since ’s useful name stand-, ’ll use tilde top original function name:First-order approximation: \\(\\widetilde{f_1}(x) \\equiv f(x_0) + \\partial_x f(x_0) (x-x_0)\\)Second-order approximation: \\(\\widetilde{f_2}(x) \\equiv f(x_0) + \\partial_x f(x_0) [x-x_0] + \\frac{1}{2} \\partial_{xx} f(x_0) [x - x_0]^2\\)Notice first two terms \\(\\widetilde{f_2}(x)\\) identical \\(\\widetilde{f_1}(x)\\), write second-order approximation \n\\[\\widetilde{f_2}(x) \\equiv \\widetilde{f_1}(x) +\\frac{1}{2} \\partial_{xx} f(x_0) [x-x_0]^2\\]first-order approximation \\(\\widetilde{f_1}(x)\\) nothing straight-line function whose graph tangent graph \\(f(x)\\) input \\(x=x_0\\).second-order approximation quadratic polynomial. quadratic, graph familiar parabola. graph \\(\\widetilde{f_2}(x)\\) parabola tangent graph \\(f(x)\\).Consider function \\(g(x)\\) whose graph shown Figure ??.\nhaven’t given formula \\(g(x)\\), can see isn’t basic modeling functions something complicated. ’re going construct first-order second-order approximation \\(g(x)\\) neighborhood \\(x_0 = -1\\) marked blue shaded area.Note \\(x_0\\) argmin \\(g(x)\\). can see argmin little right \\(x_0\\).“facts” \\(g(x)\\) needed construct approximations, beyond specification location neighborhood \\(x_0\\), values \\(g(x_0)\\), \\(\\partial_x g(x_0)\\), \\(\\partial_{xx} g(x_0)\\). :facts, can construct first- second-order approximations:Figure 12.3 shows \\(\\widetilde{g_1}(x)\\) \\(\\widetilde{g_2}(x)\\), zooming around \\(x_0 = -1\\).\nFigure 12.3: first-order (green) second-order (red) approximations \\(g(x)\\) near \\(x_0=-1\\).\ncan see \\(\\widetilde{g_2}(x)\\) good approximation \\(g(x)\\). particular, argmin \\(\\widetilde{g_2}(x)\\) close \\(g(x)\\).previous example, showed argmin parabolic function \\(a_0 + a_1 x + a_2 x^2\\) \\(x^\\star = -\\frac{a_1}{2 a_2}\\). Using formula, argmin \\(\\widetilde{g_2}(x)\\) -2.3493/(7.8077/2) = -0.602.","code":"## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\n\n## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\nx0 <- -1\ng(x0)## [1] -23.992419550105168469\ndx_g <- D(g(x) ~ x)\ndxx_g <- D(g(x) ~ x + x)\ndx_g(x0)## [1] -2.349320000760712901\ndxx_g(x0)## [1] 7.8076908494040253572\ntilde1_g <- makeFun(-23.992 - 2.3493*(x-x0) ~ x)\ntilde2_g <- makeFun(tilde1_g(x) + (7.8077/2) * (x-x0)^2 ~ x)## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided.\n\n## Warning: geom_vline(): Ignoring `mapping` because `xintercept` was provided."},{"path":"optim-and-shape.html","id":"solving-computationally","chapter":"12 Optimization","heading":"12.5 Solving computationally","text":"find zeros derivative function evaluate second derivative zeros find kind critical point .cubic bifurcation. Start cubic argmax followed argmin. move parameter see two critical points coalesce single point disappear., maybe, “problem polynomials.” Linear function always 1 root critical points. Quadratic function always one critical point (subject constant may two roots generically). cubic might 1 3 solutions behavior depends constant. might one three critical points.previous discussion, used phrases “every function derivative,” “function can approximated” second-order polynomial. practical purposes, true. next chapter, however, ’ll set mathematical conditions “every” “” let us see can exception.","code":""},{"path":"cont-and-smooth.html","id":"cont-and-smooth","chapter":"13 Continuity and smoothness","heading":"13 Continuity and smoothness","text":"Draw graph function imagination domain \\(x \\[-5, 5]\\). function continuous everywhere *except \\(x = -2, 1, 3\\).Draw graph function imagination domain \\(x \\[-5, 5]\\). function continuous everywhere *except \\(x = -2, 1, 3\\).Draw graph function imagination domain \\(x \\[-5,5]\\). function continuous everywhere \\([-5,5]\\). also derivative everywhere except \\(x = -2, 1, 3\\).Draw graph function imagination domain \\(x \\[-5,5]\\). function continuous everywhere \\([-5,5]\\). also derivative everywhere except \\(x = -2, 1, 3\\).sketched functions , decide level smoothness best describes function. (tricks drawings. function looks like ’s broken–, function locally V-shape \\(\\Lambda\\)-shape–take face value.Q-96: ’s smoothness level function (x)? (Hint: quadratic function first derivative changes x second derivative constant x.)discontinuous []discontinuous []\\(C^0\\) []\\(C^0\\) []\\(C^1\\) (+) []\\(C^1\\) (+) []\\(C^2\\) higher []\\(C^2\\) higher []Q-97: ’s smoothness level function B(x)?discontinuous (+) []discontinuous (+) []\\(C^0\\) []\\(C^0\\) []\\(C^1\\) []\\(C^1\\) []\\(C^2\\) higher []\\(C^2\\) higher []:::Q-98: ’s smoothness level function C(x)?discontinuous []discontinuous []\\(C^0\\) (+) []\\(C^0\\) (+) []\\(C^1\\) []\\(C^1\\) []\\(C^2\\) higher []\\(C^2\\) higher []Q-99: ’s smoothness level function D(x)?discontinuous []discontinuous []\\(C^0\\) []\\(C^0\\) []\\(C^1\\) []\\(C^1\\) []\\(C^2\\) higher (+) []\\(C^2\\) higher (+) []","code":""},{"path":"derivatives-of-composed-functions.html","id":"derivatives-of-composed-functions","chapter":"14 Derivatives of composed functions","heading":"14 Derivatives of composed functions","text":"Derivation chain rule. Break following, step step.\\[\\partial_ f(g(x)) = \\frac{f(g(x+h)) - f(g(x))}{h} \\\\\n= \\frac{1}{h} \\left[f(g(x)) + \\partial_x f(g(x)) \\partial_x g(x) h - f(g(x) \\right] \\\\\n=\\partial_x f(g(x)) \\partial_x g(x)\n\\]","code":""},{"path":"approximating-functions.html","id":"approximating-functions","chapter":"15 Approximating functions","heading":"15 Approximating functions","text":"[Deriv-5a] Understand strategy looking behavior function \\(f(x)\\) around point \\(x_0\\) considering new, possibly simpler function terms \\(x\\).[Deriv-5b] able construct straight-line function (Linear Approximation) approximates \\(f(x)\\) around \\(x_0\\)[Deriv-5c] able construct 2nd-order polynomial (Quadratic Approximation) whose value derivatives match functionIn exercise, ’re going looking shape contour lines close reference point. graph shows function ’ll examining. contours unlabeled, avoid distracting numbers; ’re interested shapes. Four different reference points marked, coordinatesFor reference points D, job zoom region around point. graphing expression sandbox written way allows specify exactly coordinates reference point, size region around reference point plotted. initial example sandbox reference point region size 0.5. reference point always exactly center plot.consider sequence region sizes\\[\\mbox{size}: 0.5,\\ 0.1,\\  0.05,\\  0.01,\\  0.005,\\ 0.001,\\ 0.0005,\\  0.0001\\]Start largest size try successively smaller sizes find size shape contour lines simple similar shape previous size. (Ignore contour labels: just look shape.)Q-100: 1a) reference point small size shape contours differ substantially shape previous size.0.1 []0.1 []0.01 (+) []0.01 (+) []0.001 []0.001 []1e-04 []1e-04 []Q-101: 1b) reference point phrase best describes shape contours size found question (1a).contours straight almost exactly parallel evenly spaced (+) []contours straight almost exactly parallel evenly spaced (+) []contours straight, almost exactly parallel, unevenly spaced. []contours straight, almost exactly parallel, unevenly spaced. []contours straight, fan bit []contours straight, fan bit []contours curved concentric evenly spaced []contours curved concentric evenly spaced []contours curved concentric, unevenly spaced. []contours curved concentric, unevenly spaced. []Q-102: 2a) reference point B small size shape contours differ substantially shape previous size.0.1 []0.1 []0.01 (+) []0.01 (+) []0.001 []0.001 []1e-04 []1e-04 []Q-103: 2b) reference point B phrase best describes shape contours size found question (2a).contours straight almost exactly parallel evenly spaced (+) []contours straight almost exactly parallel evenly spaced (+) []contours straight, almost exactly parallel, unevenly spaced. []contours straight, almost exactly parallel, unevenly spaced. []contours straight, fan bit []contours straight, fan bit []contours curved concentric evenly spaced []contours curved concentric evenly spaced []contours curved concentric, unevenly spaced. []contours curved concentric, unevenly spaced. []Q-104: 3a) reference point C small size shape contours differ substantially shape previous size.0.1 []0.1 []0.01 []0.01 []0.001 (+) []0.001 (+) []1e-04 []1e-04 []Q-105: 3b) reference point C phrase best describes shape contours size found question (3a).contours straight almost exactly parallel evenly spaced (+) []contours straight almost exactly parallel evenly spaced (+) []contours straight, almost exactly parallel, unevenly spaced. []contours straight, almost exactly parallel, unevenly spaced. []contours straight, fan bit []contours straight, fan bit []contours curved concentric evenly spaced []contours curved concentric evenly spaced []contours curved concentric, unevenly spaced. []contours curved concentric, unevenly spaced. []Q-106: 4a) reference point D small size shape contours differ substantially shape previous size.0.1 []0.1 []0.01 []0.01 []0.001 []0.001 []0.0001 (+) []0.0001 (+) []::: {.etude-question}Q-107: 4b) reference point D phrase best describes shape contours size found question (4a).contours straight almost exactly parallel evenly spaced (+) [Almost always, zoom enough, contours straight, almost parallel, evenly spaced. exceptions reference point exactly local maximum minimum (point C close, exactly maximum) exactly saddle point (point D close, exactly saddle point).]contours straight almost exactly parallel evenly spaced (+) [Almost always, zoom enough, contours straight, almost parallel, evenly spaced. exceptions reference point exactly local maximum minimum (point C close, exactly maximum) exactly saddle point (point D close, exactly saddle point).]contours straight, almost exactly parallel, unevenly spaced. []contours straight, almost exactly parallel, unevenly spaced. []contours straight, fan bit []contours straight, fan bit []contours curved concentric evenly spaced []contours curved concentric evenly spaced []contours curved concentric, unevenly spaced. []contours curved concentric, unevenly spaced. []","code":"\nx0 <- -2.100\ny0 <-  3.000\nsize <- 1.0\ncontour_plot(g(x, y) ~ x + y,\n             domain(x = x0 + size*c(-1, 1),\n                    y = y0 + size*c(-1, 1)))"},{"path":"partial-change.html","id":"partial-change","chapter":"16 Partial change","heading":"16 Partial change","text":"[Deriv-4a] Understand many different slopes point non-constant function 2 variables.[Deriv-4b] Calculate partial derivatives contour plot[Deriv-4c] Understand “partial derivative” “changing one input holding constant inputs.”[Deriv-8b] Calculate partial derivatives “changing one input holding constant inputs.”[Deriv-4d] Know three properties gradient vectors","code":""},{"path":"partial-change.html","id":"all-other-things-being-equal","chapter":"16 Partial change","heading":"16.1 All other things being equal …","text":"Open sandbox use following commands make “surface plot” contour plot function \\(g(x)\\) centered reference point \\((x_0\\!=\\!0,\\, y_0\\!=\\!0)\\).Rotate graphic around feel comfortable controls.making size smaller, can zoom around reference point. Zoom gradually (say, size = 1.0, 0.5, 0.1, 0.05, 0.01) reach point surface plot (practically) pretty simple inclined plane.either surface plot contour plot, zoomed graph shows inclined plane, figure sign \\(\\partial_x g(0,0)\\) \\(\\partial_y g(0,0)\\).Q-108: answer best describes signs partial derivatives \\(g(x,y)\\) reference point \\((x_0=0, y_0=0)\\)?\\(\\partial_x g(0,0)\\) pos, \\(\\partial_y g(0,0)\\) pos []\\(\\partial_x g(0,0)\\) pos, \\(\\partial_y g(0,0)\\) pos []\\(\\partial_x g(0,0)\\) pos, \\(\\partial_y g(0,0)\\) neg []\\(\\partial_x g(0,0)\\) pos, \\(\\partial_y g(0,0)\\) neg []\\(\\partial_x g(0,0)\\) neg, \\(\\partial_y g(0,0)\\) neg []\\(\\partial_x g(0,0)\\) neg, \\(\\partial_y g(0,0)\\) neg []\\(\\partial_x g(0,0)\\) neg, \\(\\partial_y g(0,0)\\) pos. (+) []\\(\\partial_x g(0,0)\\) neg, \\(\\partial_y g(0,0)\\) pos. (+) []\\(\\partial_x g(0,0)\\) 0, \\(\\partial_y g(0,0)\\) pos []\\(\\partial_x g(0,0)\\) 0, \\(\\partial_y g(0,0)\\) pos []Consider close function around reference point center graph.eye, estimate derivatives function reference point \\((x_0=-2, y_0=-5)\\).Q-109: numerical value \\(\\partial_x g(x,y)\\) reference point?-1 []-1 []-0.50 []-0.50 []-0.25 []-0.25 []0 []0 []0.25 []0.25 []0.50 (+) []0.50 (+) []1 []1 []Q-110: numerical value \\(\\partial_y g(x,y)\\) reference point?-1 []-1 []-0.50 []-0.50 []-0.25 []-0.25 []0 []0 []0.25 []0.25 []0.50 []0.50 []1 (+) []1 (+) []next questions ask second-order partial derivatives. know, second derivative first derivative changes x y. Insofar function simple inclined plane, contours straight, parallel, evenly spaced, second derivatives zero. can see plane: contours curve bit.determining second derivatives eye graph, encouraged compare first derivatives opposing edges graph, opposed nearby points.Q-111: sign \\(\\partial_{xx} g(x,y)\\) reference point?negative (+) []negative (+) []positive []positive []Q-112: sign \\(\\partial_{yy} g(x,y)\\) reference point?negative []negative []positive (+) []positive (+) []Q-113: sign \\(\\partial_{xy} g(x,y)\\) reference point?negative []negative []positive (+) []positive (+) []::: {.etude-question}Q-114: sign \\(\\partial_{yx} g(x,y)\\) reference point?negative []negative []positive (+) []positive (+) []numerous occasions professional life, one positions:decision-maker presented results analysis conducted team unknown reliability, need figure whether telling credible.member analysis team needing demonstrate decision-maker work believed.example, consider one functions presented comedy book, Geek Logic: 50 Foolproof Equations Everyday Life (2006), Garth Sundem. particular function ’ll consider Dr(), intended help answer question, “go doctor?”\\[\\mbox{Dr}(d, c, p,  e,  n, s) = \\frac{\\frac{s^2}{2} + e(n-e)}{100 -  3(d + \\frac{p^3}{70} - c)}\\] \\(d\\) = many days past month incapacitated? \\(d_0 \\equiv 3\\)\\(c\\) = issue seem getting better worse. (-10 10 -10 “circling drain” 10 “dramatic improvement”) \\(c_0 \\equiv -2\\)\\(p\\) = much pain discomfort currently experiencing? (1-10 10 “currently holding detached toe Ziploc bag”) \\(p_0 = 3\\)\\(e\\) = embarrassing issue? (1-10 10 “slipped ice fell 1972 Mercedes-Benz hood ornament, now part body”) \\(e_0 = 4\\)\\(n\\) = noticeable issue? (1-10 10 “fell asleep waffle iron”) \\(n_0 = 5\\)\\(s\\) = serious issue seem? (1-10 10 “may well nail embedded frontal lobe [brain]”) \\(s_0 = 3\\)Although function offered tongue--cheek, let’s examine see even roughly matches common sense. tool use relates low-order polynomial approximation around reference point examining appropriate partial derivatives. save time, stipulate reference point , noted description variables .code creates R implementation function set default values variables given reference point. can use sandbox try different changes input quantities.According instructions book, Dr()\\(> 1\\), go doctor.Essay question Q-115: 1) value Dr() reference point 0.10, indicating shouldn’t go doctor. don’t yet know whether 0.10 close decision threshold 1 far away. Describe reasonable way figure . Report description results .Essay question Q-116: six inputs function. Go list six (without thinking hard ) write intuitive sense whether increase one point input raise lower output Dr() reference point. Also write whether think input large small determinant whether go doctor. (don’t need refer Dr() function , just intuitive sense effect inputs.)operator D() can calculate partial derivatives. can calculate value partial derivative easily reference point, using expression like , gives value partial Dr() respect input \\(s\\) reference point:’re now going use partial derivatives compare intuition going doctor function say. course, don’t know yet whether function reasonable, don’t disappointed intuition conflicts function.Essay question Q-117: Calculate numerical value partial derivatives reference point. List say, one, whether accords intuition.","code":"\ng <- rfun( ~ x + y, seed = 802, n = 15)\nx0 <-  0\ny0 <-  0\nsize <- 5\ninteractive_plot(g(x, y) ~ x + y,\n             domain(x = x0 + size*c(-1, 1),\n                    y = y0 + size*c(-1, 1)))\ncontour_plot(g(x, y) ~ x + y,\n             domain(x = x0 + size*c(-1, 1),\n                    y = y0 + size*c(-1, 1)))\nD(Dr(s = s) ~ s)()"},{"path":"partial-change.html","id":"gradient-vector","chapter":"16 Partial change","heading":"16.2 Gradient vector","text":"almost everyone, house expensive buy cash, people need borrow money. usual form loan called “mortgage”. Mortgages extend many years involve paying fixed amount month. amount calculated , paying month duration mortgage, last payment completely repay amount borrowed plus accumulated interest.monthly mortgage payment dollars, \\(P\\), house function three variables, \\[P(, r, N)\\] \\(\\) amount borrowed dollars, \\(r\\) interest rate (per year), \\(N\\) number years mortgage paid .studio apartment selling $220,000. need borrow $184,000 make purchase.Q-118: Suppose \\(P(184000,4,10) = 2180.16\\). tell financial terms?monthly cost borrowing $184,000 10 years 4% interest per year. (+) []monthly cost borrowing $184,000 10 years 4% interest per year. (+) []monthly cost borrowing $184,000 4 years 10% interest per year. [’ve got order argument wrong.]monthly cost borrowing $184,000 4 years 10% interest per year. [’ve got order argument wrong.]annual cost mortgage 4% interest 10 years. [output function \\(P()\\) monthly mortgage payment.]annual cost mortgage 4% interest 10 years. [output function \\(P()\\) monthly mortgage payment.]annual cost mortgage 10% interest 4 years [output function \\(P()\\) monthly mortgage payment.]annual cost mortgage 10% interest 4 years [output function \\(P()\\) monthly mortgage payment.]Q-119: expect quantity \\(\\partial P / \\partial \\)?’s positive (+) [borrow money, holding mortgage duration interest rate constant, going pay month.]’s positive (+) [borrow money, holding mortgage duration interest rate constant, going pay month.]’s zero []’s zero []’s negative []’s negative []Q-120: expect quantity \\(\\partial P / \\partial N\\)?’s positive []’s positive []’s zero []’s zero []’s negative (+) [borrow amount money interest rate, years pay back, monthly payment smaller.]’s negative (+) [borrow amount money interest rate, years pay back, monthly payment smaller.]Q-121: Suppose \\(\\partial P / \\partial r (184000,4,30) =\\) $145.64. financial significance number $145.65??interest rate \\(r\\) went 4 5, monthly payment increase $145.65. [perfectly reasonable answer, … recall derivative gives rate increase output function input changes tiny amount. turns 1 percentage point increase interest rate large amount change.]interest rate \\(r\\) went 4 5, monthly payment increase $145.65. [perfectly reasonable answer, … recall derivative gives rate increase output function input changes tiny amount. turns 1 percentage point increase interest rate large amount change.]interest rate \\(r\\) went 4 4.001, monthly payment increase $145.65. [indeed small change interest rate, value derivative rate increase, increase .]interest rate \\(r\\) went 4 4.001, monthly payment increase $145.65. [indeed small change interest rate, value derivative rate increase, increase .]interest rate \\(r\\) went 4 4.001, monthly payment increase $0.001 imes $145.65. (+) [might think nobody concerned small increase interest rate. knowing result small increase allows us calculate impact large increase process called integration.]interest rate \\(r\\) went 4 4.001, monthly payment increase $0.001 imes $145.65. (+) [might think nobody concerned small increase interest rate. knowing result small increase allows us calculate impact large increase process called integration.]economic theory, quantity demand good decreasing function price good increasing function price competing good.classical example apple juice competes orange juice. demand orange juice units thousands liters orange juice. price units dollars per liter.’s graph input variables unlabeled.concept partial derivatives makes much easier think situation. two partial derivative functions relevant function graph. Well denote input variables apple orange, remember prices commodities dollars per liter.\\(\\partial_\\mbox{apple} \\mbox{demand}()\\) – demand changes apple-juice price goes , holding orange-juice price constant. (Another notation verbose perhaps easier read \\(\\frac{\\partial\\, \\mbox{demand}}{\\partial\\,\\mbox{apple}}\\))\\(\\partial_\\mbox{orange} \\mbox{demand}()\\) – demand changes orange-juice price goes , holding apple-juice price constant. (Another notation: \\(\\frac{\\partial\\, \\mbox{demand}}{\\partial\\,\\mbox{orange}}\\))Notice notation names output single input changed–inputs held constant.first paragraph problem gives economic theory amounts saying one partial derivatives positive negative.Q-122: numbers labeling contours?Quantity orange juice. (+) []Quantity orange juice. (+) []Price apple juice. [prices apple juice orange juice inputs function. Input values displayed position axis. contour labels identify output value input corresponds point contour.]Price apple juice. [prices apple juice orange juice inputs function. Input values displayed position axis. contour labels identify output value input corresponds point contour.]Price orange juice. [prices apple juice orange juice inputs function. Input values displayed position axis. contour labels identify output value input corresponds point contour.]Price orange juice. [prices apple juice orange juice inputs function. Input values displayed position axis. contour labels identify output value input corresponds point contour.]Quantity apple juice. [reasonable answer, function output quantity orange juice.]Quantity apple juice. [reasonable answer, function output quantity orange juice.]Q-123: proper translation notation \\(\\partial_\\mbox{apple}\\mbox{demand}()\\)?partial derivative orange-juice demand repect apple-juice price (+) []partial derivative orange-juice demand repect apple-juice price (+) []partial derivative apple-juice price repect demand orange juice [Derivatives always respect input variable. Demand orange juice output variable.]partial derivative apple-juice price repect demand orange juice [Derivatives always respect input variable. Demand orange juice output variable.]partial derivative apple-juice demand *respect price apple juice [problem orange-juice demand, apple-juice demand.]partial derivative apple-juice demand *respect price apple juice [problem orange-juice demand, apple-juice demand.]partial derivative orange-juice price respect apple-juice price. [input variables demand function. partial derivative always change output one inputs changes, change one input another input changes.]partial derivative orange-juice price respect apple-juice price. [input variables demand function. partial derivative always change output one inputs changes, change one input another input changes.]Q-124: According economic theory described , one partial derivatives positive negative. positive.\\(\\partial_\\mbox{apple} \\mbox{demand}()\\) (+) []\\(\\partial_\\mbox{apple} \\mbox{demand}()\\) (+) []\\(\\partial_\\mbox{orange} \\mbox{demand}()\\) [orange juice prices went , drink orange juice?]\\(\\partial_\\mbox{orange} \\mbox{demand}()\\) [orange juice prices went , drink orange juice?]Q-125: vertical axis measure?Price orange juice (+) []Price orange juice (+) []Quantity apple juice []Quantity apple juice []Quantity orange juice []Quantity orange juice []Price apple juice []Price apple juice []Q-126: Consider magnitude (absolute value) partial derivative demand respect orange-juice price. magnitude greater toward top graph bottom?top (+) []top (+) []bottom [horizontal distance contour lines larger bottom graph top. Far-apart contours mean function flatter.]bottom [horizontal distance contour lines larger bottom graph top. Far-apart contours mean function flatter.]neither [Remember, ’re talking partial derivative respect orange juice price. corresponds slope moving horizontal direction.]neither [Remember, ’re talking partial derivative respect orange juice price. corresponds slope moving horizontal direction.]contour plot function \\(g(y, z)\\) overlaid vectors. black vector correct representation gradient (root vector). vectors also supposed represent gradient, might something wrong (might ). ’re job say ’s wrong vectors.Q-127: ’s wrong red vector?nothing []nothing []long (+) [red vector located place function almost level. can tell contour lines spaced far apart. magnitude gradient small area. , red vector even longer black vector, even though black steep area (closely spaced contours).]long (+) [red vector located place function almost level. can tell contour lines spaced far apart. magnitude gradient small area. , red vector even longer black vector, even though black steep area (closely spaced contours).]short []short []points downhill []points downhill []points uphill [Pointing uphill gradient vectors ! problem .]points uphill [Pointing uphill gradient vectors ! problem .]wrong direction entirely []wrong direction entirely []Q-128: ’s wrong green vector?nothing []nothing []long [Note vector reflects steepness point root vector drawn. root green vector area contour lines spaced similarly area near root black vector. ’s correct length green vector similar length black vector.]long [Note vector reflects steepness point root vector drawn. root green vector area contour lines spaced similarly area near root black vector. ’s correct length green vector similar length black vector.]short []short []points downhill (+) [root green vector near contour=4, head contour=2. vector incorrectly pointing downhill. Gradients point steepest direction uphill.]points downhill (+) [root green vector near contour=4, head contour=2. vector incorrectly pointing downhill. Gradients point steepest direction uphill.]points uphill [Pointing uphill gradient vectors ! problem .]points uphill [Pointing uphill gradient vectors ! problem .]wrong direction entirely []wrong direction entirely []Q-129: ’s wrong blue vector?nothing (+) []nothing (+) []long []long []short [blue vector flat area function. ’s ’s short.]short [blue vector flat area function. ’s ’s short.]points downhill []points downhill []points uphill [Pointing uphill gradient vectors ! problem .]points uphill [Pointing uphill gradient vectors ! problem .]wrong direction entirely []wrong direction entirely []Q-130: ’s wrong orange vector?nothing []nothing []long []long []short []short []points downhill []points downhill []points uphill []points uphill []wrong direction entirely (+) [Gradient vectors perpendicular nearby contours point uphill. orange vector neither]wrong direction entirely (+) [Gradient vectors perpendicular nearby contours point uphill. orange vector neither]Q-131: ’s wrong gray vector?nothing []nothing []long []long []short (+) [function practically steep root gray vector root black vector. (can tell spacing contour lines.) magnitude gray vector just magnitude black vector.]short (+) [function practically steep root gray vector root black vector. (can tell spacing contour lines.) magnitude gray vector just magnitude black vector.]points downhill []points downhill []points uphill []points uphill []","code":""},{"path":"approximation-around-a-point.html","id":"approximation-around-a-point","chapter":"17 Approximation around a point","heading":"17 Approximation around a point","text":"following graph shows function \\(f(x)\\). Five values \\(x\\) labelled , B, …. possible values \\(x_0\\) questions.graphs follow show approximation \\(f(x)\\) one points , B, …. graph. approximations either constant (“order 0” approximation), linear (“order 1” approximation), quadratic (“order 2” approximation), something else. graph, say order approximation used.Q-132: order approximation graph ()?constant (+) []constant (+) []linear [linear approximation exactly slope \\(f()\\) reference point \\(x_0\\).]linear [linear approximation exactly slope \\(f()\\) reference point \\(x_0\\).]quadratic []quadratic []none []none []Q-133: reference position \\(x_0\\) approximation graph ()?[bad choice, notice constant approximation value little lower f().][bad choice, notice constant approximation value little lower f().]B (+) [’re right. correct value f(B).]B (+) [’re right. correct value f(B).]C []C []D []D []E []E []None []None []Q-134: order approximation graph (II)?constant []constant []linear []linear []quadratic (+) []quadratic (+) []none []none []Q-135: reference position \\(x_0\\) approximation graph (II)?[][]B []B []C (+) []C (+) []D [reference position, value approximation always \\(f(x_0)\\). ’s case .]D [reference position, value approximation always \\(f(x_0)\\). ’s case .]E []E []None []None []Q-136: order approximation graph (III)?constant []constant []linear []linear []quadratic []quadratic []none (+) [can’t two bends linear quadratic function.]none (+) [can’t two bends linear quadratic function.]Q-137: reference position \\(x_0\\) approximation graph (III)?[][]B []B []C []C []D [reference position, value approximation always \\(f(x_0)\\). ’s case .]D [reference position, value approximation always \\(f(x_0)\\). ’s case .]E []E []None (+) [’s polynomial approximation points.]None (+) [’s polynomial approximation points.]Q-138: order approximation graph (IV)?constant []constant []linear (+) []linear (+) []quadratic []quadratic []none []none []Q-139: reference position \\(x_0\\) approximation graph (IV)?(+) [](+) []B []B []C []C []D []D []E []E []None []None []Q-140: order approximation graph (V)?constant []constant []linear []linear []quadratic (+) []quadratic (+) []none []none []Q-141: reference position \\(x_0\\) approximation graph (V)?[][]B []B []C []C []D []D []E []E []None (+) []None (+) []somewhat complex function two variables. labels , B, C, D mark possible reference points \\((x_0, y_0)\\) around polynomial approximations made.following graphs, say kind two-variable polynomial approximation made reference point approximation centered .Q-142: order approximation graph ()?constant []constant []linear [contours straight approximation linear]linear [contours straight approximation linear]bilinear (+) [Right. turns quadratic approximation similar, presumably \\(d_{xx}f(x_0, y_0)\\) \\(d_{yy} f(x_0, y_0)\\) small make difference.]bilinear (+) [Right. turns quadratic approximation similar, presumably \\(d_{xx}f(x_0, y_0)\\) \\(d_{yy} f(x_0, y_0)\\) small make difference.]quadratic [bad answer. case, bilinear approximation looks lot like quadratic.]quadratic [bad answer. case, bilinear approximation looks lot like quadratic.]Q-143: reference position \\((x_0, y_0)\\) approximation graph ()?(+) [](+) []B []B []C []C []D []D []Q-144: order approximation graph (II)?constant []constant []linear [contours straight approximation linear]linear [contours straight approximation linear]bilinear (+) [Right. turns quadratic approximation similar, presumably \\(d_{xx}f(x_0, y_0)\\) \\(d_{yy} f(x_0, y_0)\\) small make difference.]bilinear (+) [Right. turns quadratic approximation similar, presumably \\(d_{xx}f(x_0, y_0)\\) \\(d_{yy} f(x_0, y_0)\\) small make difference.]quadratic [circular (elliptical) contours hallmark quadratic approximation near maximum minimum.]quadratic [circular (elliptical) contours hallmark quadratic approximation near maximum minimum.]:::Q-145: reference position \\((x_0, y_0)\\) approximation graph (II)?[][]B (+) [Practically bullseye B!]B (+) [Practically bullseye B!]C []C []D []D []Q-146: order approximation graph (III)?constant []constant []linear (+) [linear approximation always produces straight, parallel, evenly spaced contours.]linear (+) [linear approximation always produces straight, parallel, evenly spaced contours.]bilinear []bilinear []quadratic []quadratic []Q-147: reference position \\((x_0, y_0)\\) approximation graph (III)?[][]B []B []C []C []D (+) []D (+) []Q-148: order approximation graph (IV)?constant []constant []linear [contours straight approximation linear]linear [contours straight approximation linear]bilinear [bad answer. curvature bilinear approximations always one direction.]bilinear [bad answer. curvature bilinear approximations always one direction.]quadratic (+) [Sometimes quadratic approximations produce elliptical contours, previous problem. sometimes produce X-shaped contours seen . cases, contours curve opposing ways different parts domain. way, contour pattern seen upper right graph corresponds shape saddle: curving along one line along perpendicular line. place right middle saddle called ‘saddle point’.]quadratic (+) [Sometimes quadratic approximations produce elliptical contours, previous problem. sometimes produce X-shaped contours seen . cases, contours curve opposing ways different parts domain. way, contour pattern seen upper right graph corresponds shape saddle: curving along one line along perpendicular line. place right middle saddle called ‘saddle point’.]:::::: {.etude-question}Q-149: reference position \\((x_0, y_0)\\) approximation graph (IV)?[][]B []B []C (+) []C (+) []D []D []","code":"\nlibrary(mosaic)\nlibrary(mosaicCalc)"}]
