[{"path":"index.html","id":"welcome-to-calculus","chapter":"Welcome to calculus","heading":"Welcome to calculus","text":"Calculus set concepts techniques form mathematical basis dealing motion, growth, decay, oscillation. phenomena can simple ball arcing ballistically air complex airflow wing generates lift. Calculus used biology business, chemistry, physics engineering. foundation weather prediction understanding climate change. basis algorithms heart rate blood oxygen measurement wristwatches. key part language science. electron orbitals chemistry, stresses bones beams, business cycle recession rebound understood primarily calculus. 10Calculus central science beginnings. coincidence scientific method introduced language calculus invented small group people historical period known Enlightenment. Learning calculus always badge honor entry ticket professions. Millions students’ career ambitions enhanced passing calculus course thwarted lack access one.1880s, hit musical featured “model modern major general.” One claims modernity: “’m good integral differential calculus.” (Watch .)modern 1880 modern anymore. Yet, amazingly, calculus today every bit central science technology ever much important logistics, economics myriad fields ever . reason science, engineering, society now fully adopted computer almost aspects work, study, life. collection use data growing dramatically. Machine learning become way human decision makers interact data.Think means become “computerized.” take everyday example, consider video. span human life, moved system involved people going theaters watch shadows recorded cellulose film distribution airwaves low-resolution television, introduction high-def broadcast video, demand streaming huge libraries movies. Just anyone can record, edit, distribute video. range topics (including calculus) can access video tutorial demonstration incredibly vast. recent progress owed computers. 20The stuff\" computers operate, transform, transmit always mathematical representations stored bits. creation mathematical representations objects events real world essential every task sort computer performs. Calculus key component inventing using representations.may scratching head. calculus important, many friends took calculus came away wondering ? ’s important “slopes” “areas” come high-school teacher might trouble telling calculus ?disconnect enthusiasm expressed preceding paragraphs lived experience students real. two major reasons disconnect, tackle head-book.First, teachers mathematics deep respect tradition. respect merits result almost calculus taught using methods appropriate era paper pencil computer era. see, book express concepts calculus way carries directly uses calculus computers genuine work. 30Second, uses calculus enabled topics Calc Calc II, courses /II preliminary: linear algebra dynamics. small fraction students start Calc ever reach parts calculus useful. Fortunately, large amount bloat standard textbook topics Calc /II can removed make room important topics. try book.","code":""},{"path":"index.html","id":"computing-and-apps","chapter":"Welcome to calculus","heading":"Computing and apps","text":"text provides two complementary ways access computing. intuitive designed purely exercise visualize mathematical concepts mouse-driven, graphical apps. illustrate, app ’ll use Block 6. can click snapshot open app browser.fundamentally, carrying computing composing computer commands text computer carry commands. One good way sandbox, kind app provides safe place enter commands. ’ll open sandbox (click image ) browser.’ve entered computer commands, press “Run” button commands carried .40An important technique teaching learning computing present scaffolding computer commands. first, scaffolding may complete, correct commands can cut--paste sandbox calculation carried . times left student fill part ’s left scaffolding. example, introduce drawing graphs functions choice domain, might see scaffold blanks filled :can hardly expected point make sense part command, soon .get used computing sandbox, may prefer install R RStudio software laptop. usually provides faster response lowers load sandbox cloud servers used students.Experienced R users may even prefer skip sandbox entirely use standard resources RStudio edit evaluate computer commands. ’d use exactly R commands regardless whether use cloud server laptop.","code":"slice_plot( exp(-3*t) ~ t, domain( --fill in domain-- ))"},{"path":"index.html","id":"exercises-and-feedback","chapter":"Welcome to calculus","heading":"Exercises and feedback","text":"Learning facilitated rapid, formative feedback. Many exercises book arranged give .50Short answer exercises often arranged give immediate feedback goes beyond right--wrong. words, answer incorrect, try tell incorrect provide hint guide correct answer. frivolous example:Question word calculus mean literally?small stone ✔︎ stones part apparatus numerical calculations, back days pencil invented. source trouble students. ︎✘ Calculus sometimes reputation, say, “pain, gain.” Find better answer. element calcium. ︎✘ , get right answer ’ll realize two related cases. exercises meant drill, provide right--wrong feedback. Still exercises provide feedback . Typically, intended raise stakes graded work, encouraging think carefully choosing answer.","code":""},{"path":"outline-of-block-1.html","id":"outline-of-block-1","chapter":"Outline of Block 1","heading":"Outline of Block 1","text":"section development purposes . included released text.outline established May 17-19, 2021 working sessions USAFA. ’s copied directly Teams document. ’ve made modifications noted [[square brackets]] deletions bold face additions..Block 1 Functions Mathematical ModelingIntro course\nNTI\ncan make point Linear Function model change drawing pictures discussing certain quantities change two points time\ndiscussion Calc Z “Z different,” “Z new Calculus USAFA transitioning; may see differences course traditional course peers taking.”\nOveall goal day 1 build cadet’s confidence can successful. requires us show systems, resources, philosophy, expectations (e.g., college \\(\\neq\\) high school) behind course.\n\nLecture Topics\nCalculus Z overview trajectory\nCourse resources systems\nCalculus study change\nLinear Function model “change” “slope”\n\nOutcomes\nUnderstand equation relates quantities, function maps inputs outputs\nUnderstand difference \\(\\equiv\\) \\(=\\)\nable identify function’s input\n\nReadings (assigned M1, skim , read )\nChapter 1\n\nAdditional Resources\nNone\n\nAssignments\nHW01\nFeedback01\nDD01\n\nNTI\ncan make point Linear Function model change drawing pictures discussing certain quantities change two points time\ndiscussion Calc Z “Z different,” “Z new Calculus USAFA transitioning; may see differences course traditional course peers taking.”\nOveall goal day 1 build cadet’s confidence can successful. requires us show systems, resources, philosophy, expectations (e.g., college \\(\\neq\\) high school) behind course.\ncan make point Linear Function model change drawing pictures discussing certain quantities change two points timeThe discussion Calc Z “Z different,” “Z new Calculus USAFA transitioning; may see differences course traditional course peers taking.”Oveall goal day 1 build cadet’s confidence can successful. requires us show systems, resources, philosophy, expectations (e.g., college \\(\\neq\\) high school) behind course.Lecture Topics\nCalculus Z overview trajectory\nCourse resources systems\nCalculus study change\nLinear Function model “change” “slope”\nCalculus Z overview trajectoryCourse resources systemsCalculus study changeLinear Function model “change” “slope”Outcomes\nUnderstand equation relates quantities, function maps inputs outputs\nUnderstand difference \\(\\equiv\\) \\(=\\)\nable identify function’s input\nUnderstand equation relates quantities, function maps inputs outputsUnderstand difference \\(\\equiv\\) \\(=\\)able identify function’s inputReadings (assigned M1, skim , read )\nChapter 1\nChapter 1Additional Resources\nNone\nNoneAssignments\nHW01\nFeedback01\nDD01\nHW01Feedback01DD01Basics modeling functions\nNTI\nEmphasize functions map inputs outputs, pattern-book functions () flexible enough circumstances\nShow students graph 5 pattern-book functions, pick . (Use e.g. slice_plot(sin(x) ~ x), domain(x=c(-5,5))))\nShow scatter plot \\(f(x)\\equiv -x+2\\) explain \\(f(x)\\equiv x\\) good model motivate basic modeling function. [[[want make data scatter plot? , Mydata <- tibble(x = rnorm(100), y = -2*x + rnorm(100)/10)]]] See book position 295 actual data.\n\nLecture Topics\nPattern-book functions\nBasic shapes features zero crossings, maxima, slope, curvature, horizontal/vertical asymptote (). (’s vocabulary want know point.)\n[[Basic Modeling functions behaviors based parameters]]-save another day.\n\nOutcomes\nKnow graphs, domains, ranges, horizonal/vertical intercepts & asymptotes () pattern-book functions\nRecognize functions way modeling relationships real-world\n[Given parameters, describe parameters affect shape function]]-save another day\n\nReadings: Chapter 2\nAdditional Resources\nPDF - Exponential Functions Deep Dive\nMath Insight - Logarithm basics\nKhan Academy - Properties Logarithms\nRESOURCE TRIG VALUES (TRIG TABLE)\n\nAssignments\nProblems end chapter (written)\n\nQuiz question: functions horizontal asymptotes? [Give list, ask circle.] Similar vertical asymptote.\nNTI\nEmphasize functions map inputs outputs, pattern-book functions () flexible enough circumstances\nShow students graph 5 pattern-book functions, pick . (Use e.g. slice_plot(sin(x) ~ x), domain(x=c(-5,5))))\nShow scatter plot \\(f(x)\\equiv -x+2\\) explain \\(f(x)\\equiv x\\) good model motivate basic modeling function. [[[want make data scatter plot? , Mydata <- tibble(x = rnorm(100), y = -2*x + rnorm(100)/10)]]] See book position 295 actual data.\nEmphasize functions map inputs outputs, pattern-book functions () flexible enough circumstancesShow students graph 5 pattern-book functions, pick . (Use e.g. slice_plot(sin(x) ~ x), domain(x=c(-5,5))))Show scatter plot \\(f(x)\\equiv -x+2\\) explain \\(f(x)\\equiv x\\) good model motivate basic modeling function. [[[want make data scatter plot? , Mydata <- tibble(x = rnorm(100), y = -2*x + rnorm(100)/10)]]] See book position 295 actual data.Lecture Topics\nPattern-book functions\nBasic shapes features zero crossings, maxima, slope, curvature, horizontal/vertical asymptote (). (’s vocabulary want know point.)\n[[Basic Modeling functions behaviors based parameters]]-save another day.\nPattern-book functionsBasic shapes features zero crossings, maxima, slope, curvature, horizontal/vertical asymptote (). (’s vocabulary want know point.)[[Basic Modeling functions behaviors based parameters]]-save another day.Outcomes\nKnow graphs, domains, ranges, horizonal/vertical intercepts & asymptotes () pattern-book functions\nRecognize functions way modeling relationships real-world\n[Given parameters, describe parameters affect shape function]]-save another day\nKnow graphs, domains, ranges, horizonal/vertical intercepts & asymptotes () pattern-book functionsRecognize functions way modeling relationships real-world[Given parameters, describe parameters affect shape function]]-save another dayReadings: Chapter 2Additional Resources\nPDF - Exponential Functions Deep Dive\nMath Insight - Logarithm basics\nKhan Academy - Properties Logarithms\nRESOURCE TRIG VALUES (TRIG TABLE)\nPDF - Exponential Functions Deep DiveMath Insight - Logarithm basicsKhan Academy - Properties LogarithmsRESOURCE TRIG VALUES (TRIG TABLE)Assignments\nProblems end chapter (written)\nProblems end chapter (written)Quiz question: functions horizontal asymptotes? [Give list, ask circle.] Similar vertical asymptote.Functions /O Notational Structure functions (R<>Math)\nNTI\nRewrite \\(y=mx+b\\) \\(mx-y+b=0\\) show function notation eliminates ambiguity IO\nBreak student habit using “x-axis” “y-axis”; describe “horizontal” “vertical” axes\nBreak student habit using “x” “y”; instead say “input” “output”\nExplain parameters scale shift inputs/outputs. Ex: \\(C\\) \\(Ce^{kt}\\) scales output \\(k\\) scales input\nExample function without formula: \\(f:Cadet\\RoomNumber\\)\n\nTopics\nFunctions Input Ouptut (IO)\nIntroduce Multi-input functions\nFunction Representations\nNotation Conventions\nDistinguish mathematical symbols: \\(=\\), \\(\\equiv\\), $, <- See Secton ??\n\nOutcomes\nUnderstand function maps inputs outputs\nGiven input, able find output function one five standard forms:\nGraphs functions (including contour plots)\nTables inputs outputs\nWord descriptions\nComputer function name\nMathematical notation\n\nable translate traditional math notation R expressions\n\nReading: Chapter ?? & ??\n:\nProvide glossary notation across 6-blocks (+alternate forms)\n\nAssignments\nDD03\n\nNTI\nRewrite \\(y=mx+b\\) \\(mx-y+b=0\\) show function notation eliminates ambiguity IO\nBreak student habit using “x-axis” “y-axis”; describe “horizontal” “vertical” axes\nBreak student habit using “x” “y”; instead say “input” “output”\nExplain parameters scale shift inputs/outputs. Ex: \\(C\\) \\(Ce^{kt}\\) scales output \\(k\\) scales input\nExample function without formula: \\(f:Cadet\\RoomNumber\\)\nRewrite \\(y=mx+b\\) \\(mx-y+b=0\\) show function notation eliminates ambiguity IOBreak student habit using “x-axis” “y-axis”; describe “horizontal” “vertical” axesBreak student habit using “x” “y”; instead say “input” “output”Explain parameters scale shift inputs/outputs. Ex: \\(C\\) \\(Ce^{kt}\\) scales output \\(k\\) scales inputExample function without formula: \\(f:Cadet\\RoomNumber\\)Topics\nFunctions Input Ouptut (IO)\nIntroduce Multi-input functions\nFunction Representations\nNotation Conventions\nDistinguish mathematical symbols: \\(=\\), \\(\\equiv\\), $, <- See Secton ??\nFunctions Input Ouptut (IO)Introduce Multi-input functionsFunction RepresentationsNotation ConventionsDistinguish mathematical symbols: \\(=\\), \\(\\equiv\\), $, <- See Secton ??Outcomes\nUnderstand function maps inputs outputs\nGiven input, able find output function one five standard forms:\nGraphs functions (including contour plots)\nTables inputs outputs\nWord descriptions\nComputer function name\nMathematical notation\n\nable translate traditional math notation R expressions\nUnderstand function maps inputs outputsGiven input, able find output function one five standard forms:\nGraphs functions (including contour plots)\nTables inputs outputs\nWord descriptions\nComputer function name\nMathematical notation\nGraphs functions (including contour plots)Tables inputs outputsWord descriptionsComputer function nameMathematical notationBe able translate traditional math notation R expressionsReading: Chapter ?? & ??:\nProvide glossary notation across 6-blocks (+alternate forms)\nProvide glossary notation across 6-blocks (+alternate forms)Assignments\nDD03\nDD03QUIZ: Draw reasonable sketches nine pattern-book functions. addition overall shape function, label one point graph exact output value. (Hint: \\(\\dnorm(x)\\), highest possible output 0.3989423.)Parameterized functions models\nNTI\nIntroduce idea input meaning, output meaning relative input\nGive students function. change units input different unit (e.g. feet go Meters)\nLogarithms necessarily used end model; lever separate power exponential functions\nTODO: Think physical phenomenon appropriately modeled Logarithmic function power \\(p<1\\)\n\nFocus lesson entirely finding parameters Sine, Power, Exponential\n\nLecture Topics:\nModeling phenomenon basic modeling functions\nfind parameters basic modeling functions\nLinear\nSine\nPower\nExponential\nLogarithmic (note)\n\n\nObjectives\nGiven description real-world scenario, able identify appropriate basic modeling function\nGiven data, select parameters basic modeling functions “fit” data\n\nReading: Chapter ??\nQuiz questions: Draw MWLCS\nNTI\nIntroduce idea input meaning, output meaning relative input\nGive students function. change units input different unit (e.g. feet go Meters)\nLogarithms necessarily used end model; lever separate power exponential functions\nTODO: Think physical phenomenon appropriately modeled Logarithmic function power \\(p<1\\)\n\nFocus lesson entirely finding parameters Sine, Power, Exponential\nIntroduce idea input meaning, output meaning relative inputGive students function. change units input different unit (e.g. feet go Meters)Logarithms necessarily used end model; lever separate power exponential functions\nTODO: Think physical phenomenon appropriately modeled Logarithmic function power \\(p<1\\)\nTODO: Think physical phenomenon appropriately modeled Logarithmic function power \\(p<1\\)Focus lesson entirely finding parameters Sine, Power, ExponentialLecture Topics:\nModeling phenomenon basic modeling functions\nfind parameters basic modeling functions\nLinear\nSine\nPower\nExponential\nLogarithmic (note)\n\nModeling phenomenon basic modeling functionsHow find parameters basic modeling functions\nLinear\nSine\nPower\nExponential\nLogarithmic (note)\nLinearSinePowerExponentialLogarithmic (note)Objectives\nGiven description real-world scenario, able identify appropriate basic modeling function\nGiven data, select parameters basic modeling functions “fit” data\nGiven description real-world scenario, able identify appropriate basic modeling functionGiven data, select parameters basic modeling functions “fit” dataReading: Chapter ??Quiz questions: Draw MWLCS[[Combining 2+ functions]] ’ve integrated “Parameterized function” chapter.\nExamples\nNTIs\nTopics\nLinear Combination (ex: Polynomial)\nComposition scaling function (\\(e^{kt}) 1. Gallons/\\) Liters/Euros\nComposition (affine shift)\n1. Fahrenheit <> Celsius\n\nExamplesNTIsTopics\nLinear Combination (ex: Polynomial)\nComposition scaling function (\\(e^{kt}) 1. Gallons/\\) Liters/Euros\nComposition (affine shift)\n1. Fahrenheit <> Celsius\nLinear Combination (ex: Polynomial)Composition scaling function (\\(e^{kt}) 1. Gallons/\\) Liters/EurosComposition (affine shift)\n1. Fahrenheit <> CelsiusThe modeling process\nNTI:\nExamples mechanistic model situations:\nHeat engine: Work extracted heat going complete cycle.\nNeed know pressure times volume work.\nNeed know heat engine works: compression (work ), heating, expansion (work ), cooling\nArea loop work\n\nLaw mass action: speed reaction function concentration components. product, sum, … ?\n\nExamples data modeling\nEffectiveness vaccines.\nMeasure age, health, level exposure, vaccination status, whether fell ill COVID.\nModel probability versus time function age, health, exposure, vaccination. function can compared vaccination non-vaccination status. p(t | vaccinated) < 0.1 p(t | vaccinated), holding variables constant, vaccine 90% effective.\n\n\n\nTopics\nExponentials\nfunction asymptotically approach baseline, since takes infinite time get , start making educated guess. b. ’s relevant theory, use .\nE.g. objects cool ambient temperature nice theory. even isn’t complete: radiative balance environment, latent heat evaporation, …\nThings zero baseline: loss velocity friction air resistence time; value invested money; discounted value future money.\n\nmake baseline guess, check . instance, exponential decay …\nFigure long takes go distance \\(h\\) baseline distance \\(h/2\\). measure long takes go distance \\(2h\\) \\(h\\). baseline correct, two durations . \\(h \\longrightarrow h/2\\) duration shorter \\(2h\\longrightarrow h\\) duration, baseline high. Work example iterate reasonable answer.\nGiven baseline, finding doubling halving time convert value \\(k\\) \\(e^{kt}\\).\n\n\nSinusoids.\nEasy see parameters: baseline, amplitude sinusoid, first positive-going baseline crossing.\nHard see parameter: period. Best measure duration go several cycles, divide number cycles get period.\n\nHump/gaussian function.\n. Center pretty easy: argmax\nb. Emphasize rules thumb spotting width:\nhalf-width 60% height.\ndistance center marking transition concave concave .\nc. width strange name: “standard deviation”\nd. German 10 mark note commemorates Gauss gaussian\n\nSigmoid\n. Center argument gives rise 1/2 asymptotic value.\nb. Width distance center point function value 84% full range 16% full range.\n\nReadings: Chapter ??\nNTI:\nExamples mechanistic model situations:\nHeat engine: Work extracted heat going complete cycle.\nNeed know pressure times volume work.\nNeed know heat engine works: compression (work ), heating, expansion (work ), cooling\nArea loop work\n\nLaw mass action: speed reaction function concentration components. product, sum, … ?\n\nExamples data modeling\nEffectiveness vaccines.\nMeasure age, health, level exposure, vaccination status, whether fell ill COVID.\nModel probability versus time function age, health, exposure, vaccination. function can compared vaccination non-vaccination status. p(t | vaccinated) < 0.1 p(t | vaccinated), holding variables constant, vaccine 90% effective.\n\n\nExamples mechanistic model situations:\nHeat engine: Work extracted heat going complete cycle.\nNeed know pressure times volume work.\nNeed know heat engine works: compression (work ), heating, expansion (work ), cooling\nArea loop work\n\nLaw mass action: speed reaction function concentration components. product, sum, … ?\nHeat engine: Work extracted heat going complete cycle.\nNeed know pressure times volume work.\nNeed know heat engine works: compression (work ), heating, expansion (work ), cooling\nArea loop work\nNeed know pressure times volume work.Need know heat engine works: compression (work ), heating, expansion (work ), coolingArea loop workLaw mass action: speed reaction function concentration components. product, sum, … ?Examples data modeling\nEffectiveness vaccines.\nMeasure age, health, level exposure, vaccination status, whether fell ill COVID.\nModel probability versus time function age, health, exposure, vaccination. function can compared vaccination non-vaccination status. p(t | vaccinated) < 0.1 p(t | vaccinated), holding variables constant, vaccine 90% effective.\n\nEffectiveness vaccines.\nMeasure age, health, level exposure, vaccination status, whether fell ill COVID.\nModel probability versus time function age, health, exposure, vaccination. function can compared vaccination non-vaccination status. p(t | vaccinated) < 0.1 p(t | vaccinated), holding variables constant, vaccine 90% effective.\nMeasure age, health, level exposure, vaccination status, whether fell ill COVID.Model probability versus time function age, health, exposure, vaccination. function can compared vaccination non-vaccination status. p(t | vaccinated) < 0.1 p(t | vaccinated), holding variables constant, vaccine 90% effective.Topics\nExponentials\nfunction asymptotically approach baseline, since takes infinite time get , start making educated guess. b. ’s relevant theory, use .\nE.g. objects cool ambient temperature nice theory. even isn’t complete: radiative balance environment, latent heat evaporation, …\nThings zero baseline: loss velocity friction air resistence time; value invested money; discounted value future money.\n\nmake baseline guess, check . instance, exponential decay …\nFigure long takes go distance \\(h\\) baseline distance \\(h/2\\). measure long takes go distance \\(2h\\) \\(h\\). baseline correct, two durations . \\(h \\longrightarrow h/2\\) duration shorter \\(2h\\longrightarrow h\\) duration, baseline high. Work example iterate reasonable answer.\nGiven baseline, finding doubling halving time convert value \\(k\\) \\(e^{kt}\\).\n\n\nSinusoids.\nEasy see parameters: baseline, amplitude sinusoid, first positive-going baseline crossing.\nHard see parameter: period. Best measure duration go several cycles, divide number cycles get period.\n\nHump/gaussian function.\n. Center pretty easy: argmax\nb. Emphasize rules thumb spotting width:\nhalf-width 60% height.\ndistance center marking transition concave concave .\nc. width strange name: “standard deviation”\nd. German 10 mark note commemorates Gauss gaussian\n\nSigmoid\n. Center argument gives rise 1/2 asymptotic value.\nb. Width distance center point function value 84% full range 16% full range.\nExponentials\nfunction asymptotically approach baseline, since takes infinite time get , start making educated guess. b. ’s relevant theory, use .\nE.g. objects cool ambient temperature nice theory. even isn’t complete: radiative balance environment, latent heat evaporation, …\nThings zero baseline: loss velocity friction air resistence time; value invested money; discounted value future money.\n\nmake baseline guess, check . instance, exponential decay …\nFigure long takes go distance \\(h\\) baseline distance \\(h/2\\). measure long takes go distance \\(2h\\) \\(h\\). baseline correct, two durations . \\(h \\longrightarrow h/2\\) duration shorter \\(2h\\longrightarrow h\\) duration, baseline high. Work example iterate reasonable answer.\nGiven baseline, finding doubling halving time convert value \\(k\\) \\(e^{kt}\\).\n\nfunction asymptotically approach baseline, since takes infinite time get , start making educated guess. b. ’s relevant theory, use .\nE.g. objects cool ambient temperature nice theory. even isn’t complete: radiative balance environment, latent heat evaporation, …\nThings zero baseline: loss velocity friction air resistence time; value invested money; discounted value future money.\nE.g. objects cool ambient temperature nice theory. even isn’t complete: radiative balance environment, latent heat evaporation, …Things zero baseline: loss velocity friction air resistence time; value invested money; discounted value future money.make baseline guess, check . instance, exponential decay …\nFigure long takes go distance \\(h\\) baseline distance \\(h/2\\). measure long takes go distance \\(2h\\) \\(h\\). baseline correct, two durations . \\(h \\longrightarrow h/2\\) duration shorter \\(2h\\longrightarrow h\\) duration, baseline high. Work example iterate reasonable answer.\nGiven baseline, finding doubling halving time convert value \\(k\\) \\(e^{kt}\\).\nFigure long takes go distance \\(h\\) baseline distance \\(h/2\\). measure long takes go distance \\(2h\\) \\(h\\). baseline correct, two durations . \\(h \\longrightarrow h/2\\) duration shorter \\(2h\\longrightarrow h\\) duration, baseline high. Work example iterate reasonable answer.Given baseline, finding doubling halving time convert value \\(k\\) \\(e^{kt}\\).Sinusoids.\nEasy see parameters: baseline, amplitude sinusoid, first positive-going baseline crossing.\nHard see parameter: period. Best measure duration go several cycles, divide number cycles get period.\nEasy see parameters: baseline, amplitude sinusoid, first positive-going baseline crossing.Hard see parameter: period. Best measure duration go several cycles, divide number cycles get period.Hump/gaussian function.\n. Center pretty easy: argmax\nb. Emphasize rules thumb spotting width:\nhalf-width 60% height.\ndistance center marking transition concave concave .\nc. width strange name: “standard deviation”\nd. German 10 mark note commemorates Gauss gaussian\nhalf-width 60% height.distance center marking transition concave concave .\nc. width strange name: “standard deviation”\nd. German 10 mark note commemorates Gauss gaussianSigmoid\n. Center argument gives rise 1/2 asymptotic value.\nb. Width distance center point function value 84% full range 16% full range.Readings: Chapter ??Slope function\nNTI:\nbroaden idea describing slope line general function?\n\\(h\\) point\nslope function function \\(s()\\) built function \\(f()\\)\n\nTopics\nAverage rate change. (Example: Quarterly return stocks. HW tree harvesting.) (Example 2: Sine wave difference around 1 period. maybe becomes low-pass filter example accumulation.)\n\\(s(x) \\equiv \\frac{f(x + 0.1) - f(x)}{0.1}\\)\nExcept linear function, slope function depends big \\(h\\) . let’s fix \\(h\\) figure things .\nEvery function slope function.\n’s helpful name functions know come . ’re going use \\(f'()\\) stand slope function \\(f()\\)\n\nReading: Chapter ??\nNTI:\nbroaden idea describing slope line general function?\n\\(h\\) point\nslope function function \\(s()\\) built function \\(f()\\)\nbroaden idea describing slope line general function?\\(h\\) pointThe slope function function \\(s()\\) built function \\(f()\\)Topics\nAverage rate change. (Example: Quarterly return stocks. HW tree harvesting.) (Example 2: Sine wave difference around 1 period. maybe becomes low-pass filter example accumulation.)\n\\(s(x) \\equiv \\frac{f(x + 0.1) - f(x)}{0.1}\\)\nExcept linear function, slope function depends big \\(h\\) . let’s fix \\(h\\) figure things .\nEvery function slope function.\n’s helpful name functions know come . ’re going use \\(f'()\\) stand slope function \\(f()\\)\nAverage rate change. (Example: Quarterly return stocks. HW tree harvesting.) (Example 2: Sine wave difference around 1 period. maybe becomes low-pass filter example accumulation.)\\(s(x) \\equiv \\frac{f(x + 0.1) - f(x)}{0.1}\\)Except linear function, slope function depends big \\(h\\) . let’s fix \\(h\\) figure things .Every function slope function.’s helpful name functions know come . ’re going use \\(f'()\\) stand slope function \\(f()\\)Reading: Chapter ??Composition Generally\nNTI:\ntemperature driving mountain?\nProblem calculating slope sigmoid\n\nTopics:\nFormula Hump (exponential quadratic)\nDriving mountain temperature vs altitude, altitude vs road position, road position vs time\nHump slope function Sigmoid\n\nReading: Chapter ??\nNTI:\ntemperature driving mountain?\nProblem calculating slope sigmoid\ntemperature driving mountain?Problem calculating slope sigmoidTopics:\nFormula Hump (exponential quadratic)\nDriving mountain temperature vs altitude, altitude vs road position, road position vs time\nHump slope function Sigmoid\nFormula Hump (exponential quadratic)Driving mountain temperature vs altitude, altitude vs road position, road position vs timeHump slope function SigmoidReading: Chapter ??Multiplication functions\nNTIs:\nMultiplication Sines, exponential, hump, sigmoid\n\nTopics:\nMultiplying functions inputs gives function inputs.\nMultiplying functions different inputs gives function whose inputs union inputs multiplicands.\n\nable reverse engineer products: sinexp, sinhump, sinsigmoid\nReading: Chapter ??\nNTIs:\nMultiplication Sines, exponential, hump, sigmoid\nMultiplication Sines, exponential, hump, sigmoidTopics:\nMultiplying functions inputs gives function inputs.\nMultiplying functions different inputs gives function whose inputs union inputs multiplicands.\nMultiplying functions inputs gives function inputs.Multiplying functions different inputs gives function whose inputs union inputs multiplicands.able reverse engineer products: sinexp, sinhump, sinsigmoidReading: Chapter ??Multivariate functions\nNTIs:\nAsk students compute slope multi-input function best can imagine (homework?) Build imagined function (slope) plot function\n\nOutcomes:\nable read & construct (R) Contour Plots\nable read & construct (R) Surface Plots\nable read table w/ 2 inputs\n\nReading: Chapter ??\nNTIs:\nAsk students compute slope multi-input function best can imagine (homework?) Build imagined function (slope) plot function\nAsk students compute slope multi-input function best can imagine (homework?) Build imagined function (slope) plot functionOutcomes:\nable read & construct (R) Contour Plots\nable read & construct (R) Surface Plots\nable read table w/ 2 inputs\nable read & construct (R) Contour PlotsBe able read & construct (R) Surface PlotsBe able read table w/ 2 inputsReading: Chapter ??Piecewise functions [jettison needed favor homework]\nTopics\nConstruct evaluate piecewise functions\nDemonstrate implement R\n\nOutcomes:\nable identify break(s) piecewise function\nable evaluate piecewise function given input\nable implement piecewise function R\n\nReading: Chapter ??\nTopics\nConstruct evaluate piecewise functions\nDemonstrate implement R\nConstruct evaluate piecewise functionsDemonstrate implement ROutcomes:\nable identify break(s) piecewise function\nable evaluate piecewise function given input\nable implement piecewise function R\nable identify break(s) piecewise functionBe able evaluate piecewise function given inputBe able implement piecewise function RReading: Chapter ??Iterative Modeling\nNTI:\nExamples:\nTides\nCooling Water\n\nObjectives:\nDescribe differences two models model data\nIdentify disagreements model data\nd: Reading: NEED LINK CHAPTER\n\nNTI:Examples:\nTides\nCooling Water\nTidesCooling WaterObjectives:\nDescribe differences two models model data\nIdentify disagreements model data\nd: Reading: NEED LINK CHAPTER\nDescribe differences two models model dataIdentify disagreements model data\nd: Reading: NEED LINK CHAPTERReview, GR, Project Days[[Semi-log Log-log plots]] Magnitude log\nTopics:\nIntroduce idea using logarithms converts number order magnitude\n\nOutcomes:\nReading: Chapter ??\nTopics:\nIntroduce idea using logarithms converts number order magnitude\nIntroduce idea using logarithms converts number order magnitudeOutcomes:Reading: Chapter ??Flexible catchup dayDimensional Analysis\nReading: Chapter ??\n\n1.5 class daysReading: Chapter ??One highlighting formats, called ::: {.takenote} used clear statement basic skills students master. might good tie quizzes vice versa.","code":""},{"path":"change.html","id":"change","chapter":"1 Change","heading":"1 Change","text":"Calculus change, change relationships. changing climate displays relationship , say, global average temperature time. Temperature changes levels CO2 methane change due production elimination atmospheric geological processes. One processes ocean acidification: change ocean pH. Climate complex intricate network relationships change one component provokes change others. 100This book presents calculus terms two simple central concepts: functions quantities. words everyday meanings , happily, close specific mathematical concepts using . Close … identical. pay careful attention brief descriptions follow.","code":""},{"path":"change.html","id":"quantity-vs-number","chapter":"1 Change","heading":"1.1 Quantity vs number","text":"mathematical quantity amount. measure amounts depends kind stuff measuring. real-world stuff might mass time length. equally well can velocity volume momentum corn yield per acre. live world stuff, tangible (e.g., corn, mass, force) harder get hands minds around (acceleration, crop yield, fuel economy). important use calculus helping us conceptualize abstract kinds stuff mathematical compositions simpler stuff. example, crop yield incorporates mass length time. Later, ’ll see us using scientific-sounding term dimension instead “stuff.” fact, Chapter ?? entirely dedicated topic dimensions, now ’s sufficient understand numbers alone quantities.people inclined think “quantity” “number”; conflate two. understandable misguided. number meaningless. meaning number 5 without context? Quantity, hand, combines number appropriate context describe amount stuff.first thing need know quantity kind stuff describes. “mile” kind stuff: length. meter kind stuff: length. liter different kind stuff: volume. gallon acre-foot kind stuff: volume.“Stuff,” mean , measure. know, measure units. units appropriate depends kind stuff. Meters, miles, microns appropriate units length, even though actual lengths units differ markedly. (mile roughly 1.6 million millimeters.) 110Only know dimension units number meaning. Thus, number part specifying quantity.’s salient difference number quantity comes calculus: sorts arithmetic mathematical operations can performed combine numbers: addition, multiplication, square roots, etc. performing mathematics quantities, multiplication division universally allowed. addition subtraction, square roots, , operation makes sense dimensions suitable.mathematics units dimension technical world common sense everyday world. instance (may make sense point), people tell taking square root 10 liters, know immediately either just mistaken haven’t told essential elements situation. ’s just someone said, “swam across tennis court.” know person either used wrong verb—walk run work—wasn’t tennis court, something important unstated, perhaps, “flood, swam across tennis court.”","code":""},{"path":"change.html","id":"functions","chapter":"1 Change","heading":"1.2 Functions","text":"central concept book functions mathematical computing sense. Functions primary topic Block 1. function something takes one inputs returns output. calculus, ’ll deal mainly functions take one quantities inputs return another quantity output. sometimes ’ll work functions take functions input return quantity output. even functions take function input return function output.’ve almost certainly seen functions expressed general form \\(f(x)\\). function \\(f()\\), input \\(x\\). Perhaps ’s obvious point \\(x\\) quantity. \\(f(x)\\) means perform \\(f()\\) operation quantity, creating output. computing, explicit notations identify output function. Strangely, high-school mathematics . major source confusion students learning calculus professionals using computers work calculus. 120It’s possible present calculus without functions. instance, Isaac Newton, inventor calculus, spoke “flowing quantities.”1It’s practically impossible (generally unwise) computing without functions. basic building block every mainstream modern computer language. Since operations calculus actual practice performed computer, common sense suggests describe calculus terms functions. ’s book., may take bit getting used . reason notation used high-school algebra almost calculus texts notation functions. example, many students familiar famous equation: \\[y = m x + b\\]\nUsing language math classes, can say equation involves two “variables.” experience, know variables \\(x\\) \\(y\\). letters, \\(m\\) \\(b\\), something else. Many students reflexively call “slope” “intercept” “line.”used probably don’t see huge ambiguity involved. instance, variable? Common sense suggest ’s thing varies. know value \\(x\\), still variable? statistics, variable something else entirely: trait. Since statistics mathematics used together, bound bring confusion. 130The notation equations poor substitute notation functions. instance, input output? ’s explicitly stated equation. , using allowed manipulations algebra, re-arrange \\[y = m x + b \\ \\ \\text{}\\ \\ \\ m = \\frac{y-b}{x}\\] still function? , function \\(m x + b\\)? \\(x\\) input \\(x\\) \\(y\\) inputs? \\(b\\)? re-arrangement, problem \\(x\\) zero, problem never encounter original \\(y=mx+b\\).engineers mathematicians invented computer languages realized explicit identifying input, output, function ; computers demand unambiguous instructions.2 Sorting difficult process even mathematically talented skilled pioneers notation. , can forgiven occasional confusion dealing notation pre-dates computing. 140In book ’ll explicit consistent ways denote functions can always figure inputs translated output. good start learning read function notation see equivalent \\(y=m x + b\\) notation: \\[g(x) \\equiv m x + b\\]\nNotice ’re using \\(\\equiv\\) (three parallel bars) rather \\(=\\). Pronounce \\(\\equiv\\) “defined ,” “equiv” short. ’s \\(y\\). \\(x\\) appears parentheses left side \\(\\equiv\\) say explicitly “\\(x\\) stands input.” notation provides place state name function, case \\(g()\\), can refer function unambiguously operations . Since often ’ll using many functions time, ’s helpful way distinguish name. functional notation makes easy create many different names, e.g. \\(g_\\star()\\), \\(h_\\text{altitude}()\\), azimuth(), . high-school habit using \\(y\\) doesn’t give flexibility.","code":""},{"path":"change.html","id":"fundamental-model-of-change","chapter":"1 Change","heading":"1.3 Fundamental model of change","text":"start chapter, says, “Calculus change, change relationships.” idea function gives definite perspective . relationship function’s input function’s output. input might day year (1-365, -called “day number”), output cumulative rainfall day. Every day rains, cumulative rainfall increases. another function, input might altitude hike Pikes Peak output air temperature. Typically, gain altitude temperature goes . still another function, input might number hours noon, output brightness sunlight. sun goes , light grows dimmer, point. 150The rate change based simple question: input changes \\(x = \\) \\(x = B\\), much output change? course, output function \\(f(x)\\) \\(f(x=)\\) \\(f(x=B)\\) respectively. rate--change relationship ratio \\[\\frac{\\color{red}{f(x=B) - f(x=)}}{\\color{blue}{B-}}\\ \\ \\text{also written}\\ \\ \\frac{\\color{red}{\\text{rise}}}{\\color{blue}{\\text{run}}}\\]focus rate change rather something simpler, example net change \\(\\color{red}{f(x=B) - f(x=)}\\)? reason goes back scientific breakthrough 1600s: writing Newton’s laws motion language laws first successfully expressed language rates change. intervening 400 years, laws updated theory relativity quantum mechanics. laws expressed rates change. undertaking study just quantitative field engineering economics ’ll find theory expressed using functions rates change.may recognize formula rate change familiar quantity: slope line. Everyone understands line , geometry primary concern . describe relationships using functions us straight-line function fundamental way expressing relationship. Straight-line functions can written several ways, ’ll tend use two predominant forms:\n\\[\\line(x) \\equiv x + b\\ \\ \\ \\text{}\\ \\ \\ \\ \\line(x) \\equiv [x - x_0]\\]\ntwo forms interchangeable, ’ll see upcoming chapters, sometimes ’s convenient use one form . either case, rate change , quantitatively, value parameter \\(\\). 160The simple function \\(\\line(x)\\), whose change relationship understand intuitively, used approximate complicated change relationships. approximation place, can calculations change relationships much easily. Collectively, set mathematical concepts techniques support describing calculating change relationships name Calculus.writing \\(\\line(x) \\equiv [x - x_0]\\) used square braces \\(\\left[\\strut\\ \\right]\\) rather parentheses \\(\\left(\\strut\\ \\right)\\) surround \\(x - x_0\\). Either used difference meaning. traditional mathematical notation, either serves demarcate sub-expression. ’ll using parentheses extensively expressions like \\(\\line(x)\\), ’s nice visual break.Since inputs functions quantities, ’s convenient give names remind human reader stand .common name use book input function :\\(\\large x\\) general-purpose name complies practice high-school algebra. Remember, us \\(x\\) “unknown” often algebra; calculus \\(x\\) name input.Perhaps next common input name \\(\\large t\\). name typically used input meant time. creating function represent relationship time (day) outdoor brightness, might use notation: \\(\\text{brightness}(t)\\)input names use book \\(y\\), \\(z\\), \\(u\\), \\(v\\), \\(w\\). won’t shy away descriptive names, like \\(T\\) “temperature” \\(V\\) volume, even \\(\\text{altitude}\\) (describes ).following function definitions, input name?Question Input name \\(g(t) \\equiv 2 t^2 + 8\\)?    t ✔︎        u ︎✘        v ︎✘        w ︎✘        x ︎✘        y ︎✘        z ︎✘ Question B Input name \\(\\line(z) \\equiv z + b\\)?    t ︎✘        u ︎✘        v ︎✘        w ︎✘        x ︎✘        y ︎✘        z ✔︎ Question C Input name \\(h(t) \\equiv 2 t^2 + 8 w\\)?    t ✔︎        u ︎✘        v ︎✘        w ︎✘        x ︎✘        y ︎✘        z ︎✘ Question D Input name \\(f(u) \\equiv u + b + u^2\\)?    t ︎✘        u ✔︎        v ︎✘        w ︎✘        x ︎✘        y ︎✘        z ︎✘ Question E Input name \\(g(w) \\equiv x + 4\\)?Open SANDBOX. (Just click link, although may eventually given ways open sandbox.)see breakout box like , means ’re providing computer code can paste sandbox run. exercise, code isPaste two lines sandbox press “Run code.” Verify get result:[1] 1.285941Each line pasted sandbox command. first command gives value \\(x\\). second command uses value \\(x\\) calculate function output. function \\(g(x)\\equiv \\sin(x) \\times \\sqrt{\\strut x}\\). (’ll see give function name like \\(g()\\) Section ??.)simplify code single line sin(2)*sqrt(2)? produce output introduce ambiguity human reader. want make clear reader (computer) whatever \\(x\\) might , used input \\(\\sin()\\) \\(\\sqrt{\\strut\\ \\ \\ }\\) functions.following questions, numbers rounded two three significant digits. Select answer closest computer output.Question Change \\(x\\) 1. ’s output \\(\\sin(x) \\ \\sqrt{\\strut x}\\)    -1.51 ︎✘        0.244 ︎✘        0.84 ✔︎        0.99 ︎✘        2.14 ︎✘        NaN ︎✘ Question B Change \\(x\\) 3. ’s output \\(\\sin(x) \\  \\sqrt{\\strut x}\\)    -1.51 ︎✘        0.244 ✔︎        0.84 ︎✘        0.99 ︎✘        2.14 ︎✘        NaN ︎✘ Question C Change \\(x\\) \\(-5\\). ’s output \\(\\sin(x) \\  \\sqrt{\\strut x}\\)    -1.51 ︎✘        0.244 ︎✘        0.84 ︎✘        0.99 ︎✘        2.14 ︎✘        NaN ✔︎ stands --Number, get calculate square root negative input. sandbox, change function \\(\\sqrt{\\strut\\pnorm(x)}\\).Question D \\(x=2\\), ’s output \\(\\sqrt{\\strut\\pnorm(x)}\\)?plots shows graph function two inputs, \\(\\) \\(B\\), marked.Question plot (1), rate change interval \\(\\) \\(B\\)? (Pick closest answer.)    -15/2 ︎✘ Remember take difference: \\(f(B) - f()\\).        15/2 ︎✘ order B significant!        2/15 ︎✘ ’s “rise” “run,” way around.        -2/15 ︎✘ ’s “rise” “run,” way around.        8/2 ︎✘ order B significant!        -8/2 ✔︎        2/8 ︎✘ order B significant!        -2/8 ︎✘ ’s “rise” “run,” way around.        -15/5 ︎✘ Remember take difference: \\(B - \\) Question B plot (2), rate change interval \\(\\) \\(B\\)? (Pick closest answer.)    -17/2 ︎✘ Remember take difference: \\(f(B) - f()\\).        2/17 ︎✘ ’s “rise” “run,” way around.        -10/2 ︎✘ order B significant!        10/2 ✔︎        2/10 ︎✘ order B significant!        -2/10 ︎✘ ’s “rise” “run,” way around.        -17/-5 ︎✘ Remember take difference: \\(B - \\) Question C haven’t told exactly yet, give try. rate change near point marked \\(C\\)? (Pick closest answer.))","code":"\nx <- 2\nsin(x)*sqrt(x)"},{"path":"pattern-book.html","id":"pattern-book","chapter":"2 Functions for modeling","heading":"2 Functions for modeling","text":"mathematics used understand analyze predict real world situation, pattern work often three stages: 200Translate real-world situation mathematical form. translation called mathematical modeling. instance, Newton trying make sense motion planets light novel theory gravity universal force attraction masses, rather something special Earth. modeled force quantity can measured, simplified planets mere masses (another measurable quantity), supposed position motion related particular way: velocity rate change position respect time, acceleration rate change velocity respect time. theory motion planets based two fundamental mathematical models: First\n\\[F = ma\\ \\ \\ \\text{(Newton's Second Law)}\\] relates force, mass, acceleration. Second, \\[F = \\frac{G m_1 m_2}{d^2}\\ \\ \\ \\text{(Law Universal Gravitation)}\\]\n(sometimes called inverse square law), relates mass two objects (\\(m_1\\) \\(m_2\\)), distance force gravitation. (’ll get purpose \\(G\\) Chapter ??.)book objective modeling phase almost always choose construct one functions represent relationships involved system studied. ’ll learn several strategies turning know system appropriate functions. ’ll learn standard frameworks organizing ideas help determine functions related, instance Newton’s framework relating position, velocity, acceleration rates change one another. 210Do mathematical work model shape form can directly answer modeler’s question interest. instance, Newton knew previous astronomical observations Kepler’s theorizing planets’ orbits elliptical shape. needed work two models order deduce orbital shapes consistent Second Law Universal Gravitation.book ’ll learn use several key tools mathematical work functions. might well name now: differentiation, anti-differentiation, optimization, zero-finding. Computers make tool easy use. job learn enough ’ll know use tool .Evaluate model figure extent rely answer gives see consequences model consistent happens real world. evaluation often leads re-assessment model return stage 1 improve things. resulting loop called modeling cycle. example, seems likely Newton start knowing gravitation follows inverse square law. Perhaps went several modeling cycles found form consistent Kepler’s elliptical orbits.book ’ll learn techniques comparing models data making predictions models can compared observations. ’ll also see examples evaluation function suggests revisions might improve model.","code":""},{"path":"pattern-book.html","id":"pattern-book-functions","chapter":"2 Functions for modeling","heading":"2.1 Pattern-book functions","text":"Experience allows us make short list simple mathematical functions provide large majority tools representing real world mathematical object. Think items list different actors, skilled portraying archetypical character: hero, outlaw, lover, fool, comic. play brings together different characters, costumes , relates one another dialog means. purpose telling story providing insight human relationships emotions. .230A mathematical model kind story mathematical modeler kind playwright. combines mathematical character types tell story relationships. handful archetypal mathematical functions, analog character actors drama comedy. creating mathematical model, clothe actors suit era location assemble together harmony discord.Costume designers others start nothing. reference guides collect patterns designer can customize needs hand. reference guides sometimes called “pattern books.” (See Figure 2.1 example.)\nFigure 2.1: pattern book theatrical costumes\nSimilarly, start pattern set functions collected generations experience useful describing diverse aspects real world simple calculus-related properties make relatively easy deal . remind us role modeling, ’ll call pattern-book functions. just handful, untold numbers useful modeling functions can constructed. (Mastering calculus part matter becoming familiar mathematical connections among pattern-book functions. ’ll see due time.)list pattern-book functions showing traditional notation R formula:’ve written traditional formula notation can see connections math ’ve already studied. ’ve used \\(x\\) stand single input functions just ’s traditional. 240The list pattern-book functions short. memorize names able easily associate name traditional notation.next several chapters, introduce several features functions. features include:monotonicity downconcavity downhorizontal asymptotesvertical asymptotesperiodicitycontinuityBy end Block 1, able list nine basic pattern-book functions say features relevant . 250These pattern-book functions widely applicable. nobody confuse pictures pattern book costumes ready wear. pattern must tailored fit actor customized fit theme, setting, action story. 260Similarly, mathematical functions used real-world applications—opposed pattern-book functions adorned parameters. Parameters work fitting pattern units dimensions input output quantities. pattern sock, parameter size needed fit foot. just different systems sizing shirts, trousers, shoes, , tradition favored idioms parameterizing different kinds pattern-book functions. haven’t yet introduced idioms, well advised learn interpret glance.universal agreement names pattern-book functions except two: hump logarithm.name “hump” descriptive; graph hump function looks like camel’s hump bump road. sorts hump-shaped functions differ slightly origins detailed shape. book, use “hump” remind basic shape, specific mathematical function mind called gaussian function, named tremendously influential mathematician, Carl Friedrich Gauss (1777-1855). function important role throughout physical science, technology, data science. probability theory social sciences, shape function given simple name “normal distribution”; shows many places considered utterly unsurprising “normal.”name “logarithm” anything descriptive. name coined inventor, John Napier (1550-1617), emphasize original purpose invention: simplify work multiplication exponentiation. name comes Greek words logos, meaning “reasoning” “reckoning,” arithmos, meaning “number.” catchy marketing term new invention, least speak Greek!Although invented practical work numerical calculation, logarithm function become central mathematical theory well modern disciplines thermodynamics information theory. logarithm key measurement information magnitude. know, units information used particularly describe information storage capacity computers: bits, bytes, megabytes, gigabytes, . much way different units length (cm, meter, kilometer, inch, mile, …), different units information magnitude. almost everything measured, speak “units” measurement. logarithms, instead “units” tradition another word used: base logarithm. common units outside theoretical mathematics base-2 (“bits”) base-10 (“decades”). unit convenient mathematical notation “base e,” \\(e = 2.71828182845905...\\). genuinely good choice units logarithm, ’s hardly obvious anyone encountering first time. make choice palatable, ’s marketed “base natural logarithm.” book, ’ll using natural logarithm official pattern-book logarithm.","code":""},{"path":"pattern-book.html","id":"constructing-functions","chapter":"2 Functions for modeling","heading":"2.2 Constructing functions","text":"Often, modeling involves building complicated function simple shapes provided pattern-book functions. yet time say much , want show construction looks like traditional style notation style used programming computers. ’ll see later, make complicated functions generally combine simpler functions one three different ways: linear combinations, products, composition. 270For instance, linear combination simple functions called “monomials” can look like traditional notation:\n\\[g(x) \\equiv 2 + 3 x - 7x^2\\]\nlike R/mosaic computer notation using:notice R/mosaic notation elements common traditional notation, order somewhat different.g <- means give function name \\(g.\\) (book, usually write function names pair parentheses suffix, e.g. \\(g(x).\\) reminds name refers function. R name simply g, even though often write g() text.) <- called assignment operator, instruction R give name object. , object R function created makeFun().2 + 3*x - 7*x^2 formula function, , expression found right-hand side \\(\\equiv\\) traditional notation.~ x part R/mosaic notation says, “name input x.” traditional notation, name input parentheses following name function \\(g\\,{\\mathbf{(x)}}\\).formula name input always related R/mosaic notation, part ’s called tilde expression. formula left-hand side tilde (~) argument name right-hand side tilde. one argument, names go right-hand side tilde expression, separated &. (people prefer use + separator. ’s fine.)makeFun() R/mosaic operator takes information contained tilde expression turns R function.Functions constructed product simple functions can look like tradition notation:\n\\[h(t) \\equiv \\sin(t) e^{-t}\\]\nlike computer notation:","code":"\ng <- makeFun(2 + 3*x - 7*x^2 ~ x)\nh <- makeFun(sin(t)*exp(-t) ~ t)"},{"path":"pattern-book.html","id":"function-shapes","chapter":"2 Functions for modeling","heading":"2.3 Function shapes","text":"going building models selecting appropriate function putting functions together various ways. might remind Lego blocks. know, Legos come different shapes: \\(6\\times 2\\), \\(4\\times 2\\), \\(2\\times 2\\), . Similarly, pattern-book functions distinctively shaped graph, just different articles clothing shapes. Knowing shapes name help need build model. 280The identity function constant function extremely simple shapes. Note graph constant function just line, line zero slope.’s tempting deny constant function function. , output depend input. Still, situation arises frequently modeling: start supposing one quantity depends another sometimes turns . Since functions way representing relationships, ’s helpful function situation “relationship.” constant function job.","code":""},{"path":"pattern-book.html","id":"the-power-law-family","chapter":"2 Functions for modeling","heading":"2.4 The power-law family","text":"Three pattern-book functions—\\(1/x\\), \\(x\\), \\(x^2\\)—belong infinite family called power-law functions. examples power-law functions \\(x^3, x^4, \\ldots\\) well \\(x^{1/2}\\) (also written \\(\\sqrt{x}\\)), \\(x^{1.36}\\), . functions can written \\(x^p\\), \\(x\\) input \\(p\\) number. 290Even within power-law family, ’s helpful consider different overlapping groups:monomials: \\(m_0(x) \\equiv x^0\\), \\(m_1(x) \\equiv x^1\\), \\(m_2(x) \\equiv x^2\\), \\(\\ldots\\). course, \\(m_0()\\) exactly constant function since \\(x^0 = 1\\). Likewise, \\(m_1(x)\\) identity function since \\(x^1 = x\\). rest, just two general shapes: arms (even powers); one arm (odd powers.)\nFigure 2.2: Graphs monomial functions order 2 5.\nnegative powers, e.g. \\(f(x) \\equiv x^{-1}\\), \\(g(x) \\equiv x^{-2}\\), \\(h(x) \\equiv x^{-1.5}\\)\nFigure 2.3: Graphs power-law functions negative exponents. Note function output large \\(x\\) near zero.\nnon-integer powers, e.g. \\(f(x) = \\sqrt{x}\\), \\(g(x) = x^\\pi\\), .\nFigure 2.4: domain power-law functions non-integer power \\(0 \\leq x < \\infty\\).\nCopy paste R/mosaic command SANDBOX. command shows simple way graph function, case exp(). Press “Run code” execute command draw graph.exercise, ’ll modifying sandbox code draw different functions, can examine shapes.task read interpret graphs basic modeling functions. , looking zero-crossings: neighborhood point function’s domain output function negative inputs one side positive inputs side. zero touched crossed, ’ll call “touched zero.”Make list pattern-book functions. function list, say whether function crosses zero, touches zero doesn’t cross, doesn’t touch part domain shown graphic: \\(-3 \\leq x \\leq 3\\). Also note value function appears reaching horizontal asymptote zero negative \\(x\\), positive \\(x\\), , neither.’ll show answers exponential function. ’ll modify computer command graph pattern-book functions.pattern-book functions, graph crosses either vertical axis (\\(x=0\\)) horizontal axis (, \\(f(x) = 0\\)), . ’s helpful know exact quantitative value input function graph crosses horizontal axis, exact quantitative value output function graph crosses vertical axis.questions ask , pattern-book functions, find specific input/output pair know exact values. (Feel free open SANDBOX try various possibilities.)Question exact output pattern-book exponential function input \\(x=0\\)?    0 ︎✘        0.3989423 ︎✘        1/2 ︎✘        1 ✔︎ Question B exact output pattern-book sine function input \\(x=0\\)?    0 ✔︎        0.3989423 ︎✘        1/2 ︎✘        1 ︎✘ \nQuestion C exact input pattern-book logarithm function output 0?    0 ︎✘        0.3989423 ︎✘        1/2 ︎✘        1 ✔︎ Question D exact output pattern-book sigmoid function input \\(x=0\\)?    0 ︎✘        0.3989423 ︎✘        1/2 ✔︎        1 ︎✘ Question E output (several digits) pattern-book hump function input \\(x=0\\)?    0 ︎✘        0.3989423 ✔︎ Right. 0.4 ’re sketching graph.        1/2 ︎✘        1 ︎✘ Question F exact input pattern-book reciprocal function output 1? (’s axis crossing.)    0 ︎✘        0.3989423 ︎✘        1/2 ︎✘        1 ✔︎ Question G exact input pattern-book proportional function output 1/2? (’s axis crossing.)    0 ︎✘        0.3989423 ︎✘        1/2 ✔︎        1 ︎✘ Question H exact output pattern-book constant function?    0 ︎✘        0.3989423 ︎✘        1/2 ︎✘        1 ✔︎ Question pattern-book square function just touches horizontal axis. ’s input happens?pattern-book functions distinctive property called scale invariance. means graph function looks even plotted different horizontal vertical axes. function \\(\\ln(x)\\) plotted two different scales Figure ?? shows graph function practically shape.Figure ?? shows power-law function, \\(g(x) \\equiv x^2\\), also scale invariant.pattern-book functions scale invariant, example \\(\\sin(x)\\).contrast scale-invariant functions, pattern-book functions characteristic scale. domain length whole characteristic feature function evident. Graphing larger domains simply squashes characteristic feature small part graphic domain. instance, \\(\\sin()\\) function cycle characteristic feature. cycle pattern-book function characteristic length \\(2 \\pi\\), length cycle. Consequently, graph looks different depending length graphics domain multiples characteristic length. can see Figure ?? graph domain \\(-10 < x < 10\\), , 3 times characteristic scale, looks different graph larger domain length 30 times characteristic scale.equally well say \\(\\sin()\\) function characteristic scale 360 degrees, amount \\(2 \\pi\\) radians. people find easiest interpret angles measured degrees, usual practice mathematics computing argument \\(\\sin()\\) (trigonometric functions interpreted) radians. might think choice using degrees using radians arbitrary. Chapter ?? ’ll see surprising reason radians “natural” way measure angles.Question gaussian (hump) function dnorm() characteristic scale. domain length can encompass characteristic shape gaussian?    0.1 ︎✘        1 ︎✘        4 ✔︎ Almost hump fits within domain \\(-2 < x < 4\\), length 4.        16 ︎✘        256 ︎✘ Question B sigmoid function pnorm() also characteristic scale. domain length can encompass characteristic shape sigmoid?","code":"\nslice_plot(exp(x) ~ x, domain(x=c(-3, 3)))"},{"path":"pattern-book.html","id":"instructor-notes","chapter":"2 Functions for modeling","heading":"2.5 Instructor notes","text":"huge coincidence one pattern-book functions match particular relationship, one shown data. ’ll need tailor pattern-book functions combine various ways capture real-world relationship. 295A helpful demonstration students can display real-world data, ask pattern-book function seems best lot, ask students shift shrink function correspond better data.start, data relating pressure volume gas constant temperature s collected Robert Boyle (1627-1691) led formulate “Boyle’s Law.” correct pattern-book function data \\(\\recip(x) \\equiv 1/x\\). plotted doesn’t match data. (Try scaling function \\(1/x\\) \\(1000/x\\). home correct value.)illustrate, ’s graph month--month utility data house Minnesota plotted along pattern-book function \\(x\\).Ask students straight-line pattern appropriate modeling data \\(x\\) isn’t, , good model.monthly use natural gas (mainly heating) versus average outdoor temperature month. ’ll plot next exponential function.\nFlipping exponential left right scaling help:","code":"\ngf_point(pressure ~ volume, data = Boyle) %>%\n  slice_plot(1/volume ~ volume)\ngf_point(kwh ~ elecbill, data = Utilities) %>%\n  slice_plot(x ~ x, domain(x=c(0,140)))\ngf_point(ccf ~ temp, data = Home_utilities) \nslice_plot(exp(temp) ~ temp, domain(temp=c(0,80)))\ngf_point(ccf ~ temp, data = Home_utilities) %>%\nslice_plot(300*exp(-temp/20) ~ temp, domain(temp=c(0,80)))"},{"path":"structure-of-a-function.html","id":"structure-of-a-function","chapter":"3 Structure of a function","heading":"3 Structure of a function","text":"[F-10] Recognize functions way representing (storing) know able use properly basic nomenclature functions).’re used mathematical functions stated formulas, expressions composed addition, multiplication, square roots, . 300The expression \\(m x + b\\) uses multiplication addition.\\(\\sqrt{\\strut 1 - x^2}\\) uses squaring (\\(x^2\\)), subtraction square root.\\(3\\sin\\left(\\frac{2 \\pi}{P} x\\right) + 4\\) uses multiplications, division, sin function, additionThere’s nothing mathematical concept “function” requires formula. computer functions general based algebraic formula. word used describe internals computer function algorithm, generalization “formula” includes many non-arithmetic operations looping branching.press function button like “sin” “ln” “exp” button calculator, likely little idea process set action create result. Indeed, people , even among professionals. problem. can name function ’s appropriate purpose, can apply function input, can something output.chapter functions functions organized: name goes, input goes, determines output.","code":""},{"path":"structure-of-a-function.html","id":"inputs-to-output","chapter":"3 Structure of a function","heading":"3.1 Inputs to output","text":"using formulas extensively, best can visualize functions generally something ’s necessarily formula. section gives another perspective describe think function. Remember, functions take inputs return corresponding output. arrangement accomplishes function, even arithmetic nowhere sight.simple useful framework organizing know table, generally set array rows columns. instance, table range internal combustion engines various sizes:row table reports one, specific engine. column one attribute engine. Using tables can easy. example, asked report fast engine named “Enya 60-4C” spins, go Enya 60-4C row “RPM” column read answer: 11,800 revolutions per minute (RPM).table like describes general relationships engine attributes. instance, might want understand relationship () RPM engine mass, relate diameter (, “bore”) depth (, “stroke”) cylinders power generated engine. single entry table doesn’t tell us general relationships; need consider rows columns whole. 310If examined relationship engine power (BHP) bore, stroke, RPM, find (rule) larger bore stroke, powerful engine. ’s qualitative description relationship. educated people able understand quantitative description. Even don’t know exactly “power” means, rough conception .Often, ’re interested quantitative description relationship one (bore, stroke) \\(\\rightarrow\\) power. Remarkably, many otherwise well-educated people uncomfortable idea using quantitative descriptions relationship: sort language description written ; perform calculations use description; translate data (table) quantitative description; translate quantitative description address particular question make decision.course constructing using quantitative descriptions: , mathematical modeling. Skills modeling essential work engineering science, highly valued many fields commerce, management, government. Often, work applying quantitative skills called calculation. name calculus used describe methods widely used undertaking calculations.Functions fundamental way organizing mathematical models calculations. undoubtedly seen previous mathematics education, ’s worth reviewing basics can share vocabulary communicating .function transformation one inputs output.keep things simple, now ’ll focus inputs outputs numeric. Later, ’ll need nuanced view “numeric” takes account different kinds things represented numbers, e.g. length, power, RPM.","code":""},{"path":"structure-of-a-function.html","id":"bureaucratic","chapter":"3 Structure of a function","heading":"3.2 A bureaucratic analogy","text":"’ll many opportunities work functions defined formulas. , want emphasize functions really just way storing correspondence inputs outputs formulas need nothing except one way describing pattern. Instead formula, imagine long corridor sequence offices, identified room number. input function room number. evaluate function input, knock appropriate door , response, ’ll receive piece paper number take away . number output function. 320This sound first simple true, … mathematical function office gives exactly number every time someone knocks door. Obviously, worker office highly tedious requires special skill. Every time someone knocks worker’s door, writes number piece paper hands person knocking. person number absolutely concern office worker.utility functions depends artistry insight person creates : modeler. important point course teach artistry. Hopefully learn artistry translate insight creation functions useful work. even just use functions created others, knowing functions built helpful using properly.sort function just described, offices along single corridor. functions said one input, , equivalently, “functions one variable.” operate function, just need one number: address office ’ll collect output.Many functions one input: two, three, four, … tens, hundreds, thousands, millions, …. course, ’ll work mainly functions two inputs, skills develop applicable functions two inputs.function two inputs look like office metaphor? Imagine office building many parallel corridors, numeric ID. evaluate function, need two numeric inputs: number corridor number door along corridor. two numbers hand, locate appropriate door, knock receive output number return. 330Three inputs? Think building many floors, floor many parallel corridors, corridor many offices sequence. Now need three numbers identify particular office: floor, corridor, door.Four inputs? street many three-input functions along . Five inputs? city many parallel four-input streets. .Applying inputs function order receive output small part calculations. Calculations usually organized algorithms, just say algorithms descriptions calculation. calculation … function!calculation work? Think business. People come business one inputs. take inputs , following carefully designed protocol, hand staff, perhaps duplicating simple arithmetic create new number. Thus equipped relevant numbers, member staff goes evaluate particular function numbers. (, staff member goes appropriate street, building, floor, corridor, door, returning number provided office.) staff re-assembles roadside stand, sorting numbers returned , following strict protocol. Perhaps combine new numbers ones originally given inputs. event, send staff new instructions—person’s instructions consist simply set inputs head evaluate return . point, perhaps many cycles, perhaps just one, able combine numbers ’ve assembled single result: number return person came business first place.calculation might involve just one function evaluation, involve chain sends workers buzzing around city visiting businesses turn activate staff add urban tumult.reader familiar floors corridors office doors may note addresses discrete. , office 321 offices 320 322 neighbors. Calculus continuous functions, need way accept, say, 321.487… input. office. 340A slight modification procedure produce continuous function. works like : input 321.487… messenger goes office 321 322 collects respective outputs. Let’s imagine -14.3 12.5 respectively. ’s needed small calculation, case look like \\[-14.3 \\times (1 - 0.487...)   + 12.5 \\times 0.487...\\] called linear interpolation lets us construct continuous functions discrete data.Blocks 2 5 ’ll discuss widely used ways produce just continuous functions smooth functions. Understanding difference continuous smooth wait introduce couple calculus concepts: derivatives limits.","code":""},{"path":"structure-of-a-function.html","id":"domain-input-space","chapter":"3 Structure of a function","heading":"3.3 Domain: input space","text":"know, powerful way thinking numbers terms space geometry. instance, single number corresponds point line: -called number line. pair inputs, say, (x, y) corresponds point plane, often called Cartesian coordinate plane. Three numbers corresponds point space, perhaps organized (x, y, z) Cartesian space. higher-dimensional spaces, usually special training needed become comfortable . discomfort, might prefer work office metaphor. Just fun, ’s can think 10-dimensional space: 10 numbers, one telling planet, next specifying continent planet, country, state, city, street, building, floor, corridor, door.set inputs function can evaluated called domain function. Sometimes describe domain space, e.g. number line, plane, . Sometimes domains including restrictions. instance, particular input might meaning positive, offices corresponding negative values input. , input might restricted interval 0 1. Sometimes calculus, domain excludes isolated point. instance, may office door marked 0 neighboring doors open working offices. 350","code":""},{"path":"structure-of-a-function.html","id":"range-output-space","chapter":"3 Structure of a function","heading":"3.4 Range: output space","text":"range function set outputs can produced. Since stage ’re working functions return single number output, ’s common describe range part number line. instance, functions positive outputs. functions’ outputs always interval 0 1. (case, instance, function returns probability output.)Consider graph function \\(g(x)\\):Question domain \\(g(x)\\)?\\(-\\infty < x < \\infty\\) ︎✘ \\(-3 \\leq x \\leq 2\\) ✔︎ \\(-4 \\leq x \\leq 4\\) ︎✘ might called “graphics” domain, yet function graph doesn’t extend whole interval. \\(-10 \\leq g(x) \\leq 40\\) ︎✘ vertical extent graphics frame. \\(-1 \\leq g(x) \\leq 33\\) ︎✘ domain refers horizontal axis. Question B range \\(g(x)\\)?\\(-\\infty < x < \\infty\\) ︎✘ range refers output function. \\(x\\) input. \\(-3 \\leq x \\leq 2\\) ︎✘ range refers output function. \\(x\\) input. \\(-4 \\leq y \\leq 4\\) ︎✘ ’re used calling function output \\(y\\), ’s bad habit. Break ! \\(-10 \\leq g(x) \\leq 40\\) ︎✘ vertical extent graphics frame. \\(-1 \\leq g(x) \\leq 33\\) ✔︎ \nWeather forecasting numerical processWeather forecasting numerical process highly influential book, 1922, Lewis Fry Richardson. envisioned calculation weather forecast kind function. domain forecast latitude longitude point globe, rather rectilinear organization corridor.One fantastic illustration idea shows building constructed form inside-globe. many points globe, business. (can see clearly foreground, shows several boxes workers.) 360\nFigure 3.1: artist’s depiction organization calculations weather forecasting Richardson’s system. Source\nbusiness might work way: business person report current air pressure point globe, another person reports temperature, another reporting humidity, . compute predicted weather next day, business staff assigned visit neighboring businesses find pressure, temperature, humidity, etc. Still staffers take collected output neighbors carry arithmetic translate outputs forecast tomorrow. instance, knowing pressure neighboring points enables direction wind calculated, thus humidity temperature air coming region business handles. today’s numerical weather prediction models, globe divided finely latitude, longitude, altitude, software handles storage present conditions calculation future minutes later. Repeating process using forecast enables prediction made minutes , .important concepts calculus relate process collecting outputs neighboring points combining : instance finding difference sum. illustrate, first set equations Richardson’s Weather forecasting … written notation calculus: 370You can hardly expected point understand calculations described equations, involve physics air flow, coriolis force, etc. ’s worth pointing notation:equations momentum column air particular latitude (\\(\\phi\\)) longitude.\\(M_E\\) \\(M_N\\) east-west north-south components momentum.\\(\\partial M_E /\\partial t\\) rate east-west momentum change next small interval time (\\(\\partial t\\)).\\(p_G\\) air pressure ground level column air.\\(\\partial p_G / \\partial n\\) difference air pressure column air columns north south.Calculus provides notation describing physics climate means translate physics arithmetic calculation.two pattern-book functions domain runs whole number line: \\(-\\infty < x < \\infty\\).pattern-book function domain excludes zero negative numbers inputs?function’s domain set possible inputs function. function’s range set possible outputs. pattern-book functions, specify range.Question range pattern-book exponential function?positive outputs ✔︎ negative outputs ︎✘ whole number line ︎✘ closed, finite interval possibilities ︎✘ Question B range pattern-book sine function?positive outputs ︎✘ negative outputs ︎✘ whole number line ︎✘ closed, finite interval possibilities ✔︎ Yes. output pattern-book sinusoid functions always interval -1 1, inclusive Question C range pattern-book logarithm function?positive outputs ︎✘ non-negative outputs ︎✘ negative outputs ︎✘ whole number line ✔︎ closed, finite interval possibilities ︎✘ Question D range pattern-book square function?positive outputs ︎✘ Close. Zero one possible outputs. can say, equivalently, range positive outputs plus 0 non-negative outputs. non-negative outputs ✔︎ negative outputs ︎✘ whole number line ︎✘ closed, finite interval possibilities ︎✘ Question E range pattern-book proportional function?positive outputs ︎✘ negative outputs ︎✘ whole number line ✔︎ closed, finite interval possibilities ︎✘ range extends \\(-\\infty\\) \\(\\infty\\). Question F range pattern-book sigmoid function?positive outputs ︎✘ negative outputs ︎✘ whole number line ︎✘ closed, finite interval possibilities ✔︎ Right. pattern-book sigmoid function output always interval \\[0 \\leq \\pnorm(x) \\leq 1 .\\] ","code":""}]
