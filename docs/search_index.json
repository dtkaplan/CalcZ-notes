[["index.html", "CalcZ Student Notes Welcome to calculus Computing and apps Exercises and feedback", " CalcZ Student Notes Daniel Kaplan 2021-06-24 Welcome to calculus Calculus is the set of concepts and techniques that provide the main mathematical basis for dealing with motion, growth, decay, and oscillation. The phenomena can be as simple as a ball arcing ballistically through the air or as complex as the airflow over a wing that generates lift. Calculus is used in biology and business, chemistry, physics and engineering. It is the basis for weather prediction, understanding climate change, the algorithms for heart rate and blood oxygen measurement by wristwatches. It is a major part of the language of science, of logistics. The electron orbitals of chemistry, the stresses of bones and beams, and the business cycle of recession and rebound are all understood primarily through calculus. Calculus has been central to science from the very beginnings. It is no coincidence that the scientific method was introduced and the language of calculus was invented by the same small group of people during the historical period known as the Enlightenment. Learning calculus has always been a badge of honor and an entry ticket to professions. Millions of students career ambitions have been enhanced by passing a calculus course or thwarted by lack of access to one. In the 1880s, a hit musical featured “the very model of a modern major general.” One of his claims for modernity: “I’m very good at integral and differential calculus.”1 What was modern in 1880 is not modern anymore. Yet, amazingly, calculus today is every bit as central to science and technology as it ever was, and is much more important to logistics, economics and myriad other fields than ever before. In the last 20 years, calculus has become even more important. The reason is that science, engineering, and society have now fully adopted the computer for almost all aspects of work, study, and life. The amount of data collected and used has exploded. Machine learning has become the way human decision makers interact with such data. Think about what it means to become “computerized.” To take an everyday example, consider video. Over the span of a human life we moved from a system which involved people going to theaters to watch the shadows recorded on cellulose film to the distribution over the airwaves by low-resolution television, to the introduction of high-def broadcast video, to on demand streaming from huge libraries of movies. Just about anyone can record, edit, and distribute their own video. The range of topics (including calculus) on which you can access a video tutorial or demonstration is incredibly vast. All of this recent progress is owed to computers. The “stuff” that computers operate on, transform and transmit is always mathematical representations stored as bits. The creation of mathematical representations of objects and events in the real world is essential to every task of any sort that any computer performs. Calculus is a key component of inventing and using such representations. You may be scratching your head. If calculus is so important, why is it that many of your friends who took calculus came away wondering what it is for? What’s so important about “slopes” and “areas” and how come your high-school teacher couldn’t tell you what calculus is for? The disconnect between the enthusiasm expressed in the preceding paragraphs and the lived experience of students is very real. There are two major reasons for that disconnect, both of which we tackle head-on in this book. First, teachers of mathematics have a deep respect for tradition. Such respect has its merits but the result is that almost all calculus is taught using methods that were appropriate for the era of paper and pencil, but not for the computer era. As you will see, in this book we express the concepts of calculus in a way that carries directly over to the uses of calculus on computers and in genuine work. Second, the uses of calculus are enabled not by the topics of Calc I and Calc II, but the courses for which I/II are a preliminary: linear algebra and dynamics. Only a small fraction of students who start in Calc I ever reach the parts of calculus that are the most useful. Fortunately, there is a large amount of bloat in the standard textbook topics of Calc I/II which can be removed to make room for the genuinely important topics. We try to do that in this book. Computing and apps The text provides two complementary ways to access computing. The most intuitive is designed purely to exercise and visualize mathematical concepts through mouse-driven, graphical apps. To illustrate, here is an app that we’ll use in Block 6. You can click on the snapshot to open the app in your browser. More fundamentally, you will be carrying out computing by composing computer commands and text and having a computer carry out the commands. One good way to do this is in a sandbox, a kind of app which provides a safe place to enter the commands. You’ll open the sandbox (click on the image below) in your browser. Once you’ve entered the computer commands, you press the “Run” button to have the commands carried out. You may prefer to install the R and RStudio software on your own laptop. This usually provides a faster response to you and lowers the load on the sandbox cloud servers being used by other students. Experienced R users may even prefer to skip the sandbox entirely and use the standard resources of RStudio to edit and evaluate their computer commands. You’d use exactly the same R commands regardless of whether you use a cloud server or your own laptop. An important technique for teaching and learning computing is to present scaffolding for computer commands. At first, the scaffolding may be complete, correct commands that can be cut-and-paste into a sandbox where the calculation will be carried out. Other times it will be left to the student to fill in some part that’s been left out of the scaffolding. For example, when we introduce drawing graphs of functions and the choice of a domain, you might see a scaffold that has blanks to be filled in: slice_plot( exp(-3*t) ~ t, domain( --fill in domain-- )) You can hardly be expected at this point to make sense of any part of the above command, but soon you will. Exercises and feedback Learning is facilitated by rapid, formative feedback. Many of the exercises in this book are arranged to give this. Short answer exercises are often arranged to give immediate feedback that goes beyond right-or-wrong. In other words, when an answer is incorrect, we try to tell you why it is incorrect to provide a hint to guide you to the correct answer. As a frivolous example: Question A What does the word calculus mean literally? A small stone ✓ Such stones were part of an apparatus for doing numerical calculations, back in the days before the pencil was invented. A source of trouble to students. ☹︎ Calculus sometimes has that reputation, but as they say, “No pain, no gain.” Find a better answer. The element calcium. ☹︎ No, but when you get the right answer you’ll realize the two are related in some cases. Some exercises are meant as drill, and provide only right-or-wrong feedback. Still other exercises provide no feedback at all. Typically, these are intended to raise the stakes for graded work, encouraging you to think carefully before choosing an answer. Watch here↩︎ "],["approximation-around-a-point.html", "Chapter 1 Approximation around a point 1.1 The reference point 1.2 Taylor polynomials 1.3 Polynomials and data", " Chapter 1 Approximation around a point Back in Chapter ?? we considered eight simple shapes for functions of one input: Figure 1.1: The eight simple shapes, locally, of functions with one input. (See Chapter ??.) All these simple shapes can be generated with the same function formula and appropriate values for parameters \\(a\\), \\(b\\), and \\(c\\). \\[g(x) \\equiv a_0 + a_1 x + a_2 x^2\\] This chapter examines the possibilities for extending the formula a bit, to include higher-order terms, e.g. \\[h(x) \\equiv a_0 + a_1 x + a_2 x^2 + a_3 x^3 + a_4 x^4 + \\cdots\\] We’ll consider two possible applications: Creating an arithmetically simple approximation to a function whose formula is already known. Such approximations are known as Taylor polynomials. Creating a function to capture the patterns in data, as in Chapter ??. It turns out that this is a dubious practice. We discuss the reasons why so that you can know to avoid using high-order polynomials to fit data. 1.1 The reference point Since this is all about approximations, we need to have a way to specify the neighborhood of the function domain in which the approximation is intended to be good enough for use. We can use the same approach that turned the naked modeling functions (e.g., \\(x\\), \\(x^2\\), …) into the basic modeling functions: replacing \\(x\\) in the polynomial with \\(\\line(x)\\). But unlike the basic modeling functions, where the useful form of \\(\\line()\\) was usually \\(ax + b\\), here, we’ll use just a shift form of line, where the slope is 1: \\[\\text{shift}(x) \\equiv \\left[\\strut x - x_0\\right]\\] The parameter \\(x_0\\) is called the reference point. For a power-law function, \\[\\left[\\strut\\text{shift}(x)\\right]^n = \\left[\\strut x - x_0\\right]^n\\] the output is always zero when \\(x=x_0\\), which will be a matter of considerable importance as we go on. Also, note that we’re using square braces \\(\\left[\\ \\ \\right]\\) simply to make it completely unambiguous what is being exponentiated. Exercise 1.1 (locate-shift) Several exercises of this sort: Here are graphs of three power-law functions (that is, \\(\\left[x-x_0\\right]^n\\)) with different values of \\(x_0\\): Question A For the blue function, what is \\(x_0\\)?     -2 ☹︎        -1 ☹︎        0 ☹︎        1 ☹︎        2 ☹︎        3 ☹︎        4 ✓        5 ☹︎ Question B For the blue function, what is the order of the polynomial?     0 ☹︎        1 ✓        2 ☹︎        3 ☹︎        4 ☹︎        5 ☹︎ Question C For the red function, what is \\(x_0\\)?     -2 ☹︎        -1 ☹︎        0 ☹︎        1 ☹︎        2 ✓        3 ☹︎        4 ☹︎        5 ☹︎ Question D For the red function, what is the order of the polynomial?     0 ☹︎        1 ✓        2 ☹︎        3 ☹︎        4 ☹︎        5 ☹︎ Question E For the green function, what is \\(x_0\\)?     -2 ☹︎        -1 ☹︎        0 ☹︎        1 ☹︎        2 ☹︎        3 ☹︎        4 ✓        5 ☹︎ Question F For the green function, what is the order of the polynomial?     0 ☹︎        1 ☹︎        2 ☹︎        3 ✓        4 ☹︎        5 ☹︎ With the reference point \\(x_0\\) we will re-write the approximating polynomial as \\[h(x) \\equiv a_0 + a_1 [x-x_0] + a_2 [x - x_0]^2 + a_3 [x - x_0]^3 + \\cdots\\] This format is convenient because in finding the \\(a_0\\), \\(a_1\\), \\(\\ldots\\) for approximating a function \\(f(x)\\) in the neighborhood of \\(x_0\\), we have a way to calculate quickly the value of \\(a_0\\). Note that at \\(x=x_0\\), all the terms in the polynomial go to zero except the first, so we know \\(a_0 = f(x_0)\\). Now consider the derivative of the approximating polynomial. This is \\[\\partial_x h(x) = a_1 + 2 \\times a_2 [x-x_0] + 3 \\times a_3 [x-x_0] + \\cdots\\] Again, at \\(x=x_0\\) all the terms except the first go to zero. So if \\(h(x)\\) is an approximation to \\(f(x)\\) we’ll have \\(a_1 = \\partial_x f(x_0)\\). We can do this as many times as we want. Here’s the second derivative \\(\\partial_{xx} h(x)\\): \\[\\partial_{xx} h(x) = 2 a_2 + 2 \\times 3 \\times a_3 [x-x_0] + \\cdots\\] and the third \\[\\partial_{xxx} h(x) = 2 \\times 3 \\times a_3 + \\cdots\\] As before, all the terms in \\(\\partial_{xx} h()\\) and \\(\\partial_{xxx} h()\\) except the first go to zero when \\(x=x_0\\). This implies \\[a_2 = \\frac{1}{2} \\partial_{xx} f(x_0) \\ \\ \\ \\text{and}\\ \\ \\ a_3 = \\frac{1}{2\\times 3} \\partial_{xxx}f(x_0)\\] Just following the pattern, we can guess that \\(a_4 = \\frac{1}{2 \\times 3 \\times 4} \\partial_{xxxx} f(x_0)\\) and, in general for the nth term \\[a_n = \\frac{1}{1\\times 2 \\times 3 \\times \\cdots \\times n} \\partial^n f(x_0)\\] We’re writing \\[{\\huge \\partial^n} \\ \\text{to stand for}\\ \\ \\stackrel{\\Huge \\partial}{\\ } \\underbrace{xx...x}_\\text{n times}\\] The quantity \\(1\\times 2 \\times 3 \\times \\cdots \\times n\\) is called a factorial and written \\[\\huge n! = 1\\times 2 \\times 3 \\times \\cdots \\times n\\] In case you’re not already familiar with factorials, note the following: \\[1! = 1\\\\ 2! = 2\\\\ 3! = 6\\\\ 4! = 24\\\\ 5! = 120\\\\ \\text{... and so on} \\] In R, use the factorial() function to calculate \\(n!\\) for instance: factorial(5) ## [1] 120 factorial(6) ## [1] 720 factorial(7) ## [1] 5040 factorial(10) ## [1] 3628800 factorial(15) ## [1] 1.307674e+12 1.2 Taylor polynomials Putting together everything in the previous sections, we arrive at a remarkable formula for a polynomial to approximate any smooth, continuous function \\(f(x)\\) in the neighborhood of a selected input \\(x_0\\). The overall formula is daunting at first glance, but each of the terms has the same pattern: \\[f(x) \\approx f(x_0) + \\frac{\\partial_x f(x_0)}{1!} [x - x_0]^1 + \\frac{\\partial_{xx} f(x_0)}{2!} [x - x_0]^2 + \\frac{\\partial_{xxx} f(x_0)}{3!} [x - x_0]^3 + \\ldots \\] This is the Taylor polynomial. A Taylor polynomial that terminates with the \\([x-x_0]^2\\) term is a second-order Taylor polynomial, one that terminates with the \\([x-x_0]^3\\) term is a third-order Taylor polynomial. Mathematicians are particularly interested in the \\(n\\)th-order Taylor polynomial where \\(n \\rightarrow \\infty\\). Construction of a Taylor polynomial involves finding the various orders of derivatives. There are some cases where this is simple, especially if a felicitous choice of \\(x_0\\) can be made. Example: The successive derivatives of \\(\\sin(x)\\) are \\(cos(x)\\), then \\(-\\sin(x)\\), then \\(-\\cos(x)\\), then back to \\(\\sin(x)\\) and onward to any order derivative you like. If we select \\(x_0=0\\), then each of the derivatives evaluated at \\(x_0\\) will be zero, \\(-1\\), or \\(1\\). The Taylor polynomial (to 5th order) of \\(\\sin(x)\\) is: \\[\\sin(x) \\approx 0 + \\frac{1}{1!}[x] + \\frac{0}{2!} [x]^2 - \\frac{1}{3!} [x]^3 + \\frac{0}{4!} [x]^4 + \\frac{1}{5!} [x]^5 = x - \\frac{x^3}{3!} + \\frac{x^5}{5!}\\] Why say “smooth, continuous function” instead of just function when talking about the kinds of functions Taylor polynomials can approximate? Keep in mind that each of the terms in the polynomial has the form \\(a_n [x-x_0]^n\\) for \\(n=1,2,3, \\ldots\\). Each of these is a power-law function and therefore smooth and continuous. So the polynomial—the sum of the individual terms—will always be smooth and continous. If \\(f()\\) is not, no promises can be given about the quality of the approximation. 1.3 Polynomials and data In which we’ll show that high-order polynomials are trouble. Do data that’s close to a straight line, and look at the stability of the polynomials. Then show how sensitive a high-order polynomial is to slight changes in the data. Exercise 1.2 (approx-orange) The following graph shows a function \\(f(x)\\). Five values of \\(x\\) are labelled A, B, …. These are the possible values of \\(x_0\\) in the questions. Each of the graphs that follow show an approximation to \\(f(x)\\) at one of the points A, B, …. in the above graph. The approximations are either constant (“order 0” approximation), linear (“order 1” approximation), quadratic (“order 2” approximation), or something else. For each graph, say what order approximation is being used. Question A What order approximation in graph (I)?     constant ✓        linear ☹︎ A linear approximation would have exactly the same slope as \\(f()\\) at the reference point \\(x_0\\).        quadratic ☹︎        none of these ☹︎ Question B What is the reference position \\(x_0\\) for approximation in graph (I)?     A ☹︎ Not a bad choice, but notice that the constant approximation has a value a little lower than f(A).        B ✓ You’re right. This has the correct value for f(B).        C ☹︎        D ☹︎        E ☹︎        None of them ☹︎ Question C What order approximation in graph (II)?     constant ☹︎        linear ☹︎        quadratic ✓        none of these ☹︎ Question D What is the reference position \\(x_0\\) for approximation in graph (II)?     A ☹︎        B ☹︎        C ✓        D ☹︎ At the reference position, the value of the approximation should always be \\(f(x_0)\\). That’s not the case here.        E ☹︎        None of them ☹︎ Question E What order approximation in graph (III)?     constant ☹︎        linear ☹︎        quadratic ☹︎        none of these ✓ You can’t have two bends in a linear or quadratic function. Question F What is the reference position \\(x_0\\) for approximation in graph (III)?     A ☹︎        B ☹︎        C ☹︎        D ☹︎ At the reference position, the value of the approximation should always be \\(f(x_0)\\). That’s not the case here.        E ☹︎        None of them ✓ It’s not a polynomial approximation at any of those points. Question G What order approximation in graph (IV)?     constant ☹︎        linear ✓        quadratic ☹︎        none of these ☹︎ Question H What is the reference position \\(x_0\\) for approximation in graph (IV)?     A ✓        B ☹︎        C ☹︎        D ☹︎        E ☹︎        None of them ☹︎ Question I What order approximation in graph (V)?     constant ☹︎        linear ☹︎        quadratic ✓        none of these ☹︎ Question J What is the reference position \\(x_0\\) for approximation in graph (V)?     A ☹︎        B ☹︎        C ☹︎        D ☹︎        E ☹︎        None of them ✓ Exercise 1.3 (approx-blue) Here is a somewhat complex function in two variables. The labels A, B, C, D mark some possible reference points \\((x_0, y_0)\\) around which polynomial approximations are being made. For each of the following graphs, say what kind of two-variable polynomial approximation is being made and which reference point the approximation is centered on. Question A What order approximation in graph (I)?     constant ☹︎        linear ☹︎ The contours would be straight if the approximation were linear        bilinear ✓ Right. But it turns out that the quadratic approximation is similar, presumably because \\(d_{xx}f(x_0, y_0)\\) and \\(d_{yy} f(x_0, y_0)\\) are too small to make a difference.        quadratic ☹︎ Not a bad answer. In this case, the bilinear approximation looks a lot like the quadratic. Question B What is the reference position \\((x_0, y_0)\\) for approximation in graph (I)?     A ✓        B ☹︎        C ☹︎        D ☹︎ Question C What order approximation in graph (II)?     constant ☹︎        linear ☹︎ The contours would be straight if the approximation were linear        bilinear ✓ Right. But it turns out that the quadratic approximation is similar, presumably because \\(d_{xx}f(x_0, y_0)\\) and \\(d_{yy} f(x_0, y_0)\\) are too small to make a difference.        quadratic ☹︎ The circular (or elliptical) contours are the hallmark of a quadratic approximation near a maximum or minimum. Question D What is the reference position \\((x_0, y_0)\\) for approximation in graph (II)?     A ☹︎        B ✓ Practically a bullseye on B!        C ☹︎        D ☹︎ Question E What order approximation in graph (III)?     constant ☹︎        linear ✓ A linear approximation always produces straight, parallel, evenly spaced contours.        bilinear ☹︎        quadratic ☹︎ Question F What is the reference position \\((x_0, y_0)\\) for approximation in graph (III)?     A ☹︎        B ☹︎        C ☹︎        D ✓ Question G What order approximation in graph (IV)?     constant ☹︎        linear ☹︎ The contours would be straight if the approximation were linear        bilinear ☹︎ Not a bad answer. But curvature in bilinear approximations is always in one direction.        quadratic ✓ Sometimes quadratic approximations produce elliptical contours, as in a previous problem. But sometimes they produce the X-shaped contours seen here. In both cases, the contours curve in opposing ways in different parts of the domain. By the way, the contour pattern seen in the upper right of this graph corresponds to the shape of a saddle: curving up along one line and down along the perpendicular line. The place right in the middle of the saddle is called a ‘saddle point.’ Question H What is the reference position \\((x_0, y_0)\\) for approximation in graph (IV)?     A ☹︎        B ☹︎        C ✓        D ☹︎ "]]
